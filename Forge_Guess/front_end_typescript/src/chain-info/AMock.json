{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/mock.sol"
  },
  "ast": {
    "absolutePath": "contracts/mock.sol",
    "exportedSymbols": {
      "AMock": [
        697
      ],
      "Context": [
        21
      ],
      "ERC20": [
        671
      ],
      "IERC20": [
        98
      ],
      "IERC20Metadata": [
        121
      ]
    },
    "id": 698,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "133:496:0",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "Context",
        "nameLocation": "648:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "724:34:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 7,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "741:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "741:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6,
                  "id": 9,
                  "nodeType": "Return",
                  "src": "734:17:0"
                }
              ]
            },
            "id": 11,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "671:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "715:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:9:0"
            },
            "scope": 21,
            "src": "662:96:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "831:32:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 16,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "848:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "848:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 15,
                  "id": 18,
                  "nodeType": "Return",
                  "src": "841:15:0"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "773:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "815:14:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:16:0"
            },
            "scope": 21,
            "src": "764:99:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 698,
        "src": "630:235:0",
        "usedErrors": []
      },
      {
        "id": 22,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "984:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 23,
          "nodeType": "StructuredDocumentation",
          "src": "1009:70:0",
          "text": " @dev Interface of the ERC20 standard as defined in the EIP."
        },
        "fullyImplemented": false,
        "id": 98,
        "linearizedBaseContracts": [
          98
        ],
        "name": "IERC20",
        "nameLocation": "1090:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "1103:66:0",
              "text": " @dev Returns the amount of tokens in existence."
            },
            "functionSelector": "18160ddd",
            "id": 29,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1183:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1194:2:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1220:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:9:0"
            },
            "scope": 98,
            "src": "1174:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1235:72:0",
              "text": " @dev Returns the amount of tokens owned by `account`."
            },
            "functionSelector": "70a08231",
            "id": 37,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1321:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1339:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "1331:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1330:17:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "1371:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:9:0"
            },
            "scope": 98,
            "src": "1312:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "1386:209:0",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "id": 47,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1609:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1626:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1618:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1645:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1637:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:35:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1671:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1670:6:0"
            },
            "scope": 98,
            "src": "1600:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "1683:264:0",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "id": 57,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1961:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1979:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1971:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1994:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1986:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:32:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "2026:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:9:0"
            },
            "scope": 98,
            "src": "1952:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "2041:642:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 67,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2697:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2713:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2705:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2705:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2730:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2722:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2704:33:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2756:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:6:0"
            },
            "scope": 98,
            "src": "2688:74:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "2768:296:0",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 79,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3078:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3108:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "3100:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3132:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "3124:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3159:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "3151:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3090:81:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "3190:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3189:6:0"
            },
            "scope": 98,
            "src": "3069:127:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "3202:158:0",
              "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
            },
            "id": 88,
            "name": "Transfer",
            "nameLocation": "3371:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3396:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "3380:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3418:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "3402:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3430:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "3422:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3379:57:0"
            },
            "src": "3365:72:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "3443:148:0",
              "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
            },
            "id": 97,
            "name": "Approval",
            "nameLocation": "3602:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3627:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "3611:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3650:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "3634:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3634:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3667:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "3659:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3610:63:0"
            },
            "src": "3596:78:0"
          }
        ],
        "scope": 698,
        "src": "1080:2596:0",
        "usedErrors": []
      },
      {
        "id": 99,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "3833:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 101,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 98,
              "src": "4004:6:0"
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "4004:6:0"
          }
        ],
        "canonicalName": "IERC20Metadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 100,
          "nodeType": "StructuredDocumentation",
          "src": "3859:116:0",
          "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
        },
        "fullyImplemented": false,
        "id": 121,
        "linearizedBaseContracts": [
          121,
          98
        ],
        "name": "IERC20Metadata",
        "nameLocation": "3986:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "4017:54:0",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 108,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "4085:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4089:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "4115:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4115:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4114:15:0"
            },
            "scope": 121,
            "src": "4076:54:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "4136:56:0",
              "text": " @dev Returns the symbol of the token."
            },
            "functionSelector": "95d89b41",
            "id": 114,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "4206:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4212:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "4238:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4237:15:0"
            },
            "scope": 121,
            "src": "4197:56:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 115,
              "nodeType": "StructuredDocumentation",
              "src": "4259:65:0",
              "text": " @dev Returns the decimals places of the token."
            },
            "functionSelector": "313ce567",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "4338:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4346:2:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "4372:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:7:0"
            },
            "scope": 121,
            "src": "4329:50:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 698,
        "src": "3976:405:0",
        "usedErrors": []
      },
      {
        "id": 122,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "4498:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 124,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21,
              "src": "5717:7:0"
            },
            "id": 125,
            "nodeType": "InheritanceSpecifier",
            "src": "5717:7:0"
          },
          {
            "baseName": {
              "id": 126,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 98,
              "src": "5726:6:0"
            },
            "id": 127,
            "nodeType": "InheritanceSpecifier",
            "src": "5726:6:0"
          },
          {
            "baseName": {
              "id": 128,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 121,
              "src": "5734:14:0"
            },
            "id": 129,
            "nodeType": "InheritanceSpecifier",
            "src": "5734:14:0"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 123,
          "nodeType": "StructuredDocumentation",
          "src": "4526:1172:0",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 671,
        "linearizedBaseContracts": [
          671,
          121,
          98,
          21
        ],
        "name": "ERC20",
        "nameLocation": "5708:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 133,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "5791:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5755:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 132,
              "keyType": {
                "id": 130,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5763:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5755:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 131,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5774:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 139,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "5863:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5807:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 134,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5815:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5807:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 137,
                "keyType": {
                  "id": 135,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5834:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "5826:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5845:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 141,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "5897:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5881:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5881:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 143,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "5929:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5915:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 142,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "5915:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "5959:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5944:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 144,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "5944:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 147,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "5985:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 671,
            "src": "5970:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 146,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "5970:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "6369:82:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "6379:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "6387:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6379:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "6379:13:0"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "6402:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 162,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "6412:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6402:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "6402:17:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "6429:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 166,
                      "name": "dec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "6441:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6429:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "6429:15:0"
                }
              ]
            },
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "5999:298:0",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "6328:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "6314:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6314:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "6349:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "6335:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "dec",
                  "nameLocation": "6364:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "6358:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6358:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6313:55:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6369:0:0"
            },
            "scope": 671,
            "src": "6302:149:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              108
            ],
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "6585:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 177,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "6602:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 176,
                  "id": 178,
                  "nodeType": "Return",
                  "src": "6595:12:0"
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "6457:54:0",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6525:4:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6552:8:0"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6529:2:0"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "6570:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:15:0"
            },
            "scope": 671,
            "src": "6516:98:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              114
            ],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "6798:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 187,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "6815:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 188,
                  "nodeType": "Return",
                  "src": "6808:14:0"
                }
              ]
            },
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "6620:102:0",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "6736:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 183,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6765:8:0"
            },
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:2:0"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "6783:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6783:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6782:15:0"
            },
            "scope": 671,
            "src": "6727:102:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              120
            ],
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "7518:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 197,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "7535:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 196,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "7528:16:0"
                }
              ]
            },
            "documentation": {
              "id": 191,
              "nodeType": "StructuredDocumentation",
              "src": "6835:613:0",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "7462:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7493:8:0"
            },
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7470:2:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "7511:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7511:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7510:7:0"
            },
            "scope": 671,
            "src": "7453:98:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              29
            ],
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "7681:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 207,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 141,
                    "src": "7698:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 208,
                  "nodeType": "Return",
                  "src": "7691:19:0"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "7557:49:0",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "7620:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 203,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7654:8:0"
            },
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7631:2:0"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "7672:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7671:9:0"
            },
            "scope": 671,
            "src": "7611:106:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              37
            ],
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "7858:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 219,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "7875:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 221,
                    "indexExpression": {
                      "id": 220,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "7885:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7875:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 218,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "7868:25:0"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "7723:47:0",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "7784:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7831:8:0"
            },
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7802:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "7794:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7793:17:0"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "7849:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7848:9:0"
            },
            "scope": 671,
            "src": "7775:125:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              47
            ],
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "8195:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 236,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "8215:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8215:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 238,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "8229:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 239,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "8240:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "8205:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8205:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "8205:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8264:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 234,
                  "id": 243,
                  "nodeType": "Return",
                  "src": "8257:11:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "7906:192:0",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "8112:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 231,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8171:8:0"
            },
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8129:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "8121:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8121:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8148:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "8140:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8140:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8120:35:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "8189:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8188:6:0"
            },
            "scope": 671,
            "src": "8103:172:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              57
            ],
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "8431:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 256,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "8448:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "8460:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8448:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 260,
                    "indexExpression": {
                      "id": 259,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "8467:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8448:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 255,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "8441:34:0"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "8281:47:0",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8342:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 252,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8404:8:0"
            },
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8360:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "8352:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8352:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8375:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "8367:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8367:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8351:32:0"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "8422:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8421:9:0"
            },
            "scope": 671,
            "src": "8333:149:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              67
            ],
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "8709:77:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 275,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "8728:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8728:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 277,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "8742:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 278,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "8751:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 274,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "8719:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8719:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "8719:39:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8775:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 273,
                  "id": 282,
                  "nodeType": "Return",
                  "src": "8768:11:0"
                }
              ]
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "8488:127:0",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8629:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 270,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8685:8:0"
            },
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8645:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "8637:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8637:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8662:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "8654:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8654:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8636:33:0"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "8703:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8703:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8702:6:0"
            },
            "scope": 671,
            "src": "8620:166:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              79
            ],
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "9395:336:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "9415:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "9423:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 300,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "9434:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 297,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "9405:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9405:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "9405:36:0"
                },
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9460:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "9452:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9452:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 305,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "9479:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 307,
                      "indexExpression": {
                        "id": 306,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "9491:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9479:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 310,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 308,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "9499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9499:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9479:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9452:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 313,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "9530:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 314,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "9550:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9530:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9558:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9522:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9522:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "9522:79:0"
                },
                {
                  "id": 328,
                  "nodeType": "UncheckedBlock",
                  "src": "9611:92:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 320,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "9644:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 321,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "9652:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9652:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 323,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "9666:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 324,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "9685:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9666:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 319,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "9635:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9635:57:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 327,
                      "nodeType": "ExpressionStatement",
                      "src": "9635:57:0"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 296,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "9713:11:0"
                }
              ]
            },
            "documentation": {
              "id": 285,
              "nodeType": "StructuredDocumentation",
              "src": "8792:456:0",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "9262:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 293,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9371:8:0"
            },
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9292:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "9284:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9316:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "9308:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9308:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9343:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "9335:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9274:81:0"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "9389:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9388:6:0"
            },
            "scope": 671,
            "src": "9253:478:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "10220:118:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 343,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "10239:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10239:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 345,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "10253:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 346,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "10262:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 349,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 347,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "10274:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10274:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10262:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 351,
                          "indexExpression": {
                            "id": 350,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "10288:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10262:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 352,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "10299:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10262:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "10230:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10230:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "10230:80:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10327:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 341,
                  "id": 357,
                  "nodeType": "Return",
                  "src": "10320:11:0"
                }
              ]
            },
            "documentation": {
              "id": 333,
              "nodeType": "StructuredDocumentation",
              "src": "9737:384:0",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "10135:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10161:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "10153:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10153:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "10178:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "10170:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10170:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10152:37:0"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "10214:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10214:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10213:6:0"
            },
            "scope": 671,
            "src": "10126:212:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "10924:306:0",
              "statements": [
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "10942:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "10934:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10934:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 371,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "10961:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 374,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 372,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "10973:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10973:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10961:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 376,
                    "indexExpression": {
                      "id": 375,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "10987:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10961:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10934:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 379,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "11013:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 380,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "11033:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11013:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11050:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11005:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "11005:85:0"
                },
                {
                  "id": 394,
                  "nodeType": "UncheckedBlock",
                  "src": "11100:102:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 386,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "11133:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11133:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 388,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "11147:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 389,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 370,
                              "src": "11156:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 390,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "11175:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11156:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 385,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "11124:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11124:67:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 393,
                      "nodeType": "ExpressionStatement",
                      "src": "11124:67:0"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11219:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 368,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "11212:11:0"
                }
              ]
            },
            "documentation": {
              "id": 360,
              "nodeType": "StructuredDocumentation",
              "src": "10344:476:0",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "10834:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10860:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "10852:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "10877:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "10869:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10851:42:0"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "10918:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10918:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10917:6:0"
            },
            "scope": 671,
            "src": "10825:405:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "11821:596:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 409,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "11839:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11857:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11849:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 410,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11849:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11849:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11839:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11861:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11831:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "11831:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 419,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "11919:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11940:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11932:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 420,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11932:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11932:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11919:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11944:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11911:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "11911:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 429,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "12014:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 430,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "12022:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 431,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "12033:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 428,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "11993:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11993:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "11993:47:0"
                },
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "12059:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "12051:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "baseExpression": {
                      "id": 436,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "12075:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 438,
                    "indexExpression": {
                      "id": 437,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "12085:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12075:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12051:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 441,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "12110:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 442,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "12127:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12110:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12135:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12102:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12102:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "12102:74:0"
                },
                {
                  "id": 455,
                  "nodeType": "UncheckedBlock",
                  "src": "12186:77:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 447,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "12210:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 449,
                          "indexExpression": {
                            "id": 448,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "12220:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12210:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 450,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "12230:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 451,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "12246:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12230:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12210:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 454,
                      "nodeType": "ExpressionStatement",
                      "src": "12210:42:0"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 456,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "12272:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 458,
                      "indexExpression": {
                        "id": 457,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "12282:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12272:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "12296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12272:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "12272:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 463,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "12327:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 464,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "12335:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 465,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "12346:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 462,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "12318:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12318:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "EmitStatement",
                  "src": "12313:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "12384:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 470,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "12392:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 471,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "12403:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 468,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "12364:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12364:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "12364:46:0"
                }
              ]
            },
            "documentation": {
              "id": 399,
              "nodeType": "StructuredDocumentation",
              "src": "11236:463:0",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11713:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11740:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11732:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11732:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11764:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11756:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11756:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11791:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11783:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11783:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11722:81:0"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11821:0:0"
            },
            "scope": 671,
            "src": "11704:713:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "12758:324:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 484,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "12776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12795:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12787:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12787:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12787:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12776:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12799:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12768:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "12768:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12873:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12865:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12865:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12865:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 498,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "12877:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 499,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "12886:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 493,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "12844:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12844:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "12844:49:0"
                },
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 502,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "12904:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 503,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "12920:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12904:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "12904:22:0"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 506,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "12936:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 508,
                      "indexExpression": {
                        "id": 507,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "12946:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12936:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 509,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "12958:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12936:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "12936:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12996:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12988:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12988:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 517,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "13000:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 518,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "13009:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 512,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "12979:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12979:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "EmitStatement",
                  "src": "12974:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13055:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13047:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13047:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13047:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "13059:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "13068:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 521,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "13027:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13027:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "13027:48:0"
                }
              ]
            },
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "12423:265:0",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "12702:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12716:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "12708:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12733:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "12725:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12725:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12707:33:0"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12758:0:0"
            },
            "scope": 671,
            "src": "12693:389:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "13467:511:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 540,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "13485:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13504:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13496:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13496:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13496:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13485:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13508:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13477:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "13477:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "13576:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13593:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13585:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13585:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13585:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 555,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "13597:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "13555:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13555:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "13555:49:0"
                },
                {
                  "assignments": [
                    559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 559,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "13623:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "13615:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13615:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 563,
                  "initialValue": {
                    "baseExpression": {
                      "id": 560,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "13640:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 562,
                    "indexExpression": {
                      "id": 561,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "13650:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13640:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13615:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 565,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "13676:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 566,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "13694:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13676:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13702:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13668:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13668:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "13668:71:0"
                },
                {
                  "id": 579,
                  "nodeType": "UncheckedBlock",
                  "src": "13749:79:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 571,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "13773:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 573,
                          "indexExpression": {
                            "id": 572,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "13783:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13773:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 574,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "13794:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 575,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "13811:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13794:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13773:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 578,
                      "nodeType": "ExpressionStatement",
                      "src": "13773:44:0"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 580,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "13837:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 581,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "13853:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13837:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "13837:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 585,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "13884:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13901:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 586,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13893:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13893:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 590,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "13905:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "13875:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13875:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "13870:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 594,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "13943:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13960:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13952:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13952:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13952:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 599,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "13964:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 593,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "13923:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13923:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "13923:48:0"
                }
              ]
            },
            "documentation": {
              "id": 532,
              "nodeType": "StructuredDocumentation",
              "src": "13088:309:0",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13411:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "13425:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13417:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13417:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13442:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "13434:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13434:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13416:33:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13467:0:0"
            },
            "scope": 671,
            "src": "13402:576:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "14514:257:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 614,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "14532:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14549:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14541:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 615,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14541:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14541:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14532:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14553:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14524:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "14524:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 624,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "14610:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14629:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14621:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 625,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14621:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14621:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14610:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14633:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14602:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14602:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "14602:68:0"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 633,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "14681:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 636,
                        "indexExpression": {
                          "id": 634,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "14693:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14681:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 637,
                      "indexExpression": {
                        "id": 635,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "14700:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14681:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 638,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "14711:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14681:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "14681:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 642,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "14741:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 643,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "14748:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 644,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "14757:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 641,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "14732:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14732:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "EmitStatement",
                  "src": "14727:37:0"
                }
              ]
            },
            "documentation": {
              "id": 604,
              "nodeType": "StructuredDocumentation",
              "src": "13984:412:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14410:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14436:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "14428:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14428:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14459:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "14451:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14451:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14484:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "14476:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14476:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14418:78:0"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14514:0:0"
            },
            "scope": 671,
            "src": "14401:370:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "15474:2:0",
              "statements": []
            },
            "documentation": {
              "id": 649,
              "nodeType": "StructuredDocumentation",
              "src": "14777:573:0",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "15364:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15402:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "15394:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15394:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15424:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "15416:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15416:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15444:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "15436:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15436:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15384:72:0"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15474:0:0"
            },
            "scope": 671,
            "src": "15355:121:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "16182:2:0",
              "statements": []
            },
            "documentation": {
              "id": 660,
              "nodeType": "StructuredDocumentation",
              "src": "15482:577:0",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "16073:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16110:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "16102:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16102:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16132:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "16124:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16124:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16152:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "16144:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16144:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16092:72:0"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16182:0:0"
            },
            "scope": 671,
            "src": "16064:120:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 698,
        "src": "5699:10487:0",
        "usedErrors": []
      },
      {
        "id": 672,
        "literals": [
          "solidity",
          "^",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "16221:21:0"
      },
      {
        "id": 673,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "16244:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 674,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 671,
              "src": "16288:5:0"
            },
            "id": 675,
            "nodeType": "InheritanceSpecifier",
            "src": "16288:5:0"
          }
        ],
        "canonicalName": "AMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 697,
        "linearizedBaseContracts": [
          697,
          671,
          121,
          98,
          21
        ],
        "name": "AMock",
        "nameLocation": "16279:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "16350:16:0",
              "statements": []
            },
            "id": 684,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f636b203078425443",
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16324:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3b3941f9561d8c2a2f0a5c63307d8855d631d9ca971c647f212de2b65ebec3d1",
                      "typeString": "literal_string \"Mock 0xBTC\""
                    },
                    "value": "Mock 0xBTC"
                  },
                  {
                    "hexValue": "3078425443",
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16338:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e4a716719467fc42b820b94f1356b33f39ce535dd752e1d5b99cb0c97083efa",
                      "typeString": "literal_string \"0xBTC\""
                    },
                    "value": "0xBTC"
                  },
                  {
                    "hexValue": "38",
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16347:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  }
                ],
                "id": 681,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 677,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 671,
                  "src": "16318:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16318:31:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16308:2:0"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16350:0:0"
            },
            "scope": 697,
            "src": "16297:69:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "16420:186:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16579:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16579:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 692,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "16591:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 689,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "16573:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16573:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "16573:26:0"
                }
              ]
            },
            "functionSelector": "50baa622",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawToken",
            "nameLocation": "16380:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16402:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "16394:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16394:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16393:17:0"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16420:0:0"
            },
            "scope": 697,
            "src": "16371:235:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 698,
        "src": "16270:338:0",
        "usedErrors": []
      }
    ],
    "src": "108:16501:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50604080518082018252600a8152694d6f636b20307842544360b01b602080830191825283518085019094526005845264307842544360d81b9084015281519192916008916100629160049190610093565b508151610076906005906020850190610093565b506003805460ff191660ff92909216919091179055506101679050565b82805461009f9061012c565b90600052602060002090601f0160209004810192826100c15760008555610107565b82601f106100da57805160ff1916838001178555610107565b82800160010185558215610107579182015b828111156101075782518255916020019190600101906100ec565b50610113929150610117565b5090565b5b808211156101135760008155600101610118565b600181811c9082168061014057607f821691505b6020821081141561016157634e487b7160e01b600052602260045260246000fd5b50919050565b6109ef806101766000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806350baa6221161007157806350baa6221461014757806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101ec565b6040516100ce9190610813565b60405180910390f35b6100ea6100e5366004610884565b61027e565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108ae565b610294565b60035460405160ff90911681526020016100ce565b6100ea610142366004610884565b610343565b61015a6101553660046108ea565b61037f565b005b6100fe61016a366004610903565b6001600160a01b031660009081526020819052604090205490565b6100c161038c565b6100ea61019b366004610884565b61039b565b6100ea6101ae366004610884565b610434565b6100fe6101c1366004610925565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600480546101fb90610958565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610958565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b600061028b338484610441565b50600192915050565b60006102a1848484610565565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561032b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103388533858403610441565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161028b91859061037a908690610993565b610441565b6103893382610734565b50565b6060600580546101fb90610958565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561041d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610322565b61042a3385858403610441565b5060019392505050565b600061028b338484610565565b6001600160a01b0383166104a35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610322565b6001600160a01b0382166105045760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610322565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610322565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610322565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610322565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106da908490610993565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072691815260200190565b60405180910390a350505050565b6001600160a01b03821661078a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610322565b806002600082825461079c9190610993565b90915550506001600160a01b038216600090815260208190526040812080548392906107c9908490610993565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561084057858101830151858201604001528201610824565b81811115610852576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461087f57600080fd5b919050565b6000806040838503121561089757600080fd5b6108a083610868565b946020939093013593505050565b6000806000606084860312156108c357600080fd5b6108cc84610868565b92506108da60208501610868565b9150604084013590509250925092565b6000602082840312156108fc57600080fd5b5035919050565b60006020828403121561091557600080fd5b61091e82610868565b9392505050565b6000806040838503121561093857600080fd5b61094183610868565b915061094f60208401610868565b90509250929050565b600181811c9082168061096c57607f821691505b6020821081141561098d57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156109b457634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122048065cc6ced33db23eb70c759ed1dd3bdcdb207ff1c7dbce41a064096fc9d52064736f6c634300080b0033",
  "bytecodeSha1": "89bd6990483bb9828a9b371d19702e37545d1851",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "AMock",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "35": [
            14532,
            14551,
            true
          ],
          "36": [
            14610,
            14631,
            true
          ]
        },
        "ERC20._mint": {
          "40": [
            12776,
            12797,
            true
          ]
        },
        "ERC20._transfer": {
          "37": [
            11839,
            11859,
            true
          ],
          "38": [
            11919,
            11942,
            true
          ],
          "39": [
            12110,
            12133,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "34": [
            11013,
            11048,
            true
          ]
        },
        "ERC20.transferFrom": {
          "33": [
            9530,
            9556,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AMock.withdrawToken": {
          "13": [
            16573,
            16599
          ]
        },
        "Context._msgSender": {
          "6": [
            734,
            751
          ]
        },
        "ERC20._approve": {
          "19": [
            14524,
            14592
          ],
          "20": [
            14602,
            14670
          ],
          "21": [
            14681,
            14717
          ],
          "22": [
            14727,
            14764
          ]
        },
        "ERC20._mint": {
          "29": [
            12768,
            12833
          ],
          "30": [
            12904,
            12926
          ],
          "31": [
            12936,
            12964
          ],
          "32": [
            12974,
            13016
          ]
        },
        "ERC20._transfer": {
          "23": [
            11831,
            11901
          ],
          "24": [
            11911,
            11982
          ],
          "25": [
            12102,
            12176
          ],
          "26": [
            12210,
            12252
          ],
          "27": [
            12272,
            12302
          ],
          "28": [
            12313,
            12353
          ]
        },
        "ERC20.allowance": {
          "3": [
            8441,
            8475
          ]
        },
        "ERC20.approve": {
          "5": [
            8719,
            8758
          ],
          "7": [
            8768,
            8779
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            7868,
            7893
          ]
        },
        "ERC20.decimals": {
          "1": [
            7528,
            7544
          ]
        },
        "ERC20.decreaseAllowance": {
          "15": [
            11005,
            11090
          ],
          "16": [
            11124,
            11191
          ],
          "17": [
            11212,
            11223
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            10230,
            10310
          ]
        },
        "ERC20.name": {
          "4": [
            6595,
            6607
          ]
        },
        "ERC20.symbol": {
          "14": [
            6808,
            6822
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            7691,
            7710
          ]
        },
        "ERC20.transfer": {
          "18": [
            8205,
            8247
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            9405,
            9441
          ],
          "9": [
            9522,
            9601
          ],
          "10": [
            9635,
            9692
          ],
          "11": [
            9713,
            9724
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC20",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806350baa6221161007157806350baa6221461014757806370a082311461015c57806395d89b4114610185578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101ec565b6040516100ce9190610813565b60405180910390f35b6100ea6100e5366004610884565b61027e565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108ae565b610294565b60035460405160ff90911681526020016100ce565b6100ea610142366004610884565b610343565b61015a6101553660046108ea565b61037f565b005b6100fe61016a366004610903565b6001600160a01b031660009081526020819052604090205490565b6100c161038c565b6100ea61019b366004610884565b61039b565b6100ea6101ae366004610884565b610434565b6100fe6101c1366004610925565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600480546101fb90610958565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610958565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050905090565b600061028b338484610441565b50600192915050565b60006102a1848484610565565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561032b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103388533858403610441565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161028b91859061037a908690610993565b610441565b6103893382610734565b50565b6060600580546101fb90610958565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561041d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610322565b61042a3385858403610441565b5060019392505050565b600061028b338484610565565b6001600160a01b0383166104a35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610322565b6001600160a01b0382166105045760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610322565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610322565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610322565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610322565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106da908490610993565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072691815260200190565b60405180910390a350505050565b6001600160a01b03821661078a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610322565b806002600082825461079c9190610993565b90915550506001600160a01b038216600090815260208190526040812080548392906107c9908490610993565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561084057858101830151858201604001528201610824565b81811115610852576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461087f57600080fd5b919050565b6000806040838503121561089757600080fd5b6108a083610868565b946020939093013593505050565b6000806000606084860312156108c357600080fd5b6108cc84610868565b92506108da60208501610868565b9150604084013590509250925092565b6000602082840312156108fc57600080fd5b5035919050565b60006020828403121561091557600080fd5b61091e82610868565b9392505050565b6000806040838503121561093857600080fd5b61094183610868565b915061094f60208401610868565b90509250929050565b600181811c9082168061096c57607f821691505b6020821081141561098d57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156109b457634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122048065cc6ced33db23eb70c759ed1dd3bdcdb207ff1c7dbce41a064096fc9d52064736f6c634300080b0033",
  "deployedSourceMap": "16270:338:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8620:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;8620:166:0;1053:187:1;7611:106:0;7698:12;;7611:106;;;1391:25:1;;;1379:2;1364:18;7611:106:0;1245:177:1;9253:478:0;;;;;;:::i;:::-;;:::i;7453:98::-;7535:9;;7453:98;;7535:9;;;;1902:36:1;;1890:2;1875:18;7453:98:0;1760:184:1;10126:212:0;;;;;;:::i;:::-;;:::i;16371:235::-;;;;;;:::i;:::-;;:::i;:::-;;7775:125;;;;;;:::i;:::-;-1:-1:-1;;;;;7875:18:0;7849:7;7875:18;;;;;;;;;;;;7775:125;6727:102;;;:::i;10825:405::-;;;;;;:::i;:::-;;:::i;8103:172::-;;;;;;:::i;:::-;;:::i;8333:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8448:18:0;;;8422:7;8448:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8333:149;6516:98;6570:13;6602:5;6595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:98;:::o;8620:166::-;8703:4;8719:39;741:10;8742:7;8751:6;8719:8;:39::i;:::-;-1:-1:-1;8775:4:0;8620:166;;;;:::o;9253:478::-;9389:4;9405:36;9415:6;9423:9;9434:6;9405:9;:36::i;:::-;-1:-1:-1;;;;;9479:19:0;;9452:24;9479:19;;;:11;:19;;;;;;;;741:10;9479:33;;;;;;;;9530:26;;;;9522:79;;;;-1:-1:-1;;;9522:79:0;;3177:2:1;9522:79:0;;;3159:21:1;3216:2;3196:18;;;3189:30;3255:34;3235:18;;;3228:62;-1:-1:-1;;;3306:18:1;;;3299:38;3354:19;;9522:79:0;;;;;;;;;9635:57;9644:6;741:10;9685:6;9666:16;:25;9635:8;:57::i;:::-;-1:-1:-1;9720:4:0;;9253:478;-1:-1:-1;;;;9253:478:0:o;10126:212::-;741:10;10214:4;10262:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10262:34:0;;;;;;;;;;10214:4;;10230:80;;10253:7;;10262:47;;10299:10;;10262:47;:::i;:::-;10230:8;:80::i;16371:235::-;16573:26;16579:10;16591:7;16573:5;:26::i;:::-;16371:235;:::o;6727:102::-;6783:13;6815:7;6808:14;;;;;:::i;10825:405::-;741:10;10918:4;10961:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10961:34:0;;;;;;;;;;11013:35;;;;11005:85;;;;-1:-1:-1;;;11005:85:0;;3816:2:1;11005:85:0;;;3798:21:1;3855:2;3835:18;;;3828:30;3894:34;3874:18;;;3867:62;-1:-1:-1;;;3945:18:1;;;3938:35;3990:19;;11005:85:0;3614:401:1;11005:85:0;11124:67;741:10;11147:7;11175:15;11156:16;:34;11124:8;:67::i;:::-;-1:-1:-1;11219:4:0;;10825:405;-1:-1:-1;;;10825:405:0:o;8103:172::-;8189:4;8205:42;741:10;8229:9;8240:6;8205:9;:42::i;14401:370::-;-1:-1:-1;;;;;14532:19:0;;14524:68;;;;-1:-1:-1;;;14524:68:0;;4222:2:1;14524:68:0;;;4204:21:1;4261:2;4241:18;;;4234:30;4300:34;4280:18;;;4273:62;-1:-1:-1;;;4351:18:1;;;4344:34;4395:19;;14524:68:0;4020:400:1;14524:68:0;-1:-1:-1;;;;;14610:21:0;;14602:68;;;;-1:-1:-1;;;14602:68:0;;4627:2:1;14602:68:0;;;4609:21:1;4666:2;4646:18;;;4639:30;4705:34;4685:18;;;4678:62;-1:-1:-1;;;4756:18:1;;;4749:32;4798:19;;14602:68:0;4425:398:1;14602:68:0;-1:-1:-1;;;;;14681:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14732:32;;1391:25:1;;;14732:32:0;;1364:18:1;14732:32:0;;;;;;;14401:370;;;:::o;11704:713::-;-1:-1:-1;;;;;11839:20:0;;11831:70;;;;-1:-1:-1;;;11831:70:0;;5030:2:1;11831:70:0;;;5012:21:1;5069:2;5049:18;;;5042:30;5108:34;5088:18;;;5081:62;-1:-1:-1;;;5159:18:1;;;5152:35;5204:19;;11831:70:0;4828:401:1;11831:70:0;-1:-1:-1;;;;;11919:23:0;;11911:71;;;;-1:-1:-1;;;11911:71:0;;5436:2:1;11911:71:0;;;5418:21:1;5475:2;5455:18;;;5448:30;5514:34;5494:18;;;5487:62;-1:-1:-1;;;5565:18:1;;;5558:33;5608:19;;11911:71:0;5234:399:1;11911:71:0;-1:-1:-1;;;;;12075:17:0;;12051:21;12075:17;;;;;;;;;;;12110:23;;;;12102:74;;;;-1:-1:-1;;;12102:74:0;;5840:2:1;12102:74:0;;;5822:21:1;5879:2;5859:18;;;5852:30;5918:34;5898:18;;;5891:62;-1:-1:-1;;;5969:18:1;;;5962:36;6015:19;;12102:74:0;5638:402:1;12102:74:0;-1:-1:-1;;;;;12210:17:0;;;:9;:17;;;;;;;;;;;12230:22;;;12210:42;;12272:20;;;;;;;;:30;;12246:6;;12210:9;12272:30;;12246:6;;12272:30;:::i;:::-;;;;;;;;12335:9;-1:-1:-1;;;;;12318:35:0;12327:6;-1:-1:-1;;;;;12318:35:0;;12346:6;12318:35;;;;1391:25:1;;1379:2;1364:18;;1245:177;12318:35:0;;;;;;;;11821:596;11704:713;;;:::o;12693:389::-;-1:-1:-1;;;;;12776:21:0;;12768:65;;;;-1:-1:-1;;;12768:65:0;;6247:2:1;12768:65:0;;;6229:21:1;6286:2;6266:18;;;6259:30;6325:33;6305:18;;;6298:61;6376:18;;12768:65:0;6045:355:1;12768:65:0;12920:6;12904:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12936:18:0;;:9;:18;;;;;;;;;;:28;;12958:6;;12936:9;:28;;12958:6;;12936:28;:::i;:::-;;;;-1:-1:-1;;12979:37:0;;1391:25:1;;;-1:-1:-1;;;;;12979:37:0;;;12996:1;;12979:37;;1379:2:1;1364:18;12979:37:0;;;;;;;12693:389;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:1;;1949:180;-1:-1:-1;1949:180:1:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:1:o;2325:260::-;2393:6;2401;2454:2;2442:9;2433:7;2429:23;2425:32;2422:52;;;2470:1;2467;2460:12;2422:52;2493:29;2512:9;2493:29;:::i;:::-;2483:39;;2541:38;2575:2;2564:9;2560:18;2541:38;:::i;:::-;2531:48;;2325:260;;;;;:::o;2590:380::-;2669:1;2665:12;;;;2712;;;2733:61;;2787:4;2779:6;2775:17;2765:27;;2733:61;2840:2;2832:6;2829:14;2809:18;2806:38;2803:161;;;2886:10;2881:3;2877:20;2874:1;2867:31;2921:4;2918:1;2911:15;2949:4;2946:1;2939:15;2803:161;;2590:380;;;:::o;3384:225::-;3424:3;3455:1;3451:6;3448:1;3445:13;3442:136;;;3500:10;3495:3;3491:20;3488:1;3481:31;3535:4;3532:1;3525:15;3563:4;3560:1;3553:15;3442:136;-1:-1:-1;3594:9:1;;3384:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    16270,
    16608
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x50BAA622 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x50BAA622 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0xEA PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x958 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x227 SWAP1 PUSH2 0x958 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x274 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x249 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x274 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x257 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B CALLER DUP5 DUP5 PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1 DUP5 DUP5 DUP5 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x338 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x28B SWAP2 DUP6 SWAP1 PUSH2 0x37A SWAP1 DUP7 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x389 CALLER DUP3 PUSH2 0x734 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x958 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH2 0x42A CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x441 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B CALLER DUP5 DUP5 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6DA SWAP1 DUP5 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x726 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x322 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7C9 SWAP1 DUP5 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x840 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x824 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A0 DUP4 PUSH2 0x868 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CC DUP5 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP PUSH2 0x8DA PUSH1 0x20 DUP6 ADD PUSH2 0x868 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91E DUP3 PUSH2 0x868 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x941 DUP4 PUSH2 0x868 JUMP JUMPDEST SWAP2 POP PUSH2 0x94F PUSH1 0x20 DUP5 ADD PUSH2 0x868 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x96C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x98D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE MOD 0x5C 0xC6 0xCE 0xD3 RETURNDATASIZE 0xB2 RETURNDATACOPY 0xB7 0xC PUSH22 0x9ED1DD3BDCDB207FF1C7DBCE41A064096FC9D5206473 PUSH16 0x6C634300080B00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x50BAA622"
    },
    "38": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x50BAA622"
    },
    "49": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "53": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "64": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "75": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "86": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "97": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "108": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "135": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "146": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "157": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "168": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "175": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134"
    },
    "179": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        16270,
        16608
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "192": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x813"
    },
    "205": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "210": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SUB",
      "path": "0"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "RETURN",
      "path": "0"
    },
    "215": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "222": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "225": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "228": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "233": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "237": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "ISZERO"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "249": {
      "op": "JUMP"
    },
    "250": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7611,
        7717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7698,
        7710
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7698,
        7710
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "254": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7611,
        7717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "255": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7611,
        7717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "257": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7611,
        7717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "258": {
      "op": "SWAP1"
    },
    "259": {
      "op": "DUP2"
    },
    "260": {
      "op": "MSTORE"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "263": {
      "op": "ADD"
    },
    "264": {
      "fn": "ERC20.totalSupply",
      "offset": [
        7611,
        7717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "267": {
      "op": "JUMP"
    },
    "268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "278": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AE"
    },
    "281": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "286": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        7453,
        7551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x3"
    },
    "290": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "291": {
      "fn": "ERC20.decimals",
      "offset": [
        7453,
        7551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "293": {
      "fn": "ERC20.decimals",
      "offset": [
        7453,
        7551
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "294": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "296": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "298": {
      "fn": "ERC20.decimals",
      "offset": [
        7535,
        7544
      ],
      "op": "AND",
      "path": "0"
    },
    "299": {
      "op": "DUP2"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "fn": "ERC20.decimals",
      "offset": [
        7453,
        7551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "307": {
      "op": "JUMP"
    },
    "308": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "312": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "315": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "316": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "318": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "321": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        10126,
        10338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "322": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "326": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        10126,
        10338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "327": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "331": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "334": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "335": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "337": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "340": {
      "fn": "AMock.withdrawToken",
      "jump": "i",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "341": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "345": {
      "fn": "AMock.withdrawToken",
      "jump": "i",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "STOP",
      "path": "0"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "352": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "356": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x903"
    },
    "361": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        7775,
        7900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "369": {
      "op": "SHL"
    },
    "370": {
      "op": "SUB"
    },
    "371": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "372": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7849,
        7856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "374": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "375": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "DUP2",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "377": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "379": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "DUP2",
      "path": "0"
    },
    "380": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "381": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "382": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "384": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "385": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "386": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7875,
        7893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.balanceOf",
      "offset": [
        7775,
        7900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "ERC20.symbol",
      "offset": [
        6727,
        6829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.symbol",
      "offset": [
        6727,
        6829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "393": {
      "fn": "ERC20.symbol",
      "offset": [
        6727,
        6829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38C"
    },
    "396": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        6727,
        6829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "401": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "405": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "410": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "411": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39B"
    },
    "415": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "416": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "420": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "423": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "424": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "426": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "429": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        8103,
        8275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "430": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x434"
    },
    "434": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        8103,
        8275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "448": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        8333,
        8482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "DUP3",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "AND",
      "path": "0"
    },
    "461": {
      "fn": "ERC20.allowance",
      "offset": [
        8422,
        8429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "465": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "468": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "470": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "471": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "472": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "473": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "475": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "476": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "DUP4",
      "path": "0"
    },
    "477": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8466
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "478": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "479": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "480": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "481": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "AND",
      "path": "0"
    },
    "482": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "483": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "484": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "485": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "487": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "488": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "489": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "490": {
      "fn": "ERC20.allowance",
      "offset": [
        8448,
        8475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "ERC20.allowance",
      "offset": [
        8333,
        8482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        6570,
        6583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        6602,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x4"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "506": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DIV",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MUL",
      "path": "0"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "550": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "LT",
      "path": "0"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DIV",
      "path": "0"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MUL",
      "path": "0"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "GT",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x257"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SUB",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "AND",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "626": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "ADD",
      "path": "0"
    },
    "627": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "630": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "631": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "632": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "634": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "ERC20.name",
      "offset": [
        6595,
        6607
      ],
      "op": "POP",
      "path": "0"
    },
    "636": {
      "fn": "ERC20.name",
      "offset": [
        6516,
        6614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        6516,
        6614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        8703,
        8707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "641": {
      "fn": "ERC20.approve",
      "offset": [
        8719,
        8758
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x28B"
    },
    "644": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "645": {
      "fn": "ERC20.approve",
      "offset": [
        8742,
        8749
      ],
      "op": "DUP5",
      "path": "0"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        8751,
        8757
      ],
      "op": "DUP5",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.approve",
      "offset": [
        8719,
        8727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x441"
    },
    "650": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        8719,
        8758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        8719,
        8758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "ERC20.approve",
      "offset": [
        8775,
        8779
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "655": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "656": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "POP",
      "path": "0"
    },
    "658": {
      "fn": "ERC20.approve",
      "offset": [
        8620,
        8786
      ],
      "op": "POP",
      "path": "0"
    },
    "659": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        8620,
        8786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9389,
        9393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9405,
        9441
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x2A1"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9415,
        9421
      ],
      "op": "DUP5",
      "path": "0"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9423,
        9432
      ],
      "op": "DUP5",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9434,
        9440
      ],
      "op": "DUP5",
      "path": "0"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9405,
        9414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x565"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        9405,
        9441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9405,
        9441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "op": "SUB"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "DUP5",
      "path": "0"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "AND",
      "path": "0"
    },
    "684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9452,
        9476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "688": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "DUP4",
      "path": "0"
    },
    "700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9498
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "701": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "DUP5",
      "path": "0"
    },
    "703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "704": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9479,
        9512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9530,
        9556
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 9
    },
    "711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9530,
        9556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9530,
        9556
      ],
      "op": "LT",
      "path": "0"
    },
    "713": {
      "branch": 33,
      "fn": "ERC20.transferFrom",
      "offset": [
        9530,
        9556
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "717": {
      "branch": 33,
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "ADD",
      "path": "0"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "779": {
      "op": "DUP3"
    },
    "780": {
      "op": "ADD"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "SUB",
      "path": "0"
    },
    "809": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9522,
        9601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9635,
        9692
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x338"
    },
    "815": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9644,
        9650
      ],
      "op": "DUP6",
      "path": "0"
    },
    "816": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9685,
        9691
      ],
      "op": "DUP6",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9666,
        9682
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9666,
        9691
      ],
      "op": "SUB",
      "path": "0"
    },
    "820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9635,
        9643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x441"
    },
    "823": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        9635,
        9692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9635,
        9692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9720,
        9724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "828": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9720,
        9724
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.transferFrom",
      "offset": [
        9253,
        9731
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        9253,
        9731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10126,
        10338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10214,
        10218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "DUP1",
      "path": "0"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "DUP4",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10287
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "DUP8",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "AND",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "DUP5",
      "path": "0"
    },
    "865": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "868": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10296
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10214,
        10218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10214,
        10218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10230,
        10310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B"
    },
    "877": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10230,
        10310
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10253,
        10260
      ],
      "op": "DUP6",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10253,
        10260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37A"
    },
    "883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10299,
        10309
      ],
      "op": "DUP7",
      "path": "0"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10299,
        10309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x993"
    },
    "889": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        10262,
        10309
      ],
      "op": "JUMP",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10262,
        10309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        10230,
        10238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x441"
    },
    "894": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        10230,
        10310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "895": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16573,
        16599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x389"
    },
    "899": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16579,
        16589
      ],
      "op": "CALLER",
      "path": "0"
    },
    "900": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16591,
        16598
      ],
      "op": "DUP3",
      "path": "0"
    },
    "901": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16573,
        16578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x734"
    },
    "904": {
      "fn": "AMock.withdrawToken",
      "jump": "i",
      "offset": [
        16573,
        16599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "905": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16573,
        16599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "fn": "AMock.withdrawToken",
      "offset": [
        16371,
        16606
      ],
      "op": "POP",
      "path": "0"
    },
    "907": {
      "fn": "AMock.withdrawToken",
      "jump": "o",
      "offset": [
        16371,
        16606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "908": {
      "fn": "ERC20.symbol",
      "offset": [
        6727,
        6829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.symbol",
      "offset": [
        6783,
        6796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "911": {
      "fn": "ERC20.symbol",
      "offset": [
        6815,
        6822
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x5"
    },
    "913": {
      "fn": "ERC20.symbol",
      "offset": [
        6808,
        6822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.symbol",
      "offset": [
        6808,
        6822
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.symbol",
      "offset": [
        6808,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB"
    },
    "918": {
      "fn": "ERC20.symbol",
      "offset": [
        6808,
        6822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.symbol",
      "offset": [
        6808,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "922": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        6808,
        6822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "924": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "925": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10918,
        10922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "DUP2",
      "path": "0"
    },
    "929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "935": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "DUP1",
      "path": "0"
    },
    "940": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "DUP4",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10986
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "948": {
      "op": "SHL"
    },
    "949": {
      "op": "SUB"
    },
    "950": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "DUP7",
      "path": "0"
    },
    "951": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "AND",
      "path": "0"
    },
    "952": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "DUP5",
      "path": "0"
    },
    "953": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "954": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "956": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "957": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "958": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "959": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10961,
        10995
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "960": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11013,
        11048
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "961": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11013,
        11048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "962": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11013,
        11048
      ],
      "op": "LT",
      "path": "0"
    },
    "963": {
      "branch": 34,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11013,
        11048
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41D"
    },
    "967": {
      "branch": 34,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "968": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "970": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "DUP3",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "ADD",
      "path": "0"
    },
    "986": {
      "op": "MSTORE"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1029": {
      "op": "DUP3"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1043": {
      "op": "DUP3"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1052": {
      "op": "JUMP"
    },
    "1053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11005,
        11090
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1054": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11124,
        11191
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x42A"
    },
    "1057": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11147,
        11154
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11175,
        11190
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11156,
        11172
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11156,
        11190
      ],
      "op": "SUB",
      "path": "0"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11124,
        11132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x441"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        11124,
        11191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11124,
        11191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11219,
        11223
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "1070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        11219,
        11223
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        10825,
        11230
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        10825,
        11230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1076": {
      "fn": "ERC20.transfer",
      "offset": [
        8103,
        8275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1077": {
      "fn": "ERC20.transfer",
      "offset": [
        8189,
        8193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1079": {
      "fn": "ERC20.transfer",
      "offset": [
        8205,
        8247
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x28B"
    },
    "1082": {
      "fn": "Context._msgSender",
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1083": {
      "fn": "ERC20.transfer",
      "offset": [
        8229,
        8238
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1084": {
      "fn": "ERC20.transfer",
      "offset": [
        8240,
        8246
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1085": {
      "fn": "ERC20.transfer",
      "offset": [
        8205,
        8214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x565"
    },
    "1088": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        8205,
        8247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        14401,
        14771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "ERC20._approve",
      "offset": [
        14532,
        14551
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 19
    },
    "1099": {
      "branch": 35,
      "fn": "ERC20._approve",
      "offset": [
        14532,
        14551
      ],
      "op": "AND",
      "path": "0"
    },
    "1100": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "1103": {
      "branch": 35,
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1104": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1106": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1115": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1118": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1120": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1121": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "ADD",
      "path": "0"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1125": {
      "op": "DUP1"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1164": {
      "op": "DUP3"
    },
    "1165": {
      "op": "ADD"
    },
    "1166": {
      "op": "MSTORE"
    },
    "1167": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1186": {
      "op": "JUMP"
    },
    "1187": {
      "fn": "ERC20._approve",
      "offset": [
        14524,
        14592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "fn": "ERC20._approve",
      "offset": [
        14610,
        14631
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1197": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        14610,
        14631
      ],
      "op": "AND",
      "path": "0"
    },
    "1198": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1201": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1202": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1204": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1216": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1218": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1219": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "ADD",
      "path": "0"
    },
    "1220": {
      "op": "MSTORE"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1283": {
      "op": "JUMP"
    },
    "1284": {
      "fn": "ERC20._approve",
      "offset": [
        14602,
        14670
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1291": {
      "op": "SHL"
    },
    "1292": {
      "op": "SUB"
    },
    "1293": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 21
    },
    "1294": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1295": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "AND",
      "path": "0"
    },
    "1296": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1298": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1299": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1300": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1301": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1303": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1305": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1306": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1307": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1308": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1310": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1311": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1312": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14699
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1313": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1314": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1315": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "AND",
      "path": "0"
    },
    "1316": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1317": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1318": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14708
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14717
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        14681,
        14717
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 22
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1331": {
      "op": "DUP5"
    },
    "1332": {
      "op": "DUP2"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1367": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1371": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1372": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1373": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1374": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "SUB",
      "path": "0"
    },
    "1375": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1376": {
      "fn": "ERC20._approve",
      "offset": [
        14732,
        14764
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1377": {
      "fn": "ERC20._approve",
      "offset": [
        14401,
        14771
      ],
      "op": "POP",
      "path": "0"
    },
    "1378": {
      "fn": "ERC20._approve",
      "offset": [
        14401,
        14771
      ],
      "op": "POP",
      "path": "0"
    },
    "1379": {
      "fn": "ERC20._approve",
      "offset": [
        14401,
        14771
      ],
      "op": "POP",
      "path": "0"
    },
    "1380": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        14401,
        14771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        11704,
        12417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "fn": "ERC20._transfer",
      "offset": [
        11839,
        11859
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 23
    },
    "1391": {
      "branch": 37,
      "fn": "ERC20._transfer",
      "offset": [
        11839,
        11859
      ],
      "op": "AND",
      "path": "0"
    },
    "1392": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C9"
    },
    "1395": {
      "branch": 37,
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1407": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1412": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "ADD",
      "path": "0"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1471": {
      "op": "DUP3"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1480": {
      "op": "JUMP"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        11831,
        11901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        11919,
        11942
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 24
    },
    "1491": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        11919,
        11942
      ],
      "op": "AND",
      "path": "0"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62B"
    },
    "1495": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1507": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "ADD",
      "path": "0"
    },
    "1514": {
      "op": "MSTORE"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "op": "MSTORE"
    },
    "1522": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1557": {
      "op": "DUP3"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1566": {
      "op": "SHL"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1574": {
      "op": "ADD"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1578": {
      "op": "JUMP"
    },
    "1579": {
      "fn": "ERC20._transfer",
      "offset": [
        11911,
        11982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "SUB"
    },
    "1588": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "AND",
      "path": "0"
    },
    "1590": {
      "fn": "ERC20._transfer",
      "offset": [
        12051,
        12072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1592": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1594": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1597": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1600": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1603": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1604": {
      "fn": "ERC20._transfer",
      "offset": [
        12075,
        12092
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        12110,
        12133
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 25
    },
    "1606": {
      "fn": "ERC20._transfer",
      "offset": [
        12110,
        12133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        12110,
        12133
      ],
      "op": "LT",
      "path": "0"
    },
    "1608": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        12110,
        12133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1609": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A3"
    },
    "1612": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1613": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1627": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1630": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "ADD",
      "path": "0"
    },
    "1631": {
      "op": "MSTORE"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1674": {
      "op": "DUP3"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1698": {
      "op": "JUMP"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        12102,
        12176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "SUB"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 26
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "AND",
      "path": "0"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12227
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1726": {
      "fn": "ERC20._transfer",
      "offset": [
        12230,
        12252
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        12230,
        12252
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        12230,
        12252
      ],
      "op": "SUB",
      "path": "0"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12252
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 27
    },
    "1732": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "AND",
      "path": "0"
    },
    "1734": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1735": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1736": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1738": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12292
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1739": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1740": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1741": {
      "fn": "ERC20._transfer",
      "offset": [
        12246,
        12252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1742": {
      "fn": "ERC20._transfer",
      "offset": [
        12246,
        12252
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1743": {
      "fn": "ERC20._transfer",
      "offset": [
        12210,
        12219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1744": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1747": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1748": {
      "fn": "ERC20._transfer",
      "offset": [
        12246,
        12252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1749": {
      "fn": "ERC20._transfer",
      "offset": [
        12246,
        12252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x993"
    },
    "1753": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        12272,
        12302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1754": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1755": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1756": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "POP",
      "path": "0"
    },
    "1757": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "POP",
      "path": "0"
    },
    "1758": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1759": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1760": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1761": {
      "fn": "ERC20._transfer",
      "offset": [
        12272,
        12302
      ],
      "op": "POP",
      "path": "0"
    },
    "1762": {
      "fn": "ERC20._transfer",
      "offset": [
        12335,
        12344
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 28
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "AND",
      "path": "0"
    },
    "1772": {
      "fn": "ERC20._transfer",
      "offset": [
        12327,
        12333
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "AND",
      "path": "0"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1815": {
      "fn": "ERC20._transfer",
      "offset": [
        12346,
        12352
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1818": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1819": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "1822": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1823": {
      "op": "DUP2"
    },
    "1824": {
      "op": "MSTORE"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "SWAP1"
    },
    "1829": {
      "op": "JUMP"
    },
    "1830": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1831": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1833": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1834": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1835": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1836": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "SUB",
      "path": "0"
    },
    "1837": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1838": {
      "fn": "ERC20._transfer",
      "offset": [
        12318,
        12353
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1839": {
      "fn": "ERC20._transfer",
      "offset": [
        11821,
        12417
      ],
      "op": "POP",
      "path": "0"
    },
    "1840": {
      "fn": "ERC20._transfer",
      "offset": [
        11704,
        12417
      ],
      "op": "POP",
      "path": "0"
    },
    "1841": {
      "fn": "ERC20._transfer",
      "offset": [
        11704,
        12417
      ],
      "op": "POP",
      "path": "0"
    },
    "1842": {
      "fn": "ERC20._transfer",
      "offset": [
        11704,
        12417
      ],
      "op": "POP",
      "path": "0"
    },
    "1843": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        11704,
        12417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1844": {
      "fn": "ERC20._mint",
      "offset": [
        12693,
        13082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "fn": "ERC20._mint",
      "offset": [
        12776,
        12797
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 29
    },
    "1854": {
      "branch": 40,
      "fn": "ERC20._mint",
      "offset": [
        12776,
        12797
      ],
      "op": "AND",
      "path": "0"
    },
    "1855": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78A"
    },
    "1858": {
      "branch": 40,
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1859": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1861": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1875": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1876": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "ADD",
      "path": "0"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1882": {
      "op": "DUP3"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1920": {
      "op": "DUP3"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1929": {
      "op": "JUMP"
    },
    "1930": {
      "fn": "ERC20._mint",
      "offset": [
        12768,
        12833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1931": {
      "fn": "ERC20._mint",
      "offset": [
        12920,
        12926
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 30
    },
    "1932": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1934": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1936": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1937": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1938": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1939": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79C"
    },
    "1942": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1943": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1944": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x993"
    },
    "1947": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        12904,
        12926
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1948": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1949": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1950": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1951": {
      "fn": "ERC20._mint",
      "offset": [
        12904,
        12926
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "op": "SUB"
    },
    "1962": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 31
    },
    "1963": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "AND",
      "path": "0"
    },
    "1964": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1966": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1967": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1968": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1969": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1971": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1972": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1973": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1974": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1976": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1977": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12954
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1978": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1979": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1980": {
      "fn": "ERC20._mint",
      "offset": [
        12958,
        12964
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1981": {
      "fn": "ERC20._mint",
      "offset": [
        12958,
        12964
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1982": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1983": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "1986": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1987": {
      "fn": "ERC20._mint",
      "offset": [
        12958,
        12964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1988": {
      "fn": "ERC20._mint",
      "offset": [
        12958,
        12964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1989": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x993"
    },
    "1992": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        12936,
        12964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1993": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1994": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1995": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1996": {
      "fn": "ERC20._mint",
      "offset": [
        12936,
        12964
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "2001": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2002": {
      "op": "DUP2"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "MSTORE"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2011": {
      "op": "SHL"
    },
    "2012": {
      "op": "SUB"
    },
    "2013": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2014": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "AND",
      "path": "0"
    },
    "2015": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2016": {
      "fn": "ERC20._mint",
      "offset": [
        12996,
        12997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2018": {
      "fn": "ERC20._mint",
      "offset": [
        12996,
        12997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2019": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2052": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2058": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2060": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2061": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "SUB",
      "path": "0"
    },
    "2062": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2063": {
      "fn": "ERC20._mint",
      "offset": [
        12979,
        13016
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2064": {
      "fn": "ERC20._mint",
      "offset": [
        12693,
        13082
      ],
      "op": "POP",
      "path": "0"
    },
    "2065": {
      "fn": "ERC20._mint",
      "offset": [
        12693,
        13082
      ],
      "op": "POP",
      "path": "0"
    },
    "2066": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        12693,
        13082
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2067": {
      "op": "JUMPDEST"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2072": {
      "op": "DUP1"
    },
    "2073": {
      "op": "DUP4"
    },
    "2074": {
      "op": "MSTORE"
    },
    "2075": {
      "op": "DUP4"
    },
    "2076": {
      "op": "MLOAD"
    },
    "2077": {
      "op": "DUP1"
    },
    "2078": {
      "op": "DUP3"
    },
    "2079": {
      "op": "DUP6"
    },
    "2080": {
      "op": "ADD"
    },
    "2081": {
      "op": "MSTORE"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "DUP2"
    },
    "2086": {
      "op": "DUP2"
    },
    "2087": {
      "op": "LT"
    },
    "2088": {
      "op": "ISZERO"
    },
    "2089": {
      "op": "PUSH2",
      "value": "0x840"
    },
    "2092": {
      "op": "JUMPI"
    },
    "2093": {
      "op": "DUP6"
    },
    "2094": {
      "op": "DUP2"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "DUP4"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "MLOAD"
    },
    "2099": {
      "op": "DUP6"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "DUP3"
    },
    "2107": {
      "op": "ADD"
    },
    "2108": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2111": {
      "op": "JUMP"
    },
    "2112": {
      "op": "JUMPDEST"
    },
    "2113": {
      "op": "DUP2"
    },
    "2114": {
      "op": "DUP2"
    },
    "2115": {
      "op": "GT"
    },
    "2116": {
      "op": "ISZERO"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x852"
    },
    "2120": {
      "op": "JUMPI"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2125": {
      "op": "DUP4"
    },
    "2126": {
      "op": "DUP8"
    },
    "2127": {
      "op": "ADD"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "MSTORE"
    },
    "2130": {
      "op": "JUMPDEST"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2137": {
      "op": "NOT"
    },
    "2138": {
      "op": "AND"
    },
    "2139": {
      "op": "SWAP3"
    },
    "2140": {
      "op": "SWAP1"
    },
    "2141": {
      "op": "SWAP3"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2145": {
      "op": "ADD"
    },
    "2146": {
      "op": "SWAP4"
    },
    "2147": {
      "op": "SWAP3"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "jump": "o",
      "op": "JUMP"
    },
    "2152": {
      "op": "JUMPDEST"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "op": "CALLDATALOAD"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "op": "SUB"
    },
    "2163": {
      "op": "DUP2"
    },
    "2164": {
      "op": "AND"
    },
    "2165": {
      "op": "DUP2"
    },
    "2166": {
      "op": "EQ"
    },
    "2167": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2170": {
      "op": "JUMPI"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2173": {
      "op": "DUP1"
    },
    "2174": {
      "op": "REVERT"
    },
    "2175": {
      "op": "JUMPDEST"
    },
    "2176": {
      "op": "SWAP2"
    },
    "2177": {
      "op": "SWAP1"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "jump": "o",
      "op": "JUMP"
    },
    "2180": {
      "op": "JUMPDEST"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2183": {
      "op": "DUP1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2186": {
      "op": "DUP4"
    },
    "2187": {
      "op": "DUP6"
    },
    "2188": {
      "op": "SUB"
    },
    "2189": {
      "op": "SLT"
    },
    "2190": {
      "op": "ISZERO"
    },
    "2191": {
      "op": "PUSH2",
      "value": "0x897"
    },
    "2194": {
      "op": "JUMPI"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2197": {
      "op": "DUP1"
    },
    "2198": {
      "op": "REVERT"
    },
    "2199": {
      "op": "JUMPDEST"
    },
    "2200": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2203": {
      "op": "DUP4"
    },
    "2204": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2207": {
      "jump": "i",
      "op": "JUMP"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "SWAP5"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2212": {
      "op": "SWAP4"
    },
    "2213": {
      "op": "SWAP1"
    },
    "2214": {
      "op": "SWAP4"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "CALLDATALOAD"
    },
    "2217": {
      "op": "SWAP4"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "jump": "o",
      "op": "JUMP"
    },
    "2222": {
      "op": "JUMPDEST"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2225": {
      "op": "DUP1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2230": {
      "op": "DUP5"
    },
    "2231": {
      "op": "DUP7"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "op": "SLT"
    },
    "2234": {
      "op": "ISZERO"
    },
    "2235": {
      "op": "PUSH2",
      "value": "0x8C3"
    },
    "2238": {
      "op": "JUMPI"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2241": {
      "op": "DUP1"
    },
    "2242": {
      "op": "REVERT"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "PUSH2",
      "value": "0x8CC"
    },
    "2247": {
      "op": "DUP5"
    },
    "2248": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2251": {
      "jump": "i",
      "op": "JUMP"
    },
    "2252": {
      "op": "JUMPDEST"
    },
    "2253": {
      "op": "SWAP3"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "op": "DUP6"
    },
    "2261": {
      "op": "ADD"
    },
    "2262": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2265": {
      "jump": "i",
      "op": "JUMP"
    },
    "2266": {
      "op": "JUMPDEST"
    },
    "2267": {
      "op": "SWAP2"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2271": {
      "op": "DUP5"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "CALLDATALOAD"
    },
    "2274": {
      "op": "SWAP1"
    },
    "2275": {
      "op": "POP"
    },
    "2276": {
      "op": "SWAP3"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "op": "SWAP3"
    },
    "2279": {
      "op": "POP"
    },
    "2280": {
      "op": "SWAP3"
    },
    "2281": {
      "jump": "o",
      "op": "JUMP"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "DUP5"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "op": "SLT"
    },
    "2291": {
      "op": "ISZERO"
    },
    "2292": {
      "op": "PUSH2",
      "value": "0x8FC"
    },
    "2295": {
      "op": "JUMPI"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2298": {
      "op": "DUP1"
    },
    "2299": {
      "op": "REVERT"
    },
    "2300": {
      "op": "JUMPDEST"
    },
    "2301": {
      "op": "POP"
    },
    "2302": {
      "op": "CALLDATALOAD"
    },
    "2303": {
      "op": "SWAP2"
    },
    "2304": {
      "op": "SWAP1"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "jump": "o",
      "op": "JUMP"
    },
    "2307": {
      "op": "JUMPDEST"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "DUP5"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "op": "SLT"
    },
    "2316": {
      "op": "ISZERO"
    },
    "2317": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2320": {
      "op": "JUMPI"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2323": {
      "op": "DUP1"
    },
    "2324": {
      "op": "REVERT"
    },
    "2325": {
      "op": "JUMPDEST"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x91E"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2333": {
      "jump": "i",
      "op": "JUMP"
    },
    "2334": {
      "op": "JUMPDEST"
    },
    "2335": {
      "op": "SWAP4"
    },
    "2336": {
      "op": "SWAP3"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "jump": "o",
      "op": "JUMP"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2347": {
      "op": "DUP4"
    },
    "2348": {
      "op": "DUP6"
    },
    "2349": {
      "op": "SUB"
    },
    "2350": {
      "op": "SLT"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2358": {
      "op": "DUP1"
    },
    "2359": {
      "op": "REVERT"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x941"
    },
    "2364": {
      "op": "DUP4"
    },
    "2365": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2368": {
      "jump": "i",
      "op": "JUMP"
    },
    "2369": {
      "op": "JUMPDEST"
    },
    "2370": {
      "op": "SWAP2"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x94F"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2377": {
      "op": "DUP5"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2382": {
      "jump": "i",
      "op": "JUMP"
    },
    "2383": {
      "op": "JUMPDEST"
    },
    "2384": {
      "op": "SWAP1"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "SWAP3"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "op": "SWAP3"
    },
    "2389": {
      "op": "SWAP1"
    },
    "2390": {
      "op": "POP"
    },
    "2391": {
      "jump": "o",
      "op": "JUMP"
    },
    "2392": {
      "op": "JUMPDEST"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "DUP2"
    },
    "2396": {
      "op": "DUP2"
    },
    "2397": {
      "op": "SHR"
    },
    "2398": {
      "op": "SWAP1"
    },
    "2399": {
      "op": "DUP3"
    },
    "2400": {
      "op": "AND"
    },
    "2401": {
      "op": "DUP1"
    },
    "2402": {
      "op": "PUSH2",
      "value": "0x96C"
    },
    "2405": {
      "op": "JUMPI"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2408": {
      "op": "DUP3"
    },
    "2409": {
      "op": "AND"
    },
    "2410": {
      "op": "SWAP2"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "op": "JUMPDEST"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "LT"
    },
    "2417": {
      "op": "DUP2"
    },
    "2418": {
      "op": "EQ"
    },
    "2419": {
      "op": "ISZERO"
    },
    "2420": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2423": {
      "op": "JUMPI"
    },
    "2424": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2444": {
      "op": "REVERT"
    },
    "2445": {
      "op": "JUMPDEST"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "SWAP2"
    },
    "2448": {
      "op": "SWAP1"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "jump": "o",
      "op": "JUMP"
    },
    "2451": {
      "op": "JUMPDEST"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2454": {
      "op": "DUP3"
    },
    "2455": {
      "op": "NOT"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "GT"
    },
    "2458": {
      "op": "ISZERO"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x9B4"
    },
    "2462": {
      "op": "JUMPI"
    },
    "2463": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2483": {
      "op": "REVERT"
    },
    "2484": {
      "op": "JUMPDEST"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "ADD"
    },
    "2487": {
      "op": "SWAP1"
    },
    "2488": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d669e0bdc01ca9dae504ae2d519991c10f7676c3",
  "source": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    uint8 private _decimals;\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_, uint8 dec) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = dec;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: contracts/moc0xbtc.sol\n\npragma solidity ^0.8;\n\npragma solidity ^0.8.7;\n\n\ncontract AMock is ERC20 {\n\tconstructor() public ERC20(\"Mock 0xBTC\", \"0xBTC\", 8) {\n        \n    }\n    function withdrawToken(uint256 _amount) external {\n        // transfer the token from address of this contract\n        // to address of the user (executing the withdrawToken() function)\n                _mint(msg.sender, _amount);\n    }\n}\n",
  "sourceMap": "16270:338:0:-:0;;;16297:69;;;;;;;;;-1:-1:-1;6302:149:0;;;;;;;;;;;-1:-1:-1;;;6302:149:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6302:149:0;;;;6379:13;;6302:149;;;16347:1;;6379:13;;:5;;6302:149;6379:13;:::i;:::-;-1:-1:-1;6402:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6429:9:0;:15;;-1:-1:-1;;6429:15:0;;;;;;;;;;;;-1:-1:-1;16270:338:0;;-1:-1:-1;16270:338:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16270:338:0;;;-1:-1:-1;16270:338:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;16270:338:0;;;;;;",
  "sourcePath": "contracts/mock.sol",
  "type": "contract"
}