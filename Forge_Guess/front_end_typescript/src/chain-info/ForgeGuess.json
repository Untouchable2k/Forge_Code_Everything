{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "UsersGuess",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betID",
          "type": "uint256"
        }
      ],
      "name": "GuessNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "UsersGuess",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Result",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWagered",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "AddressOfGuesser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "AmountWon",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "chainlinkRandom",
          "type": "uint256"
        }
      ],
      "name": "ShowAnswer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "guess",
          "type": "uint256"
        }
      ],
      "name": "MaxINForGuess",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Profit",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "betAmt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "betOdds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "betResults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "betee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betidIN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blockNumForBetID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forWhom",
          "type": "address"
        }
      ],
      "name": "currentForge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "odds",
          "type": "uint256"
        }
      ],
      "name": "estOUTPUT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "extraLINK",
          "type": "uint256"
        }
      ],
      "name": "getBlank",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "guess",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "extraLINK",
          "type": "uint256"
        }
      ],
      "name": "getRandomNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBlockFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "guess",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "maxGuessPerInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "num",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxLoss",
          "type": "uint256"
        }
      ],
      "name": "perfectWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "profitz",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "profitzGuess",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forWhom",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stakeFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "uOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tot",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unreleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "withEstimator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoss",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/VRFConsumerBase.sol",
    "2": "contracts/VRFRequestIDBase.sol",
    "3": "contracts/guess.sol"
  },
  "ast": {
    "absolutePath": "contracts/guess.sol",
    "exportedSymbols": {
      "ForgeGuess": [
        3568
      ],
      "IERC20": [
        2356
      ],
      "LinkTokenInterface": [
        3834
      ],
      "VRFConsumerBase": [
        3689
      ],
      "VRFRequestIDBase": [
        3739
      ]
    },
    "id": 3569,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2287,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "548:23:3"
      },
      {
        "absolutePath": "contracts/VRFConsumerBase.sol",
        "file": "./VRFConsumerBase.sol",
        "id": 2288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3569,
        "sourceUnit": 3690,
        "src": "573:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2289,
          "nodeType": "StructuredDocumentation",
          "src": "606:214:3",
          "text": " Request testnet LINK and ETH here: https://faucets.chain.link/\n Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/"
        },
        "fullyImplemented": false,
        "id": 2356,
        "linearizedBaseContracts": [
          2356
        ],
        "name": "IERC20",
        "nameLocation": "832:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 2294,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "854:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:3"
            },
            "returnParameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2294,
                  "src": "891:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:9:3"
            },
            "scope": 2356,
            "src": "845:55:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 2301,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "914:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "932:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "924:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:17:3"
            },
            "returnParameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "964:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:9:3"
            },
            "scope": 2356,
            "src": "905:68:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 2310,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "987:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2303,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1004:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2310,
                  "src": "996:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2305,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1023:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2310,
                  "src": "1015:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:35:3"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2310,
                  "src": "1049:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1048:6:3"
            },
            "scope": 2356,
            "src": "978:77:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 2319,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1069:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2312,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1087:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1079:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2314,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1102:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1094:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:32:3"
            },
            "returnParameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1134:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:9:3"
            },
            "scope": 2356,
            "src": "1060:83:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 2328,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1157:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1173:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "1165:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1190:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "1182:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:33:3"
            },
            "returnParameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "1216:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1215:6:3"
            },
            "scope": 2356,
            "src": "1148:74:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 2339,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1236:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1257:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1249:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1273:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1265:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1292:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1284:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1248:51:3"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1318:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:6:3"
            },
            "scope": 2356,
            "src": "1227:97:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 2347,
            "name": "Transfer",
            "nameLocation": "1340:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2341,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1365:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "1349:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2343,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1387:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "1371:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1399:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "1391:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1348:57:3"
            },
            "src": "1334:72:3"
          },
          {
            "anonymous": false,
            "id": 2355,
            "name": "Approval",
            "nameLocation": "1417:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1442:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1426:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2351,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1465:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1449:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1482:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1474:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1425:63:3"
            },
            "src": "1411:78:3"
          }
        ],
        "scope": 3569,
        "src": "822:669:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2357,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3689,
              "src": "1516:15:3"
            },
            "id": 2358,
            "nodeType": "InheritanceSpecifier",
            "src": "1516:15:3"
          }
        ],
        "canonicalName": "ForgeGuess",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3568,
        "linearizedBaseContracts": [
          3568,
          3689,
          3739
        ],
        "name": "ForgeGuess",
        "nameLocation": "1502:10:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2360,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "1556:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1539:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2359,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1539:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2362,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "1586:3:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1569:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1569:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "16462ad3",
            "id": 2365,
            "mutability": "mutable",
            "name": "betid",
            "nameLocation": "1630:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1615:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2363,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1615:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2364,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1638:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0d82675e",
            "id": 2368,
            "mutability": "mutable",
            "name": "betidIN",
            "nameLocation": "1660:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1645:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2366,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1670:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "530d3bc8",
            "id": 2372,
            "mutability": "mutable",
            "name": "betResults",
            "nameLocation": "1712:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1677:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2371,
              "keyType": {
                "id": 2369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1685:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1677:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2370,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1696:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45b90d70",
            "id": 2376,
            "mutability": "mutable",
            "name": "blockNumForBetID",
            "nameLocation": "1763:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1728:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2375,
              "keyType": {
                "id": 2373,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1736:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1728:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2374,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1747:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "edcbbef8",
            "id": 2380,
            "mutability": "mutable",
            "name": "betAmt",
            "nameLocation": "1820:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1785:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2379,
              "keyType": {
                "id": 2377,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1793:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1785:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2378,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1804:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "984d63cf",
            "id": 2384,
            "mutability": "mutable",
            "name": "betOdds",
            "nameLocation": "1867:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1832:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2383,
              "keyType": {
                "id": 2381,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1840:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1832:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2382,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1851:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f970dd02",
            "id": 2388,
            "mutability": "mutable",
            "name": "randomNumber",
            "nameLocation": "1915:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1880:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2387,
              "keyType": {
                "id": 2385,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1888:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1880:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2386,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1899:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d63bc599",
            "id": 2392,
            "mutability": "mutable",
            "name": "betee",
            "nameLocation": "1968:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1933:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2391,
              "keyType": {
                "id": 2389,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1941:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1933:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2390,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1952:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d57ab28",
            "id": 2396,
            "mutability": "mutable",
            "name": "winnings",
            "nameLocation": "2014:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "1979:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2395,
              "keyType": {
                "id": 2393,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1987:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1979:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2394,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1998:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "068c0c63",
            "id": 2400,
            "mutability": "mutable",
            "name": "profitz",
            "nameLocation": "2059:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2028:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
              "typeString": "mapping(address => int256)"
            },
            "typeName": {
              "id": 2399,
              "keyType": {
                "id": 2397,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2036:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2028:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                "typeString": "mapping(address => int256)"
              },
              "valueType": {
                "id": 2398,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "2047:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e6d8b91d",
            "id": 2404,
            "mutability": "mutable",
            "name": "profitzGuess",
            "nameLocation": "2103:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2072:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
              "typeString": "mapping(address => int256)"
            },
            "typeName": {
              "id": 2403,
              "keyType": {
                "id": 2401,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2080:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2072:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                "typeString": "mapping(address => int256)"
              },
              "valueType": {
                "id": 2402,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "2091:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42619f66",
            "id": 2406,
            "mutability": "mutable",
            "name": "randomResult",
            "nameLocation": "2137:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2122:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2405,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2122:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f03d6672",
            "id": 2409,
            "mutability": "mutable",
            "name": "unreleased",
            "nameLocation": "2170:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2155:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2407,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2155:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2408,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2183:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 2412,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2205:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2190:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2410,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2190:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2219:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2416,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "2267:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2231:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2415,
              "keyType": {
                "id": 2413,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2239:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2231:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2414,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2250:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "cc7a262e",
            "id": 2422,
            "mutability": "mutable",
            "name": "stakedToken",
            "nameLocation": "2301:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2287:78:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2356",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2418,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2417,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2356,
                "src": "2287:6:3"
              },
              "referencedDeclaration": 2356,
              "src": "2287:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2356",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343466423433303636463745434339313035384533413631344662384131354132373335323736",
                  "id": 2420,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2322:42:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF44fB43066F7ECC91058E3A614Fb8A15A2735276"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 2419,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2356,
                "src": "2315:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2356_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 2421,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2315:50:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2356",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2428,
            "name": "Staked",
            "nameLocation": "2382:6:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2405:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2428,
                  "src": "2389:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2426,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2419:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2428,
                  "src": "2411:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:38:3"
            },
            "src": "2376:51:3"
          },
          {
            "anonymous": false,
            "id": 2434,
            "name": "Withdrawn",
            "nameLocation": "2438:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2430,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2464:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2434,
                  "src": "2448:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2432,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2478:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2434,
                  "src": "2470:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2447:38:3"
            },
            "src": "2432:54:3"
          },
          {
            "anonymous": false,
            "id": 2444,
            "name": "GuessNote",
            "nameLocation": "2497:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "UsersGuess",
                  "nameLocation": "2515:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "2507:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2535:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "2527:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2440,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2559:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "2543:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2442,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "betID",
                  "nameLocation": "2573:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "2565:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2506:73:3"
            },
            "src": "2491:89:3"
          },
          {
            "anonymous": false,
            "id": 2460,
            "name": "ShowAnswer",
            "nameLocation": "2591:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "UsersGuess",
                  "nameLocation": "2610:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2602:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2602:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Result",
                  "nameLocation": "2630:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2622:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2450,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountWagered",
                  "nameLocation": "2646:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2638:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "betID",
                  "nameLocation": "2669:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2661:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2454,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "AddressOfGuesser",
                  "nameLocation": "2692:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2676:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2456,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "AmountWon",
                  "nameLocation": "2718:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2710:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chainlinkRandom",
                  "nameLocation": "2737:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "2729:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2601:152:3"
            },
            "src": "2585:169:3"
          },
          {
            "body": {
              "id": 2471,
              "nodeType": "Block",
              "src": "2840:42:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2467,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2416,
                      "src": "2857:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2469,
                    "indexExpression": {
                      "id": 2468,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2462,
                      "src": "2867:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2857:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2466,
                  "id": 2470,
                  "nodeType": "Return",
                  "src": "2850:25:3"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 2472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2783:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2801:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "2793:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2792:17:3"
            },
            "returnParameters": {
              "id": 2466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "2831:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2830:9:3"
            },
            "scope": 3568,
            "src": "2774:108:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2475,
            "mutability": "constant",
            "name": "_transferErrorMessage",
            "nameLocation": "2908:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 3568,
            "src": "2892:70:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2473,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2892:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "7374616b656420746f6b656e207472616e73666572206661696c6564",
              "id": 2474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2932:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9e1e47ae49200cef4f77efcafaf774e9939d6c293d046c7955c132378593749d",
                "typeString": "literal_string \"staked token transfer failed\""
              },
              "value": "staked token transfer failed"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "3517:145:3",
              "statements": [
                {
                  "expression": {
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2483,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2360,
                      "src": "3536:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307866383631393563663736393063353539303762326236313165626237333433613666363439626666313238373031636335343266303536396532633534396461",
                      "id": 2484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3546:66:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112346004567334605197339578411749477362886885606927567301153306687959030122970_by_1",
                        "typeString": "int_const 1123...(70 digits omitted)...2970"
                      },
                      "value": "0xf86195cf7690c55907b2b611ebb7343a6f649bff128701cc542f0569e2c549da"
                    },
                    "src": "3536:76:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:76:3"
                },
                {
                  "expression": {
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2487,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2362,
                      "src": "3622:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      },
                      "id": 2492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31",
                        "id": 2488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3628:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        },
                        "id": 2491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 2489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3632:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3134",
                          "id": 2490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3638:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_14_by_1",
                            "typeString": "int_const 14"
                          },
                          "value": "14"
                        },
                        "src": "3632:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        }
                      },
                      "src": "3628:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      }
                    },
                    "src": "3622:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2494,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:18:3"
                }
              ]
            },
            "documentation": {
              "id": 2476,
              "nodeType": "StructuredDocumentation",
              "src": "2973:340:3",
              "text": " Constructor inherits VRFConsumerBase\n \n Network: Mumbai\n Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"
            },
            "id": 2496,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "307833643233343141446232443331663163353533306344433632323031366166323933313737414530",
                    "id": 2479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3370:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x3d2341ADb2D31f1c5530cDC622016af293177AE0"
                  },
                  {
                    "hexValue": "307862303839373638366335343530343561466337374346323065433741353332453331323045304631",
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3445:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xb0897686c545045aFc77CF20eC7A532E3120E0F1"
                  }
                ],
                "id": 2481,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2478,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3689,
                  "src": "3341:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3341:171:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3329:2:3"
            },
            "returnParameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3517:0:3"
            },
            "scope": 3568,
            "src": "3318:344:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2775,
              "nodeType": "Block",
              "src": "3824:1868:3",
              "statements": [
                {
                  "assignments": [
                    2509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2509,
                      "mutability": "mutable",
                      "name": "esT",
                      "nameLocation": "3842:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2775,
                      "src": "3834:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3834:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2514,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2511,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "3858:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2512,
                        "name": "guess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "3863:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2510,
                      "name": "estOUTPUT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3327,
                      "src": "3848:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3834:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2516,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2501,
                          "src": "3887:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 2517,
                          "name": "esT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "3893:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3887:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752077696c6c206c6f6f7365206d6f6e657920657665727974696d652061742074686573652073657474696e6773",
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3898:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77be5fcaf18d0334c73b0d1a1ab50771cb2762863a74d63e4605760b87bab6e3",
                          "typeString": "literal_string \"You will loose money everytime at these settings\""
                        },
                        "value": "You will loose money everytime at these settings"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77be5fcaf18d0334c73b0d1a1ab50771cb2762863a74d63e4605760b87bab6e3",
                          "typeString": "literal_string \"You will loose money everytime at these settings\""
                        }
                      ],
                      "id": 2515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3879:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2521,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2523,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2501,
                          "src": "3967:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 2526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3974:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 2525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3978:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3974:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3967:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e20626574203120466f726765",
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3982:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27c471d15585882abf5bfa8de0293b395ec3687096149a0f322d8cd921bbb64c",
                          "typeString": "literal_string \"Min bet 1 Forge\""
                        },
                        "value": "Min bet 1 Forge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27c471d15585882abf5bfa8de0293b395ec3687096149a0f322d8cd921bbb64c",
                          "typeString": "literal_string \"Min bet 1 Forge\""
                        }
                      ],
                      "id": 2522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3959:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2532,
                          "name": "extraLINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2503,
                          "src": "4018:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4031:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4018:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742073656e64206174206c6561737420746865206d696e696d756d20302e30303031",
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4034:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3205107a5aa41ae6f4ae496302756b0dda9a695ec1aaf4f7439f1cb7990feb5f",
                          "typeString": "literal_string \"Must send at least the minimum 0.0001\""
                        },
                        "value": "Must send at least the minimum 0.0001"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3205107a5aa41ae6f4ae496302756b0dda9a695ec1aaf4f7439f1cb7990feb5f",
                          "typeString": "literal_string \"Must send at least the minimum 0.0001\""
                        }
                      ],
                      "id": 2531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4010:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:64:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2540,
                              "name": "guess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2499,
                              "src": "4146:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2539,
                            "name": "MaxINForGuess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2830,
                            "src": "4132:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4132:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2542,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2501,
                          "src": "4156:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4132:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616e6b726f6c6c20746f6f206c6f7720666f722074686973206265742c20506c65617365206c6f77657220626574",
                        "id": 2544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4162:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_680aeddfb93aa763602e82e47d6ff4bb9e28a69517b4b48327c12dbd3db6850e",
                          "typeString": "literal_string \"Bankroll too low for this bet, Please lower bet\""
                        },
                        "value": "Bankroll too low for this bet, Please lower bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_680aeddfb93aa763602e82e47d6ff4bb9e28a69517b4b48327c12dbd3db6850e",
                          "typeString": "literal_string \"Bankroll too low for this bet, Please lower bet\""
                        }
                      ],
                      "id": 2538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4124:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4124:88:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2546,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2548,
                            "name": "guess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2499,
                            "src": "4250:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3938",
                            "id": 2549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4256:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_98_by_1",
                              "typeString": "int_const 98"
                            },
                            "value": "98"
                          },
                          "src": "4250:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2551,
                            "name": "guess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2499,
                            "src": "4262:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4270:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4262:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4250:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206775657373206265747765656e20312d3938",
                        "id": 2555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4273:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f20150942581cad286e5cb540177a18e110954fd2b1cda0e0f573c05de08cc3",
                          "typeString": "literal_string \"Must guess between 1-98\""
                        },
                        "value": "Must guess between 1-98"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f20150942581cad286e5cb540177a18e110954fd2b1cda0e0f573c05de08cc3",
                          "typeString": "literal_string \"Must guess between 1-98\""
                        }
                      ],
                      "id": 2547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4242:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2557,
                  "nodeType": "ExpressionStatement",
                  "src": "4242:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2561,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4342:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4342:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2565,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4362:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              ],
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4354:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2563,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4354:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4354:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2567,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2501,
                            "src": "4369:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2559,
                            "name": "stakedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "4317:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2339,
                          "src": "4317:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4317:56:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206d75737420776f726b",
                        "id": 2569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4375:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28301ba7834024e216c6b786fde267432d28b8c58862b15378b7f57e1180824c",
                          "typeString": "literal_string \"Transfer must work\""
                        },
                        "value": "Transfer must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28301ba7834024e216c6b786fde267432d28b8c58862b15378b7f57e1180824c",
                          "typeString": "literal_string \"Transfer must work\""
                        }
                      ],
                      "id": 2558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4309:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:87:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2571,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:87:3"
                },
                {
                  "assignments": [
                    2573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2573,
                      "mutability": "mutable",
                      "name": "lBal",
                      "nameLocation": "4423:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2775,
                      "src": "4415:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2572,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4415:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2581,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2578,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4453:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                              "typeString": "contract ForgeGuess"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                              "typeString": "contract ForgeGuess"
                            }
                          ],
                          "id": 2577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2576,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4445:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4445:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2574,
                        "name": "LINK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3642,
                        "src": "4430:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 2575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3766,
                      "src": "4430:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4415:44:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2582,
                      "name": "extraLINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2503,
                      "src": "4514:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4526:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4514:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2604,
                  "nodeType": "IfStatement",
                  "src": "4511:105:3",
                  "trueBody": {
                    "id": 2603,
                    "nodeType": "Block",
                    "src": "4528:88:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2588,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4556:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4556:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2592,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4576:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                ],
                                "id": 2591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4568:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2590,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4568:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4568:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2594,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2362,
                                    "src": "4584:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2597,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2595,
                                          "name": "extraLINK",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2503,
                                          "src": "4591:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2596,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4601:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "4591:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2598,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4590:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4584:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2600,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4583:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2585,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3642,
                              "src": "4538:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 2587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3833,
                            "src": "4538:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:67:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2602,
                        "nodeType": "ExpressionStatement",
                        "src": "4538:67:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2605,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "4628:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "id": 2610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4635:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 2607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4640:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 2608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4646:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "4640:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "4635:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        }
                      ],
                      "id": 2611,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4634:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000"
                      }
                    },
                    "src": "4628:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2628,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "4744:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 2633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4750:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 2632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4755:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4761:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "4755:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4750:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      },
                      "src": "4744:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2661,
                          "name": "guess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2499,
                          "src": "4985:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3933",
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4994:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_93_by_1",
                            "typeString": "int_const 93"
                          },
                          "value": "93"
                        },
                        "src": "4985:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2707,
                        "nodeType": "Block",
                        "src": "5155:136:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2686,
                                "name": "lBal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "5172:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2687,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "5179:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3231",
                                  "id": 2688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5183:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  "value": "21"
                                },
                                "src": "5179:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5172:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2706,
                            "nodeType": "IfStatement",
                            "src": "5169:112:3",
                            "trueBody": {
                              "id": 2705,
                              "nodeType": "Block",
                              "src": "5187:94:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2694,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "5223:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2695,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5223:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 2698,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "5243:4:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                              "typeString": "contract ForgeGuess"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                              "typeString": "contract ForgeGuess"
                                            }
                                          ],
                                          "id": 2697,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5235:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2696,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5235:7:3",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2699,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5235:13:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2702,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2700,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "5250:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2701,
                                          "name": "extraLINK",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2503,
                                          "src": "5256:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5250:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2691,
                                        "name": "LINK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3642,
                                        "src": "5205:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                                          "typeString": "contract LinkTokenInterface"
                                        }
                                      },
                                      "id": 2693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3833,
                                      "src": "5205:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 2703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5205:61:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2704,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5205:61:3"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "id": 2708,
                      "nodeType": "IfStatement",
                      "src": "4982:309:3",
                      "trueBody": {
                        "id": 2685,
                        "nodeType": "Block",
                        "src": "5006:136:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2664,
                                "name": "lBal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "5023:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2665,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "5030:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3231",
                                  "id": 2666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5034:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  "value": "21"
                                },
                                "src": "5030:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5023:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2684,
                            "nodeType": "IfStatement",
                            "src": "5020:112:3",
                            "trueBody": {
                              "id": 2683,
                              "nodeType": "Block",
                              "src": "5038:94:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2672,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "5074:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2673,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5074:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 2676,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "5094:4:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                              "typeString": "contract ForgeGuess"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                              "typeString": "contract ForgeGuess"
                                            }
                                          ],
                                          "id": 2675,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5086:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2674,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5086:7:3",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2677,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5086:13:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2680,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2678,
                                          "name": "fee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2362,
                                          "src": "5101:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2679,
                                          "name": "extraLINK",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2503,
                                          "src": "5107:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5101:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2669,
                                        "name": "LINK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3642,
                                        "src": "5056:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                                          "typeString": "contract LinkTokenInterface"
                                        }
                                      },
                                      "id": 2671,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3833,
                                      "src": "5056:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 2681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5056:61:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 2682,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5056:61:3"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 2709,
                    "nodeType": "IfStatement",
                    "src": "4741:550:3",
                    "trueBody": {
                      "id": 2660,
                      "nodeType": "Block",
                      "src": "4765:212:3",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2635,
                                "name": "betidIN",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2368,
                                "src": "4782:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "313030303030",
                                "id": 2636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4792:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              },
                              "src": "4782:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2638,
                                "name": "lBal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "4802:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2639,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "4809:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3231",
                                  "id": 2640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4815:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_21_by_1",
                                    "typeString": "int_const 21"
                                  },
                                  "value": "21"
                                },
                                "src": "4809:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4802:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4782:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2659,
                          "nodeType": "IfStatement",
                          "src": "4779:188:3",
                          "trueBody": {
                            "id": 2658,
                            "nodeType": "Block",
                            "src": "4818:149:3",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2647,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4909:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4909:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 2651,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4929:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                            "typeString": "contract ForgeGuess"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                            "typeString": "contract ForgeGuess"
                                          }
                                        ],
                                        "id": 2650,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4921:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2649,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4921:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4921:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2653,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2362,
                                        "src": "4936:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2654,
                                        "name": "extraLINK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2503,
                                        "src": "4942:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4936:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2644,
                                      "name": "LINK",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3642,
                                      "src": "4891:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                                        "typeString": "contract LinkTokenInterface"
                                      }
                                    },
                                    "id": 2646,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3833,
                                    "src": "4891:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 2656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4891:61:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2657,
                                "nodeType": "ExpressionStatement",
                                "src": "4891:61:3"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 2710,
                  "nodeType": "IfStatement",
                  "src": "4625:666:3",
                  "trueBody": {
                    "id": 2627,
                    "nodeType": "Block",
                    "src": "4650:86:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2616,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4682:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4682:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2620,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4702:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                ],
                                "id": 2619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4694:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2618,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4694:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4694:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2622,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2362,
                                "src": "4709:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2623,
                                "name": "extraLINK",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2503,
                                "src": "4715:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4709:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2613,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3642,
                              "src": "4664:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 2615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3833,
                            "src": "4664:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4664:61:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2626,
                        "nodeType": "ExpressionStatement",
                        "src": "4664:61:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2711,
                        "name": "betOdds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2384,
                        "src": "5300:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2713,
                      "indexExpression": {
                        "id": 2712,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5308:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5300:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2714,
                      "name": "guess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2499,
                      "src": "5319:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5300:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "5300:24:3"
                },
                {
                  "expression": {
                    "id": 2721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2717,
                        "name": "betAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "5334:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2719,
                      "indexExpression": {
                        "id": 2718,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5341:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5334:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2720,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "5352:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5334:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2722,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:21:3"
                },
                {
                  "expression": {
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2723,
                        "name": "betee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2392,
                        "src": "5365:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2725,
                      "indexExpression": {
                        "id": 2724,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5371:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5365:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2726,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5382:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5382:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5365:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:27:3"
                },
                {
                  "expression": {
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2730,
                        "name": "winnings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "5402:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2732,
                      "indexExpression": {
                        "id": 2731,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5411:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5402:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2733,
                      "name": "esT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2509,
                      "src": "5422:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5402:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2735,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:23:3"
                },
                {
                  "expression": {
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2736,
                        "name": "profitzGuess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2404,
                        "src": "5435:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 2739,
                      "indexExpression": {
                        "expression": {
                          "id": 2737,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5448:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5448:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5435:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2742,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2501,
                          "src": "5467:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5463:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 2740,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "5463:3:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5463:8:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5435:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "5435:36:3"
                },
                {
                  "expression": {
                    "id": 2751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2746,
                        "name": "blockNumForBetID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "5481:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2748,
                      "indexExpression": {
                        "id": 2747,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5498:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5481:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2749,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5509:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5509:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5481:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2752,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:40:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2754,
                        "name": "guess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "5546:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2755,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "5553:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2756,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5558:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5558:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2758,
                        "name": "betidIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "5570:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2753,
                      "name": "GuessNote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2444,
                      "src": "5536:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2760,
                  "nodeType": "EmitStatement",
                  "src": "5531:47:3"
                },
                {
                  "expression": {
                    "id": 2762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5588:9:3",
                    "subExpression": {
                      "id": 2761,
                      "name": "betidIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2368,
                      "src": "5588:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2763,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:9:3"
                },
                {
                  "expression": {
                    "id": 2766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2764,
                      "name": "unreleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "5607:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2765,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "5622:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5607:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2767,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2769,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2360,
                        "src": "5660:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2770,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "5669:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 2771,
                          "name": "extraLINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2503,
                          "src": "5675:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5669:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2768,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "5642:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2507,
                  "id": 2774,
                  "nodeType": "Return",
                  "src": "5635:50:3"
                }
              ]
            },
            "documentation": {
              "id": 2497,
              "nodeType": "StructuredDocumentation",
              "src": "3672:40:3",
              "text": " Requests randomness "
            },
            "functionSelector": "4ca7d044",
            "id": 2776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nameLocation": "3726:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "guess",
                  "nameLocation": "3750:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "3742:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "3765:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "3757:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2503,
                  "mutability": "mutable",
                  "name": "extraLINK",
                  "nameLocation": "3778:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "3770:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3741:47:3"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3813:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "3805:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3805:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3804:19:3"
            },
            "scope": 3568,
            "src": "3717:1975:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2793,
              "nodeType": "Block",
              "src": "5754:120:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2781,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "5767:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2782,
                      "name": "betidIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2368,
                      "src": "5776:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5767:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2788,
                  "nodeType": "IfStatement",
                  "src": "5764:64:3",
                  "trueBody": {
                    "id": 2787,
                    "nodeType": "Block",
                    "src": "5784:44:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2784,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5805:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5805:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2780,
                        "id": 2786,
                        "nodeType": "Return",
                        "src": "5798:19:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2789,
                      "name": "blockNumForBetID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2376,
                      "src": "5844:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2791,
                    "indexExpression": {
                      "id": 2790,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "5861:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5844:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2780,
                  "id": 2792,
                  "nodeType": "Return",
                  "src": "5837:30:3"
                }
              ]
            },
            "functionSelector": "b5ce35a9",
            "id": 2794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastBlockFilled",
            "nameLocation": "5707:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5722:2:3"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "5746:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5745:9:3"
            },
            "scope": 3568,
            "src": "5698:176:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2829,
              "nodeType": "Block",
              "src": "5983:199:3",
              "statements": [
                {
                  "assignments": [
                    2802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2802,
                      "mutability": "mutable",
                      "name": "ret",
                      "nameLocation": "6057:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2829,
                      "src": "6049:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6049:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2826,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2812,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "6112:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                            "typeString": "contract ForgeGuess"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                            "typeString": "contract ForgeGuess"
                                          }
                                        ],
                                        "id": 2811,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6104:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2810,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6104:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2813,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6104:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2806,
                                              "name": "stakedToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2422,
                                              "src": "6080:11:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$2356",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$2356",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 2805,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "6072:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2804,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "6072:7:3",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2807,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6072:20:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2803,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2356,
                                        "src": "6065:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2356_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 2808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6065:28:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$2356",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2301,
                                    "src": "6065:38:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6065:53:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2815,
                                  "name": "unreleased",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2409,
                                  "src": "6121:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6065:66:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2817,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6064:68:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2818,
                            "name": "guess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "6135:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6064:76:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2820,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6063:78:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1050_by_1",
                            "typeString": "int_const 1050"
                          },
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3530",
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6145:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3231",
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6150:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_21_by_1",
                              "typeString": "int_const 21"
                            },
                            "value": "21"
                          },
                          "src": "6145:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1050_by_1",
                            "typeString": "int_const 1050"
                          }
                        }
                      ],
                      "id": 2824,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6144:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1050_by_1",
                        "typeString": "int_const 1050"
                      }
                    },
                    "src": "6063:90:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6049:104:3"
                },
                {
                  "expression": {
                    "id": 2827,
                    "name": "ret",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "6171:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2800,
                  "id": 2828,
                  "nodeType": "Return",
                  "src": "6164:10:3"
                }
              ]
            },
            "functionSelector": "3a64cfd5",
            "id": 2830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "MaxINForGuess",
            "nameLocation": "5925:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "guess",
                  "nameLocation": "5947:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "5939:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:15:3"
            },
            "returnParameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "5975:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5975:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5974:9:3"
            },
            "scope": 3568,
            "src": "5916:266:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2859,
              "nodeType": "Block",
              "src": "6238:142:3",
              "statements": [
                {
                  "assignments": [
                    2836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2836,
                      "mutability": "mutable",
                      "name": "tot",
                      "nameLocation": "6254:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2859,
                      "src": "6249:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2835,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6249:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2838,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6260:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6249:12:3"
                },
                {
                  "body": {
                    "id": 2855,
                    "nodeType": "Block",
                    "src": "6306:43:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2849,
                            "name": "tot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2836,
                            "src": "6320:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2850,
                              "name": "winnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2396,
                              "src": "6327:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2852,
                            "indexExpression": {
                              "id": 2851,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2840,
                              "src": "6336:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6327:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6320:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2854,
                        "nodeType": "ExpressionStatement",
                        "src": "6320:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2843,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2840,
                      "src": "6291:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2844,
                      "name": "betidIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2368,
                      "src": "6293:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6291:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2856,
                  "initializationExpression": {
                    "assignments": [
                      2840
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2840,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "6280:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2856,
                        "src": "6275:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2839,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6275:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2842,
                    "initialValue": {
                      "id": 2841,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "6284:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6275:14:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6302:3:3",
                      "subExpression": {
                        "id": 2846,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "6302:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2848,
                    "nodeType": "ExpressionStatement",
                    "src": "6302:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "6271:78:3"
                },
                {
                  "expression": {
                    "id": 2857,
                    "name": "tot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2836,
                    "src": "6370:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2834,
                  "id": 2858,
                  "nodeType": "Return",
                  "src": "6363:10:3"
                }
              ]
            },
            "functionSelector": "0edd2ffc",
            "id": 2860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "penalty",
            "nameLocation": "6197:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6205:2:3"
            },
            "returnParameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "num",
                  "nameLocation": "6234:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "6229:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6228:10:3"
            },
            "scope": 3568,
            "src": "6188:192:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2888,
              "nodeType": "Block",
              "src": "6493:139:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6521:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6521:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2874,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6541:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                              "typeString": "contract ForgeGuess"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                              "typeString": "contract ForgeGuess"
                            }
                          ],
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6533:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2872,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6533:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6533:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2876,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "6548:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 2877,
                          "name": "extraLINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2862,
                          "src": "6554:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6548:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2867,
                        "name": "LINK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3642,
                        "src": "6503:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$3834",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3833,
                      "src": "6503:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2880,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2882,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2360,
                        "src": "6600:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2883,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "6609:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 2884,
                          "name": "extraLINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2862,
                          "src": "6615:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6609:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2881,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "6582:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6582:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2866,
                  "id": 2887,
                  "nodeType": "Return",
                  "src": "6575:50:3"
                }
              ]
            },
            "functionSelector": "830c57dc",
            "id": 2889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlank",
            "nameLocation": "6430:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "extraLINK",
                  "nameLocation": "6447:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2889,
                  "src": "6439:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6438:19:3"
            },
            "returnParameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "6482:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2889,
                  "src": "6474:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6473:19:3"
            },
            "scope": 3568,
            "src": "6421:211:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3583
            ],
            "body": {
              "id": 3016,
              "nodeType": "Block",
              "src": "6787:823:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2898,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "6800:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2899,
                      "name": "betidIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2368,
                      "src": "6809:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6800:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2903,
                  "nodeType": "IfStatement",
                  "src": "6797:51:3",
                  "trueBody": {
                    "id": 2902,
                    "nodeType": "Block",
                    "src": "6817:31:3",
                    "statements": [
                      {
                        "functionReturnParameters": 2897,
                        "id": 2901,
                        "nodeType": "Return",
                        "src": "6831:7:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2905,
                          "name": "betid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2365,
                          "src": "6874:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 2906,
                          "name": "betidIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2368,
                          "src": "6882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6874:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742068617665206e65772062657473",
                        "id": 2908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6891:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba2bc481ef2d895ce2b0f74fefec723fdc83e2cb06e4a617d2b2118d0ade8549",
                          "typeString": "literal_string \"Must have new bets\""
                        },
                        "value": "Must have new bets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba2bc481ef2d895ce2b0f74fefec723fdc83e2cb06e4a617d2b2118d0ade8549",
                          "typeString": "literal_string \"Must have new bets\""
                        }
                      ],
                      "id": 2904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6866:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6866:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2910,
                  "nodeType": "ExpressionStatement",
                  "src": "6866:46:3"
                },
                {
                  "expression": {
                    "id": 2915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2911,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "6931:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2913,
                      "indexExpression": {
                        "id": 2912,
                        "name": "betid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "6944:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6931:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2914,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2894,
                      "src": "6953:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6931:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2916,
                  "nodeType": "ExpressionStatement",
                  "src": "6931:32:3"
                },
                {
                  "expression": {
                    "id": 2923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2917,
                        "name": "betResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "6973:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2919,
                      "indexExpression": {
                        "id": 2918,
                        "name": "betid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "6984:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6973:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2920,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "6993:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7006:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "6993:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6973:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2924,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:36:3"
                },
                {
                  "assignments": [
                    2926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2926,
                      "mutability": "mutable",
                      "name": "Guesser",
                      "nameLocation": "7027:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3016,
                      "src": "7019:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7019:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2930,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2927,
                      "name": "betee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2392,
                      "src": "7037:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2929,
                    "indexExpression": {
                      "id": 2928,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "7043:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7037:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7019:30:3"
                },
                {
                  "assignments": [
                    2932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2932,
                      "mutability": "mutable",
                      "name": "odds",
                      "nameLocation": "7067:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3016,
                      "src": "7059:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2931,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7059:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2936,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2933,
                      "name": "betOdds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2384,
                      "src": "7074:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2935,
                    "indexExpression": {
                      "id": 2934,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "7082:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7074:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7059:29:3"
                },
                {
                  "assignments": [
                    2938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2938,
                      "mutability": "mutable",
                      "name": "betAmount",
                      "nameLocation": "7106:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3016,
                      "src": "7098:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7098:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2942,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2939,
                      "name": "betAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2380,
                      "src": "7118:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2941,
                    "indexExpression": {
                      "id": 2940,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "7125:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7118:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7098:33:3"
                },
                {
                  "assignments": [
                    2944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2944,
                      "mutability": "mutable",
                      "name": "esT",
                      "nameLocation": "7149:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3016,
                      "src": "7141:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7141:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2948,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2945,
                      "name": "winnings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2396,
                      "src": "7155:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2947,
                    "indexExpression": {
                      "id": 2946,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "7164:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7155:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7141:29:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2949,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "7183:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7194:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "7183:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2952,
                      "name": "odds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2932,
                      "src": "7200:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7183:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2993,
                    "nodeType": "Block",
                    "src": "7315:135:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2974,
                              "name": "Guesser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "7350:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 2975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7359:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 2971,
                              "name": "stakedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2422,
                              "src": "7329:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2310,
                            "src": "7329:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7329:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "7329:32:3"
                      },
                      {
                        "expression": {
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2978,
                              "name": "profitzGuess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2404,
                              "src": "7375:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                                "typeString": "mapping(address => int256)"
                              }
                            },
                            "id": 2980,
                            "indexExpression": {
                              "id": 2979,
                              "name": "Guesser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "7388:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7375:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 2983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7404:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 2982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7400:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 2981,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "7400:3:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7400:6:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7375:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2986,
                        "nodeType": "ExpressionStatement",
                        "src": "7375:31:3"
                      },
                      {
                        "expression": {
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2987,
                              "name": "winnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2396,
                              "src": "7420:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2989,
                            "indexExpression": {
                              "id": 2988,
                              "name": "betid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2365,
                              "src": "7429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7420:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7438:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7420:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2992,
                        "nodeType": "ExpressionStatement",
                        "src": "7420:19:3"
                      }
                    ]
                  },
                  "id": 2994,
                  "nodeType": "IfStatement",
                  "src": "7180:270:3",
                  "trueBody": {
                    "id": 2970,
                    "nodeType": "Block",
                    "src": "7205:106:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2954,
                              "name": "profitzGuess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2404,
                              "src": "7219:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                                "typeString": "mapping(address => int256)"
                              }
                            },
                            "id": 2956,
                            "indexExpression": {
                              "id": 2955,
                              "name": "Guesser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "7232:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7219:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2959,
                                "name": "esT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2944,
                                "src": "7248:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7244:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 2957,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "7244:3:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7244:8:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7219:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2962,
                        "nodeType": "ExpressionStatement",
                        "src": "7219:33:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2966,
                              "name": "Guesser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "7287:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2967,
                              "name": "esT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "7296:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2963,
                              "name": "stakedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2422,
                              "src": "7266:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2310,
                            "src": "7266:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7266:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2969,
                        "nodeType": "ExpressionStatement",
                        "src": "7266:34:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2995,
                      "name": "unreleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2409,
                      "src": "7459:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2996,
                      "name": "betAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2938,
                      "src": "7473:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7459:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2998,
                  "nodeType": "ExpressionStatement",
                  "src": "7459:23:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3000,
                        "name": "odds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "7508:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3001,
                          "name": "randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2894,
                          "src": "7514:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7525:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "7514:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3004,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2938,
                        "src": "7530:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3005,
                        "name": "betid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "7542:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3006,
                        "name": "Guesser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2926,
                        "src": "7549:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 3007,
                          "name": "winnings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2396,
                          "src": "7558:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 3009,
                        "indexExpression": {
                          "id": 3008,
                          "name": "betid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2365,
                          "src": "7567:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7558:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3010,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "7575:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2999,
                      "name": "ShowAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "7497:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 3011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7497:89:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3012,
                  "nodeType": "EmitStatement",
                  "src": "7492:94:3"
                },
                {
                  "expression": {
                    "id": 3014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7596:7:3",
                    "subExpression": {
                      "id": 3013,
                      "name": "betid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "7596:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3015,
                  "nodeType": "ExpressionStatement",
                  "src": "7596:7:3"
                }
              ]
            },
            "documentation": {
              "id": 2890,
              "nodeType": "StructuredDocumentation",
              "src": "6638:60:3",
              "text": " Callback function used by VRF Coordinator"
            },
            "id": 3017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "6712:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6778:8:3"
            },
            "parameters": {
              "id": 2895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "6738:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "6730:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6730:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2894,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "6757:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "6749:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6749:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6729:39:3"
            },
            "returnParameters": {
              "id": 2897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6787:0:3"
            },
            "scope": 3568,
            "src": "6703:907:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3098,
              "nodeType": "Block",
              "src": "7715:511:3",
              "statements": [
                {
                  "assignments": [
                    3026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3026,
                      "mutability": "mutable",
                      "name": "st",
                      "nameLocation": "7732:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3098,
                      "src": "7725:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2356",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3024,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2356,
                          "src": "7725:6:3"
                        },
                        "referencedDeclaration": 2356,
                        "src": "7725:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2356",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3028,
                  "initialValue": {
                    "id": 3027,
                    "name": "stakedToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2422,
                    "src": "7737:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7725:23:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3030,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3021,
                          "src": "7766:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7775:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7766:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b652030",
                        "id": 3033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7778:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        },
                        "value": "Cannot stake 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        }
                      ],
                      "id": 3029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7758:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7758:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3035,
                  "nodeType": "ExpressionStatement",
                  "src": "7758:37:3"
                },
                {
                  "id": 3078,
                  "nodeType": "UncheckedBlock",
                  "src": "7806:262:3",
                  "statements": [
                    {
                      "assignments": [
                        3037
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 3037,
                          "mutability": "mutable",
                          "name": "toAdd",
                          "nameLocation": "7836:5:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 3078,
                          "src": "7831:10:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 3036,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "7831:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 3058,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3038,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3021,
                                "src": "7845:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3039,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2412,
                                "src": "7854:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7845:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3041,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7844:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3051,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7917:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                          "typeString": "contract ForgeGuess"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                          "typeString": "contract ForgeGuess"
                                        }
                                      ],
                                      "id": 3050,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7909:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3049,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7909:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7909:13:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3045,
                                            "name": "stakedToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2422,
                                            "src": "7885:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$2356",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$2356",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 3044,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7877:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3043,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7877:7:3",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3046,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7877:20:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3042,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2356,
                                      "src": "7870:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2356_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7870:28:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2356",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2301,
                                  "src": "7870:38:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7870:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 3054,
                                "name": "unreleased",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2409,
                                "src": "7926:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7870:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3056,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7869:68:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7844:93:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7831:106:3"
                    },
                    {
                      "expression": {
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 3059,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "7951:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3061,
                          "indexExpression": {
                            "id": 3060,
                            "name": "forWhom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "7961:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7951:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 3062,
                          "name": "toAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3037,
                          "src": "7973:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7951:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3064,
                      "nodeType": "ExpressionStatement",
                      "src": "7951:27:3"
                    },
                    {
                      "expression": {
                        "id": 3067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 3065,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "7992:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 3066,
                          "name": "toAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3037,
                          "src": "8007:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7992:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3068,
                      "nodeType": "ExpressionStatement",
                      "src": "7992:20:3"
                    },
                    {
                      "expression": {
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 3069,
                            "name": "profitz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "8026:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 3071,
                          "indexExpression": {
                            "id": 3070,
                            "name": "forWhom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "8034:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8026:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 3074,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3021,
                              "src": "8050:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8046:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 3072,
                              "name": "int",
                              "nodeType": "ElementaryTypeName",
                              "src": "8046:3:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8046:11:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8026:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 3077,
                      "nodeType": "ExpressionStatement",
                      "src": "8026:31:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3082,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8110:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8110:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3086,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8130:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              ],
                              "id": 3085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8122:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8122:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3088,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3021,
                            "src": "8137:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3080,
                            "name": "st",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3026,
                            "src": "8094:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2339,
                          "src": "8094:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8094:50:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3090,
                        "name": "_transferErrorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2475,
                        "src": "8146:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8086:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8086:82:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3092,
                  "nodeType": "ExpressionStatement",
                  "src": "8086:82:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3094,
                        "name": "forWhom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "8203:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3095,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3021,
                        "src": "8212:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3093,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2428,
                      "src": "8196:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8196:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3097,
                  "nodeType": "EmitStatement",
                  "src": "8191:28:3"
                }
              ]
            },
            "functionSelector": "2ee40908",
            "id": 3099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nameLocation": "7658:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "forWhom",
                  "nameLocation": "7675:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3099,
                  "src": "7667:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7667:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3021,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7692:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3099,
                  "src": "7684:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7684:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7666:33:3"
            },
            "returnParameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7715:0:3"
            },
            "scope": 3568,
            "src": "7649:577:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "8305:278:3",
              "statements": [
                {
                  "assignments": [
                    3109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3109,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "8320:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3156,
                      "src": "8315:6:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3108,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8315:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3111,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8324:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8315:10:3"
                },
                {
                  "body": {
                    "id": 3150,
                    "nodeType": "Block",
                    "src": "8360:194:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3938",
                                  "id": 3123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8391:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_98_by_1",
                                    "typeString": "int_const 98"
                                  },
                                  "value": "98"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3124,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3109,
                                  "src": "8394:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8391:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3122,
                              "name": "MaxINForGuess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2830,
                              "src": "8377:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 3126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8377:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3127,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3103,
                            "src": "8399:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8377:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3138,
                        "nodeType": "IfStatement",
                        "src": "8374:87:3",
                        "trueBody": {
                          "id": 3137,
                          "nodeType": "Block",
                          "src": "8403:58:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3129,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3103,
                                  "src": "8421:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3939",
                                        "id": 3131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8441:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_99_by_1",
                                          "typeString": "int_const 99"
                                        },
                                        "value": "99"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 3132,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3109,
                                        "src": "8444:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8441:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3130,
                                    "name": "MaxINForGuess",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2830,
                                    "src": "8427:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 3134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8427:19:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8421:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3136,
                              "nodeType": "ExpressionStatement",
                              "src": "8421:25:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 3140,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3103,
                                "src": "8487:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3939",
                                  "id": 3141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8492:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_99_by_1",
                                    "typeString": "int_const 99"
                                  },
                                  "value": "99"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3142,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3109,
                                  "src": "8497:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8492:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3139,
                              "name": "estOUTPUT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3327,
                              "src": "8477:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 3144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8477:22:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3145,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3103,
                            "src": "8502:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8477:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3149,
                        "nodeType": "IfStatement",
                        "src": "8474:70:3",
                        "trueBody": {
                          "id": 3148,
                          "nodeType": "Block",
                          "src": "8506:38:3",
                          "statements": [
                            {
                              "id": 3147,
                              "nodeType": "Break",
                              "src": "8524:5:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3116,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3109,
                      "src": "8350:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3930",
                      "id": 3117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8352:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_90_by_1",
                        "typeString": "int_const 90"
                      },
                      "value": "90"
                    },
                    "src": "8350:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3151,
                  "initializationExpression": {
                    "expression": {
                      "id": 3114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3112,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3109,
                        "src": "8344:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 3113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8347:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8344:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3115,
                    "nodeType": "ExpressionStatement",
                    "src": "8344:4:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8356:3:3",
                      "subExpression": {
                        "id": 3119,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3109,
                        "src": "8356:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3121,
                    "nodeType": "ExpressionStatement",
                    "src": "8356:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "8340:214:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3939",
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8570:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_99_by_1",
                        "typeString": "int_const 99"
                      },
                      "value": "99"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3153,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3109,
                      "src": "8575:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8570:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3107,
                  "id": 3155,
                  "nodeType": "Return",
                  "src": "8563:13:3"
                }
              ]
            },
            "functionSelector": "14e5d13c",
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxGuessPerInput",
            "nameLocation": "8241:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3101,
                  "mutability": "mutable",
                  "name": "guess",
                  "nameLocation": "8263:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "8258:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3100,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "8275:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "8270:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8270:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8257:22:3"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "8300:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8300:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8299:6:3"
            },
            "scope": 3568,
            "src": "8232:351:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3326,
              "nodeType": "Block",
              "src": "8722:965:3",
              "statements": [
                {
                  "assignments": [
                    3167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3167,
                      "mutability": "mutable",
                      "name": "ratioz",
                      "nameLocation": "8740:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3326,
                      "src": "8732:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8732:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3177,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "8797:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                        "typeString": "contract ForgeGuess"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                        "typeString": "contract ForgeGuess"
                                      }
                                    ],
                                    "id": 3176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8789:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3175,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8789:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8789:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 3171,
                                          "name": "stakedToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2422,
                                          "src": "8765:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$2356",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$2356",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 3170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8757:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3169,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8757:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8757:20:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3168,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2356,
                                    "src": "8750:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$2356_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 3173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8750:28:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$2356",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 3174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2301,
                                "src": "8750:38:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8750:53:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3180,
                              "name": "unreleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "8806:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8750:66:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3182,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8749:68:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3530",
                        "id": 3183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8820:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "src": "8749:73:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3185,
                            "name": "betAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3159,
                            "src": "8826:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3186,
                            "name": "odds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3161,
                            "src": "8838:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8826:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3188,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8825:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8749:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8732:111:3"
                },
                {
                  "assignments": [
                    3192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3192,
                      "mutability": "mutable",
                      "name": "estOutput",
                      "nameLocation": "8861:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3326,
                      "src": "8853:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8853:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3194,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8873:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8853:21:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3195,
                      "name": "ratioz",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3167,
                      "src": "8891:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3330",
                      "id": 3196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8900:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "8891:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3213,
                        "name": "ratioz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "8987:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3530",
                        "id": 3214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8996:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "src": "8987:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3231,
                          "name": "ratioz",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3167,
                          "src": "9101:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9110:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "9101:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3249,
                            "name": "ratioz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3167,
                            "src": "9216:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 3250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9225:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "9216:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3267,
                              "name": "ratioz",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3167,
                              "src": "9327:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "343030",
                              "id": 3268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9336:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_400_by_1",
                                "typeString": "int_const 400"
                              },
                              "value": "400"
                            },
                            "src": "9327:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3285,
                                "name": "ratioz",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3167,
                                "src": "9427:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 3286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9436:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "9427:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 3317,
                              "nodeType": "Block",
                              "src": "9542:94:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 3315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 3303,
                                      "name": "estOutput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3192,
                                      "src": "9573:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3314,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3308,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_9900_by_1",
                                                "typeString": "int_const 9900"
                                              },
                                              "id": 3306,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "313030",
                                                "id": 3304,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9586:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "3939",
                                                "id": 3305,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9592:2:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_99_by_1",
                                                  "typeString": "int_const 99"
                                                },
                                                "value": "99"
                                              },
                                              "src": "9586:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_9900_by_1",
                                                "typeString": "int_const 9900"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 3307,
                                              "name": "betAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3159,
                                              "src": "9597:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "9586:20:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3309,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9585:22:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3312,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3310,
                                              "name": "odds",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3161,
                                              "src": "9609:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "313030",
                                              "id": 3311,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9616:3:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            },
                                            "src": "9609:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3313,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9608:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9585:35:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9573:47:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3316,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9573:47:3"
                                }
                              ]
                            },
                            "id": 3318,
                            "nodeType": "IfStatement",
                            "src": "9423:213:3",
                            "trueBody": {
                              "id": 3302,
                              "nodeType": "Block",
                              "src": "9441:96:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 3300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 3288,
                                      "name": "estOutput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3192,
                                      "src": "9472:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3293,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_99500_by_1",
                                                "typeString": "int_const 99500"
                                              },
                                              "id": 3291,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "313030",
                                                "id": 3289,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9485:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "393935",
                                                "id": 3290,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9491:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_995_by_1",
                                                  "typeString": "int_const 995"
                                                },
                                                "value": "995"
                                              },
                                              "src": "9485:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_99500_by_1",
                                                "typeString": "int_const 99500"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 3292,
                                              "name": "betAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3159,
                                              "src": "9497:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "9485:21:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3294,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9484:23:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3297,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3295,
                                              "name": "odds",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3161,
                                              "src": "9509:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "31303030",
                                              "id": 3296,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9516:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000_by_1",
                                                "typeString": "int_const 1000"
                                              },
                                              "value": "1000"
                                            },
                                            "src": "9509:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3298,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9508:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9484:37:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9472:49:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3301,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9472:49:3"
                                }
                              ]
                            }
                          },
                          "id": 3319,
                          "nodeType": "IfStatement",
                          "src": "9324:312:3",
                          "trueBody": {
                            "id": 3284,
                            "nodeType": "Block",
                            "src": "9340:78:3",
                            "statements": [
                              {
                                "expression": {
                                  "id": 3282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 3270,
                                    "name": "estOutput",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3192,
                                    "src": "9355:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3275,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_9900_by_1",
                                              "typeString": "int_const 9900"
                                            },
                                            "id": 3273,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "313030",
                                              "id": 3271,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9368:3:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "3939",
                                              "id": 3272,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9374:2:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_99_by_1",
                                                "typeString": "int_const 99"
                                              },
                                              "value": "99"
                                            },
                                            "src": "9368:8:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_9900_by_1",
                                              "typeString": "int_const 9900"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 3274,
                                            "name": "betAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3159,
                                            "src": "9379:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9368:20:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 3276,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9367:22:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3279,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 3277,
                                            "name": "odds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3161,
                                            "src": "9391:4:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "313030",
                                            "id": 3278,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9398:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "src": "9391:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 3280,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9390:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9367:35:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9355:47:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3283,
                                "nodeType": "ExpressionStatement",
                                "src": "9355:47:3"
                              }
                            ]
                          }
                        },
                        "id": 3320,
                        "nodeType": "IfStatement",
                        "src": "9213:423:3",
                        "trueBody": {
                          "id": 3266,
                          "nodeType": "Block",
                          "src": "9229:90:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3252,
                                  "name": "estOutput",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3192,
                                  "src": "9244:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3257,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_9800_by_1",
                                            "typeString": "int_const 9800"
                                          },
                                          "id": 3255,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 3253,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9257:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "3938",
                                            "id": 3254,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9263:2:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_98_by_1",
                                              "typeString": "int_const 98"
                                            },
                                            "value": "98"
                                          },
                                          "src": "9257:8:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_9800_by_1",
                                            "typeString": "int_const 9800"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 3256,
                                          "name": "betAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3159,
                                          "src": "9268:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9257:20:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3258,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9256:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3261,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 3259,
                                          "name": "odds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3161,
                                          "src": "9280:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "313030",
                                          "id": 3260,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9287:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "9280:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3262,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9279:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9256:35:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9244:47:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3265,
                              "nodeType": "ExpressionStatement",
                              "src": "9244:47:3"
                            }
                          ]
                        }
                      },
                      "id": 3321,
                      "nodeType": "IfStatement",
                      "src": "9098:538:3",
                      "trueBody": {
                        "id": 3248,
                        "nodeType": "Block",
                        "src": "9114:94:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 3246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 3234,
                                "name": "estOutput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3192,
                                "src": "9129:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3239,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_9600_by_1",
                                          "typeString": "int_const 9600"
                                        },
                                        "id": 3237,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "313030",
                                          "id": 3235,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9142:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3936",
                                          "id": 3236,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9148:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_96_by_1",
                                            "typeString": "int_const 96"
                                          },
                                          "value": "96"
                                        },
                                        "src": "9142:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_9600_by_1",
                                          "typeString": "int_const 9600"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 3238,
                                        "name": "betAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3159,
                                        "src": "9153:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9142:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3240,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9141:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3243,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3241,
                                        "name": "odds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3161,
                                        "src": "9165:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030",
                                        "id": 3242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9172:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "src": "9165:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3244,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9164:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9141:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9129:47:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3247,
                            "nodeType": "ExpressionStatement",
                            "src": "9129:47:3"
                          }
                        ]
                      }
                    },
                    "id": 3322,
                    "nodeType": "IfStatement",
                    "src": "8984:652:3",
                    "trueBody": {
                      "id": 3230,
                      "nodeType": "Block",
                      "src": "8999:94:3",
                      "statements": [
                        {
                          "expression": {
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 3216,
                              "name": "estOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3192,
                              "src": "9014:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_9300_by_1",
                                        "typeString": "int_const 9300"
                                      },
                                      "id": 3219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "313030",
                                        "id": 3217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9027:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "3933",
                                        "id": 3218,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9033:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_93_by_1",
                                          "typeString": "int_const 93"
                                        },
                                        "value": "93"
                                      },
                                      "src": "9027:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_9300_by_1",
                                        "typeString": "int_const 9300"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 3220,
                                      "name": "betAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3159,
                                      "src": "9038:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9027:20:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3222,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9026:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3223,
                                      "name": "odds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3161,
                                      "src": "9050:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "313030",
                                      "id": 3224,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9057:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "src": "9050:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3226,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9049:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9026:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9014:47:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3229,
                          "nodeType": "ExpressionStatement",
                          "src": "9014:47:3"
                        }
                      ]
                    }
                  },
                  "id": 3323,
                  "nodeType": "IfStatement",
                  "src": "8888:748:3",
                  "trueBody": {
                    "id": 3212,
                    "nodeType": "Block",
                    "src": "8903:76:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3198,
                            "name": "estOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3192,
                            "src": "8918:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_9000_by_1",
                                      "typeString": "int_const 9000"
                                    },
                                    "id": 3201,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "313030",
                                      "id": 3199,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8931:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3930",
                                      "id": 3200,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8937:2:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_90_by_1",
                                        "typeString": "int_const 90"
                                      },
                                      "value": "90"
                                    },
                                    "src": "8931:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9000_by_1",
                                      "typeString": "int_const 9000"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 3202,
                                    "name": "betAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3159,
                                    "src": "8942:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8931:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3204,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8930:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3205,
                                    "name": "odds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3161,
                                    "src": "8954:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 3206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8959:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "8954:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3208,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8953:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8930:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8918:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3211,
                        "nodeType": "ExpressionStatement",
                        "src": "8918:45:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3324,
                    "name": "estOutput",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3192,
                    "src": "9669:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3165,
                  "id": 3325,
                  "nodeType": "Return",
                  "src": "9662:16:3"
                }
              ]
            },
            "functionSelector": "6864af0c",
            "id": 3327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estOUTPUT",
            "nameLocation": "8650:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "betAmount",
                  "nameLocation": "8668:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3327,
                  "src": "8660:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8660:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "odds",
                  "nameLocation": "8687:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3327,
                  "src": "8679:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8679:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8659:33:3"
            },
            "returnParameters": {
              "id": 3165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3327,
                  "src": "8714:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8714:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8713:9:3"
            },
            "scope": 3568,
            "src": "8641:1046:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3347,
              "nodeType": "Block",
              "src": "9791:77:3",
              "statements": [
                {
                  "assignments": [
                    3335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3335,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "9809:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3347,
                      "src": "9801:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9801:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3344,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "393735",
                            "id": 3336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9814:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_975_by_1",
                              "typeString": "int_const 975"
                            },
                            "value": "975"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 3338,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3329,
                                "src": "9825:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3337,
                              "name": "uOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3433,
                              "src": "9820:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 3339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9820:15:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9814:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 3341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9838:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "9814:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3343,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9813:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9801:42:3"
                },
                {
                  "expression": {
                    "id": 3345,
                    "name": "v",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3335,
                    "src": "9860:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3333,
                  "id": 3346,
                  "nodeType": "Return",
                  "src": "9853:8:3"
                }
              ]
            },
            "functionSelector": "afcf89aa",
            "id": 3348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withEstimator",
            "nameLocation": "9728:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3329,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "9750:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3348,
                  "src": "9742:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9742:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9741:19:3"
            },
            "returnParameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3348,
                  "src": "9782:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9782:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9781:9:3"
            },
            "scope": 3568,
            "src": "9719:149:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3370,
              "nodeType": "Block",
              "src": "9973:86:3",
              "statements": [
                {
                  "assignments": [
                    3356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3356,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "9991:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3370,
                      "src": "9983:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9983:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3367,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "393735",
                            "id": 3357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9996:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_975_by_1",
                              "typeString": "int_const 975"
                            },
                            "value": "975"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3360,
                                    "name": "forWhom",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3350,
                                    "src": "10017:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3359,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2472,
                                  "src": "10007:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 3361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10007:18:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3358,
                              "name": "uOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3433,
                              "src": "10002:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 3362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10002:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9996:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 3364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10029:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "9996:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3366,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9995:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9983:51:3"
                },
                {
                  "expression": {
                    "id": 3368,
                    "name": "v",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3356,
                    "src": "10051:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3354,
                  "id": 3369,
                  "nodeType": "Return",
                  "src": "10044:8:3"
                }
              ]
            },
            "functionSelector": "7c081f99",
            "id": 3371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentForge",
            "nameLocation": "9913:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "forWhom",
                  "nameLocation": "9934:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3371,
                  "src": "9926:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9926:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9925:17:3"
            },
            "returnParameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3371,
                  "src": "9964:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9964:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9963:9:3"
            },
            "scope": 3568,
            "src": "9904:155:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3384,
              "nodeType": "Block",
              "src": "10188:80:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3378,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10223:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10223:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3377,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2472,
                          "src": "10213:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 3380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10213:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3381,
                        "name": "maxLoss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3373,
                        "src": "10236:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3376,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3529,
                      "src": "10204:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10204:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3383,
                  "nodeType": "ExpressionStatement",
                  "src": "10204:40:3"
                }
              ]
            },
            "functionSelector": "4ea97c07",
            "id": 3385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "perfectWithdraw",
            "nameLocation": "10151:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3373,
                  "mutability": "mutable",
                  "name": "maxLoss",
                  "nameLocation": "10172:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3385,
                  "src": "10167:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10167:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10166:14:3"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10188:0:3"
            },
            "scope": 3568,
            "src": "10142:126:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3432,
              "nodeType": "Block",
              "src": "10333:299:3",
              "statements": [
                {
                  "assignments": [
                    3393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3393,
                      "mutability": "mutable",
                      "name": "stakeMinusUnreleased",
                      "nameLocation": "10356:20:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3432,
                      "src": "10348:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10348:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3409,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3403,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10427:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                    "typeString": "contract ForgeGuess"
                                  }
                                ],
                                "id": 3402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10419:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3401,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10419:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10419:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3397,
                                      "name": "stakedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2422,
                                      "src": "10395:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$2356",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$2356",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 3396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10387:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3395,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10387:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10387:20:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3394,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2356,
                                "src": "10380:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2356_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10380:28:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "10380:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10380:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 3406,
                          "name": "unreleased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2409,
                          "src": "10436:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10380:66:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3408,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10379:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10348:99:3"
                },
                {
                  "assignments": [
                    3411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3411,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "10474:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3432,
                      "src": "10466:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3410,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10466:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3417,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3412,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3387,
                        "src": "10480:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 3413,
                        "name": "stakeMinusUnreleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3393,
                        "src": "10489:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10480:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 3415,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "10512:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10480:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10466:57:3"
                },
                {
                  "expression": {
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3418,
                      "name": "tot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3390,
                      "src": "10553:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3419,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3411,
                        "src": "10559:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3420,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3411,
                                "src": "10568:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3421,
                                  "name": "penalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2860,
                                  "src": "10574:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10574:9:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10568:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3424,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10566:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3425,
                          "name": "stakeMinusUnreleased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3393,
                          "src": "10588:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10566:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10559:49:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10553:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3429,
                  "nodeType": "ExpressionStatement",
                  "src": "10553:55:3"
                },
                {
                  "expression": {
                    "id": 3430,
                    "name": "tot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3390,
                    "src": "10622:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3391,
                  "id": 3431,
                  "nodeType": "Return",
                  "src": "10615:10:3"
                }
              ]
            },
            "functionSelector": "5da9eabc",
            "id": 3433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uOut",
            "nameLocation": "10283:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3387,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10293:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "10288:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3386,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10288:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10287:13:3"
            },
            "returnParameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "tot",
                  "nameLocation": "10329:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "10321:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10321:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10320:13:3"
            },
            "scope": 3568,
            "src": "10274:358:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3528,
              "nodeType": "Block",
              "src": "10844:604:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3440,
                      "name": "maxLoss",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3437,
                      "src": "10859:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3441,
                        "name": "penalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2860,
                        "src": "10867:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10867:9:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10859:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3446,
                  "nodeType": "IfStatement",
                  "src": "10856:53:3",
                  "trueBody": {
                    "id": 3445,
                    "nodeType": "Block",
                    "src": "10877:32:3",
                    "statements": [
                      {
                        "functionReturnParameters": 3439,
                        "id": 3444,
                        "nodeType": "Return",
                        "src": "10890:7:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3448,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "10935:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3449,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "10945:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3452,
                          "indexExpression": {
                            "expression": {
                              "id": 3450,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10955:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10955:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10945:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10935:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261773a2062616c616e6365206973206c6f776572",
                        "id": 3454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10968:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61a50b027a87ba51d1aa02918bce161d9bc3da6949d5298d8be3a01e58acd7d2",
                          "typeString": "literal_string \"withdraw: balance is lower\""
                        },
                        "value": "withdraw: balance is lower"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61a50b027a87ba51d1aa02918bce161d9bc3da6949d5298d8be3a01e58acd7d2",
                          "typeString": "literal_string \"withdraw: balance is lower\""
                        }
                      ],
                      "id": 3447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10927:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10927:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3456,
                  "nodeType": "ExpressionStatement",
                  "src": "10927:70:3"
                },
                {
                  "assignments": [
                    3458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3458,
                      "mutability": "mutable",
                      "name": "OutEst",
                      "nameLocation": "11021:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3528,
                      "src": "11016:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3457,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11016:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3460,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "11035:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3459,
                      "name": "uOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "11030:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 3461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11030:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11016:26:3"
                },
                {
                  "id": 3490,
                  "nodeType": "UncheckedBlock",
                  "src": "11053:175:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 3468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 3463,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "11077:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3466,
                          "indexExpression": {
                            "expression": {
                              "id": 3464,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11087:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11087:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11077:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 3467,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "11102:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11077:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3469,
                      "nodeType": "ExpressionStatement",
                      "src": "11077:31:3"
                    },
                    {
                      "expression": {
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 3470,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "11122:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3471,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "11136:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3472,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3435,
                            "src": "11150:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11136:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11122:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3475,
                      "nodeType": "ExpressionStatement",
                      "src": "11122:34:3"
                    },
                    {
                      "expression": {
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 3476,
                            "name": "profitz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "11170:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                              "typeString": "mapping(address => int256)"
                            }
                          },
                          "id": 3479,
                          "indexExpression": {
                            "expression": {
                              "id": 3477,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11178:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11178:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11170:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3482,
                                  "name": "OutEst",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3458,
                                  "src": "11197:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "393735",
                                  "id": 3483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11206:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_975_by_1",
                                    "typeString": "int_const 975"
                                  },
                                  "value": "975"
                                },
                                "src": "11197:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 3485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11212:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "11197:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11193:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 3480,
                              "name": "int",
                              "nodeType": "ElementaryTypeName",
                              "src": "11193:3:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11193:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "11170:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "id": 3489,
                      "nodeType": "ExpressionStatement",
                      "src": "11170:47:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3496,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11283:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeGuess_$3568",
                                  "typeString": "contract ForgeGuess"
                                }
                              ],
                              "id": 3495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11275:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3494,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11275:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11275:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3498,
                                    "name": "OutEst",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3458,
                                    "src": "11291:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3235",
                                    "id": 3499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11300:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_25_by_1",
                                      "typeString": "int_const 25"
                                    },
                                    "value": "25"
                                  },
                                  "src": "11291:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 3501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11305:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "11291:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3503,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11290:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3492,
                            "name": "stakedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "11254:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2310,
                          "src": "11254:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11254:57:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11246:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11246:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "11246:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3510,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11351:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11351:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3514,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3512,
                                        "name": "OutEst",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3458,
                                        "src": "11365:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "393735",
                                        "id": 3513,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11374:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_975_by_1",
                                          "typeString": "int_const 975"
                                        },
                                        "value": "975"
                                      },
                                      "src": "11365:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3515,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11364:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 3516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11381:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "11364:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3518,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11363:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3508,
                            "name": "stakedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "11330:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2310,
                          "src": "11330:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11330:57:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11322:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11322:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3521,
                  "nodeType": "ExpressionStatement",
                  "src": "11322:66:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11422:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11422:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3525,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "11434:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3522,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2434,
                      "src": "11412:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3527,
                  "nodeType": "EmitStatement",
                  "src": "11407:34:3"
                }
              ]
            },
            "functionSelector": "441a3e70",
            "id": 3529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10787:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3435,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10804:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3529,
                  "src": "10796:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10796:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "maxLoss",
                  "nameLocation": "10820:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3529,
                  "src": "10812:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10812:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10795:33:3"
            },
            "returnParameters": {
              "id": 3439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10844:0:3"
            },
            "scope": 3568,
            "src": "10778:670:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3557,
              "nodeType": "Block",
              "src": "11513:149:3",
              "statements": [
                {
                  "assignments": [
                    3537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3537,
                      "mutability": "mutable",
                      "name": "withdrawable",
                      "nameLocation": "11531:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3557,
                      "src": "11523:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3536,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11523:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3543,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3540,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3531,
                            "src": "11570:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3539,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2472,
                          "src": "11560:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11560:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3538,
                      "name": "withEstimator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3348,
                      "src": "11546:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 3542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11546:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11523:53:3"
                },
                {
                  "assignments": [
                    3545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3545,
                      "mutability": "mutable",
                      "name": "profit",
                      "nameLocation": "11590:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3557,
                      "src": "11586:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 3544,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "11586:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3554,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 3553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3546,
                        "name": "profitz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2400,
                        "src": "11599:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
                          "typeString": "mapping(address => int256)"
                        }
                      },
                      "id": 3548,
                      "indexExpression": {
                        "id": 3547,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "11607:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11599:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3551,
                          "name": "withdrawable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3537,
                          "src": "11619:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11615:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 3549,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "11615:3:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11615:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11599:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11586:46:3"
                },
                {
                  "expression": {
                    "id": 3555,
                    "name": "profit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3545,
                    "src": "11649:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 3535,
                  "id": 3556,
                  "nodeType": "Return",
                  "src": "11642:13:3"
                }
              ]
            },
            "functionSelector": "05be95b4",
            "id": 3558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Profit",
            "nameLocation": "11467:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "11482:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3558,
                  "src": "11474:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11474:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11473:14:3"
            },
            "returnParameters": {
              "id": 3535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3558,
                  "src": "11508:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "11508:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11507:5:3"
            },
            "scope": 3568,
            "src": "11458:204:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3566,
              "nodeType": "Block",
              "src": "11717:36:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3563,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "11734:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "src": "11734:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3562,
                  "id": 3565,
                  "nodeType": "Return",
                  "src": "11727:19:3"
                }
              ]
            },
            "functionSelector": "57e871e7",
            "id": 3567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blockNumber",
            "nameLocation": "11677:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11688:2:3"
            },
            "returnParameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3567,
                  "src": "11711:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11711:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11710:6:3"
            },
            "scope": 3568,
            "src": "11668:85:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3569,
        "src": "1493:10262:3",
        "usedErrors": []
      }
    ],
    "src": "548:12323:3"
  },
  "bytecode": "60c0604052600060038190556004819055600f556001601055601280546001600160a01b03191673f44fb43066f7ecc91058e3a614fb8a15a273527617905534801561004a57600080fd5b50733d2341adb2d31f1c5530cdc622016af293177ae060a05273b0897686c545045afc77cf20ec7a532e3120e0f16080527ff86195cf7690c55907b2b611ebb7343a6f649bff128701cc542f0569e2c549da600155655af3107a400060025560805160a051611d676100ff600039600081816115330152611619015260008181610d7501528181610dfd01528181610eb101528181610f8c01528181610ffb0152818161146f01526115ea0152611d676000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80635d57ab281161010f578063afcf89aa116100a2578063e6d8b91d11610071578063e6d8b91d14610458578063edcbbef814610478578063f03d667214610498578063f970dd02146104a157600080fd5b8063afcf89aa146103e9578063b5ce35a9146103fc578063cc7a262e14610404578063d63bc5991461042f57600080fd5b80637c081f99116100de5780637c081f9914610390578063830c57dc146103a357806394985ddd146103b6578063984d63cf146103c957600080fd5b80635d57ab28146103215780635da9eabc146103415780636864af0c1461035457806370a082311461036757600080fd5b80633a64cfd5116101875780634ca7d044116101565780634ca7d044146102d55780634ea97c07146102e8578063530d3bc8146102fb57806357e871e71461031b57600080fd5b80633a64cfd51461028657806342619f6614610299578063441a3e70146102a257806345b90d70146102b557600080fd5b806314e5d13c116101c357806314e5d13c1461024c57806316462ad31461025f57806318160ddd146102685780632ee409081461027157600080fd5b806305be95b4146101f5578063068c0c631461021b5780630d82675e1461023b5780630edd2ffc14610244575b600080fd5b610208610203366004611a62565b6104c1565b6040519081526020015b60405180910390f35b610208610229366004611a62565b600c6020526000908152604090205481565b61020860045481565b610208610516565b61020861025a366004611a7d565b61055c565b61020860035481565b61020860105481565b61028461027f366004611a9f565b6105c7565b005b610208610294366004611ac9565b6107e4565b610208600e5481565b6102846102b0366004611a7d565b610882565b6102086102c3366004611ac9565b60066020526000908152604090205481565b6102086102e3366004611ae2565b610ab9565b6102846102f6366004611ac9565b6111b6565b610208610309366004611ac9565b60056020526000908152604090205481565b43610208565b61020861032f366004611ac9565b600b6020526000908152604090205481565b61020861034f366004611ac9565b6111d3565b610208610362366004611a7d565b611299565b610208610375366004611a62565b6001600160a01b031660009081526011602052604090205490565b61020861039e366004611a62565b611437565b6102086103b1366004611ac9565b61146b565b6102846103c4366004611a7d565b611528565b6102086103d7366004611ac9565b60086020526000908152604090205481565b6102086103f7366004611ac9565b6115ae565b6102086115bd565b601254610417906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b61041761043d366004611ac9565b600a602052600090815260409020546001600160a01b031681565b610208610466366004611a62565b600d6020526000908152604090205481565b610208610486366004611ac9565b60076020526000908152604090205481565b610208600f5481565b6102086104af366004611ac9565b60096020526000908152604090205481565b6000806104e66103f7846001600160a01b031660009081526011602052604090205490565b6001600160a01b0384166000908152600c60205260408120549192509061050e908390611b24565b949350505050565b60035460009081905b600454811015610556576000818152600b60205260409020546105429083611b65565b91508061054e81611b7d565b91505061051f565b50919050565b6000805b605a8110156105bc5782610578610294836062611b98565b101561058f5761058c610294826063611b98565b92505b8261059f81610362846063611b98565b11156105aa576105bc565b806105b481611b7d565b915050610560565b61050e816063611b98565b6012546001600160a01b0316816106165760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064015b60405180910390fd5b600f546012546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190611baf565b0360105484028161069a5761069a611bc8565b6001600160a01b03808716600090815260116020908152604080832080549690950495860190945560108054909501909455600c9093529181902080548690039055516323b872dd60e01b815290831691506323b872dd9061070490339030908790600401611bde565b6020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190611c02565b6040518060400160405280601c81526020017f7374616b656420746f6b656e207472616e73666572206661696c6564000000008152509061079b5760405162461bcd60e51b815260040161060d9190611c71565b50826001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516107d791815260200190565b60405180910390a2505050565b600f546012546040516370a0823160e01b8152306004820152600092839261041a928692916001600160a01b0316906370a0823190602401602060405180830381865afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611baf565b6108679190611b98565b6108719190611c84565b61087b9190611ca3565b9392505050565b61088a610516565b811015610895575050565b336000908152601160205260409020548211156108f45760405162461bcd60e51b815260206004820152601a60248201527f77697468647261773a2062616c616e6365206973206c6f776572000000000000604482015260640161060d565b60006108ff836111d3565b3360009081526011602052604090208054859003905560108054859003905590506103e86103cf8202336000908152600c6020526040902080549290910490910190556012546001600160a01b031663a9059cbb306103e8610962856019611c84565b61096c9190611ca3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611c02565b6109e457600080fd5b6012546001600160a01b031663a9059cbb336103e8610a05856103cf611c84565b610a0f9190611ca3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611c02565b610a8757600080fd5b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020016107d7565b600080610ac68486611299565b9050808410610b305760405162461bcd60e51b815260206004820152603060248201527f596f752077696c6c206c6f6f7365206d6f6e657920657665727974696d65206160448201526f742074686573652073657474696e677360801b606482015260840161060d565b670de0b6b3a7640000841015610b7a5760405162461bcd60e51b815260206004820152600f60248201526e4d696e20626574203120466f72676560881b604482015260640161060d565b6001831015610bd95760405162461bcd60e51b815260206004820152602560248201527f4d7573742073656e64206174206c6561737420746865206d696e696d756d20306044820152642e3030303160d81b606482015260840161060d565b83610be3866107e4565b1015610c495760405162461bcd60e51b815260206004820152602f60248201527f42616e6b726f6c6c20746f6f206c6f7720666f722074686973206265742c205060448201526e1b19585cd9481b1bddd95c8818995d608a1b606482015260840161060d565b606285108015610c595750600085115b610ca55760405162461bcd60e51b815260206004820152601760248201527f4d757374206775657373206265747765656e20312d3938000000000000000000604482015260640161060d565b6012546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610cd990339030908990600401611bde565b6020604051808303816000875af1158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190611c02565b610d5d5760405162461bcd60e51b81526020600482015260126024820152715472616e73666572206d75737420776f726b60701b604482015260640161060d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611baf565b90506001841115610e9f576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3330610e2f600189611b98565b600254610e3c9190611c84565b6040518463ffffffff1660e01b8152600401610e5a93929190611bde565b6020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d9190611c02565b505b678ac7230489e80000851015610f55577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd333087600254610eee9190611c84565b6040518463ffffffff1660e01b8152600401610f0c93929190611bde565b6020604051808303816000875af1158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611c02565b5061109b565b6802b5e3af16b1880000851015610fce57620186a06004541180610f855750600254610f82906015611c84565b81105b15610fc9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd333087600254610eee9190611c84565b61109b565b605d8611610fe457600254610f82906015611c84565b600254610ff2906015611c84565b81101561109b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3330876002546110389190611c84565b6040518463ffffffff1660e01b815260040161105693929190611bde565b6020604051808303816000875af1158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611c02565b505b6004805460009081526008602090815260408083208a9055835483526007825280832089905583548352600a825280832080546001600160a01b0319163390811790915593548352600b8252808320869055928252600d90529081208054879290611107908490611cb7565b909155505060048054600090815260066020908152604091829020439055915481518981529283018890529082015233907fea3a2986b784b5ff3af1de7908eb0898970dec44692bec64512b80606842eaf69060600160405180910390a26004805490600061117583611b7d565b919050555084600f600082825461118c9190611b65565b925050819055506111ac600154856002546111a79190611c84565b6115e6565b9695505050505050565b336000908152601160205260409020546111d09082610882565b50565b600f546012546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112499190611baf565b6112539190611b98565b9050600060105482856112669190611c84565b6112709190611ca3565b90508161127b610516565b6112859083611c84565b61128f9190611ca3565b61050e9082611b98565b6000806112a68385611c84565b600f546012546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190611baf565b61131f9190611b98565b61132a906032611c84565b6113349190611ca3565b90506000601e8210156113695761134c846064611c84565b61135886612328611c84565b6113629190611ca3565b905061050e565b60328210156113895761137d846064611c84565b61135886612454611c84565b60648210156113a95761139d846064611c84565b61135886612580611c84565b60c88210156113c9576113bd846064611c84565b61135886612648611c84565b6101908210156113ea576113de846064611c84565b611358866126ac611c84565b6103e882101561140d57611400846103e8611c84565b61135886620184ac611c84565b611418846064611c84565b611424866126ac611c84565b61142e9190611ca3565b95945050505050565b6000806103e861145f61034f856001600160a01b031660009081526011602052604090205490565b610871906103cf611c84565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3330856002546114ac9190611c84565b6040518463ffffffff1660e01b81526004016114ca93929190611bde565b6020604051808303816000875af11580156114e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150d9190611c02565b50611522600154836002546111a79190611c84565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115a05760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161060d565b6115aa828261175d565b5050565b6000806103e861145f846111d3565b600060045460035414156115d057504390565b5060035460009081526006602052604090205490565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611656929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161168393929190611cf6565b6020604051808303816000875af11580156116a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c69190611c02565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611720906001611b65565b600085815260208181526040918290209290925580518083018790528082018490528151808203830181526060909101909152805191012061050e565b6004546003541061176c575050565b600454600354106117b45760405162461bcd60e51b81526020600482015260126024820152714d7573742068617665206e6577206265747360701b604482015260640161060d565b60035460009081526009602052604090208190556117d3606482611d1d565b6003805460009081526005602090815260408083209490945591548152600a82528281205460088352838220546007845284832054600b90945293909120546001600160a01b039091169291908261182c606487611d1d565b10156118dc576001600160a01b0384166000908152600d60205260408120805483929061185a908490611b24565b909155505060125460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d69190611c02565b50611998565b60125460405163a9059cbb60e01b81526001600160a01b038681166004830152600160248301529091169063a9059cbb906044016020604051808303816000875af115801561192f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119539190611c02565b506001600160a01b0384166000908152600d6020526040812080546001929061197d908490611b24565b90915550506003546000908152600b60205260409020600190555b81600f60008282546119aa9190611b98565b90915550506001600160a01b0384167f0d6e0fdf39f428b885b593cb5e1ed182847a2ed801c2d36a89869aa69e8b785f846119e6606489611d1d565b6003546000818152600b60209081526040918290205482519586529085019390935283018790526060830152608082015260a0810188905260c00160405180910390a260038054906000611a3983611b7d565b9190505550505050505050565b80356001600160a01b0381168114611a5d57600080fd5b919050565b600060208284031215611a7457600080fd5b61087b82611a46565b60008060408385031215611a9057600080fd5b50508035926020909101359150565b60008060408385031215611ab257600080fd5b611abb83611a46565b946020939093013593505050565b600060208284031215611adb57600080fd5b5035919050565b600080600060608486031215611af757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615611b4657611b46611b0e565b600160ff1b8390038412811615611b5f57611b5f611b0e565b50500190565b60008219821115611b7857611b78611b0e565b500190565b6000600019821415611b9157611b91611b0e565b5060010190565b600082821015611baa57611baa611b0e565b500390565b600060208284031215611bc157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611c1457600080fd5b8151801515811461087b57600080fd5b6000815180845260005b81811015611c4a57602081850181015186830182015201611c2e565b81811115611c5c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061087b6020830184611c24565b6000816000190483118215151615611c9e57611c9e611b0e565b500290565b600082611cb257611cb2611bc8565b500490565b60008083128015600160ff1b850184121615611cd557611cd5611b0e565b6001600160ff1b0384018313811615611cf057611cf0611b0e565b50500390565b60018060a01b038416815282602082015260606040820152600061142e6060830184611c24565b600082611d2c57611d2c611bc8565b50069056fea2646970667358221220198d106248b3703b70d6d1a45b87a5b5df45e72c0db19fe87370819170e5067764736f6c634300080b0033",
  "bytecodeSha1": "7246db9f907c2ad018e7ae7a8879d1bf02dec274",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ForgeGuess",
  "coverageMap": {
    "branches": {
      "1": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "106": [
            9859,
            9887,
            true
          ]
        }
      },
      "2": {},
      "3": {
        "ForgeGuess.estOUTPUT": {
          "96": [
            8891,
            8902,
            false
          ],
          "97": [
            8987,
            8998,
            false
          ],
          "98": [
            9101,
            9113,
            false
          ],
          "99": [
            9216,
            9228,
            false
          ],
          "100": [
            9327,
            9339,
            false
          ],
          "101": [
            9427,
            9440,
            false
          ]
        },
        "ForgeGuess.fulfillRandomness": {
          "103": [
            6800,
            6816,
            false
          ],
          "104": [
            6874,
            6889,
            true
          ],
          "105": [
            7183,
            7204,
            false
          ]
        },
        "ForgeGuess.getRandomNumber": {
          "82": [
            3887,
            3896,
            true
          ],
          "83": [
            3967,
            3980,
            true
          ],
          "84": [
            4018,
            4032,
            true
          ],
          "85": [
            4132,
            4159,
            true
          ],
          "86": [
            4250,
            4258,
            false
          ],
          "87": [
            4262,
            4271,
            true
          ],
          "88": [
            4317,
            4373,
            true
          ],
          "89": [
            4514,
            4527,
            false
          ],
          "90": [
            4628,
            4649,
            false
          ],
          "91": [
            4744,
            4763,
            false
          ],
          "92": [
            4782,
            4798,
            true
          ],
          "93": [
            4802,
            4817,
            false
          ],
          "94": [
            4985,
            4996,
            false
          ],
          "95": [
            5172,
            5185,
            false
          ]
        },
        "ForgeGuess.lastBlockFilled": {
          "102": [
            5767,
            5783,
            false
          ]
        },
        "ForgeGuess.maxGuessPerInput": {
          "74": [
            8377,
            8402,
            false
          ],
          "75": [
            8477,
            8505,
            false
          ]
        },
        "ForgeGuess.stakeFor": {
          "76": [
            7766,
            7776,
            true
          ],
          "77": [
            8094,
            8144,
            true
          ]
        },
        "ForgeGuess.withdraw": {
          "78": [
            10859,
            10876,
            false
          ],
          "79": [
            10935,
            10966,
            true
          ],
          "80": [
            11254,
            11311,
            true
          ],
          "81": [
            11330,
            11387,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "54": [
            9851,
            9923
          ],
          "55": [
            9930,
            9970
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "58": [
            7986,
            8073
          ],
          "60": [
            8826,
            8865
          ],
          "62": [
            8872,
            8911
          ]
        }
      },
      "2": {
        "VRFRequestIDBase.makeRequestId": {
          "61": [
            1555,
            1614
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "59": [
            977,
            1055
          ]
        }
      },
      "3": {
        "ForgeGuess.balanceOf": {
          "1": [
            2850,
            2875
          ]
        },
        "ForgeGuess.blockNumber": {
          "0": [
            11727,
            11746
          ]
        },
        "ForgeGuess.estOUTPUT": {
          "44": [
            8918,
            8963
          ],
          "45": [
            9014,
            9061
          ],
          "46": [
            9129,
            9176
          ],
          "47": [
            9244,
            9291
          ],
          "48": [
            9355,
            9402
          ],
          "49": [
            9472,
            9521
          ],
          "50": [
            9573,
            9620
          ],
          "51": [
            9662,
            9678
          ]
        },
        "ForgeGuess.fulfillRandomness": {
          "63": [
            6866,
            6912
          ],
          "64": [
            6931,
            6963
          ],
          "65": [
            6973,
            7009
          ],
          "66": [
            7219,
            7252
          ],
          "67": [
            7266,
            7300
          ],
          "68": [
            7329,
            7361
          ],
          "69": [
            7375,
            7406
          ],
          "70": [
            7420,
            7439
          ],
          "71": [
            7459,
            7482
          ],
          "72": [
            7492,
            7586
          ],
          "73": [
            7596,
            7603
          ]
        },
        "ForgeGuess.getBlank": {
          "52": [
            6503,
            6564
          ],
          "53": [
            6575,
            6625
          ]
        },
        "ForgeGuess.getRandomNumber": {
          "22": [
            3879,
            3949
          ],
          "23": [
            3959,
            4000
          ],
          "24": [
            4010,
            4074
          ],
          "25": [
            4124,
            4212
          ],
          "26": [
            4242,
            4299
          ],
          "27": [
            4309,
            4396
          ],
          "28": [
            4538,
            4605
          ],
          "29": [
            4664,
            4725
          ],
          "30": [
            4891,
            4952
          ],
          "31": [
            5205,
            5266
          ],
          "32": [
            5300,
            5324
          ],
          "33": [
            5334,
            5355
          ],
          "34": [
            5365,
            5392
          ],
          "35": [
            5402,
            5425
          ],
          "36": [
            5435,
            5471
          ],
          "37": [
            5481,
            5521
          ],
          "38": [
            5531,
            5578
          ],
          "39": [
            5588,
            5597
          ],
          "40": [
            5607,
            5625
          ],
          "41": [
            5635,
            5685
          ]
        },
        "ForgeGuess.lastBlockFilled": {
          "56": [
            5798,
            5817
          ],
          "57": [
            5837,
            5867
          ]
        },
        "ForgeGuess.maxGuessPerInput": {
          "5": [
            8421,
            8446
          ],
          "6": [
            8524,
            8529
          ],
          "7": [
            8356,
            8359
          ],
          "8": [
            8563,
            8576
          ]
        },
        "ForgeGuess.penalty": {
          "2": [
            6320,
            6338
          ],
          "3": [
            6302,
            6305
          ],
          "4": [
            6363,
            6373
          ]
        },
        "ForgeGuess.perfectWithdraw": {
          "42": [
            10204,
            10244
          ]
        },
        "ForgeGuess.stakeFor": {
          "9": [
            7758,
            7795
          ],
          "10": [
            7951,
            7978
          ],
          "11": [
            7992,
            8012
          ],
          "12": [
            8026,
            8057
          ],
          "13": [
            8086,
            8168
          ],
          "14": [
            8191,
            8219
          ]
        },
        "ForgeGuess.uOut": {
          "43": [
            10553,
            10608
          ]
        },
        "ForgeGuess.withdraw": {
          "15": [
            10927,
            10997
          ],
          "16": [
            11077,
            11108
          ],
          "17": [
            11122,
            11156
          ],
          "18": [
            11170,
            11217
          ],
          "19": [
            11246,
            11312
          ],
          "20": [
            11322,
            11388
          ],
          "21": [
            11407,
            11441
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20",
    "VRFConsumerBase",
    "VRFRequestIDBase"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101f05760003560e01c80635d57ab281161010f578063afcf89aa116100a2578063e6d8b91d11610071578063e6d8b91d14610458578063edcbbef814610478578063f03d667214610498578063f970dd02146104a157600080fd5b8063afcf89aa146103e9578063b5ce35a9146103fc578063cc7a262e14610404578063d63bc5991461042f57600080fd5b80637c081f99116100de5780637c081f9914610390578063830c57dc146103a357806394985ddd146103b6578063984d63cf146103c957600080fd5b80635d57ab28146103215780635da9eabc146103415780636864af0c1461035457806370a082311461036757600080fd5b80633a64cfd5116101875780634ca7d044116101565780634ca7d044146102d55780634ea97c07146102e8578063530d3bc8146102fb57806357e871e71461031b57600080fd5b80633a64cfd51461028657806342619f6614610299578063441a3e70146102a257806345b90d70146102b557600080fd5b806314e5d13c116101c357806314e5d13c1461024c57806316462ad31461025f57806318160ddd146102685780632ee409081461027157600080fd5b806305be95b4146101f5578063068c0c631461021b5780630d82675e1461023b5780630edd2ffc14610244575b600080fd5b610208610203366004611a62565b6104c1565b6040519081526020015b60405180910390f35b610208610229366004611a62565b600c6020526000908152604090205481565b61020860045481565b610208610516565b61020861025a366004611a7d565b61055c565b61020860035481565b61020860105481565b61028461027f366004611a9f565b6105c7565b005b610208610294366004611ac9565b6107e4565b610208600e5481565b6102846102b0366004611a7d565b610882565b6102086102c3366004611ac9565b60066020526000908152604090205481565b6102086102e3366004611ae2565b610ab9565b6102846102f6366004611ac9565b6111b6565b610208610309366004611ac9565b60056020526000908152604090205481565b43610208565b61020861032f366004611ac9565b600b6020526000908152604090205481565b61020861034f366004611ac9565b6111d3565b610208610362366004611a7d565b611299565b610208610375366004611a62565b6001600160a01b031660009081526011602052604090205490565b61020861039e366004611a62565b611437565b6102086103b1366004611ac9565b61146b565b6102846103c4366004611a7d565b611528565b6102086103d7366004611ac9565b60086020526000908152604090205481565b6102086103f7366004611ac9565b6115ae565b6102086115bd565b601254610417906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b61041761043d366004611ac9565b600a602052600090815260409020546001600160a01b031681565b610208610466366004611a62565b600d6020526000908152604090205481565b610208610486366004611ac9565b60076020526000908152604090205481565b610208600f5481565b6102086104af366004611ac9565b60096020526000908152604090205481565b6000806104e66103f7846001600160a01b031660009081526011602052604090205490565b6001600160a01b0384166000908152600c60205260408120549192509061050e908390611b24565b949350505050565b60035460009081905b600454811015610556576000818152600b60205260409020546105429083611b65565b91508061054e81611b7d565b91505061051f565b50919050565b6000805b605a8110156105bc5782610578610294836062611b98565b101561058f5761058c610294826063611b98565b92505b8261059f81610362846063611b98565b11156105aa576105bc565b806105b481611b7d565b915050610560565b61050e816063611b98565b6012546001600160a01b0316816106165760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064015b60405180910390fd5b600f546012546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190611baf565b0360105484028161069a5761069a611bc8565b6001600160a01b03808716600090815260116020908152604080832080549690950495860190945560108054909501909455600c9093529181902080548690039055516323b872dd60e01b815290831691506323b872dd9061070490339030908790600401611bde565b6020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190611c02565b6040518060400160405280601c81526020017f7374616b656420746f6b656e207472616e73666572206661696c6564000000008152509061079b5760405162461bcd60e51b815260040161060d9190611c71565b50826001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516107d791815260200190565b60405180910390a2505050565b600f546012546040516370a0823160e01b8152306004820152600092839261041a928692916001600160a01b0316906370a0823190602401602060405180830381865afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611baf565b6108679190611b98565b6108719190611c84565b61087b9190611ca3565b9392505050565b61088a610516565b811015610895575050565b336000908152601160205260409020548211156108f45760405162461bcd60e51b815260206004820152601a60248201527f77697468647261773a2062616c616e6365206973206c6f776572000000000000604482015260640161060d565b60006108ff836111d3565b3360009081526011602052604090208054859003905560108054859003905590506103e86103cf8202336000908152600c6020526040902080549290910490910190556012546001600160a01b031663a9059cbb306103e8610962856019611c84565b61096c9190611ca3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611c02565b6109e457600080fd5b6012546001600160a01b031663a9059cbb336103e8610a05856103cf611c84565b610a0f9190611ca3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611c02565b610a8757600080fd5b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020016107d7565b600080610ac68486611299565b9050808410610b305760405162461bcd60e51b815260206004820152603060248201527f596f752077696c6c206c6f6f7365206d6f6e657920657665727974696d65206160448201526f742074686573652073657474696e677360801b606482015260840161060d565b670de0b6b3a7640000841015610b7a5760405162461bcd60e51b815260206004820152600f60248201526e4d696e20626574203120466f72676560881b604482015260640161060d565b6001831015610bd95760405162461bcd60e51b815260206004820152602560248201527f4d7573742073656e64206174206c6561737420746865206d696e696d756d20306044820152642e3030303160d81b606482015260840161060d565b83610be3866107e4565b1015610c495760405162461bcd60e51b815260206004820152602f60248201527f42616e6b726f6c6c20746f6f206c6f7720666f722074686973206265742c205060448201526e1b19585cd9481b1bddd95c8818995d608a1b606482015260840161060d565b606285108015610c595750600085115b610ca55760405162461bcd60e51b815260206004820152601760248201527f4d757374206775657373206265747765656e20312d3938000000000000000000604482015260640161060d565b6012546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610cd990339030908990600401611bde565b6020604051808303816000875af1158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190611c02565b610d5d5760405162461bcd60e51b81526020600482015260126024820152715472616e73666572206d75737420776f726b60701b604482015260640161060d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611baf565b90506001841115610e9f576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3330610e2f600189611b98565b600254610e3c9190611c84565b6040518463ffffffff1660e01b8152600401610e5a93929190611bde565b6020604051808303816000875af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d9190611c02565b505b678ac7230489e80000851015610f55577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd333087600254610eee9190611c84565b6040518463ffffffff1660e01b8152600401610f0c93929190611bde565b6020604051808303816000875af1158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f9190611c02565b5061109b565b6802b5e3af16b1880000851015610fce57620186a06004541180610f855750600254610f82906015611c84565b81105b15610fc9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd333087600254610eee9190611c84565b61109b565b605d8611610fe457600254610f82906015611c84565b600254610ff2906015611c84565b81101561109b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3330876002546110389190611c84565b6040518463ffffffff1660e01b815260040161105693929190611bde565b6020604051808303816000875af1158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611c02565b505b6004805460009081526008602090815260408083208a9055835483526007825280832089905583548352600a825280832080546001600160a01b0319163390811790915593548352600b8252808320869055928252600d90529081208054879290611107908490611cb7565b909155505060048054600090815260066020908152604091829020439055915481518981529283018890529082015233907fea3a2986b784b5ff3af1de7908eb0898970dec44692bec64512b80606842eaf69060600160405180910390a26004805490600061117583611b7d565b919050555084600f600082825461118c9190611b65565b925050819055506111ac600154856002546111a79190611c84565b6115e6565b9695505050505050565b336000908152601160205260409020546111d09082610882565b50565b600f546012546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112499190611baf565b6112539190611b98565b9050600060105482856112669190611c84565b6112709190611ca3565b90508161127b610516565b6112859083611c84565b61128f9190611ca3565b61050e9082611b98565b6000806112a68385611c84565b600f546012546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190611baf565b61131f9190611b98565b61132a906032611c84565b6113349190611ca3565b90506000601e8210156113695761134c846064611c84565b61135886612328611c84565b6113629190611ca3565b905061050e565b60328210156113895761137d846064611c84565b61135886612454611c84565b60648210156113a95761139d846064611c84565b61135886612580611c84565b60c88210156113c9576113bd846064611c84565b61135886612648611c84565b6101908210156113ea576113de846064611c84565b611358866126ac611c84565b6103e882101561140d57611400846103e8611c84565b61135886620184ac611c84565b611418846064611c84565b611424866126ac611c84565b61142e9190611ca3565b95945050505050565b6000806103e861145f61034f856001600160a01b031660009081526011602052604090205490565b610871906103cf611c84565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3330856002546114ac9190611c84565b6040518463ffffffff1660e01b81526004016114ca93929190611bde565b6020604051808303816000875af11580156114e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150d9190611c02565b50611522600154836002546111a79190611c84565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115a05760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161060d565b6115aa828261175d565b5050565b6000806103e861145f846111d3565b600060045460035414156115d057504390565b5060035460009081526006602052604090205490565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611656929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161168393929190611cf6565b6020604051808303816000875af11580156116a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c69190611c02565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152611720906001611b65565b600085815260208181526040918290209290925580518083018790528082018490528151808203830181526060909101909152805191012061050e565b6004546003541061176c575050565b600454600354106117b45760405162461bcd60e51b81526020600482015260126024820152714d7573742068617665206e6577206265747360701b604482015260640161060d565b60035460009081526009602052604090208190556117d3606482611d1d565b6003805460009081526005602090815260408083209490945591548152600a82528281205460088352838220546007845284832054600b90945293909120546001600160a01b039091169291908261182c606487611d1d565b10156118dc576001600160a01b0384166000908152600d60205260408120805483929061185a908490611b24565b909155505060125460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d69190611c02565b50611998565b60125460405163a9059cbb60e01b81526001600160a01b038681166004830152600160248301529091169063a9059cbb906044016020604051808303816000875af115801561192f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119539190611c02565b506001600160a01b0384166000908152600d6020526040812080546001929061197d908490611b24565b90915550506003546000908152600b60205260409020600190555b81600f60008282546119aa9190611b98565b90915550506001600160a01b0384167f0d6e0fdf39f428b885b593cb5e1ed182847a2ed801c2d36a89869aa69e8b785f846119e6606489611d1d565b6003546000818152600b60209081526040918290205482519586529085019390935283018790526060830152608082015260a0810188905260c00160405180910390a260038054906000611a3983611b7d565b9190505550505050505050565b80356001600160a01b0381168114611a5d57600080fd5b919050565b600060208284031215611a7457600080fd5b61087b82611a46565b60008060408385031215611a9057600080fd5b50508035926020909101359150565b60008060408385031215611ab257600080fd5b611abb83611a46565b946020939093013593505050565b600060208284031215611adb57600080fd5b5035919050565b600080600060608486031215611af757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615611b4657611b46611b0e565b600160ff1b8390038412811615611b5f57611b5f611b0e565b50500190565b60008219821115611b7857611b78611b0e565b500190565b6000600019821415611b9157611b91611b0e565b5060010190565b600082821015611baa57611baa611b0e565b500390565b600060208284031215611bc157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611c1457600080fd5b8151801515811461087b57600080fd5b6000815180845260005b81811015611c4a57602081850181015186830182015201611c2e565b81811115611c5c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061087b6020830184611c24565b6000816000190483118215151615611c9e57611c9e611b0e565b500290565b600082611cb257611cb2611bc8565b500490565b60008083128015600160ff1b850184121615611cd557611cd5611b0e565b6001600160ff1b0384018313811615611cf057611cf0611b0e565b50500390565b60018060a01b038416815282602082015260606040820152600061142e6060830184611c24565b600082611d2c57611d2c611bc8565b50069056fea2646970667358221220198d106248b3703b70d6d1a45b87a5b5df45e72c0db19fe87370819170e5067764736f6c634300080b0033",
  "deployedSourceMap": "1493:10262:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11458:204;;;;;;:::i;:::-;;:::i;:::-;;;527:25:5;;;515:2;500:18;11458:204:3;;;;;;;;2028:38;;;;;;:::i;:::-;;;;;;;;;;;;;;1645:26;;;;;;6188:192;;;:::i;8232:351::-;;;;;;:::i;:::-;;:::i;1615:24::-;;;;;;2190:30;;;;;;7649:577;;;;;;:::i;:::-;;:::i;:::-;;5916:266;;;;;;:::i;:::-;;:::i;2122:27::-;;;;;;10778:670;;;;;;:::i;:::-;;:::i;1728:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3717:1975;;;;;;:::i;:::-;;:::i;10142:126::-;;;;;;:::i;:::-;;:::i;1677:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;11668:85;11734:12;11668:85;;1979:43;;;;;;:::i;:::-;;;;;;;;;;;;;;10274:358;;;;;;:::i;:::-;;:::i;8641:1046::-;;;;;;:::i;:::-;;:::i;2774:108::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2857:18:3;2831:7;2857:18;;;:9;:18;;;;;;;2774:108;9904:155;;;;;;:::i;:::-;;:::i;6421:211::-;;;;;;:::i;:::-;;:::i;9766:210:1:-;;;;;;:::i;:::-;;:::i;1832:42:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;9719:149;;;;;;:::i;:::-;;:::i;5698:176::-;;;:::i;2287:78::-;;;;;-1:-1:-1;;;;;2287:78:3;;;;;;-1:-1:-1;;;;;2377:32:5;;;2359:51;;2347:2;2332:18;2287:78:3;2198:218:5;1933:40:3;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1933:40:3;;;2072:43;;;;;;:::i;:::-;;;;;;;;;;;;;;1785:41;;;;;;:::i;:::-;;;;;;;;;;;;;;2155:29;;;;;;1880:47;;;;;;:::i;:::-;;;;;;;;;;;;;;11458:204;11508:3;11523:20;11546:30;11560:15;11570:4;-1:-1:-1;;;;;2857:18:3;2831:7;2857:18;;;:9;:18;;;;;;;2774:108;11546:30;-1:-1:-1;;;;;11599:13:3;;11586:10;11599:13;;;:7;:13;;;;;;11523:53;;-1:-1:-1;11586:10:3;11599:33;;11523:53;;11599:33;:::i;:::-;11586:46;11458:204;-1:-1:-1;;;;11458:204:3:o;6188:192::-;6284:5;;6229:8;;;;6271:78;6293:7;;6291:1;:9;6271:78;;;6327:11;;;;:8;:11;;;;;;6320:18;;;;:::i;:::-;;-1:-1:-1;6302:3:3;;;;:::i;:::-;;;;6271:78;;;-1:-1:-1;6370:3:3;6188:192;-1:-1:-1;6188:192:3:o;8232:351::-;8300:4;;8340:214;8352:2;8350:1;:4;8340:214;;;8399:3;8377:19;8391:4;8394:1;8391:2;:4;:::i;8377:19::-;:25;8374:87;;;8427:19;8441:4;8444:1;8441:2;:4;:::i;8427:19::-;8421:25;;8374:87;8502:3;8477:22;8502:3;8492:6;8497:1;8492:2;:6;:::i;8477:22::-;:28;8474:70;;;8524:5;;8474:70;8356:3;;;;:::i;:::-;;;;8340:214;;;8570:6;8575:1;8570:2;:6;:::i;7649:577::-;7737:11;;-1:-1:-1;;;;;7737:11:3;7766:10;7758:37;;;;-1:-1:-1;;;7758:37:3;;3636:2:5;7758:37:3;;;3618:21:5;3675:2;3655:18;;;3648:30;-1:-1:-1;;;3694:18:5;;;3687:44;3748:18;;7758:37:3;;;;;;;;;7926:10;;7885:11;;7870:53;;-1:-1:-1;;;7870:53:3;;7917:4;7870:53;;;2359:51:5;7831:10:3;;7926;-1:-1:-1;;;;;7885:11:3;;7870:38;;2332:18:5;;7870:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;7854:11;;7845:6;:20;7844:93;;;;;:::i;:::-;-1:-1:-1;;;;;7951:18:3;;;;;;;:9;:18;;;;;;;;:27;;7844:93;;;;7951:27;;;;;;7992:11;:20;;;;;;;;8026:7;:16;;;;;;;:31;;;;;;;8094:50;-1:-1:-1;;;8094:50:3;;:15;;;;-1:-1:-1;8094:15:3;;:50;;8110:10;;8130:4;;8050:6;;8094:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8146:21;;;;;;;;;;;;;;;;;8086:82;;;;;-1:-1:-1;;;8086:82:3;;;;;;;;:::i;:::-;;8203:7;-1:-1:-1;;;;;8196:23:3;;8212:6;8196:23;;;;527:25:5;;515:2;500:18;;383:175;8196:23:3;;;;;;;;7715:511;7649:577;;:::o;5916:266::-;6121:10;;6080:11;;6065:53;;-1:-1:-1;;;6065:53:3;;6112:4;6065:53;;;2359:51:5;5975:7:3;;;;6145;;6135:5;;6121:10;-1:-1:-1;;;;;6080:11:3;;6065:38;;2332:18:5;;6065:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;;:::i;:::-;6064:76;;;;:::i;:::-;6063:90;;;;:::i;:::-;6049:104;5916:266;-1:-1:-1;;;5916:266:3:o;10778:670::-;10867:9;:7;:9::i;:::-;10859:7;:17;10856:53;;;10778:670;;:::o;10856:53::-;10955:10;10945:21;;;;:9;:21;;;;;;10935:31;;;10927:70;;;;-1:-1:-1;;;10927:70:3;;5962:2:5;10927:70:3;;;5944:21:5;6001:2;5981:18;;;5974:30;6040:28;6020:18;;;6013:56;6086:18;;10927:70:3;5760:350:5;10927:70:3;11016:11;11030:12;11035:6;11030:4;:12::i;:::-;11087:10;11077:21;;;;:9;:21;;;;;:31;;;;;;;11136:11;;;:20;;;11122:34;;11016:26;-1:-1:-1;11212:4:3;11206:3;11197:12;;11178:10;11170:19;;;;:7;:19;;;;;:47;;11197:19;;;;11170:47;;;;;11254:11;;-1:-1:-1;;;;;11254:11:3;:20;11283:4;11305;11291:11;:6;11300:2;11291:11;:::i;:::-;:18;;;;:::i;:::-;11254:57;;-1:-1:-1;;;;;;11254:57:3;;;;;;;-1:-1:-1;;;;;6307:32:5;;;11254:57:3;;;6289:51:5;6356:18;;;6349:34;6262:18;;11254:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11246:66;;;;;;11330:11;;-1:-1:-1;;;;;11330:11:3;:20;11351:10;11381:4;11365:12;:6;11374:3;11365:12;:::i;:::-;11364:21;;;;:::i;:::-;11330:57;;-1:-1:-1;;;;;;11330:57:3;;;;;;;-1:-1:-1;;;;;6307:32:5;;;11330:57:3;;;6289:51:5;6356:18;;;6349:34;6262:18;;11330:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11322:66;;;;;;11412:29;;527:25:5;;;11422:10:3;;11412:29;;515:2:5;500:18;11412:29:3;383:175:5;3717:1975:3;3805:17;3834:11;3848:21;3858:3;3863:5;3848:9;:21::i;:::-;3834:35;;3893:3;3887;:9;3879:70;;;;-1:-1:-1;;;3879:70:3;;6596:2:5;3879:70:3;;;6578:21:5;6635:2;6615:18;;;6608:30;6674:34;6654:18;;;6647:62;-1:-1:-1;;;6725:18:5;;;6718:46;6781:19;;3879:70:3;6394:412:5;3879:70:3;3974:6;3967:3;:13;;3959:41;;;;-1:-1:-1;;;3959:41:3;;7013:2:5;3959:41:3;;;6995:21:5;7052:2;7032:18;;;7025:30;-1:-1:-1;;;7071:18:5;;;7064:45;7126:18;;3959:41:3;6811:339:5;3959:41:3;4031:1;4018:9;:14;;4010:64;;;;-1:-1:-1;;;4010:64:3;;7357:2:5;4010:64:3;;;7339:21:5;7396:2;7376:18;;;7369:30;7435:34;7415:18;;;7408:62;-1:-1:-1;;;7486:18:5;;;7479:35;7531:19;;4010:64:3;7155:401:5;4010:64:3;4156:3;4132:20;4146:5;4132:13;:20::i;:::-;:27;;4124:88;;;;-1:-1:-1;;;4124:88:3;;7763:2:5;4124:88:3;;;7745:21:5;7802:2;7782:18;;;7775:30;7841:34;7821:18;;;7814:62;-1:-1:-1;;;7892:18:5;;;7885:45;7947:19;;4124:88:3;7561:411:5;4124:88:3;4256:2;4250:5;:8;:21;;;;;4270:1;4262:5;:9;4250:21;4242:57;;;;-1:-1:-1;;;4242:57:3;;8179:2:5;4242:57:3;;;8161:21:5;8218:2;8198:18;;;8191:30;8257:25;8237:18;;;8230:53;8300:18;;4242:57:3;7977:347:5;4242:57:3;4317:11;;:56;;-1:-1:-1;;;4317:56:3;;-1:-1:-1;;;;;4317:11:3;;;;:24;;:56;;4342:10;;4362:4;;4369:3;;4317:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4309:87;;;;-1:-1:-1;;;4309:87:3;;8531:2:5;4309:87:3;;;8513:21:5;8570:2;8550:18;;;8543:30;-1:-1:-1;;;8589:18:5;;;8582:48;8647:18;;4309:87:3;8329:342:5;4309:87:3;4430:29;;-1:-1:-1;;;4430:29:3;;4453:4;4430:29;;;2359:51:5;4415:12:3;;4430:4;-1:-1:-1;;;;;4430:14:3;;;;2332:18:5;;4430:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4415:44;;4526:1;4514:9;:13;4511:105;;;-1:-1:-1;;;;;4538:4:3;:17;;4556:10;4576:4;4591:11;4601:1;4591:9;:11;:::i;:::-;4584:3;;:19;;;;:::i;:::-;4538:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4511:105;4635:13;4628:3;:21;4625:666;;;4664:4;-1:-1:-1;;;;;4664:17:3;;4682:10;4702:4;4715:9;4709:3;;:15;;;;:::i;:::-;4664:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4625:666;;;4750:13;4744:3;:19;4741:550;;;4792:6;4782:7;;:16;:35;;;-1:-1:-1;4809:3:3;;:8;;4815:2;4809:8;:::i;:::-;4802:4;:15;4782:35;4779:188;;;4891:4;-1:-1:-1;;;;;4891:17:3;;4909:10;4929:4;4942:9;4936:3;;:15;;;;:::i;4779:188::-;4741:550;;;4994:2;4985:5;:11;4982:309;;5030:3;;:6;;5034:2;5030:6;:::i;4982:309::-;5179:3;;:6;;5183:2;5179:6;:::i;:::-;5172:4;:13;5169:112;;;5205:4;-1:-1:-1;;;;;5205:17:3;;5223:10;5243:4;5256:9;5250:3;;:15;;;;:::i;:::-;5205:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5169:112;5308:7;;;5300:16;;;;:7;:16;;;;;;;;:24;;;5341:7;;5334:15;;:6;:15;;;;;:21;;;5371:7;;5365:14;;:5;:14;;;;;:27;;-1:-1:-1;;;;;;5365:27:3;5382:10;5365:27;;;;;;5411:7;;5402:17;;:8;:17;;;;;:23;;;5435:24;;;:12;:24;;;;;:36;;5352:3;;5300:16;5435:36;;5352:3;;5435:36;:::i;:::-;;;;-1:-1:-1;;5498:7:3;;;5481:25;;;;:16;:25;;;;;;;;;5509:12;5481:40;;5570:7;;5536:42;;9150:25:5;;;9191:18;;;9184:34;;;9234:18;;;9227:34;5558:10:3;;5536:42;;9138:2:5;9123:18;5536:42:3;;;;;;;5588:7;:9;;;:7;:9;;;:::i;:::-;;;;;;5622:3;5607:10;;:18;;;;;;;:::i;:::-;;;;;;;;5642:43;5660:7;;5675:9;5669:3;;:15;;;;:::i;:::-;5642:17;:43::i;:::-;5635:50;3717:1975;-1:-1:-1;;;;;;3717:1975:3:o;10142:126::-;10223:10;2831:7;2857:18;;;:9;:18;;;;;;10204:40;;10236:7;10204:8;:40::i;:::-;10142:126;:::o;10274:358::-;10436:10;;10395:11;;10380:53;;-1:-1:-1;;;10380:53:3;;10427:4;10380:53;;;2359:51:5;10321:11:3;;;;10436:10;;-1:-1:-1;;;;;10395:11:3;;;;10380:38;;2332:18:5;;10380:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;;:::i;:::-;10348:99;;10466:11;10512;;10489:20;10480:6;:29;;;;:::i;:::-;:43;;;;:::i;:::-;10466:57;;10588:20;10574:9;:7;:9::i;:::-;10568:15;;:3;:15;:::i;:::-;10566:42;;;;:::i;:::-;10559:49;;:3;:49;:::i;8641:1046::-;8714:7;;8826:16;8838:4;8826:9;:16;:::i;:::-;8806:10;;8765:11;;8750:53;;-1:-1:-1;;;8750:53:3;;8797:4;8750:53;;;2359:51:5;-1:-1:-1;;;;;8765:11:3;;;;8750:38;;2332:18:5;;8750:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;;;:::i;:::-;8749:73;;8820:2;8749:73;:::i;:::-;:94;;;;:::i;:::-;8732:111;;8853:17;8900:2;8891:6;:11;8888:748;;;8954:8;:4;8959:3;8954:8;:::i;:::-;8931:20;8942:9;8931:8;:20;:::i;:::-;8930:33;;;;:::i;:::-;8918:45;;8888:748;;;8996:2;8987:6;:11;8984:652;;;9050:10;:4;9057:3;9050:10;:::i;:::-;9027:20;9038:9;9027:8;:20;:::i;8984:652::-;9110:3;9101:6;:12;9098:538;;;9165:10;:4;9172:3;9165:10;:::i;:::-;9142:20;9153:9;9142:8;:20;:::i;9098:538::-;9225:3;9216:6;:12;9213:423;;;9280:10;:4;9287:3;9280:10;:::i;:::-;9257:20;9268:9;9257:8;:20;:::i;9213:423::-;9336:3;9327:6;:12;9324:312;;;9391:10;:4;9398:3;9391:10;:::i;:::-;9368:20;9379:9;9368:8;:20;:::i;9324:312::-;9436:4;9427:6;:13;9423:213;;;9509:11;:4;9516;9509:11;:::i;:::-;9485:21;9497:9;9485;:21;:::i;9423:213::-;9609:10;:4;9616:3;9609:10;:::i;:::-;9586:20;9597:9;9586:8;:20;:::i;:::-;9585:35;;;;:::i;:::-;9573:47;9669:9;-1:-1:-1;;;;;8641:1046:3:o;9904:155::-;9964:7;9983:9;10029:4;10002:24;10007:18;10017:7;-1:-1:-1;;;;;2857:18:3;2831:7;2857:18;;;:9;:18;;;;;;;2774:108;10002:24;9996:30;;:3;:30;:::i;6421:211::-;6474:17;6503:4;-1:-1:-1;;;;;6503:17:3;;6521:10;6541:4;6554:9;6548:3;;:15;;;;:::i;:::-;6503:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6582:43;6600:7;;6615:9;6609:3;;:15;;;;:::i;6582:43::-;6575:50;6421:211;-1:-1:-1;;6421:211:3:o;9766:210:1:-;9859:10;-1:-1:-1;;;;;9873:14:1;9859:28;;9851:72;;;;-1:-1:-1;;;9851:72:1;;9474:2:5;9851:72:1;;;9456:21:5;9513:2;9493:18;;;9486:30;9552:33;9532:18;;;9525:61;9603:18;;9851:72:1;9272:355:5;9851:72:1;9930:40;9948:9;9959:10;9930:17;:40::i;:::-;9766:210;;:::o;9719:149:3:-;9782:7;9801:9;9838:4;9820:15;9825:9;9820:4;:15::i;5698:176::-;5746:7;5776;;5767:5;;:16;5764:64;;;-1:-1:-1;5805:12:3;;5698:176::o;5764:64::-;-1:-1:-1;5861:5:3;;5844:23;;;;:16;:23;;;;;;;5698:176::o;7883:1034:1:-;7960:17;7986:4;-1:-1:-1;;;;;7986:20:1;;8007:14;8023:4;8040:8;6713:1;8029:43;;;;;;;;9806:25:5;;;9862:2;9847:18;;9840:34;9794:2;9779:18;;9632:248;8029:43:1;;;;;;;;;;;;;7986:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8308:15:1;8391:16;;;;;;;;;;;;1002:51:2;;;;;11798:25:5;;;11839:18;;;11832:34;;;8384:4:1;11882:18:5;;;11875:60;11951:18;;;;11944:34;;;1002:51:2;;;;;;;;;;11770:19:5;;;;1002:51:2;;;992:62;;;;;;;;;8845:16:1;;;;;;;:20;;8864:1;8845:20;:::i;:::-;8826:6;:16;;;;;;;;;;;;:39;;;;1572:41:2;;;;;12146:19:5;;;12181:12;;;12174:28;;;1572:41:2;;;;;;;;;12218:12:5;;;;1572:41:2;;;1562:52;;;;;8879:32:1;1452:168:2;6703:907:3;6809:7;;6800:5;;:16;6797:51;;6703:907;;:::o;6797:51::-;6882:7;;6874:5;;:15;6866:46;;;;-1:-1:-1;;;6866:46:3;;10478:2:5;6866:46:3;;;10460:21:5;10517:2;10497:18;;;10490:30;-1:-1:-1;;;10536:18:5;;;10529:48;10594:18;;6866:46:3;10276:342:5;6866:46:3;6944:5;;6931:19;;;;:12;:19;;;;;:32;;;6993:16;7006:3;6953:10;6993:16;:::i;:::-;6984:5;;;6973:17;;;;:10;:17;;;;;;;;:36;;;;7043:5;;7037:12;;:5;:12;;;;;;7074:7;:14;;;;;;7118:6;:13;;;;;;7155:8;:15;;;;;;;;-1:-1:-1;;;;;7037:12:3;;;;7074:14;7118:13;7074:14;7183;7194:3;7183:10;:14;:::i;:::-;:21;7180:270;;;-1:-1:-1;;;;;7219:21:3;;;;;;:12;:21;;;;;:33;;7248:3;;7219:21;:33;;7248:3;;7219:33;:::i;:::-;;;;-1:-1:-1;;7266:11:3;;:34;;-1:-1:-1;;;7266:34:3;;-1:-1:-1;;;;;6307:32:5;;;7266:34:3;;;6289:51:5;6356:18;;;6349:34;;;7266:11:3;;;;:20;;6262:18:5;;7266:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7180:270;;;7329:11;;:32;;-1:-1:-1;;;7329:32:3;;-1:-1:-1;;;;;6307:32:5;;;7329::3;;;6289:51:5;7329:11:3;6356:18:5;;;6349:34;7329:11:3;;;;:20;;6262:18:5;;7329:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7375:21:3;;;;;;:12;:21;;;;;:31;;7404:1;;7375:21;:31;;7404:1;;7375:31;:::i;:::-;;;;-1:-1:-1;;7429:5:3;;7420:15;;;;:8;:15;;;;;7438:1;7420:19;;7180:270;7473:9;7459:10;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7497:89:3;;;7508:4;7514:14;7525:3;7514:10;:14;:::i;:::-;7542:5;;7558:15;;;;:8;:15;;;;;;;;;;7497:89;;11314:25:5;;;11355:18;;;11348:34;;;;11398:18;;11391:34;;;11456:2;11441:18;;11434:34;11499:3;11484:19;;11477:35;11543:3;11528:19;;11521:35;;;11301:3;11286:19;7497:89:3;;;;;;;7596:5;:7;;;:5;:7;;;:::i;:::-;;;;;;6787:823;;;;6703:907;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;745:248::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;-1:-1:-1;;913:23:5;;;983:2;968:18;;;955:32;;-1:-1:-1;745:248:5:o;998:254::-;1066:6;1074;1127:2;1115:9;1106:7;1102:23;1098:32;1095:52;;;1143:1;1140;1133:12;1095:52;1166:29;1185:9;1166:29;:::i;:::-;1156:39;1242:2;1227:18;;;;1214:32;;-1:-1:-1;;;998:254:5:o;1257:180::-;1316:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:52;;;1385:1;1382;1375:12;1337:52;-1:-1:-1;1408:23:5;;1257:180;-1:-1:-1;1257:180:5:o;1442:316::-;1519:6;1527;1535;1588:2;1576:9;1567:7;1563:23;1559:32;1556:52;;;1604:1;1601;1594:12;1556:52;-1:-1:-1;;1627:23:5;;;1697:2;1682:18;;1669:32;;-1:-1:-1;1748:2:5;1733:18;;;1720:32;;1442:316;-1:-1:-1;1442:316:5:o;2629:127::-;2690:10;2685:3;2681:20;2678:1;2671:31;2721:4;2718:1;2711:15;2745:4;2742:1;2735:15;2761:265;2800:3;2828:9;;;2853:10;;-1:-1:-1;;;;;2872:27:5;;;2865:35;;2849:52;2846:78;;;2904:18;;:::i;:::-;-1:-1:-1;;;2951:19:5;;;2944:27;;2936:36;;2933:62;;;2975:18;;:::i;:::-;-1:-1:-1;;3011:9:5;;2761:265::o;3031:128::-;3071:3;3102:1;3098:6;3095:1;3092:13;3089:39;;;3108:18;;:::i;:::-;-1:-1:-1;3144:9:5;;3031:128::o;3164:135::-;3203:3;-1:-1:-1;;3224:17:5;;3221:43;;;3244:18;;:::i;:::-;-1:-1:-1;3291:1:5;3280:13;;3164:135::o;3304:125::-;3344:4;3372:1;3369;3366:8;3363:34;;;3377:18;;:::i;:::-;-1:-1:-1;3414:9:5;;3304:125::o;3777:184::-;3847:6;3900:2;3888:9;3879:7;3875:23;3871:32;3868:52;;;3916:1;3913;3906:12;3868:52;-1:-1:-1;3939:16:5;;3777:184;-1:-1:-1;3777:184:5:o;3966:127::-;4027:10;4022:3;4018:20;4015:1;4008:31;4058:4;4055:1;4048:15;4082:4;4079:1;4072:15;4098:375;-1:-1:-1;;;;;4356:15:5;;;4338:34;;4408:15;;;;4403:2;4388:18;;4381:43;4455:2;4440:18;;4433:34;;;;4288:2;4273:18;;4098:375::o;4478:277::-;4545:6;4598:2;4586:9;4577:7;4573:23;4569:32;4566:52;;;4614:1;4611;4604:12;4566:52;4646:9;4640:16;4699:5;4692:13;4685:21;4678:5;4675:32;4665:60;;4721:1;4718;4711:12;4760:472;4802:3;4840:5;4834:12;4867:6;4862:3;4855:19;4892:1;4902:162;4916:6;4913:1;4910:13;4902:162;;;4978:4;5034:13;;;5030:22;;5024:29;5006:11;;;5002:20;;4995:59;4931:12;4902:162;;;5082:6;5079:1;5076:13;5073:87;;;5148:1;5141:4;5132:6;5127:3;5123:16;5119:27;5112:38;5073:87;-1:-1:-1;5214:2:5;5193:15;-1:-1:-1;;5189:29:5;5180:39;;;;5221:4;5176:50;;4760:472;-1:-1:-1;;4760:472:5:o;5237:220::-;5386:2;5375:9;5368:21;5349:4;5406:45;5447:2;5436:9;5432:18;5424:6;5406:45;:::i;5462:168::-;5502:7;5568:1;5564;5560:6;5556:14;5553:1;5550:21;5545:1;5538:9;5531:17;5527:45;5524:71;;;5575:18;;:::i;:::-;-1:-1:-1;5615:9:5;;5462:168::o;5635:120::-;5675:1;5701;5691:35;;5706:18;;:::i;:::-;-1:-1:-1;5740:9:5;;5635:120::o;8676:267::-;8715:4;8744:9;;;8769:10;;-1:-1:-1;;;8788:19:5;;8781:27;;8765:44;8762:70;;;8812:18;;:::i;:::-;-1:-1:-1;;;;;8859:27:5;;8852:35;;8844:44;;8841:70;;;8891:18;;:::i;:::-;-1:-1:-1;;8928:9:5;;8676:267::o;9885:386::-;10117:1;10113;10108:3;10104:11;10100:19;10092:6;10088:32;10077:9;10070:51;10157:6;10152:2;10141:9;10137:18;10130:34;10200:2;10195;10184:9;10180:18;10173:30;10051:4;10220:45;10261:2;10250:9;10246:18;10238:6;10220:45;:::i;10623:112::-;10655:1;10681;10671:35;;10686:18;;:::i;:::-;-1:-1:-1;10720:9:5;;10623:112::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "Constructor inherits VRFConsumerBase  Network: Mumbai Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255 LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"
      },
      "getRandomNumber(uint256,uint256,uint256)": {
        "notice": "Requests randomness "
      }
    },
    "version": 1
  },
  "offset": [
    1493,
    11755
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D57AB28 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xAFCF89AA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE6D8B91D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE6D8B91D EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xEDCBBEF8 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xF03D6672 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xF970DD02 EQ PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFCF89AA EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xB5CE35A9 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xCC7A262E EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xD63BC599 EQ PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C081F99 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7C081F99 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x830C57DC EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x984D63CF EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D57AB28 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x5DA9EABC EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x6864AF0C EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A64CFD5 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4CA7D044 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4CA7D044 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x4EA97C07 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x530D3BC8 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x57E871E7 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A64CFD5 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x42619F66 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x45B90D70 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14E5D13C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x14E5D13C EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x16462AD3 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x2EE40908 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5BE95B4 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x68C0C63 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xD82675E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xEDD2FFC EQ PUSH2 0x244 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x208 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x208 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST NUMBER PUSH2 0x208 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x146B JUMP JUMPDEST PUSH2 0x284 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7D JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x208 PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x417 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E6 PUSH2 0x3F7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x50E SWAP1 DUP4 SWAP1 PUSH2 0x1B24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x542 SWAP1 DUP4 PUSH2 0x1B65 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x54E DUP2 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x51F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x5BC JUMPI DUP3 PUSH2 0x578 PUSH2 0x294 DUP4 PUSH1 0x62 PUSH2 0x1B98 JUMP JUMPDEST LT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58C PUSH2 0x294 DUP3 PUSH1 0x63 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 PUSH2 0x59F DUP2 PUSH2 0x362 DUP5 PUSH1 0x63 PUSH2 0x1B98 JUMP JUMPDEST GT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5BC JUMP JUMPDEST DUP1 PUSH2 0x5B4 DUP2 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x560 JUMP JUMPDEST PUSH2 0x50E DUP2 PUSH1 0x63 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x663 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST SUB PUSH1 0x10 SLOAD DUP5 MUL DUP2 PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 SWAP1 SWAP6 DIV SWAP6 DUP7 ADD SWAP1 SWAP5 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE PUSH1 0xC SWAP1 SWAP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND SWAP2 POP PUSH4 0x23B872DD SWAP1 PUSH2 0x704 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x747 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7374616B656420746F6B656E207472616E73666572206661696C656400000000 DUP2 MSTORE POP SWAP1 PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x7D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH2 0x41A SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x839 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x88A PUSH2 0x516 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x895 JUMPI POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2062616C616E6365206973206C6F776572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FF DUP4 PUSH2 0x11D3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE SWAP1 POP PUSH2 0x3E8 PUSH2 0x3CF DUP3 MUL CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB ADDRESS PUSH2 0x3E8 PUSH2 0x962 DUP6 PUSH1 0x19 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x3E8 PUSH2 0xA05 DUP6 PUSH2 0x3CF PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC6 DUP5 DUP7 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752077696C6C206C6F6F7365206D6F6E657920657665727974696D652061 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x742074686573652073657474696E6773 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP5 LT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4D696E20626574203120466F726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x1 DUP4 LT ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E64206174206C6561737420746865206D696E696D756D2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2E30303031 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60D JUMP JUMPDEST DUP4 PUSH2 0xBE3 DUP7 PUSH2 0x7E4 JUMP JUMPDEST LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616E6B726F6C6C20746F6F206C6F7720666F722074686973206265742C2050 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x1B19585CD9481B1BDDD95C8818995D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x62 DUP6 LT DUP1 ISZERO PUSH2 0xC59 JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206775657373206265747765656E20312D3938000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xCD9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5472616E73666572206D75737420776F726B PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 GT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0xE2F PUSH1 0x1 DUP10 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP JUMPDEST PUSH8 0x8AC7230489E80000 DUP6 LT ISZERO PUSH2 0xF55 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x2 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH2 0x109B JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP6 LT ISZERO PUSH2 0xFCE JUMPI PUSH3 0x186A0 PUSH1 0x4 SLOAD GT DUP1 PUSH2 0xF85 JUMPI POP PUSH1 0x2 SLOAD PUSH2 0xF82 SWAP1 PUSH1 0x15 PUSH2 0x1C84 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xFC9 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x2 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH1 0x5D DUP7 GT PUSH2 0xFE4 JUMPI PUSH1 0x2 SLOAD PUSH2 0xF82 SWAP1 PUSH1 0x15 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFF2 SWAP1 PUSH1 0x15 PUSH2 0x1C84 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x109B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x2 SLOAD PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE PUSH1 0xA DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 SLOAD DUP4 MSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0xD SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1107 SWAP1 DUP5 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 NUMBER SWAP1 SSTORE SWAP2 SLOAD DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xEA3A2986B784B5FF3AF1DE7908EB0898970DEC44692BEC64512B80606842EAF6 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1175 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP5 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11AC PUSH1 0x1 SLOAD DUP6 PUSH1 0x2 SLOAD PUSH2 0x11A7 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11D0 SWAP1 DUP3 PUSH2 0x882 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1225 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1249 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x10 SLOAD DUP3 DUP6 PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x127B PUSH2 0x516 JUMP JUMPDEST PUSH2 0x1285 SWAP1 DUP4 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x128F SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH2 0x50E SWAP1 DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12A6 DUP4 DUP6 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x131F SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x132A SWAP1 PUSH1 0x32 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1E DUP3 LT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x134C DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH2 0x2328 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E JUMP JUMPDEST PUSH1 0x32 DUP3 LT ISZERO PUSH2 0x1389 JUMPI PUSH2 0x137D DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH2 0x2454 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x139D DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH2 0x2580 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13BD DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH2 0x2648 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x190 DUP3 LT ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13DE DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH2 0x26AC PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x3E8 DUP3 LT ISZERO PUSH2 0x140D JUMPI PUSH2 0x1400 DUP5 PUSH2 0x3E8 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1358 DUP7 PUSH3 0x184AC PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1418 DUP5 PUSH1 0x64 PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x1424 DUP7 PUSH2 0x26AC PUSH2 0x1C84 JUMP JUMPDEST PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x145F PUSH2 0x34F DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x871 SWAP1 PUSH2 0x3CF PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x2 SLOAD PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150D SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH2 0x1522 PUSH1 0x1 SLOAD DUP4 PUSH1 0x2 SLOAD PUSH2 0x11A7 SWAP2 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0x15AA DUP3 DUP3 PUSH2 0x175D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH2 0x145F DUP5 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x15D0 JUMPI POP NUMBER SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1656 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1683 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C6 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x1720 SWAP1 PUSH1 0x1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD LT PUSH2 0x176C JUMPI POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD LT PUSH2 0x17B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4D7573742068617665206E65772062657473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x17D3 PUSH1 0x64 DUP3 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP2 MSTORE PUSH1 0xA DUP3 MSTORE DUP3 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP4 MSTORE DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x7 DUP5 MSTORE DUP5 DUP4 KECCAK256 SLOAD PUSH1 0xB SWAP1 SWAP5 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 DUP3 PUSH2 0x182C PUSH1 0x64 DUP8 PUSH2 0x1D1D JUMP JUMPDEST LT ISZERO PUSH2 0x18DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x185A SWAP1 DUP5 SWAP1 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH2 0x1998 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x192F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x197D SWAP1 DUP5 SWAP1 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19AA SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH32 0xD6E0FDF39F428B885B593CB5E1ED182847A2ED801C2D36A89869AA69E8B785F DUP5 PUSH2 0x19E6 PUSH1 0x64 DUP10 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP6 DUP7 MSTORE SWAP1 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1A39 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B DUP3 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ABB DUP4 PUSH2 0x1A46 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B46 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x1B5F JUMPI PUSH2 0x1B5F PUSH2 0x1B0E JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B78 JUMPI PUSH2 0x1B78 PUSH2 0x1B0E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B91 PUSH2 0x1B0E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1BAA JUMPI PUSH2 0x1BAA PUSH2 0x1B0E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x87B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C4A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1C2E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1C5C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x87B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C9E JUMPI PUSH2 0x1C9E PUSH2 0x1B0E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CB2 JUMPI PUSH2 0x1CB2 PUSH2 0x1BC8 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD5 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x1CF0 JUMPI PUSH2 0x1CF0 PUSH2 0x1B0E JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x142E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D2C JUMPI PUSH2 0x1D2C PUSH2 0x1BC8 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP14 LT PUSH3 0x48B370 EXTCODESIZE PUSH17 0xD6D1A45B87A5B5DF45E72C0DB19FE87370 DUP2 SWAP2 PUSH17 0xE5067764736F6C634300080B0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0"
    },
    "25": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5D57AB28"
    },
    "38": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F"
    },
    "42": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFCF89AA"
    },
    "49": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE6D8B91D"
    },
    "60": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE6D8B91D"
    },
    "71": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x458"
    },
    "75": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEDCBBEF8"
    },
    "82": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "86": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF03D6672"
    },
    "93": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x498"
    },
    "97": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF970DD02"
    },
    "104": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A1"
    },
    "108": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFCF89AA"
    },
    "120": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E9"
    },
    "124": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB5CE35A9"
    },
    "131": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FC"
    },
    "135": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCC7A262E"
    },
    "142": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x404"
    },
    "146": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD63BC599"
    },
    "153": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42F"
    },
    "157": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7C081F99"
    },
    "169": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7C081F99"
    },
    "180": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x390"
    },
    "184": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x830C57DC"
    },
    "191": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A3"
    },
    "195": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x94985DDD"
    },
    "202": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B6"
    },
    "206": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x984D63CF"
    },
    "213": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C9"
    },
    "217": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5D57AB28"
    },
    "229": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x321"
    },
    "233": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5DA9EABC"
    },
    "240": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x341"
    },
    "244": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6864AF0C"
    },
    "251": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x354"
    },
    "255": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "262": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x367"
    },
    "266": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "269": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "270": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "271": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "273": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3A64CFD5"
    },
    "278": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x187"
    },
    "282": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "283": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "284": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4CA7D044"
    },
    "289": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "290": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4CA7D044"
    },
    "300": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D5"
    },
    "304": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4EA97C07"
    },
    "311": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E8"
    },
    "315": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x530D3BC8"
    },
    "322": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB"
    },
    "326": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "328": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x57E871E7"
    },
    "333": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "334": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31B"
    },
    "337": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "338": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "341": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "342": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "343": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "344": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3A64CFD5"
    },
    "349": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286"
    },
    "353": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "354": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "355": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42619F66"
    },
    "360": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "364": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "365": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "366": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x441A3E70"
    },
    "371": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "372": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A2"
    },
    "375": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "376": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "377": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45B90D70"
    },
    "382": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "383": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "386": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "387": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "389": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "390": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "391": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "392": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "393": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x14E5D13C"
    },
    "398": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "GT",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C3"
    },
    "402": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "403": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "404": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x14E5D13C"
    },
    "409": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "410": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24C"
    },
    "413": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "414": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x16462AD3"
    },
    "420": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "421": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25F"
    },
    "424": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "425": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "426": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "431": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "432": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x268"
    },
    "435": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "436": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "437": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2EE40908"
    },
    "442": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "443": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "446": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "447": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "449": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "450": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "451": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "452": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "453": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5BE95B4"
    },
    "458": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F5"
    },
    "462": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "463": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x68C0C63"
    },
    "469": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "470": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21B"
    },
    "473": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "474": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "475": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD82675E"
    },
    "480": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "481": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23B"
    },
    "484": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "485": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "486": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEDD2FFC"
    },
    "491": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "EQ",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244"
    },
    "495": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "497": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "499": {
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "500": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1493,
        11755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "501": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "502": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "505": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x203"
    },
    "508": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "509": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "511": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A62"
    },
    "514": {
      "fn": "ForgeGuess.Profit",
      "jump": "i",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMP",
      "path": "3"
    },
    "515": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "516": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C1"
    },
    "519": {
      "fn": "ForgeGuess.Profit",
      "jump": "i",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMP",
      "path": "3"
    },
    "520": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "521": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "523": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "524": {
      "op": "SWAP1"
    },
    "525": {
      "op": "DUP2"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "531": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "533": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "534": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "DUP1",
      "path": "3"
    },
    "535": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "536": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "SUB",
      "path": "3"
    },
    "537": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "538": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "RETURN",
      "path": "3"
    },
    "539": {
      "offset": [
        2028,
        2066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "540": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "543": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "546": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "547": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "549": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A62"
    },
    "552": {
      "fn": "ForgeGuess.Profit",
      "jump": "i",
      "offset": [
        2028,
        2066
      ],
      "op": "JUMP",
      "path": "3"
    },
    "553": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "554": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "556": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "558": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "559": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "561": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "562": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "DUP2",
      "path": "3"
    },
    "563": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "564": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "566": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "567": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "568": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "569": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "DUP2",
      "path": "3"
    },
    "570": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        2028,
        2066
      ],
      "op": "JUMP",
      "path": "3"
    },
    "571": {
      "offset": [
        1645,
        1671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "572": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        1645,
        1671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "575": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        1645,
        1671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "577": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        1645,
        1671
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "578": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        1645,
        1671
      ],
      "op": "DUP2",
      "path": "3"
    },
    "579": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        1645,
        1671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "580": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6188,
        6380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "581": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6188,
        6380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "584": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6188,
        6380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x516"
    },
    "587": {
      "fn": "ForgeGuess.penalty",
      "jump": "i",
      "offset": [
        6188,
        6380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "588": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "589": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "592": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "595": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "596": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "598": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A7D"
    },
    "601": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8232,
        8583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "602": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "603": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55C"
    },
    "606": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8232,
        8583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "607": {
      "offset": [
        1615,
        1639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "608": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        1615,
        1639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "611": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        1615,
        1639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "613": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        1615,
        1639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "614": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        1615,
        1639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "615": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        1615,
        1639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "616": {
      "offset": [
        2190,
        2220
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "617": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        2190,
        2220
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "620": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        2190,
        2220
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "622": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        2190,
        2220
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "623": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        2190,
        2220
      ],
      "op": "DUP2",
      "path": "3"
    },
    "624": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        2190,
        2220
      ],
      "op": "JUMP",
      "path": "3"
    },
    "625": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "626": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "629": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "632": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "633": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "635": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A9F"
    },
    "638": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMP",
      "path": "3"
    },
    "639": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "640": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C7"
    },
    "643": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMP",
      "path": "3"
    },
    "644": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "645": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "STOP",
      "path": "3"
    },
    "646": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "650": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294"
    },
    "653": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "654": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "656": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "659": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "660": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "661": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E4"
    },
    "664": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "665": {
      "offset": [
        2122,
        2149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "666": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "669": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "671": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        2122,
        2149
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "672": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        2122,
        2149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "673": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        2122,
        2149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "674": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "675": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "678": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B0"
    },
    "681": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "682": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "684": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A7D"
    },
    "687": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "688": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "689": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x882"
    },
    "692": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "offset": [
        1728,
        1779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "697": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C3"
    },
    "700": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "701": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "703": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "706": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        1728,
        1779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "707": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "708": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "710": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "712": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "713": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "715": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "716": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "DUP2",
      "path": "3"
    },
    "717": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "718": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "720": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "721": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "722": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "723": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "DUP2",
      "path": "3"
    },
    "724": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        1728,
        1779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "725": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "726": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "729": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E3"
    },
    "732": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "733": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "735": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE2"
    },
    "738": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "739": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "740": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB9"
    },
    "743": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "744": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "745": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "748": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6"
    },
    "751": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "752": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "754": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "757": {
      "fn": "ForgeGuess.perfectWithdraw",
      "jump": "i",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "758": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "759": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B6"
    },
    "762": {
      "fn": "ForgeGuess.perfectWithdraw",
      "jump": "i",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "763": {
      "offset": [
        1677,
        1722
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "764": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "767": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x309"
    },
    "770": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "771": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "773": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "776": {
      "fn": "ForgeGuess.perfectWithdraw",
      "jump": "i",
      "offset": [
        1677,
        1722
      ],
      "op": "JUMP",
      "path": "3"
    },
    "777": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "778": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "780": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "782": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "783": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "785": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "786": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "DUP2",
      "path": "3"
    },
    "787": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "788": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "790": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "791": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "792": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "793": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "DUP2",
      "path": "3"
    },
    "794": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        1677,
        1722
      ],
      "op": "JUMP",
      "path": "3"
    },
    "795": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        11668,
        11753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "796": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        11734,
        11746
      ],
      "op": "NUMBER",
      "path": "3",
      "statement": 0
    },
    "797": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        11668,
        11753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "800": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        11668,
        11753
      ],
      "op": "JUMP",
      "path": "3"
    },
    "801": {
      "offset": [
        1979,
        2022
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "802": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "805": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32F"
    },
    "808": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "809": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "811": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "814": {
      "fn": "ForgeGuess.blockNumber",
      "jump": "i",
      "offset": [
        1979,
        2022
      ],
      "op": "JUMP",
      "path": "3"
    },
    "815": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "816": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "818": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "820": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "821": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "823": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "824": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "825": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "826": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "828": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "829": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "830": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "831": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "832": {
      "fn": "ForgeGuess.blockNumber",
      "offset": [
        1979,
        2022
      ],
      "op": "JUMP",
      "path": "3"
    },
    "833": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "834": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "837": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34F"
    },
    "840": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "841": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "843": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "846": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10274,
        10632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "847": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "848": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D3"
    },
    "851": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10274,
        10632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "852": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "853": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "856": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x362"
    },
    "859": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "860": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "862": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A7D"
    },
    "865": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "866": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "867": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1299"
    },
    "870": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "871": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "872": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "875": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x375"
    },
    "878": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "879": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "881": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A62"
    },
    "884": {
      "fn": "ForgeGuess.balanceOf",
      "jump": "i",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "885": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "AND",
      "path": "3",
      "statement": 1
    },
    "895": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2831,
        2838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "897": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "898": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "899": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "900": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "902": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "904": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "905": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "907": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "908": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "909": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "910": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "911": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "912": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "913": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "916": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39E"
    },
    "919": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "920": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "922": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A62"
    },
    "925": {
      "fn": "ForgeGuess.currentForge",
      "jump": "i",
      "offset": [
        9904,
        10059
      ],
      "op": "JUMP",
      "path": "3"
    },
    "926": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "927": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1437"
    },
    "930": {
      "fn": "ForgeGuess.currentForge",
      "jump": "i",
      "offset": [
        9904,
        10059
      ],
      "op": "JUMP",
      "path": "3"
    },
    "931": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "932": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "935": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "938": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "939": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "941": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "944": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "945": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "946": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x146B"
    },
    "949": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "950": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "951": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "954": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C4"
    },
    "957": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "958": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "960": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7D"
    },
    "963": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMP",
      "path": "1"
    },
    "964": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "965": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1528"
    },
    "968": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMP",
      "path": "1"
    },
    "969": {
      "offset": [
        1832,
        1874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "970": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "973": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D7"
    },
    "976": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "977": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "979": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "982": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1832,
        1874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "983": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "984": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "986": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "988": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "989": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "991": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "992": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "993": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "994": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "996": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "997": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "998": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "999": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1000": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1832,
        1874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1001": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1002": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1005": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F7"
    },
    "1008": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1009": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1011": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "1014": {
      "fn": "ForgeGuess.withEstimator",
      "jump": "i",
      "offset": [
        9719,
        9868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1015": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1016": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15AE"
    },
    "1019": {
      "fn": "ForgeGuess.withEstimator",
      "jump": "i",
      "offset": [
        9719,
        9868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1020": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5698,
        5874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1021": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5698,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1024": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5698,
        5874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15BD"
    },
    "1027": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "i",
      "offset": [
        5698,
        5874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1028": {
      "offset": [
        2287,
        2365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1029": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1031": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1032": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x417"
    },
    "1035": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "offset": [
        2287,
        2365
      ],
      "op": "AND",
      "path": "3"
    },
    "1045": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1046": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1047": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1048": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1050": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2287,
        2365
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "op": "SWAP1"
    },
    "1060": {
      "op": "SWAP2"
    },
    "1061": {
      "op": "AND"
    },
    "1062": {
      "op": "DUP2"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "offset": [
        2287,
        2365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "1070": {
      "op": "JUMP"
    },
    "1071": {
      "offset": [
        1933,
        1973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1072": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x417"
    },
    "1075": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43D"
    },
    "1078": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1079": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1081": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "1084": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "i",
      "offset": [
        1933,
        1973
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1085": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1086": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "1088": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1090": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1091": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1093": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1094": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1095": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1096": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1098": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1099": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1100": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "offset": [
        1933,
        1973
      ],
      "op": "AND",
      "path": "3"
    },
    "1110": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1111": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1933,
        1973
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1112": {
      "offset": [
        2072,
        2115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1113": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1116": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x466"
    },
    "1119": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1120": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1122": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A62"
    },
    "1125": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "i",
      "offset": [
        2072,
        2115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1126": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1127": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "1129": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1131": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1132": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1134": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1135": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1136": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1137": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1139": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1140": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1141": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1142": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1143": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2072,
        2115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1144": {
      "offset": [
        1785,
        1826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1148": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x486"
    },
    "1151": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1152": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1154": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "1157": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "i",
      "offset": [
        1785,
        1826
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1158": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "1161": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1163": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1164": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1166": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1167": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1168": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1169": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1171": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1172": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1173": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1174": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1175": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1785,
        1826
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1176": {
      "offset": [
        2155,
        2184
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1177": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2155,
        2184
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1180": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2155,
        2184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1182": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2155,
        2184
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1183": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2155,
        2184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1184": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        2155,
        2184
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1185": {
      "offset": [
        1880,
        1927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1186": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "1189": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AF"
    },
    "1192": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1193": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1195": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC9"
    },
    "1198": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "i",
      "offset": [
        1880,
        1927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1199": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1200": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1202": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1204": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1205": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1207": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1208": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1209": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1210": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1212": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1213": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1214": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1215": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1216": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        1880,
        1927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1217": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1218": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11508,
        11511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1220": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11523,
        11543
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1221": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11546,
        11576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E6"
    },
    "1224": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11560,
        11575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F7"
    },
    "1227": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11570,
        11574
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "AND",
      "path": "3"
    },
    "1237": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2831,
        2838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1239": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1240": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1241": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1242": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "1244": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1246": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1247": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1249": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1250": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1251": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1252": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1253": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1254": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11546,
        11576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "op": "SUB"
    },
    "1263": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1264": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "AND",
      "path": "3"
    },
    "1265": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11586,
        11596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1267": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1268": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1269": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1270": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "1272": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1274": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1275": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1277": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1278": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1279": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11612
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1280": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11523,
        11576
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1281": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11523,
        11576
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11586,
        11596
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1284": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50E"
    },
    "1287": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1288": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11523,
        11576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1289": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11523,
        11576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1290": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B24"
    },
    "1293": {
      "fn": "ForgeGuess.Profit",
      "jump": "i",
      "offset": [
        11599,
        11632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1294": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11599,
        11632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1295": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11586,
        11632
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1296": {
      "fn": "ForgeGuess.Profit",
      "offset": [
        11458,
        11662
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1297": {
      "op": "POP"
    },
    "1298": {
      "op": "POP"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "op": "POP"
    },
    "1301": {
      "fn": "ForgeGuess.Profit",
      "jump": "o",
      "offset": [
        11458,
        11662
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1302": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6188,
        6380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1303": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6284,
        6289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1305": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6284,
        6289
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1306": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6229,
        6237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1308": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6229,
        6237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1309": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6229,
        6237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1310": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6229,
        6237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1311": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1312": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6293,
        6300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1314": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6293,
        6300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1315": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6291,
        6292
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1316": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6291,
        6300
      ],
      "op": "LT",
      "path": "3"
    },
    "1317": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1318": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x556"
    },
    "1321": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1322": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "1324": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1325": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1326": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1327": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6335
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1329": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1331": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1332": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1334": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1335": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1336": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6327,
        6338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1337": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x542"
    },
    "1340": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1341": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1342": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B65"
    },
    "1345": {
      "fn": "ForgeGuess.penalty",
      "jump": "i",
      "offset": [
        6320,
        6338
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1346": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1347": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6320,
        6338
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 3
    },
    "1350": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54E"
    },
    "1353": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1354": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7D"
    },
    "1357": {
      "fn": "ForgeGuess.penalty",
      "jump": "i",
      "offset": [
        6302,
        6305
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1358": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1359": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1360": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "POP",
      "path": "3"
    },
    "1361": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6302,
        6305
      ],
      "op": "POP",
      "path": "3"
    },
    "1362": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51F"
    },
    "1365": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1366": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6271,
        6349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6370,
        6373
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 4
    },
    "1369": {
      "fn": "ForgeGuess.penalty",
      "offset": [
        6188,
        6380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "fn": "ForgeGuess.penalty",
      "jump": "o",
      "offset": [
        6188,
        6380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1372": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8232,
        8583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1373": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8300,
        8304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1375": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8300,
        8304
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1376": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1377": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8352,
        8354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5A"
    },
    "1379": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8350,
        8351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1380": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8350,
        8354
      ],
      "op": "LT",
      "path": "3"
    },
    "1381": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1382": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5BC"
    },
    "1385": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1386": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8399,
        8402
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1387": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8377,
        8396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x578"
    },
    "1390": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8391,
        8395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294"
    },
    "1393": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8394,
        8395
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1394": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8391,
        8393
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x62"
    },
    "1396": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8391,
        8395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "1399": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8391,
        8395
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1400": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8377,
        8396
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1401": {
      "branch": 74,
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8377,
        8402
      ],
      "op": "LT",
      "path": "3"
    },
    "1402": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8374,
        8461
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1403": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8374,
        8461
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58F"
    },
    "1406": {
      "branch": 74,
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8374,
        8461
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1407": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8427,
        8446
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x58C"
    },
    "1410": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8441,
        8445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294"
    },
    "1413": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8444,
        8445
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1414": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8441,
        8443
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x63"
    },
    "1416": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8441,
        8445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "1419": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8441,
        8445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1420": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8427,
        8446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1421": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8421,
        8446
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1422": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8421,
        8446
      ],
      "op": "POP",
      "path": "3"
    },
    "1423": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8374,
        8461
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1424": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8502,
        8505
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1425": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8477,
        8499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59F"
    },
    "1428": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8502,
        8505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1429": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8492,
        8498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x362"
    },
    "1432": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8497,
        8498
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1433": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8492,
        8494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x63"
    },
    "1435": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8492,
        8498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "1438": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8492,
        8498
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1439": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8477,
        8499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1440": {
      "branch": 75,
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8477,
        8505
      ],
      "op": "GT",
      "path": "3"
    },
    "1441": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8474,
        8544
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1442": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8474,
        8544
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AA"
    },
    "1445": {
      "branch": 75,
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8474,
        8544
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1446": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8524,
        8529
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x5BC"
    },
    "1449": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8524,
        8529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1450": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8474,
        8544
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1451": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "1452": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B4"
    },
    "1455": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1456": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7D"
    },
    "1459": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8356,
        8359
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1460": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1461": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1462": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "POP",
      "path": "3"
    },
    "1463": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8356,
        8359
      ],
      "op": "POP",
      "path": "3"
    },
    "1464": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x560"
    },
    "1467": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1468": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8340,
        8554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1469": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8570,
        8576
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x50E"
    },
    "1472": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8575,
        8576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1473": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8570,
        8572
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x63"
    },
    "1475": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "offset": [
        8570,
        8576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "1478": {
      "fn": "ForgeGuess.maxGuessPerInput",
      "jump": "i",
      "offset": [
        8570,
        8576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1479": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1480": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7737,
        7748
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1482": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7737,
        7748
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7737,
        7748
      ],
      "op": "AND",
      "path": "3"
    },
    "1492": {
      "branch": 76,
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7766,
        7776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 9
    },
    "1493": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x616"
    },
    "1496": {
      "branch": 76,
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1497": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1499": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1506": {
      "op": "SHL"
    },
    "1507": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1508": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1511": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1513": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1514": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "ADD",
      "path": "3"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH14",
      "value": "0x43616E6E6F74207374616B65203"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1550": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1552": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1553": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1554": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1555": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "SUB",
      "path": "3"
    },
    "1556": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1557": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "1558": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7758,
        7795
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1559": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7926,
        7936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1561": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7926,
        7936
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1562": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7885,
        7896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1564": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7885,
        7896
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1565": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1567": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1568": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1577": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1578": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7917,
        7921
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1579": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1581": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1582": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ADD",
      "path": "3"
    },
    "1583": {
      "op": "MSTORE"
    },
    "1584": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7831,
        7841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1586": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7831,
        7841
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1587": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7926,
        7936
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7885,
        7896
      ],
      "op": "AND",
      "path": "3"
    },
    "1597": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7885,
        7896
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1598": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7908
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1603": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1609": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1611": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1612": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1613": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1614": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "SUB",
      "path": "3"
    },
    "1615": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1616": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1617": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "GAS",
      "path": "3"
    },
    "1618": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1619": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1620": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1621": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1622": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x663"
    },
    "1625": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1626": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1627": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1629": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1630": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1631": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1632": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1634": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1635": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1636": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "POP",
      "path": "3"
    },
    "1637": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "POP",
      "path": "3"
    },
    "1638": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "POP",
      "path": "3"
    },
    "1639": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "POP",
      "path": "3"
    },
    "1640": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1642": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1643": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1644": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1646": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "NOT",
      "path": "3"
    },
    "1647": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1649": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1650": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ADD",
      "path": "3"
    },
    "1651": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "AND",
      "path": "3"
    },
    "1652": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1653": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ADD",
      "path": "3"
    },
    "1654": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1655": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1657": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1658": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "POP",
      "path": "3"
    },
    "1659": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1660": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "ADD",
      "path": "3"
    },
    "1661": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1662": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x687"
    },
    "1665": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1666": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1667": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "1670": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        7870,
        7923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1671": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1672": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7870,
        7936
      ],
      "op": "SUB",
      "path": "3"
    },
    "1673": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7854,
        7865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "1675": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7854,
        7865
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1676": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7845,
        7851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1677": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7845,
        7865
      ],
      "op": "MUL",
      "path": "3"
    },
    "1678": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1679": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69A"
    },
    "1682": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1683": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69A"
    },
    "1686": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC8"
    },
    "1689": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        7844,
        7937
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1690": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 10
    },
    "1700": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1701": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "3"
    },
    "1702": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1704": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1705": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1706": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1707": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "1709": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1711": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1712": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1713": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1714": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1716": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1717": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1718": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7969
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1719": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1720": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1721": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1722": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1723": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1724": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7844,
        7937
      ],
      "op": "DIV",
      "path": "3"
    },
    "1725": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1726": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1727": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "ADD",
      "path": "3"
    },
    "1728": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1729": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1730": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7951,
        7978
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1731": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8003
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x10"
    },
    "1733": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1734": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1735": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1736": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1737": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "ADD",
      "path": "3"
    },
    "1738": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1739": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1740": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7992,
        8012
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1741": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8033
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0xC"
    },
    "1743": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1744": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1745": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1746": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1747": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1748": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1749": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8042
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1750": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1751": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1752": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1753": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1754": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "SUB",
      "path": "3"
    },
    "1755": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1756": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8026,
        8057
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1757": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 13
    },
    "1758": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1767": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1768": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1769": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1770": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "AND",
      "path": "3"
    },
    "1771": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "1778": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1779": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x704"
    },
    "1782": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1783": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8110,
        8120
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1784": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8110,
        8120
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1785": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8130,
        8134
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1786": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8130,
        8134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1787": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8050,
        8056
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1788": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8050,
        8056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1789": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1791": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ADD",
      "path": "3"
    },
    "1792": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "1795": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1796": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1797": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1799": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1801": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1802": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1803": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1804": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "SUB",
      "path": "3"
    },
    "1805": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1806": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1808": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1809": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "GAS",
      "path": "3"
    },
    "1810": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "CALL",
      "path": "3"
    },
    "1811": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1812": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1813": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1814": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x723"
    },
    "1817": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1818": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1819": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1821": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1822": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1823": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1824": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1826": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1827": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1828": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "POP",
      "path": "3"
    },
    "1829": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "POP",
      "path": "3"
    },
    "1830": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "POP",
      "path": "3"
    },
    "1831": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "POP",
      "path": "3"
    },
    "1832": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1834": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1835": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1836": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1838": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "NOT",
      "path": "3"
    },
    "1839": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1841": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1842": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ADD",
      "path": "3"
    },
    "1843": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "AND",
      "path": "3"
    },
    "1844": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1845": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ADD",
      "path": "3"
    },
    "1846": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1847": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1849": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1850": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "POP",
      "path": "3"
    },
    "1851": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1852": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "ADD",
      "path": "3"
    },
    "1853": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1854": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x747"
    },
    "1857": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1858": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1859": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "1862": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1863": {
      "branch": 77,
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8094,
        8144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1864": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1866": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1867": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1868": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1870": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "ADD",
      "path": "3"
    },
    "1871": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1873": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1874": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1875": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1C"
    },
    "1877": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1878": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1879": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1881": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "ADD",
      "path": "3"
    },
    "1882": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7374616B656420746F6B656E207472616E73666572206661696C656400000000"
    },
    "1915": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1916": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1917": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8146,
        8167
      ],
      "op": "POP",
      "path": "3"
    },
    "1918": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1919": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79B"
    },
    "1922": {
      "branch": 77,
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1923": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1925": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1934": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1935": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1937": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "ADD",
      "path": "3"
    },
    "1938": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "1941": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1942": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1943": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C71"
    },
    "1946": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "i",
      "offset": [
        8086,
        8168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1947": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1948": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8086,
        8168
      ],
      "op": "POP",
      "path": "3"
    },
    "1949": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8203,
        8210
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 14
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "AND",
      "path": "3"
    },
    "1959": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "1992": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8212,
        8218
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1993": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1995": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1996": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D7"
    },
    "1999": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2000": {
      "op": "DUP2"
    },
    "2001": {
      "op": "MSTORE"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2004": {
      "op": "ADD"
    },
    "2005": {
      "op": "SWAP1"
    },
    "2006": {
      "op": "JUMP"
    },
    "2007": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2008": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2010": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2011": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2012": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2013": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "SUB",
      "path": "3"
    },
    "2014": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2015": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        8196,
        8219
      ],
      "op": "LOG2",
      "path": "3"
    },
    "2016": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7715,
        8226
      ],
      "op": "POP",
      "path": "3"
    },
    "2017": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "POP",
      "path": "3"
    },
    "2018": {
      "fn": "ForgeGuess.stakeFor",
      "offset": [
        7649,
        8226
      ],
      "op": "POP",
      "path": "3"
    },
    "2019": {
      "fn": "ForgeGuess.stakeFor",
      "jump": "o",
      "offset": [
        7649,
        8226
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2020": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2021": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6121,
        6131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2023": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6121,
        6131
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2024": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6080,
        6091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "2026": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6080,
        6091
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2027": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2029": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2030": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2039": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2040": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6112,
        6116
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2041": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2043": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2044": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ADD",
      "path": "3"
    },
    "2045": {
      "op": "MSTORE"
    },
    "2046": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5975,
        5982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2048": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5975,
        5982
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2049": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5975,
        5982
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2050": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5975,
        5982
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2051": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6145,
        6152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41A"
    },
    "2054": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6145,
        6152
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2055": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6135,
        6140
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2056": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6135,
        6140
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2057": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6121,
        6131
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6080,
        6091
      ],
      "op": "AND",
      "path": "3"
    },
    "2067": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6080,
        6091
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2068": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6103
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2073": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6103
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2079": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2081": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2082": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2083": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2084": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "SUB",
      "path": "3"
    },
    "2085": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2086": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2087": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "GAS",
      "path": "3"
    },
    "2088": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2089": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2090": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2091": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2092": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x839"
    },
    "2095": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2096": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2097": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2099": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2100": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2101": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2102": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2104": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2105": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2106": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "POP",
      "path": "3"
    },
    "2107": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "POP",
      "path": "3"
    },
    "2108": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "POP",
      "path": "3"
    },
    "2109": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "POP",
      "path": "3"
    },
    "2110": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2112": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2113": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2114": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2116": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "NOT",
      "path": "3"
    },
    "2117": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2119": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2120": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ADD",
      "path": "3"
    },
    "2121": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "AND",
      "path": "3"
    },
    "2122": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2123": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ADD",
      "path": "3"
    },
    "2124": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2125": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2127": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2128": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "POP",
      "path": "3"
    },
    "2129": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2130": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "ADD",
      "path": "3"
    },
    "2131": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2132": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x85D"
    },
    "2135": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2136": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2137": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "2140": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        6065,
        6118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2141": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2142": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x867"
    },
    "2145": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6131
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2146": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2147": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "2150": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        6065,
        6131
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2151": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6065,
        6131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2152": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6064,
        6140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x871"
    },
    "2155": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6064,
        6140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2156": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6064,
        6140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2157": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6064,
        6140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "2160": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        6064,
        6140
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2161": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6064,
        6140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2162": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6063,
        6153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87B"
    },
    "2165": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6063,
        6153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2166": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6063,
        6153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2167": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6063,
        6153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "2170": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "i",
      "offset": [
        6063,
        6153
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2171": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6063,
        6153
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2172": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        6049,
        6153
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2173": {
      "fn": "ForgeGuess.MaxINForGuess",
      "offset": [
        5916,
        6182
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "fn": "ForgeGuess.MaxINForGuess",
      "jump": "o",
      "offset": [
        5916,
        6182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2178": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2179": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10867,
        10876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88A"
    },
    "2182": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10867,
        10874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x516"
    },
    "2185": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        10867,
        10876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2186": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10867,
        10876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2187": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10859,
        10866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2188": {
      "branch": 78,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10859,
        10876
      ],
      "op": "LT",
      "path": "3"
    },
    "2189": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10856,
        10909
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2190": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10856,
        10909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x895"
    },
    "2193": {
      "branch": 78,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10856,
        10909
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2194": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "POP",
      "path": "3"
    },
    "2195": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10778,
        11448
      ],
      "op": "POP",
      "path": "3"
    },
    "2196": {
      "fn": "ForgeGuess.withdraw",
      "jump": "o",
      "offset": [
        10778,
        11448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2197": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10856,
        10909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2198": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10955,
        10965
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 15
    },
    "2199": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2201": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2202": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2203": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2204": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10954
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "2206": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2208": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2209": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2211": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2212": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2213": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10945,
        10966
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2214": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10935,
        10966
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2215": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10935,
        10966
      ],
      "op": "GT",
      "path": "3"
    },
    "2216": {
      "branch": 79,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10935,
        10966
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2217": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F4"
    },
    "2220": {
      "branch": 79,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2221": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2223": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2224": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2232": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2235": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2237": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2238": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "ADD",
      "path": "3"
    },
    "2239": {
      "op": "MSTORE"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "op": "PUSH32",
      "value": "0x77697468647261773A2062616C616E6365206973206C6F776572000000000000"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2282": {
      "op": "DUP3"
    },
    "2283": {
      "op": "ADD"
    },
    "2284": {
      "op": "MSTORE"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "2291": {
      "op": "JUMP"
    },
    "2292": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        10927,
        10997
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2293": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11016,
        11027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2295": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11030,
        11042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FF"
    },
    "2298": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11035,
        11041
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2299": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11030,
        11034
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D3"
    },
    "2302": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11030,
        11042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2303": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11030,
        11042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2304": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11087,
        11097
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 16
    },
    "2305": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2307": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2308": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2309": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2310": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "2312": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2314": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2315": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2317": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2318": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11098
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2319": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2320": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2321": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2322": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2323": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "SUB",
      "path": "3"
    },
    "2324": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2325": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11077,
        11108
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2326": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11147
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x10"
    },
    "2328": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11147
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2329": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11147
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2330": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11156
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2331": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2332": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11136,
        11156
      ],
      "op": "SUB",
      "path": "3"
    },
    "2333": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11122,
        11156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2334": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11122,
        11156
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2335": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11016,
        11042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11212,
        11216
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0x3E8"
    },
    "2340": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11206,
        11209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "2343": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11209
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2344": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11209
      ],
      "op": "MUL",
      "path": "3"
    },
    "2345": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11178,
        11188
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2346": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2348": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2349": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2350": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2351": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2353": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2355": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2356": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2358": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2359": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11189
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2360": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2361": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2362": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11216
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2363": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2364": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11216
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2365": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11197,
        11216
      ],
      "op": "DIV",
      "path": "3"
    },
    "2366": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2367": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2368": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "ADD",
      "path": "3"
    },
    "2369": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2370": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11170,
        11217
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2371": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11265
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x12"
    },
    "2373": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11265
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11265
      ],
      "op": "AND",
      "path": "3"
    },
    "2383": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11274
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2388": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11283,
        11287
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2389": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11305,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "2392": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x962"
    },
    "2395": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11297
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2396": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11300,
        11302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x19"
    },
    "2398": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "2401": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11291,
        11302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2402": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2403": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96C"
    },
    "2406": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11309
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2407": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2408": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "2411": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11291,
        11309
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2412": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11291,
        11309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2413": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2415": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "op": "NOT"
    },
    "2425": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2427": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2428": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2429": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SHL",
      "path": "3"
    },
    "2430": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "AND",
      "path": "3"
    },
    "2431": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2432": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "op": "SWAP1"
    },
    "2442": {
      "op": "SWAP3"
    },
    "2443": {
      "op": "AND"
    },
    "2444": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2446": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2447": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ADD",
      "path": "3"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2451": {
      "op": "DUP3"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "op": "MSTORE"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2459": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2461": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2462": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2463": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2464": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SUB",
      "path": "3"
    },
    "2465": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2466": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2468": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2469": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "GAS",
      "path": "3"
    },
    "2470": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "CALL",
      "path": "3"
    },
    "2471": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2472": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2473": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2474": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "2477": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2478": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2479": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2481": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2482": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2483": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2484": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2486": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2487": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2488": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "POP",
      "path": "3"
    },
    "2489": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "POP",
      "path": "3"
    },
    "2490": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "POP",
      "path": "3"
    },
    "2491": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "POP",
      "path": "3"
    },
    "2492": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2494": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2495": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2496": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2498": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "NOT",
      "path": "3"
    },
    "2499": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2501": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2502": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ADD",
      "path": "3"
    },
    "2503": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "AND",
      "path": "3"
    },
    "2504": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2505": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ADD",
      "path": "3"
    },
    "2506": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2507": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2509": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2510": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "POP",
      "path": "3"
    },
    "2511": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2512": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "ADD",
      "path": "3"
    },
    "2513": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2514": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DB"
    },
    "2517": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2518": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2519": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "2522": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11254,
        11311
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2523": {
      "branch": 80,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11254,
        11311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2524": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E4"
    },
    "2527": {
      "branch": 80,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2528": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2530": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2531": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2532": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11246,
        11312
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2533": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11341
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x12"
    },
    "2535": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11341
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "SUB"
    },
    "2544": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11341
      ],
      "op": "AND",
      "path": "3"
    },
    "2545": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11350
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2550": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11351,
        11361
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2551": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11381,
        11385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "2554": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11365,
        11377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA05"
    },
    "2557": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11365,
        11371
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2558": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11374,
        11377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "2561": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11365,
        11377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "2564": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11365,
        11377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2565": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11365,
        11377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2566": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11364,
        11385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0F"
    },
    "2569": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11364,
        11385
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2570": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11364,
        11385
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2571": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11364,
        11385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "2574": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11364,
        11385
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2575": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11364,
        11385
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2576": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2578": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "op": "SUB"
    },
    "2587": {
      "op": "NOT"
    },
    "2588": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2590": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2591": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2592": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SHL",
      "path": "3"
    },
    "2593": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "AND",
      "path": "3"
    },
    "2594": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2595": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "op": "SUB"
    },
    "2604": {
      "op": "SWAP1"
    },
    "2605": {
      "op": "SWAP3"
    },
    "2606": {
      "op": "AND"
    },
    "2607": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2609": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2610": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ADD",
      "path": "3"
    },
    "2611": {
      "op": "MSTORE"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2622": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2624": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2625": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2626": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2627": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SUB",
      "path": "3"
    },
    "2628": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2629": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2631": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2632": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "GAS",
      "path": "3"
    },
    "2633": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "CALL",
      "path": "3"
    },
    "2634": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2635": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2636": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2637": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5A"
    },
    "2640": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2641": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2642": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2644": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2645": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2646": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2647": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2649": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2650": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2651": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "POP",
      "path": "3"
    },
    "2652": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "POP",
      "path": "3"
    },
    "2653": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "POP",
      "path": "3"
    },
    "2654": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "POP",
      "path": "3"
    },
    "2655": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2657": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2658": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2659": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2661": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "NOT",
      "path": "3"
    },
    "2662": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2664": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2665": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ADD",
      "path": "3"
    },
    "2666": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "AND",
      "path": "3"
    },
    "2667": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2668": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ADD",
      "path": "3"
    },
    "2669": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2670": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2672": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2673": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "POP",
      "path": "3"
    },
    "2674": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2675": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "ADD",
      "path": "3"
    },
    "2676": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2677": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7E"
    },
    "2680": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2681": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2682": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "2685": {
      "fn": "ForgeGuess.withdraw",
      "jump": "i",
      "offset": [
        11330,
        11387
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2686": {
      "branch": 81,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11330,
        11387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2687": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA87"
    },
    "2690": {
      "branch": 81,
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2691": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2693": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2694": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2695": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11322,
        11388
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2696": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11412,
        11441
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x40"
    },
    "2698": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11412,
        11441
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2699": {
      "op": "DUP4"
    },
    "2700": {
      "op": "DUP2"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11422,
        11432
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2703": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11422,
        11432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2704": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11412,
        11441
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "2737": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11412,
        11441
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "fn": "ForgeGuess.withdraw",
      "offset": [
        11412,
        11441
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D7"
    },
    "2744": {
      "op": "JUMP"
    },
    "2745": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2746": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3805,
        3822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2748": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3834,
        3845
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2749": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3848,
        3869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC6"
    },
    "2752": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3858,
        3861
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2753": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3863,
        3868
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2754": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3848,
        3857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1299"
    },
    "2757": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        3848,
        3869
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2758": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3848,
        3869
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2759": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3834,
        3869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2760": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3834,
        3869
      ],
      "op": "POP",
      "path": "3"
    },
    "2761": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3893,
        3896
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 22
    },
    "2762": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3887,
        3890
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2763": {
      "branch": 82,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3887,
        3896
      ],
      "op": "LT",
      "path": "3"
    },
    "2764": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB30"
    },
    "2767": {
      "branch": 82,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2768": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2770": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2779": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2782": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2784": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2785": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "ADD",
      "path": "3"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH32",
      "value": "0x596F752077696C6C206C6F6F7365206D6F6E657920657665727974696D652061"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "ADD"
    },
    "2831": {
      "op": "MSTORE"
    },
    "2832": {
      "op": "PUSH16",
      "value": "0x742074686573652073657474696E6773"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2854": {
      "op": "DUP3"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "MSTORE"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2859": {
      "op": "ADD"
    },
    "2860": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "2863": {
      "op": "JUMP"
    },
    "2864": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3879,
        3949
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2865": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3974,
        3980
      ],
      "op": "PUSH8",
      "path": "3",
      "statement": 23,
      "value": "0xDE0B6B3A7640000"
    },
    "2874": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3967,
        3970
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2875": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3967,
        3980
      ],
      "op": "LT",
      "path": "3"
    },
    "2876": {
      "branch": 83,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3967,
        3980
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2877": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "2880": {
      "branch": 83,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2881": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2883": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2892": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2895": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2897": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2898": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "ADD",
      "path": "3"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2904": {
      "op": "DUP3"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH15",
      "value": "0x4D696E20626574203120466F726765"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2928": {
      "op": "DUP3"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "MSTORE"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2933": {
      "op": "ADD"
    },
    "2934": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "2937": {
      "op": "JUMP"
    },
    "2938": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3959,
        4000
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2939": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4031,
        4032
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x1"
    },
    "2941": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4018,
        4027
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2942": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4018,
        4032
      ],
      "op": "LT",
      "path": "3"
    },
    "2943": {
      "branch": 84,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4018,
        4032
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2944": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD9"
    },
    "2947": {
      "branch": 84,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2948": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2950": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2959": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2962": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2964": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2965": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "ADD",
      "path": "3"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2971": {
      "op": "DUP3"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "op": "MSTORE"
    },
    "2974": {
      "op": "PUSH32",
      "value": "0x4D7573742073656E64206174206C6561737420746865206D696E696D756D2030"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3009": {
      "op": "DUP3"
    },
    "3010": {
      "op": "ADD"
    },
    "3011": {
      "op": "MSTORE"
    },
    "3012": {
      "op": "PUSH5",
      "value": "0x2E30303031"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "3032": {
      "op": "JUMP"
    },
    "3033": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4010,
        4074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3034": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4156,
        4159
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 25
    },
    "3035": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4132,
        4152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE3"
    },
    "3038": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4146,
        4151
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3039": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4132,
        4145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E4"
    },
    "3042": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4132,
        4152
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3043": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4132,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3044": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4132,
        4159
      ],
      "op": "LT",
      "path": "3"
    },
    "3045": {
      "branch": 85,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4132,
        4159
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3046": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC49"
    },
    "3049": {
      "branch": 85,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3050": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3052": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3061": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3064": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3066": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3067": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "ADD",
      "path": "3"
    },
    "3068": {
      "op": "MSTORE"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "ADD"
    },
    "3075": {
      "op": "MSTORE"
    },
    "3076": {
      "op": "PUSH32",
      "value": "0x42616E6B726F6C6C20746F6F206C6F7720666F722074686973206265742C2050"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3111": {
      "op": "DUP3"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "MSTORE"
    },
    "3114": {
      "op": "PUSH15",
      "value": "0x1B19585CD9481B1BDDD95C8818995D"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3135": {
      "op": "DUP3"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "MSTORE"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "3144": {
      "op": "JUMP"
    },
    "3145": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4124,
        4212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3146": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4256,
        4258
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x62"
    },
    "3148": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4255
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3149": {
      "branch": 86,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4258
      ],
      "op": "LT",
      "path": "3"
    },
    "3150": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3151": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3152": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC59"
    },
    "3155": {
      "branch": 86,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3156": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "POP",
      "path": "3"
    },
    "3157": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4270,
        4271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3159": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4262,
        4267
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3160": {
      "branch": 87,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4262,
        4271
      ],
      "op": "GT",
      "path": "3"
    },
    "3161": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4250,
        4271
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3162": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA5"
    },
    "3165": {
      "branch": 87,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3166": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3168": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3177": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3180": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3182": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3183": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "ADD",
      "path": "3"
    },
    "3184": {
      "op": "MSTORE"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH32",
      "value": "0x4D757374206775657373206265747765656E20312D3938000000000000000000"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3227": {
      "op": "DUP3"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "3236": {
      "op": "JUMP"
    },
    "3237": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4242,
        4299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3238": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x12"
    },
    "3240": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3241": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3243": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3244": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3253": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3263": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3264": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "AND",
      "path": "3"
    },
    "3265": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4328
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3266": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4341
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "3271": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3272": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD9"
    },
    "3275": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3276": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4342,
        4352
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3277": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4342,
        4352
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3278": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4362,
        4366
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3279": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4362,
        4366
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3280": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4369,
        4372
      ],
      "op": "DUP10",
      "path": "3"
    },
    "3281": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4369,
        4372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3282": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3284": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ADD",
      "path": "3"
    },
    "3285": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "3288": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3289": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3290": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3292": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3294": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3295": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3296": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3297": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "SUB",
      "path": "3"
    },
    "3298": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3299": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3301": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3302": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "GAS",
      "path": "3"
    },
    "3303": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "CALL",
      "path": "3"
    },
    "3304": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3305": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3306": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3307": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF8"
    },
    "3310": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3311": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3312": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3314": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3315": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3316": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3317": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3319": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3320": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3321": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "POP",
      "path": "3"
    },
    "3322": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "POP",
      "path": "3"
    },
    "3323": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "POP",
      "path": "3"
    },
    "3324": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "POP",
      "path": "3"
    },
    "3325": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3327": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3328": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3329": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3331": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "NOT",
      "path": "3"
    },
    "3332": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3334": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3335": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ADD",
      "path": "3"
    },
    "3336": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "AND",
      "path": "3"
    },
    "3337": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3338": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ADD",
      "path": "3"
    },
    "3339": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3340": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3342": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3343": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "POP",
      "path": "3"
    },
    "3344": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3345": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "ADD",
      "path": "3"
    },
    "3346": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3347": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1C"
    },
    "3350": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3351": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3352": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "3355": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3356": {
      "branch": 88,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4317,
        4373
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3357": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5D"
    },
    "3360": {
      "branch": 88,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3361": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3363": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3370": {
      "op": "SHL"
    },
    "3371": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3372": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3375": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3377": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3378": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "ADD",
      "path": "3"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "op": "MSTORE"
    },
    "3387": {
      "op": "PUSH18",
      "value": "0x5472616E73666572206D75737420776F726B"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3408": {
      "op": "SHL"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3411": {
      "op": "DUP3"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "3420": {
      "op": "JUMP"
    },
    "3421": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4309,
        4396
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3422": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3424": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3425": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3434": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3435": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4453,
        4457
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3436": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3438": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3439": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ADD",
      "path": "3"
    },
    "3440": {
      "op": "MSTORE"
    },
    "3441": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4415,
        4427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3443": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4415,
        4427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3444": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4434
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3483": {
      "op": "SHL"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4444
      ],
      "op": "AND",
      "path": "3"
    },
    "3486": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3487": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "3492": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3498": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3500": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3501": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3502": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3503": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "SUB",
      "path": "3"
    },
    "3504": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3505": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3506": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "GAS",
      "path": "3"
    },
    "3507": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3508": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3509": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3510": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3511": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "3514": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3515": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3516": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3518": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3519": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3520": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3521": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3523": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3524": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3525": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3526": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3527": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3528": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3529": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3531": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3532": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3533": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3535": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "NOT",
      "path": "3"
    },
    "3536": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3538": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3539": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ADD",
      "path": "3"
    },
    "3540": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "AND",
      "path": "3"
    },
    "3541": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3542": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ADD",
      "path": "3"
    },
    "3543": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3544": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3546": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3547": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3548": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3549": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "ADD",
      "path": "3"
    },
    "3550": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3551": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE8"
    },
    "3554": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3555": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3556": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "3559": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4430,
        4459
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3560": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4430,
        4459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3561": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4415,
        4459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3562": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4415,
        4459
      ],
      "op": "POP",
      "path": "3"
    },
    "3563": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4526,
        4527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3565": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4514,
        4523
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3566": {
      "branch": 89,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4514,
        4527
      ],
      "op": "GT",
      "path": "3"
    },
    "3567": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4511,
        4616
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3568": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4511,
        4616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9F"
    },
    "3571": {
      "branch": 89,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4511,
        4616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "SUB"
    },
    "3580": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4542
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 28,
      "value": "0x0"
    },
    "3613": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4555
      ],
      "op": "AND",
      "path": "3"
    },
    "3614": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4555
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "3619": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4556,
        4566
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3620": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4576,
        4580
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3621": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4591,
        4602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2F"
    },
    "3624": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4601,
        4602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3626": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4591,
        4600
      ],
      "op": "DUP10",
      "path": "3"
    },
    "3627": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4591,
        4602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "3630": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4591,
        4602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3631": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4591,
        4602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3632": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4587
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3634": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4587
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3635": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3C"
    },
    "3638": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4603
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3639": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3640": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "3643": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4584,
        4603
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3644": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4584,
        4603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3645": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3647": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3648": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3649": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3654": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "AND",
      "path": "3"
    },
    "3655": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3657": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SHL",
      "path": "3"
    },
    "3658": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3659": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3660": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3662": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ADD",
      "path": "3"
    },
    "3663": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5A"
    },
    "3666": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3667": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3668": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3669": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3670": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "3673": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3674": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3675": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3677": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3679": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3680": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3681": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3682": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SUB",
      "path": "3"
    },
    "3683": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3684": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3686": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3687": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "GAS",
      "path": "3"
    },
    "3688": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "CALL",
      "path": "3"
    },
    "3689": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3690": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3691": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3692": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE79"
    },
    "3695": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3696": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3697": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3699": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3700": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3701": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3702": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3704": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3705": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3706": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3707": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3708": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3709": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3710": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3712": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3713": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3714": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3716": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "NOT",
      "path": "3"
    },
    "3717": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3719": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3720": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ADD",
      "path": "3"
    },
    "3721": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "AND",
      "path": "3"
    },
    "3722": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3723": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ADD",
      "path": "3"
    },
    "3724": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3725": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3727": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3728": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3729": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3730": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "ADD",
      "path": "3"
    },
    "3731": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3732": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9D"
    },
    "3735": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3736": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3737": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "3740": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3741": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3742": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4538,
        4605
      ],
      "op": "POP",
      "path": "3"
    },
    "3743": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4511,
        4616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3744": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4635,
        4648
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0x8AC7230489E80000"
    },
    "3753": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3754": {
      "branch": 90,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4628,
        4649
      ],
      "op": "LT",
      "path": "3"
    },
    "3755": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3756": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF55"
    },
    "3759": {
      "branch": 90,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3760": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4668
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 29,
      "value": "0x0"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "op": "SUB"
    },
    "3801": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4681
      ],
      "op": "AND",
      "path": "3"
    },
    "3802": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4681
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "3807": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4682,
        4692
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3808": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4702,
        4706
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3809": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4715,
        4724
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3810": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3812": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4712
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3813": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEEE"
    },
    "3816": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3817": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3818": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "3821": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4709,
        4724
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3822": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4709,
        4724
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3823": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3825": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3826": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3827": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3832": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "AND",
      "path": "3"
    },
    "3833": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3835": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SHL",
      "path": "3"
    },
    "3836": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3837": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3838": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3840": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "3841": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF0C"
    },
    "3844": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3845": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3846": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3847": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3848": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "3851": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3852": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3853": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3855": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3857": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3858": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3859": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3860": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SUB",
      "path": "3"
    },
    "3861": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3862": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3864": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3865": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "GAS",
      "path": "3"
    },
    "3866": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "CALL",
      "path": "3"
    },
    "3867": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3868": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3869": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3870": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2B"
    },
    "3873": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3874": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3875": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3877": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3878": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3879": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3880": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3882": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3883": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3884": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3885": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3886": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3887": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3888": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3890": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3891": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3892": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3894": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "NOT",
      "path": "3"
    },
    "3895": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3897": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3898": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "3899": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "AND",
      "path": "3"
    },
    "3900": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3901": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "3902": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3903": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3905": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3906": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3907": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3908": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "3909": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3910": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4F"
    },
    "3913": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3914": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3915": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "3918": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3919": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3920": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4664,
        4725
      ],
      "op": "POP",
      "path": "3"
    },
    "3921": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109B"
    },
    "3924": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3925": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4625,
        5291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3926": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4750,
        4763
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x2B5E3AF16B1880000"
    },
    "3936": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4744,
        4747
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3937": {
      "branch": 91,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4744,
        4763
      ],
      "op": "LT",
      "path": "3"
    },
    "3938": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3939": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCE"
    },
    "3942": {
      "branch": 91,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3943": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4792,
        4798
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x186A0"
    },
    "3947": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3949": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3950": {
      "branch": 92,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4798
      ],
      "op": "GT",
      "path": "3"
    },
    "3951": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4817
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3952": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF85"
    },
    "3955": {
      "branch": 92,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4812
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3959": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4812
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3960": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF82"
    },
    "3963": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4817
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3964": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4815,
        4817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "3966": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "3969": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4809,
        4817
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3970": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4809,
        4817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3971": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4802,
        4806
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3972": {
      "branch": 93,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4802,
        4817
      ],
      "op": "LT",
      "path": "3"
    },
    "3973": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4782,
        4817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3974": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4779,
        4967
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3975": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4779,
        4967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC9"
    },
    "3978": {
      "branch": 93,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4779,
        4967
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3979": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4891,
        4895
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 30,
      "value": "0x0"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "op": "SUB"
    },
    "4020": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4891,
        4908
      ],
      "op": "AND",
      "path": "3"
    },
    "4021": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4891,
        4908
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "4026": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4909,
        4919
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4027": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4929,
        4933
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4028": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4942,
        4951
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4029": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4031": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4939
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4032": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4951
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEEE"
    },
    "4035": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4951
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4036": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4951
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4037": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4936,
        4951
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4040": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        4936,
        4951
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4041": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4779,
        4967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4042": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109B"
    },
    "4045": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4046": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4741,
        5291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4047": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4994,
        4996
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5D"
    },
    "4049": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4985,
        4990
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4050": {
      "branch": 94,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4985,
        4996
      ],
      "op": "GT",
      "path": "3"
    },
    "4051": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4982,
        5291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE4"
    },
    "4054": {
      "branch": 94,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4982,
        5291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4055": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5030,
        5033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4057": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5030,
        5033
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4058": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5030,
        5036
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF82"
    },
    "4061": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5030,
        5036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4062": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5034,
        5036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "4064": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5030,
        5036
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4067": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5030,
        5036
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4068": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        4982,
        5291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4069": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5182
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4071": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5182
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4072": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5185
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF2"
    },
    "4075": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4076": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5183,
        5185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "4078": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5185
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4081": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5179,
        5185
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4082": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5179,
        5185
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4083": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5172,
        5176
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4084": {
      "branch": 95,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5172,
        5185
      ],
      "op": "LT",
      "path": "3"
    },
    "4085": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5169,
        5281
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4086": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5169,
        5281
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109B"
    },
    "4089": {
      "branch": 95,
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5169,
        5281
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4090": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5209
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 31,
      "value": "0x0"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "op": "SUB"
    },
    "4131": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5222
      ],
      "op": "AND",
      "path": "3"
    },
    "4132": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5222
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "4137": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5223,
        5233
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4138": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5243,
        5247
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4139": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5256,
        5265
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4140": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4142": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5253
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4143": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1038"
    },
    "4146": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4147": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4148": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4151": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5250,
        5265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4152": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5250,
        5265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4153": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4155": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4156": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4157": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4162": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "AND",
      "path": "3"
    },
    "4163": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4165": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SHL",
      "path": "3"
    },
    "4166": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4167": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4168": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4170": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ADD",
      "path": "3"
    },
    "4171": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1056"
    },
    "4174": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4175": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4176": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4177": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4178": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "4181": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4182": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4183": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4185": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4187": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4188": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4189": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4190": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SUB",
      "path": "3"
    },
    "4191": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4192": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4194": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4195": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "GAS",
      "path": "3"
    },
    "4196": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "CALL",
      "path": "3"
    },
    "4197": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4198": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4199": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4200": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1075"
    },
    "4203": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4204": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4205": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4207": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4208": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4209": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4210": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4212": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4213": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4214": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4215": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4216": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4217": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4218": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4220": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4221": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4222": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4224": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "NOT",
      "path": "3"
    },
    "4225": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4227": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4228": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ADD",
      "path": "3"
    },
    "4229": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "AND",
      "path": "3"
    },
    "4230": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4231": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ADD",
      "path": "3"
    },
    "4232": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4233": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4235": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4236": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4237": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4238": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "ADD",
      "path": "3"
    },
    "4239": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4240": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1099"
    },
    "4243": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4244": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4245": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "4248": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4249": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4250": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5205,
        5266
      ],
      "op": "POP",
      "path": "3"
    },
    "4251": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5169,
        5281
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4252": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5308,
        5315
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x4"
    },
    "4254": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5308,
        5315
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4255": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5308,
        5315
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4256": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4258": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4259": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4260": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4261": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4263": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4265": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4266": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4267": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4268": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4270": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4271": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4272": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4273": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5324
      ],
      "op": "DUP11",
      "path": "3"
    },
    "4274": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4275": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5324
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4276": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5341,
        5348
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 33
    },
    "4277": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5341,
        5348
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4278": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4279": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4280": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5340
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4282": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4283": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4284": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4285": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4286": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5349
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4287": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5355
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4288": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4289": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5334,
        5355
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4290": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5371,
        5378
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 34
    },
    "4291": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5371,
        5378
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4292": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4293": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4294": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4296": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4297": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4298": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4299": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4300": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5379
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4301": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4302": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "op": "SUB"
    },
    "4311": {
      "op": "NOT"
    },
    "4312": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "AND",
      "path": "3"
    },
    "4313": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5382,
        5392
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4314": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4315": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4316": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "OR",
      "path": "3"
    },
    "4317": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4318": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4319": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5365,
        5392
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4320": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5411,
        5418
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 35
    },
    "4321": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5411,
        5418
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4322": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4323": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4324": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5410
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "4326": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4327": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4328": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4329": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4330": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5419
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4331": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5425
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4332": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5425
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4333": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5402,
        5425
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4334": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 36
    },
    "4335": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4336": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4337": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4339": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4340": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4341": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4342": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4343": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5459
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4344": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4345": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4346": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5352,
        5355
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4347": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5352,
        5355
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4348": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5300,
        5316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4349": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1107"
    },
    "4352": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4353": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5352,
        5355
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4354": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5352,
        5355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4355": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB7"
    },
    "4358": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5435,
        5471
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4359": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4360": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4361": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4362": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5435,
        5471
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5498,
        5505
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 37,
      "value": "0x4"
    },
    "4367": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5498,
        5505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4368": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5498,
        5505
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4369": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4371": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4372": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4373": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4374": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4376": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4378": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4379": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4380": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4381": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4383": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4384": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4385": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4386": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5506
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4387": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5509,
        5521
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "4388": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5521
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4389": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5481,
        5521
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4390": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5570,
        5577
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 38
    },
    "4391": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5570,
        5577
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4392": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4393": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4394": {
      "op": "DUP10"
    },
    "4395": {
      "op": "DUP2"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "SWAP3"
    },
    "4398": {
      "op": "DUP4"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "DUP9"
    },
    "4401": {
      "op": "SWAP1"
    },
    "4402": {
      "op": "MSTORE"
    },
    "4403": {
      "op": "SWAP1"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "MSTORE"
    },
    "4407": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5558,
        5568
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4408": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5558,
        5568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4409": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xEA3A2986B784B5FF3AF1DE7908EB0898970DEC44692BEC64512B80606842EAF6"
    },
    "4442": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4448": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4449": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4450": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4451": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "SUB",
      "path": "3"
    },
    "4452": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4453": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5536,
        5578
      ],
      "op": "LOG2",
      "path": "3"
    },
    "4454": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5595
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x4"
    },
    "4456": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4457": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4458": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4459": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4461": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1175"
    },
    "4464": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4465": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7D"
    },
    "4468": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5588,
        5597
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4469": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4470": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4471": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4472": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "POP",
      "path": "3"
    },
    "4473": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4474": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5588,
        5597
      ],
      "op": "POP",
      "path": "3"
    },
    "4475": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5622,
        5625
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 40
    },
    "4476": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4478": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4480": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4481": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4482": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4483": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118C"
    },
    "4486": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4487": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4488": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B65"
    },
    "4491": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5607,
        5625
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4492": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4493": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4494": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "POP",
      "path": "3"
    },
    "4495": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "POP",
      "path": "3"
    },
    "4496": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4497": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4498": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4499": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5607,
        5625
      ],
      "op": "POP",
      "path": "3"
    },
    "4500": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5642,
        5685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0x11AC"
    },
    "4503": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5660,
        5667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4505": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5660,
        5667
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4506": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5675,
        5684
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4507": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4509": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5672
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4510": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A7"
    },
    "4513": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5684
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4514": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4515": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4518": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5669,
        5684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4519": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5669,
        5684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4520": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5642,
        5659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E6"
    },
    "4523": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "i",
      "offset": [
        5642,
        5685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4524": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5642,
        5685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4525": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        5635,
        5685
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4526": {
      "fn": "ForgeGuess.getRandomNumber",
      "offset": [
        3717,
        5692
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "fn": "ForgeGuess.getRandomNumber",
      "jump": "o",
      "offset": [
        3717,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4534": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4535": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10223,
        10233
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 42
    },
    "4536": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2831,
        2838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4538": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4539": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4540": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4541": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "4543": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4545": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4546": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4548": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4549": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4550": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4551": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10204,
        10244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D0"
    },
    "4554": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10204,
        10244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4555": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10236,
        10243
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4556": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10204,
        10212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x882"
    },
    "4559": {
      "fn": "ForgeGuess.perfectWithdraw",
      "jump": "i",
      "offset": [
        10204,
        10244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4560": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10204,
        10244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4561": {
      "fn": "ForgeGuess.perfectWithdraw",
      "offset": [
        10142,
        10268
      ],
      "op": "POP",
      "path": "3"
    },
    "4562": {
      "fn": "ForgeGuess.perfectWithdraw",
      "jump": "o",
      "offset": [
        10142,
        10268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4563": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10274,
        10632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4564": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10436,
        10446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4566": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10436,
        10446
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4567": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "4569": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4570": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4572": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4573": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4580": {
      "op": "SHL"
    },
    "4581": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4582": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4583": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10427,
        10431
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4584": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4586": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4587": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ADD",
      "path": "3"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10321,
        10332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4591": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10321,
        10332
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4592": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10321,
        10332
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4593": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10321,
        10332
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4594": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10436,
        10446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4595": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10436,
        10446
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4602": {
      "op": "SHL"
    },
    "4603": {
      "op": "SUB"
    },
    "4604": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4605": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4606": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "AND",
      "path": "3"
    },
    "4607": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10395,
        10406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4608": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10418
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4613": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10418
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4616": {
      "op": "ADD"
    },
    "4617": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4619": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4621": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4622": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4623": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4624": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "SUB",
      "path": "3"
    },
    "4625": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4626": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4627": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "GAS",
      "path": "3"
    },
    "4628": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4629": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4630": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4631": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4632": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1225"
    },
    "4635": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4636": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4637": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4639": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4640": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4641": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4642": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4644": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4645": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4646": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "POP",
      "path": "3"
    },
    "4647": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "POP",
      "path": "3"
    },
    "4648": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "POP",
      "path": "3"
    },
    "4649": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "POP",
      "path": "3"
    },
    "4650": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4652": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4653": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4654": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4656": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "NOT",
      "path": "3"
    },
    "4657": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4659": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4660": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ADD",
      "path": "3"
    },
    "4661": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "AND",
      "path": "3"
    },
    "4662": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4663": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ADD",
      "path": "3"
    },
    "4664": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4665": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4667": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4668": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "POP",
      "path": "3"
    },
    "4669": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4670": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "ADD",
      "path": "3"
    },
    "4671": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4672": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1249"
    },
    "4675": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4676": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4677": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "4680": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10380,
        10433
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4681": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10433
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4682": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1253"
    },
    "4685": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10446
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4686": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4687": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "4690": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10380,
        10446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4691": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10380,
        10446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4692": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10348,
        10447
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4693": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10348,
        10447
      ],
      "op": "POP",
      "path": "3"
    },
    "4694": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10466,
        10477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4696": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10512,
        10523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "4698": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10512,
        10523
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4699": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10489,
        10509
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4700": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10486
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4701": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1266"
    },
    "4704": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10509
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4705": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10509
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4706": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4709": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10480,
        10509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4710": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4711": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10523
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1270"
    },
    "4714": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10523
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4715": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10523
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4716": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10523
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "4719": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10480,
        10523
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4720": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10480,
        10523
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4721": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10466,
        10523
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4722": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10466,
        10523
      ],
      "op": "POP",
      "path": "3"
    },
    "4723": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10588,
        10608
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 43
    },
    "4724": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10574,
        10583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x127B"
    },
    "4727": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10574,
        10581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x516"
    },
    "4730": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10574,
        10583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4731": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10574,
        10583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4732": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10568,
        10583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1285"
    },
    "4735": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10568,
        10583
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4736": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10568,
        10571
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4737": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10568,
        10583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4740": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10568,
        10583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4741": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10568,
        10583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4742": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10566,
        10608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x128F"
    },
    "4745": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10566,
        10608
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4746": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10566,
        10608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4747": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10566,
        10608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "4750": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10566,
        10608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4751": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10566,
        10608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4752": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10559,
        10608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50E"
    },
    "4755": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10559,
        10608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4756": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10559,
        10562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4757": {
      "fn": "ForgeGuess.uOut",
      "offset": [
        10559,
        10608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "4760": {
      "fn": "ForgeGuess.uOut",
      "jump": "i",
      "offset": [
        10559,
        10608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4761": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4762": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8714,
        8721
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4764": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8714,
        8721
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4765": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8826,
        8842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A6"
    },
    "4768": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8838,
        8842
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4769": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8826,
        8835
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4770": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8826,
        8842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4773": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8826,
        8842
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4774": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8826,
        8842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4775": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8806,
        8816
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4777": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8806,
        8816
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4778": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "4780": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4781": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4783": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4784": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4791": {
      "op": "SHL"
    },
    "4792": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4793": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4794": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8797,
        8801
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4795": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4797": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4798": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ADD",
      "path": "3"
    },
    "4799": {
      "op": "MSTORE"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4806": {
      "op": "SHL"
    },
    "4807": {
      "op": "SUB"
    },
    "4808": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4809": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4810": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "AND",
      "path": "3"
    },
    "4811": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8765,
        8776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4812": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8788
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4817": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4820": {
      "op": "ADD"
    },
    "4821": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4823": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4825": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4826": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4827": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4828": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "SUB",
      "path": "3"
    },
    "4829": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4830": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4831": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "GAS",
      "path": "3"
    },
    "4832": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4833": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4834": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4835": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4836": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F1"
    },
    "4839": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4840": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4841": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4843": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4844": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4845": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4846": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4848": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4849": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4850": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "POP",
      "path": "3"
    },
    "4851": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "POP",
      "path": "3"
    },
    "4852": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "POP",
      "path": "3"
    },
    "4853": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "POP",
      "path": "3"
    },
    "4854": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4856": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4857": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4858": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4860": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "NOT",
      "path": "3"
    },
    "4861": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4863": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4864": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ADD",
      "path": "3"
    },
    "4865": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "AND",
      "path": "3"
    },
    "4866": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4867": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ADD",
      "path": "3"
    },
    "4868": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4869": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4871": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4872": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "POP",
      "path": "3"
    },
    "4873": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4874": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "ADD",
      "path": "3"
    },
    "4875": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4876": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1315"
    },
    "4879": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4880": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4881": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BAF"
    },
    "4884": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8750,
        8803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4885": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4886": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8816
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x131F"
    },
    "4889": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8816
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4890": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8816
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4891": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8816
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "4894": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8750,
        8816
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4895": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8750,
        8816
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4896": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x132A"
    },
    "4899": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4900": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8820,
        8822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "4902": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8822
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4905": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8749,
        8822
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4906": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8822
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4907": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8843
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1334"
    },
    "4910": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8843
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4911": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8843
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4912": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8843
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "4915": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8749,
        8843
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4916": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8749,
        8843
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4917": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8732,
        8843
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4918": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8732,
        8843
      ],
      "op": "POP",
      "path": "3"
    },
    "4919": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8853,
        8870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4921": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8900,
        8902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "4923": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8891,
        8897
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4924": {
      "branch": 96,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8891,
        8902
      ],
      "op": "LT",
      "path": "3"
    },
    "4925": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4926": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1369"
    },
    "4929": {
      "branch": 96,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4930": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8954,
        8962
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 44,
      "value": "0x134C"
    },
    "4933": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8954,
        8958
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4934": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8959,
        8962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4936": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8954,
        8962
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4939": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8954,
        8962
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4940": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8954,
        8962
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4941": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8931,
        8951
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "4944": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8942,
        8951
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4945": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8931,
        8939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2328"
    },
    "4948": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8931,
        8951
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4951": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8931,
        8951
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4952": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8931,
        8951
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4953": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8930,
        8963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1362"
    },
    "4956": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8930,
        8963
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4957": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8930,
        8963
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4958": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8930,
        8963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "4961": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        8930,
        8963
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4962": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8930,
        8963
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4963": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8918,
        8963
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4964": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8918,
        8963
      ],
      "op": "POP",
      "path": "3"
    },
    "4965": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50E"
    },
    "4968": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4969": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8888,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4970": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8996,
        8998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x32"
    },
    "4972": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8987,
        8993
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4973": {
      "branch": 97,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8987,
        8998
      ],
      "op": "LT",
      "path": "3"
    },
    "4974": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8984,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4975": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8984,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1389"
    },
    "4978": {
      "branch": 97,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8984,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4979": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9050,
        9060
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 45,
      "value": "0x137D"
    },
    "4982": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9050,
        9054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4983": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9057,
        9060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4985": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9050,
        9060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "4988": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9050,
        9060
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4989": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9050,
        9060
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4990": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9027,
        9047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "4993": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9038,
        9047
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4994": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9027,
        9035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2454"
    },
    "4997": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9027,
        9047
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5000": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9027,
        9047
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5001": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        8984,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5002": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9110,
        9113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5004": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9101,
        9107
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5005": {
      "branch": 98,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9101,
        9113
      ],
      "op": "LT",
      "path": "3"
    },
    "5006": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9098,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5007": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9098,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A9"
    },
    "5010": {
      "branch": 98,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9098,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5011": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9165,
        9175
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 46,
      "value": "0x139D"
    },
    "5014": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9165,
        9169
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5015": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9172,
        9175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5017": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9165,
        9175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5020": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9165,
        9175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5021": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9165,
        9175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5022": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9142,
        9162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "5025": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9153,
        9162
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5026": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9142,
        9150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2580"
    },
    "5029": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9142,
        9162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5032": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9142,
        9162
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5033": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9098,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5034": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9225,
        9228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "5036": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9216,
        9222
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5037": {
      "branch": 99,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9216,
        9228
      ],
      "op": "LT",
      "path": "3"
    },
    "5038": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9213,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5039": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9213,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C9"
    },
    "5042": {
      "branch": 99,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9213,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5043": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9280,
        9290
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0x13BD"
    },
    "5046": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9280,
        9284
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5047": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9287,
        9290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5049": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9280,
        9290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5052": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9280,
        9290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5053": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9280,
        9290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5054": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9257,
        9277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "5057": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9268,
        9277
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5058": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9257,
        9265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2648"
    },
    "5061": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9257,
        9277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5064": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9257,
        9277
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5065": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9213,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5066": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9336,
        9339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x190"
    },
    "5069": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9327,
        9333
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5070": {
      "branch": 100,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9327,
        9339
      ],
      "op": "LT",
      "path": "3"
    },
    "5071": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9324,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5072": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9324,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13EA"
    },
    "5075": {
      "branch": 100,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9324,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5076": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9391,
        9401
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 48,
      "value": "0x13DE"
    },
    "5079": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9391,
        9395
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5080": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9398,
        9401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5082": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9391,
        9401
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5085": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9391,
        9401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5086": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9391,
        9401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5087": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9368,
        9388
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "5090": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9379,
        9388
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5091": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9368,
        9376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26AC"
    },
    "5094": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9368,
        9388
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5097": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9368,
        9388
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5098": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9324,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5099": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9436,
        9440
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "5102": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9427,
        9433
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5103": {
      "branch": 101,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9427,
        9440
      ],
      "op": "LT",
      "path": "3"
    },
    "5104": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9423,
        9636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5105": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9423,
        9636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140D"
    },
    "5108": {
      "branch": 101,
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9423,
        9636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5109": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9509,
        9520
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x1400"
    },
    "5112": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9509,
        9513
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5113": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9516,
        9520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "5116": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9509,
        9520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5119": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9509,
        9520
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5120": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9509,
        9520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5121": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9485,
        9506
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1358"
    },
    "5124": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9497,
        9506
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5125": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9485,
        9494
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x184AC"
    },
    "5129": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9485,
        9506
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5132": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9485,
        9506
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5133": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9423,
        9636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5134": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9609,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 50,
      "value": "0x1418"
    },
    "5137": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9609,
        9613
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5138": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9616,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5140": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9609,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5143": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9609,
        9619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5144": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9609,
        9619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5145": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9586,
        9606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1424"
    },
    "5148": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9597,
        9606
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5149": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9586,
        9594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26AC"
    },
    "5152": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9586,
        9606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5155": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9586,
        9606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5156": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9586,
        9606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5157": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9585,
        9620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x142E"
    },
    "5160": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9585,
        9620
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5161": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9585,
        9620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5162": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9585,
        9620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA3"
    },
    "5165": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "i",
      "offset": [
        9585,
        9620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5166": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9585,
        9620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5167": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9573,
        9620
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5168": {
      "fn": "ForgeGuess.estOUTPUT",
      "offset": [
        9669,
        9678
      ],
      "op": "SWAP5",
      "path": "3",
      "statement": 51
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "op": "POP"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "fn": "ForgeGuess.estOUTPUT",
      "jump": "o",
      "offset": [
        8641,
        9687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5175": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9904,
        10059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5176": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9964,
        9971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5178": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9983,
        9992
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5179": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        10029,
        10033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "5182": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        10002,
        10026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145F"
    },
    "5185": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        10007,
        10025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34F"
    },
    "5188": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        10017,
        10024
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "AND",
      "path": "3"
    },
    "5198": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2831,
        2838
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5200": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5201": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5202": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5203": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "5205": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5207": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5208": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5210": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5211": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5212": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5213": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2857,
        2875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5214": {
      "fn": "ForgeGuess.balanceOf",
      "offset": [
        2774,
        2882
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5215": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        10002,
        10026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5216": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9996,
        10026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x871"
    },
    "5219": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9996,
        10026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5220": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9996,
        9999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "5223": {
      "fn": "ForgeGuess.currentForge",
      "offset": [
        9996,
        10026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5226": {
      "fn": "ForgeGuess.currentForge",
      "jump": "i",
      "offset": [
        9996,
        10026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5227": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5228": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6474,
        6491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5230": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6507
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 52,
      "value": "0x0"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "SUB"
    },
    "5271": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6520
      ],
      "op": "AND",
      "path": "3"
    },
    "5272": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6520
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "5277": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6521,
        6531
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5278": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6541,
        6545
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5279": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6554,
        6563
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5280": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6551
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5282": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6551
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5283": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14AC"
    },
    "5286": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6563
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5287": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6563
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5288": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5291": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6548,
        6563
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5292": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6548,
        6563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5293": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5295": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5296": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5297": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "5302": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "AND",
      "path": "3"
    },
    "5303": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "5305": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SHL",
      "path": "3"
    },
    "5306": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5307": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5308": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5310": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ADD",
      "path": "3"
    },
    "5311": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CA"
    },
    "5314": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5315": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5316": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5317": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5318": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDE"
    },
    "5321": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5322": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5323": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5325": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5327": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5328": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5329": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5330": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SUB",
      "path": "3"
    },
    "5331": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5332": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5334": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5335": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "GAS",
      "path": "3"
    },
    "5336": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "CALL",
      "path": "3"
    },
    "5337": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5338": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5339": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5340": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E9"
    },
    "5343": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5344": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5345": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5347": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5348": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5349": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5350": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5352": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5353": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5354": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5355": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5356": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5357": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5358": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5360": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5361": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5362": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5364": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "NOT",
      "path": "3"
    },
    "5365": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5367": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5368": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ADD",
      "path": "3"
    },
    "5369": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "AND",
      "path": "3"
    },
    "5370": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5371": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ADD",
      "path": "3"
    },
    "5372": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5373": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5375": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5376": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5377": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5378": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "ADD",
      "path": "3"
    },
    "5379": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5380": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x150D"
    },
    "5383": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5384": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5385": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "5388": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5389": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5390": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6503,
        6564
      ],
      "op": "POP",
      "path": "3"
    },
    "5391": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6582,
        6625
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0x1522"
    },
    "5394": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6600,
        6607
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5396": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6600,
        6607
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5397": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6615,
        6624
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5398": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5400": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6612
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5401": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A7"
    },
    "5404": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5405": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6624
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5406": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6609,
        6624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C84"
    },
    "5409": {
      "fn": "ForgeGuess.getBlank",
      "jump": "i",
      "offset": [
        6609,
        6624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5410": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6582,
        6625
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5411": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6575,
        6625
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5412": {
      "fn": "ForgeGuess.getBlank",
      "offset": [
        6421,
        6632
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5413": {
      "op": "POP"
    },
    "5414": {
      "op": "POP"
    },
    "5415": {
      "fn": "ForgeGuess.getBlank",
      "jump": "o",
      "offset": [
        6421,
        6632
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5416": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5417": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9859,
        9869
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 54
    },
    "5418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5424": {
      "op": "SHL"
    },
    "5425": {
      "op": "SUB"
    },
    "5426": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9873,
        9887
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "5459": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9859,
        9887
      ],
      "op": "AND",
      "path": "1"
    },
    "5460": {
      "branch": 106,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9859,
        9887
      ],
      "op": "EQ",
      "path": "1"
    },
    "5461": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A0"
    },
    "5464": {
      "branch": 106,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5465": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5467": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5474": {
      "op": "SHL"
    },
    "5475": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5476": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5479": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5481": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5482": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "ADD",
      "path": "1"
    },
    "5483": {
      "op": "MSTORE"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5526": {
      "op": "DUP3"
    },
    "5527": {
      "op": "ADD"
    },
    "5528": {
      "op": "MSTORE"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5531": {
      "op": "ADD"
    },
    "5532": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60D"
    },
    "5535": {
      "op": "JUMP"
    },
    "5536": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9851,
        9923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5537": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9930,
        9970
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 55,
      "value": "0x15AA"
    },
    "5540": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9948,
        9957
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5541": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9959,
        9969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5542": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9930,
        9947
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175D"
    },
    "5545": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9930,
        9970
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5546": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9930,
        9970
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5547": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "POP",
      "path": "1"
    },
    "5548": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9766,
        9976
      ],
      "op": "POP",
      "path": "1"
    },
    "5549": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9766,
        9976
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5550": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9719,
        9868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5551": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9782,
        9789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5553": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9801,
        9810
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5554": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9838,
        9842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "5557": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145F"
    },
    "5560": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9825,
        9834
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5561": {
      "fn": "ForgeGuess.withEstimator",
      "offset": [
        9820,
        9824
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D3"
    },
    "5564": {
      "fn": "ForgeGuess.withEstimator",
      "jump": "i",
      "offset": [
        9820,
        9835
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5565": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5698,
        5874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5566": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5746,
        5753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5568": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5776,
        5783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5570": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5776,
        5783
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5571": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5767,
        5772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5573": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5767,
        5772
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5574": {
      "branch": 102,
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5767,
        5783
      ],
      "op": "EQ",
      "path": "3"
    },
    "5575": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5764,
        5828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5576": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5764,
        5828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D0"
    },
    "5579": {
      "branch": 102,
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5764,
        5828
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5805,
        5817
      ],
      "op": "NUMBER",
      "path": "3",
      "statement": 56
    },
    "5582": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5805,
        5817
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5583": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "o",
      "offset": [
        5698,
        5874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5584": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5764,
        5828
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5585": {
      "op": "POP"
    },
    "5586": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5861,
        5866
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 57,
      "value": "0x3"
    },
    "5588": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5861,
        5866
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5589": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5591": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5592": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5593": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5594": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "5596": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5598": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5599": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5601": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5602": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5603": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5604": {
      "fn": "ForgeGuess.lastBlockFilled",
      "offset": [
        5844,
        5867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5605": {
      "fn": "ForgeGuess.lastBlockFilled",
      "jump": "o",
      "offset": [
        5698,
        5874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5606": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7883,
        8917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5607": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7960,
        7977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5609": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        7990
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 58,
      "value": "0x0"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5648": {
      "op": "SHL"
    },
    "5649": {
      "op": "SUB"
    },
    "5650": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8006
      ],
      "op": "AND",
      "path": "1"
    },
    "5651": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8006
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4000AEA0"
    },
    "5656": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8007,
        8021
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "5689": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8023,
        8027
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5690": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8040,
        8048
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5691": {
      "offset": [
        6713,
        6714
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5693": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5695": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5696": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5698": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "ADD",
      "path": "1"
    },
    "5699": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1656"
    },
    "5702": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5703": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5704": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5705": {
      "op": "SWAP2"
    },
    "5706": {
      "op": "DUP3"
    },
    "5707": {
      "op": "MSTORE"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5710": {
      "op": "DUP3"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5715": {
      "op": "ADD"
    },
    "5716": {
      "op": "SWAP1"
    },
    "5717": {
      "op": "JUMP"
    },
    "5718": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5719": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5721": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5722": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5724": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5725": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5726": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SUB",
      "path": "1"
    },
    "5727": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SUB",
      "path": "1"
    },
    "5728": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5729": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5730": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5731": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5733": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8029,
        8072
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5734": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5736": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5737": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5738": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "5743": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "AND",
      "path": "1"
    },
    "5744": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5746": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SHL",
      "path": "1"
    },
    "5747": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5748": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5749": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5751": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ADD",
      "path": "1"
    },
    "5752": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1683"
    },
    "5755": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5756": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5757": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5758": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5759": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CF6"
    },
    "5762": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5763": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5764": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5766": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5768": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5769": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5770": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5771": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SUB",
      "path": "1"
    },
    "5772": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5773": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5775": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5776": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "GAS",
      "path": "1"
    },
    "5777": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "CALL",
      "path": "1"
    },
    "5778": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5779": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5780": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5781": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A2"
    },
    "5784": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5785": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5786": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5788": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5789": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5790": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5791": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5793": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5794": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5795": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "POP",
      "path": "1"
    },
    "5796": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "POP",
      "path": "1"
    },
    "5797": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "POP",
      "path": "1"
    },
    "5798": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "POP",
      "path": "1"
    },
    "5799": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5801": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5802": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5803": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5805": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "NOT",
      "path": "1"
    },
    "5806": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5808": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5809": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ADD",
      "path": "1"
    },
    "5810": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "AND",
      "path": "1"
    },
    "5811": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5812": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ADD",
      "path": "1"
    },
    "5813": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5814": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5816": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5817": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "POP",
      "path": "1"
    },
    "5818": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5819": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "ADD",
      "path": "1"
    },
    "5820": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5821": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C6"
    },
    "5824": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5825": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5826": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C02"
    },
    "5829": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5830": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7986,
        8073
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5831": {
      "op": "POP"
    },
    "5832": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8308,
        8323
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5834": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5835": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5836": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5837": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5839": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5840": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5841": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5842": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5844": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5845": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5846": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5847": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8391,
        8407
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5848": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 59
    },
    "5849": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5850": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5851": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5852": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "ADD",
      "path": "2"
    },
    "5853": {
      "op": "DUP9"
    },
    "5854": {
      "op": "SWAP1"
    },
    "5855": {
      "op": "MSTORE"
    },
    "5856": {
      "op": "DUP1"
    },
    "5857": {
      "op": "DUP4"
    },
    "5858": {
      "op": "ADD"
    },
    "5859": {
      "op": "DUP6"
    },
    "5860": {
      "op": "SWAP1"
    },
    "5861": {
      "op": "MSTORE"
    },
    "5862": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8384,
        8388
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5865": {
      "op": "DUP3"
    },
    "5866": {
      "op": "ADD"
    },
    "5867": {
      "op": "MSTORE"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5870": {
      "op": "DUP1"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "ADD"
    },
    "5873": {
      "op": "DUP4"
    },
    "5874": {
      "op": "SWAP1"
    },
    "5875": {
      "op": "MSTORE"
    },
    "5876": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5877": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5878": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5879": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5880": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "SUB",
      "path": "2"
    },
    "5881": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5882": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5883": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "ADD",
      "path": "2"
    },
    "5884": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5885": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5888": {
      "op": "SWAP1"
    },
    "5889": {
      "op": "SWAP2"
    },
    "5890": {
      "op": "ADD"
    },
    "5891": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5892": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5893": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1002,
        1053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5894": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5895": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5896": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5897": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5898": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "ADD",
      "path": "2"
    },
    "5899": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5900": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5901": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5902": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        992,
        1054
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5903": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 60
    },
    "5904": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5905": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5906": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5907": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5908": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5909": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5910": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1720"
    },
    "5913": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5914": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8864,
        8865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5916": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B65"
    },
    "5919": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8845,
        8865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5920": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8845,
        8865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5921": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5923": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5924": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5925": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5926": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5928": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5929": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5930": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5931": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5933": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5934": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5935": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5936": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8842
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5937": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5938": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5939": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5940": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8826,
        8865
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5941": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 61
    },
    "5942": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5943": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5944": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5945": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "ADD",
      "path": "2"
    },
    "5946": {
      "op": "DUP8"
    },
    "5947": {
      "op": "SWAP1"
    },
    "5948": {
      "op": "MSTORE"
    },
    "5949": {
      "op": "DUP1"
    },
    "5950": {
      "op": "DUP3"
    },
    "5951": {
      "op": "ADD"
    },
    "5952": {
      "op": "DUP5"
    },
    "5953": {
      "op": "SWAP1"
    },
    "5954": {
      "op": "MSTORE"
    },
    "5955": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5956": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5957": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5958": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5959": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "SUB",
      "path": "2"
    },
    "5960": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5961": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "ADD",
      "path": "2"
    },
    "5962": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5963": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5966": {
      "op": "SWAP1"
    },
    "5967": {
      "op": "SWAP2"
    },
    "5968": {
      "op": "ADD"
    },
    "5969": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5970": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5971": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1572,
        1613
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5972": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1562,
        1614
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5973": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1562,
        1614
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5974": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1562,
        1614
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5975": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1562,
        1614
      ],
      "op": "ADD",
      "path": "2"
    },
    "5976": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1562,
        1614
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5977": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8879,
        8911
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 62,
      "value": "0x50E"
    },
    "5980": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1452,
        1620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5981": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6703,
        7610
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5982": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6809,
        6816
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5984": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6809,
        6816
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5985": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6800,
        6805
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5987": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6800,
        6805
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5988": {
      "branch": 103,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6800,
        6816
      ],
      "op": "LT",
      "path": "3"
    },
    "5989": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6797,
        6848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x176C"
    },
    "5992": {
      "branch": 103,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6797,
        6848
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5993": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6703,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "5994": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6703,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "5995": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "o",
      "offset": [
        6703,
        7610
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5996": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6797,
        6848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5997": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6882,
        6889
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x4"
    },
    "5999": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6882,
        6889
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6000": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6874,
        6879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6002": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6874,
        6879
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6003": {
      "branch": 104,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6874,
        6889
      ],
      "op": "LT",
      "path": "3"
    },
    "6004": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17B4"
    },
    "6007": {
      "branch": 104,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6008": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6010": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6019": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6022": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6024": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6025": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "ADD",
      "path": "3"
    },
    "6026": {
      "op": "MSTORE"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6031": {
      "op": "DUP3"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "PUSH18",
      "value": "0x4D7573742068617665206E65772062657473"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6058": {
      "op": "DUP3"
    },
    "6059": {
      "op": "ADD"
    },
    "6060": {
      "op": "MSTORE"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6063": {
      "op": "ADD"
    },
    "6064": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "6067": {
      "op": "JUMP"
    },
    "6068": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6866,
        6912
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6069": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6944,
        6949
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 64,
      "value": "0x3"
    },
    "6071": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6944,
        6949
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6072": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6074": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6075": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6076": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6077": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "6079": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6081": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6082": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6084": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6085": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6950
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6086": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6963
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6087": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6963
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6088": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6931,
        6963
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6089": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 65,
      "value": "0x17D3"
    },
    "6092": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7006,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "6094": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6953,
        6963
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6095": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1D"
    },
    "6098": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6099": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6100": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6984,
        6989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6102": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6984,
        6989
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6103": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6984,
        6989
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6104": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6106": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6107": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6108": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6109": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6983
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "6111": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6113": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6114": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6115": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6116": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6118": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6119": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6120": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        6990
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6121": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        7009
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6122": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        7009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6123": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        7009
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6124": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6973,
        7009
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6125": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7043,
        7048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6126": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7043,
        7048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6127": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6128": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6129": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6131": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6132": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6133": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6134": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6135": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6136": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6137": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7081
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "6139": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6140": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6141": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6142": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6143": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6144": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6145": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "6147": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6148": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6149": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6150": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6151": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6152": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6153": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "6155": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6156": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6157": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6158": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6159": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6160": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6161": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6162": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7155,
        7170
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6169": {
      "op": "SHL"
    },
    "6170": {
      "op": "SUB"
    },
    "6171": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6172": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6173": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "AND",
      "path": "3"
    },
    "6174": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7037,
        7049
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6175": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6176": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7118,
        7131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6177": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7074,
        7088
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6178": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7183,
        7197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x182C"
    },
    "6181": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7194,
        7197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "6183": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7183,
        7193
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6184": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7183,
        7197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1D"
    },
    "6187": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7183,
        7197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6188": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7183,
        7197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6189": {
      "branch": 105,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7183,
        7204
      ],
      "op": "LT",
      "path": "3"
    },
    "6190": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6191": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18DC"
    },
    "6194": {
      "branch": 105,
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6201": {
      "op": "SHL"
    },
    "6202": {
      "op": "SUB"
    },
    "6203": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 66
    },
    "6204": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "AND",
      "path": "3"
    },
    "6205": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6207": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6208": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6209": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6210": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6212": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6214": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6215": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6217": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6218": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6219": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6220": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6221": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7248,
        7251
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6222": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7248,
        7251
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6223": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6224": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185A"
    },
    "6227": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6228": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7248,
        7251
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6229": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7248,
        7251
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6230": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B24"
    },
    "6233": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7219,
        7252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6234": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6235": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6236": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6237": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7219,
        7252
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6238": {
      "op": "POP"
    },
    "6239": {
      "op": "POP"
    },
    "6240": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x12"
    },
    "6242": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6243": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6245": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6246": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6253": {
      "op": "SHL"
    },
    "6254": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6255": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "SUB"
    },
    "6264": {
      "op": "DUP7"
    },
    "6265": {
      "op": "DUP2"
    },
    "6266": {
      "op": "AND"
    },
    "6267": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6269": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6270": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ADD",
      "path": "3"
    },
    "6271": {
      "op": "MSTORE"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6274": {
      "op": "DUP3"
    },
    "6275": {
      "op": "ADD"
    },
    "6276": {
      "op": "DUP5"
    },
    "6277": {
      "op": "SWAP1"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6280": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6281": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "AND",
      "path": "3"
    },
    "6282": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7277
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6283": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7286
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "6288": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7286
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6291": {
      "op": "ADD"
    },
    "6292": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6294": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6296": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6297": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6298": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6299": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "SUB",
      "path": "3"
    },
    "6300": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6301": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6303": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6304": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "GAS",
      "path": "3"
    },
    "6305": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "CALL",
      "path": "3"
    },
    "6306": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6307": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6308": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6309": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B2"
    },
    "6312": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6313": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6314": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6316": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6317": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6318": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6319": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6321": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6322": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6323": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6324": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6325": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6326": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6327": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6329": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6330": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6331": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6333": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "NOT",
      "path": "3"
    },
    "6334": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6336": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6337": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ADD",
      "path": "3"
    },
    "6338": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "AND",
      "path": "3"
    },
    "6339": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6340": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ADD",
      "path": "3"
    },
    "6341": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6342": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6344": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6345": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6346": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6347": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "ADD",
      "path": "3"
    },
    "6348": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6349": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D6"
    },
    "6352": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6353": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6354": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "6357": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7266,
        7300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6358": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6359": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7266,
        7300
      ],
      "op": "POP",
      "path": "3"
    },
    "6360": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1998"
    },
    "6363": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6364": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6365": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x12"
    },
    "6367": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6368": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6370": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6371": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6378": {
      "op": "SHL"
    },
    "6379": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6380": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6387": {
      "op": "SHL"
    },
    "6388": {
      "op": "SUB"
    },
    "6389": {
      "op": "DUP7"
    },
    "6390": {
      "op": "DUP2"
    },
    "6391": {
      "op": "AND"
    },
    "6392": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6394": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6395": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ADD",
      "path": "3"
    },
    "6396": {
      "op": "MSTORE"
    },
    "6397": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6401": {
      "op": "DUP4"
    },
    "6402": {
      "op": "ADD"
    },
    "6403": {
      "op": "MSTORE"
    },
    "6404": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6405": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6406": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "AND",
      "path": "3"
    },
    "6407": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7340
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6408": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7349
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "6413": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7349
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6416": {
      "op": "ADD"
    },
    "6417": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6419": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6421": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6422": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6423": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6424": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "SUB",
      "path": "3"
    },
    "6425": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6426": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6428": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6429": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "GAS",
      "path": "3"
    },
    "6430": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "CALL",
      "path": "3"
    },
    "6431": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6432": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6433": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6434": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x192F"
    },
    "6437": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6438": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6439": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6441": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6442": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6443": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6444": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6446": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6447": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6448": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "POP",
      "path": "3"
    },
    "6449": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "POP",
      "path": "3"
    },
    "6450": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "POP",
      "path": "3"
    },
    "6451": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "POP",
      "path": "3"
    },
    "6452": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6454": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6455": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6456": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6458": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "NOT",
      "path": "3"
    },
    "6459": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6461": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6462": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ADD",
      "path": "3"
    },
    "6463": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "AND",
      "path": "3"
    },
    "6464": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6465": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ADD",
      "path": "3"
    },
    "6466": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6467": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6469": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6470": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "POP",
      "path": "3"
    },
    "6471": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6472": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "ADD",
      "path": "3"
    },
    "6473": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6474": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1953"
    },
    "6477": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6478": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6479": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C02"
    },
    "6482": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7329,
        7361
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6483": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7329,
        7361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6491": {
      "op": "SHL"
    },
    "6492": {
      "op": "SUB"
    },
    "6493": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 69
    },
    "6494": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "AND",
      "path": "3"
    },
    "6495": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6497": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6498": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6499": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6500": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6502": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6504": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6505": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6507": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6508": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6509": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6510": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6511": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7404,
        7405
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6513": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7404,
        7405
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6514": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6515": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x197D"
    },
    "6518": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6519": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7404,
        7405
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6520": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7404,
        7405
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6521": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B24"
    },
    "6524": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7375,
        7406
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6525": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6526": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6527": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6528": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7375,
        7406
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6529": {
      "op": "POP"
    },
    "6530": {
      "op": "POP"
    },
    "6531": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7429,
        7434
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 70,
      "value": "0x3"
    },
    "6533": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7429,
        7434
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6534": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6536": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6537": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6538": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6539": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "6541": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6543": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6544": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6546": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6547": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7435
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6548": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7438,
        7439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6550": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6551": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7420,
        7439
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6552": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7180,
        7450
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6553": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7473,
        7482
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 71
    },
    "6554": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6556": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6558": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6559": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6560": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6561": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19AA"
    },
    "6564": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6565": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6566": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B98"
    },
    "6569": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7459,
        7482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6570": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6571": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6572": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6573": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7459,
        7482
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6574": {
      "op": "POP"
    },
    "6575": {
      "op": "POP"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6582": {
      "op": "SHL"
    },
    "6583": {
      "op": "SUB"
    },
    "6584": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 72
    },
    "6585": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "AND",
      "path": "3"
    },
    "6586": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xD6E0FDF39F428B885B593CB5E1ED182847A2ED801C2D36A89869AA69E8B785F"
    },
    "6619": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7508,
        7512
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6620": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7514,
        7528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19E6"
    },
    "6623": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7525,
        7528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "6625": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7514,
        7524
      ],
      "op": "DUP10",
      "path": "3"
    },
    "6626": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7514,
        7528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1D"
    },
    "6629": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7514,
        7528
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6630": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7514,
        7528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6631": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7542,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6633": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7542,
        7547
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6634": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6636": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6637": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6638": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6639": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "6641": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6643": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6644": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6645": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6646": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6648": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6649": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6650": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6651": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6652": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7558,
        7573
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6653": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6654": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6655": {
      "op": "SWAP6"
    },
    "6656": {
      "op": "DUP7"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "op": "SWAP1"
    },
    "6659": {
      "op": "DUP6"
    },
    "6660": {
      "op": "ADD"
    },
    "6661": {
      "op": "SWAP4"
    },
    "6662": {
      "op": "SWAP1"
    },
    "6663": {
      "op": "SWAP4"
    },
    "6664": {
      "op": "MSTORE"
    },
    "6665": {
      "op": "DUP4"
    },
    "6666": {
      "op": "ADD"
    },
    "6667": {
      "op": "DUP8"
    },
    "6668": {
      "op": "SWAP1"
    },
    "6669": {
      "op": "MSTORE"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6672": {
      "op": "DUP4"
    },
    "6673": {
      "op": "ADD"
    },
    "6674": {
      "op": "MSTORE"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6677": {
      "op": "DUP3"
    },
    "6678": {
      "op": "ADD"
    },
    "6679": {
      "op": "MSTORE"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6682": {
      "op": "DUP2"
    },
    "6683": {
      "op": "ADD"
    },
    "6684": {
      "op": "DUP9"
    },
    "6685": {
      "op": "SWAP1"
    },
    "6686": {
      "op": "MSTORE"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6689": {
      "op": "ADD"
    },
    "6690": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6692": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6693": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6694": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6695": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "SUB",
      "path": "3"
    },
    "6696": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6697": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7497,
        7586
      ],
      "op": "LOG2",
      "path": "3"
    },
    "6698": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7601
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x3"
    },
    "6700": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6701": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6702": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6703": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6705": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A39"
    },
    "6708": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6709": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7D"
    },
    "6712": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "i",
      "offset": [
        7596,
        7603
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6713": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6714": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6715": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6716": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "POP",
      "path": "3"
    },
    "6717": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6718": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        7596,
        7603
      ],
      "op": "POP",
      "path": "3"
    },
    "6719": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6787,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6720": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6787,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6721": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6787,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6722": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6787,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6723": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6703,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6724": {
      "fn": "ForgeGuess.fulfillRandomness",
      "offset": [
        6703,
        7610
      ],
      "op": "POP",
      "path": "3"
    },
    "6725": {
      "fn": "ForgeGuess.fulfillRandomness",
      "jump": "o",
      "offset": [
        6703,
        7610
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6726": {
      "op": "JUMPDEST"
    },
    "6727": {
      "op": "DUP1"
    },
    "6728": {
      "op": "CALLDATALOAD"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6735": {
      "op": "SHL"
    },
    "6736": {
      "op": "SUB"
    },
    "6737": {
      "op": "DUP2"
    },
    "6738": {
      "op": "AND"
    },
    "6739": {
      "op": "DUP2"
    },
    "6740": {
      "op": "EQ"
    },
    "6741": {
      "op": "PUSH2",
      "value": "0x1A5D"
    },
    "6744": {
      "op": "JUMPI"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6747": {
      "op": "DUP1"
    },
    "6748": {
      "op": "REVERT"
    },
    "6749": {
      "op": "JUMPDEST"
    },
    "6750": {
      "op": "SWAP2"
    },
    "6751": {
      "op": "SWAP1"
    },
    "6752": {
      "op": "POP"
    },
    "6753": {
      "jump": "o",
      "op": "JUMP"
    },
    "6754": {
      "op": "JUMPDEST"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6759": {
      "op": "DUP3"
    },
    "6760": {
      "op": "DUP5"
    },
    "6761": {
      "op": "SUB"
    },
    "6762": {
      "op": "SLT"
    },
    "6763": {
      "op": "ISZERO"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "6767": {
      "op": "JUMPI"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6770": {
      "op": "DUP1"
    },
    "6771": {
      "op": "REVERT"
    },
    "6772": {
      "op": "JUMPDEST"
    },
    "6773": {
      "op": "PUSH2",
      "value": "0x87B"
    },
    "6776": {
      "op": "DUP3"
    },
    "6777": {
      "op": "PUSH2",
      "value": "0x1A46"
    },
    "6780": {
      "jump": "i",
      "op": "JUMP"
    },
    "6781": {
      "op": "JUMPDEST"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6784": {
      "op": "DUP1"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6787": {
      "op": "DUP4"
    },
    "6788": {
      "op": "DUP6"
    },
    "6789": {
      "op": "SUB"
    },
    "6790": {
      "op": "SLT"
    },
    "6791": {
      "op": "ISZERO"
    },
    "6792": {
      "op": "PUSH2",
      "value": "0x1A90"
    },
    "6795": {
      "op": "JUMPI"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6798": {
      "op": "DUP1"
    },
    "6799": {
      "op": "REVERT"
    },
    "6800": {
      "op": "JUMPDEST"
    },
    "6801": {
      "op": "POP"
    },
    "6802": {
      "op": "POP"
    },
    "6803": {
      "op": "DUP1"
    },
    "6804": {
      "op": "CALLDATALOAD"
    },
    "6805": {
      "op": "SWAP3"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6808": {
      "op": "SWAP1"
    },
    "6809": {
      "op": "SWAP2"
    },
    "6810": {
      "op": "ADD"
    },
    "6811": {
      "op": "CALLDATALOAD"
    },
    "6812": {
      "op": "SWAP2"
    },
    "6813": {
      "op": "POP"
    },
    "6814": {
      "jump": "o",
      "op": "JUMP"
    },
    "6815": {
      "op": "JUMPDEST"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6818": {
      "op": "DUP1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6821": {
      "op": "DUP4"
    },
    "6822": {
      "op": "DUP6"
    },
    "6823": {
      "op": "SUB"
    },
    "6824": {
      "op": "SLT"
    },
    "6825": {
      "op": "ISZERO"
    },
    "6826": {
      "op": "PUSH2",
      "value": "0x1AB2"
    },
    "6829": {
      "op": "JUMPI"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6832": {
      "op": "DUP1"
    },
    "6833": {
      "op": "REVERT"
    },
    "6834": {
      "op": "JUMPDEST"
    },
    "6835": {
      "op": "PUSH2",
      "value": "0x1ABB"
    },
    "6838": {
      "op": "DUP4"
    },
    "6839": {
      "op": "PUSH2",
      "value": "0x1A46"
    },
    "6842": {
      "jump": "i",
      "op": "JUMP"
    },
    "6843": {
      "op": "JUMPDEST"
    },
    "6844": {
      "op": "SWAP5"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6847": {
      "op": "SWAP4"
    },
    "6848": {
      "op": "SWAP1"
    },
    "6849": {
      "op": "SWAP4"
    },
    "6850": {
      "op": "ADD"
    },
    "6851": {
      "op": "CALLDATALOAD"
    },
    "6852": {
      "op": "SWAP4"
    },
    "6853": {
      "op": "POP"
    },
    "6854": {
      "op": "POP"
    },
    "6855": {
      "op": "POP"
    },
    "6856": {
      "jump": "o",
      "op": "JUMP"
    },
    "6857": {
      "op": "JUMPDEST"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6862": {
      "op": "DUP3"
    },
    "6863": {
      "op": "DUP5"
    },
    "6864": {
      "op": "SUB"
    },
    "6865": {
      "op": "SLT"
    },
    "6866": {
      "op": "ISZERO"
    },
    "6867": {
      "op": "PUSH2",
      "value": "0x1ADB"
    },
    "6870": {
      "op": "JUMPI"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6873": {
      "op": "DUP1"
    },
    "6874": {
      "op": "REVERT"
    },
    "6875": {
      "op": "JUMPDEST"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "CALLDATALOAD"
    },
    "6878": {
      "op": "SWAP2"
    },
    "6879": {
      "op": "SWAP1"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "jump": "o",
      "op": "JUMP"
    },
    "6882": {
      "op": "JUMPDEST"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6885": {
      "op": "DUP1"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6890": {
      "op": "DUP5"
    },
    "6891": {
      "op": "DUP7"
    },
    "6892": {
      "op": "SUB"
    },
    "6893": {
      "op": "SLT"
    },
    "6894": {
      "op": "ISZERO"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1AF7"
    },
    "6898": {
      "op": "JUMPI"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6901": {
      "op": "DUP1"
    },
    "6902": {
      "op": "REVERT"
    },
    "6903": {
      "op": "JUMPDEST"
    },
    "6904": {
      "op": "POP"
    },
    "6905": {
      "op": "POP"
    },
    "6906": {
      "op": "DUP2"
    },
    "6907": {
      "op": "CALLDATALOAD"
    },
    "6908": {
      "op": "SWAP4"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6911": {
      "op": "DUP4"
    },
    "6912": {
      "op": "ADD"
    },
    "6913": {
      "op": "CALLDATALOAD"
    },
    "6914": {
      "op": "SWAP4"
    },
    "6915": {
      "op": "POP"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6918": {
      "op": "SWAP1"
    },
    "6919": {
      "op": "SWAP3"
    },
    "6920": {
      "op": "ADD"
    },
    "6921": {
      "op": "CALLDATALOAD"
    },
    "6922": {
      "op": "SWAP2"
    },
    "6923": {
      "op": "SWAP1"
    },
    "6924": {
      "op": "POP"
    },
    "6925": {
      "jump": "o",
      "op": "JUMP"
    },
    "6926": {
      "op": "JUMPDEST"
    },
    "6927": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6934": {
      "op": "SHL"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6937": {
      "op": "MSTORE"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6942": {
      "op": "MSTORE"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6947": {
      "op": "REVERT"
    },
    "6948": {
      "op": "JUMPDEST"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6951": {
      "op": "DUP1"
    },
    "6952": {
      "op": "DUP3"
    },
    "6953": {
      "op": "SLT"
    },
    "6954": {
      "op": "DUP1"
    },
    "6955": {
      "op": "ISZERO"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6962": {
      "op": "SHL"
    },
    "6963": {
      "op": "SUB"
    },
    "6964": {
      "op": "DUP5"
    },
    "6965": {
      "op": "SWAP1"
    },
    "6966": {
      "op": "SUB"
    },
    "6967": {
      "op": "DUP6"
    },
    "6968": {
      "op": "SGT"
    },
    "6969": {
      "op": "AND"
    },
    "6970": {
      "op": "ISZERO"
    },
    "6971": {
      "op": "PUSH2",
      "value": "0x1B46"
    },
    "6974": {
      "op": "JUMPI"
    },
    "6975": {
      "op": "PUSH2",
      "value": "0x1B46"
    },
    "6978": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "6981": {
      "jump": "i",
      "op": "JUMP"
    },
    "6982": {
      "op": "JUMPDEST"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6987": {
      "op": "SHL"
    },
    "6988": {
      "op": "DUP4"
    },
    "6989": {
      "op": "SWAP1"
    },
    "6990": {
      "op": "SUB"
    },
    "6991": {
      "op": "DUP5"
    },
    "6992": {
      "op": "SLT"
    },
    "6993": {
      "op": "DUP2"
    },
    "6994": {
      "op": "AND"
    },
    "6995": {
      "op": "ISZERO"
    },
    "6996": {
      "op": "PUSH2",
      "value": "0x1B5F"
    },
    "6999": {
      "op": "JUMPI"
    },
    "7000": {
      "op": "PUSH2",
      "value": "0x1B5F"
    },
    "7003": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7006": {
      "jump": "i",
      "op": "JUMP"
    },
    "7007": {
      "op": "JUMPDEST"
    },
    "7008": {
      "op": "POP"
    },
    "7009": {
      "op": "POP"
    },
    "7010": {
      "op": "ADD"
    },
    "7011": {
      "op": "SWAP1"
    },
    "7012": {
      "jump": "o",
      "op": "JUMP"
    },
    "7013": {
      "op": "JUMPDEST"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7016": {
      "op": "DUP3"
    },
    "7017": {
      "op": "NOT"
    },
    "7018": {
      "op": "DUP3"
    },
    "7019": {
      "op": "GT"
    },
    "7020": {
      "op": "ISZERO"
    },
    "7021": {
      "op": "PUSH2",
      "value": "0x1B78"
    },
    "7024": {
      "op": "JUMPI"
    },
    "7025": {
      "op": "PUSH2",
      "value": "0x1B78"
    },
    "7028": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7031": {
      "jump": "i",
      "op": "JUMP"
    },
    "7032": {
      "op": "JUMPDEST"
    },
    "7033": {
      "op": "POP"
    },
    "7034": {
      "op": "ADD"
    },
    "7035": {
      "op": "SWAP1"
    },
    "7036": {
      "jump": "o",
      "op": "JUMP"
    },
    "7037": {
      "op": "JUMPDEST"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7042": {
      "op": "NOT"
    },
    "7043": {
      "op": "DUP3"
    },
    "7044": {
      "op": "EQ"
    },
    "7045": {
      "op": "ISZERO"
    },
    "7046": {
      "op": "PUSH2",
      "value": "0x1B91"
    },
    "7049": {
      "op": "JUMPI"
    },
    "7050": {
      "op": "PUSH2",
      "value": "0x1B91"
    },
    "7053": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7056": {
      "jump": "i",
      "op": "JUMP"
    },
    "7057": {
      "op": "JUMPDEST"
    },
    "7058": {
      "op": "POP"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "SWAP1"
    },
    "7063": {
      "jump": "o",
      "op": "JUMP"
    },
    "7064": {
      "op": "JUMPDEST"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7067": {
      "op": "DUP3"
    },
    "7068": {
      "op": "DUP3"
    },
    "7069": {
      "op": "LT"
    },
    "7070": {
      "op": "ISZERO"
    },
    "7071": {
      "op": "PUSH2",
      "value": "0x1BAA"
    },
    "7074": {
      "op": "JUMPI"
    },
    "7075": {
      "op": "PUSH2",
      "value": "0x1BAA"
    },
    "7078": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7081": {
      "jump": "i",
      "op": "JUMP"
    },
    "7082": {
      "op": "JUMPDEST"
    },
    "7083": {
      "op": "POP"
    },
    "7084": {
      "op": "SUB"
    },
    "7085": {
      "op": "SWAP1"
    },
    "7086": {
      "jump": "o",
      "op": "JUMP"
    },
    "7087": {
      "op": "JUMPDEST"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7092": {
      "op": "DUP3"
    },
    "7093": {
      "op": "DUP5"
    },
    "7094": {
      "op": "SUB"
    },
    "7095": {
      "op": "SLT"
    },
    "7096": {
      "op": "ISZERO"
    },
    "7097": {
      "op": "PUSH2",
      "value": "0x1BC1"
    },
    "7100": {
      "op": "JUMPI"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7103": {
      "op": "DUP1"
    },
    "7104": {
      "op": "REVERT"
    },
    "7105": {
      "op": "JUMPDEST"
    },
    "7106": {
      "op": "POP"
    },
    "7107": {
      "op": "MLOAD"
    },
    "7108": {
      "op": "SWAP2"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "POP"
    },
    "7111": {
      "jump": "o",
      "op": "JUMP"
    },
    "7112": {
      "op": "JUMPDEST"
    },
    "7113": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7120": {
      "op": "SHL"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7123": {
      "op": "MSTORE"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7128": {
      "op": "MSTORE"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7133": {
      "op": "REVERT"
    },
    "7134": {
      "op": "JUMPDEST"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7141": {
      "op": "SHL"
    },
    "7142": {
      "op": "SUB"
    },
    "7143": {
      "op": "SWAP4"
    },
    "7144": {
      "op": "DUP5"
    },
    "7145": {
      "op": "AND"
    },
    "7146": {
      "op": "DUP2"
    },
    "7147": {
      "op": "MSTORE"
    },
    "7148": {
      "op": "SWAP2"
    },
    "7149": {
      "op": "SWAP1"
    },
    "7150": {
      "op": "SWAP3"
    },
    "7151": {
      "op": "AND"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7159": {
      "op": "DUP2"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "SWAP2"
    },
    "7162": {
      "op": "SWAP1"
    },
    "7163": {
      "op": "SWAP2"
    },
    "7164": {
      "op": "MSTORE"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7167": {
      "op": "ADD"
    },
    "7168": {
      "op": "SWAP1"
    },
    "7169": {
      "jump": "o",
      "op": "JUMP"
    },
    "7170": {
      "op": "JUMPDEST"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7175": {
      "op": "DUP3"
    },
    "7176": {
      "op": "DUP5"
    },
    "7177": {
      "op": "SUB"
    },
    "7178": {
      "op": "SLT"
    },
    "7179": {
      "op": "ISZERO"
    },
    "7180": {
      "op": "PUSH2",
      "value": "0x1C14"
    },
    "7183": {
      "op": "JUMPI"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7186": {
      "op": "DUP1"
    },
    "7187": {
      "op": "REVERT"
    },
    "7188": {
      "op": "JUMPDEST"
    },
    "7189": {
      "op": "DUP2"
    },
    "7190": {
      "op": "MLOAD"
    },
    "7191": {
      "op": "DUP1"
    },
    "7192": {
      "op": "ISZERO"
    },
    "7193": {
      "op": "ISZERO"
    },
    "7194": {
      "op": "DUP2"
    },
    "7195": {
      "op": "EQ"
    },
    "7196": {
      "op": "PUSH2",
      "value": "0x87B"
    },
    "7199": {
      "op": "JUMPI"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7202": {
      "op": "DUP1"
    },
    "7203": {
      "op": "REVERT"
    },
    "7204": {
      "op": "JUMPDEST"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7207": {
      "op": "DUP2"
    },
    "7208": {
      "op": "MLOAD"
    },
    "7209": {
      "op": "DUP1"
    },
    "7210": {
      "op": "DUP5"
    },
    "7211": {
      "op": "MSTORE"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7214": {
      "op": "JUMPDEST"
    },
    "7215": {
      "op": "DUP2"
    },
    "7216": {
      "op": "DUP2"
    },
    "7217": {
      "op": "LT"
    },
    "7218": {
      "op": "ISZERO"
    },
    "7219": {
      "op": "PUSH2",
      "value": "0x1C4A"
    },
    "7222": {
      "op": "JUMPI"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7225": {
      "op": "DUP2"
    },
    "7226": {
      "op": "DUP6"
    },
    "7227": {
      "op": "ADD"
    },
    "7228": {
      "op": "DUP2"
    },
    "7229": {
      "op": "ADD"
    },
    "7230": {
      "op": "MLOAD"
    },
    "7231": {
      "op": "DUP7"
    },
    "7232": {
      "op": "DUP4"
    },
    "7233": {
      "op": "ADD"
    },
    "7234": {
      "op": "DUP3"
    },
    "7235": {
      "op": "ADD"
    },
    "7236": {
      "op": "MSTORE"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "PUSH2",
      "value": "0x1C2E"
    },
    "7241": {
      "op": "JUMP"
    },
    "7242": {
      "op": "JUMPDEST"
    },
    "7243": {
      "op": "DUP2"
    },
    "7244": {
      "op": "DUP2"
    },
    "7245": {
      "op": "GT"
    },
    "7246": {
      "op": "ISZERO"
    },
    "7247": {
      "op": "PUSH2",
      "value": "0x1C5C"
    },
    "7250": {
      "op": "JUMPI"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7255": {
      "op": "DUP4"
    },
    "7256": {
      "op": "DUP8"
    },
    "7257": {
      "op": "ADD"
    },
    "7258": {
      "op": "ADD"
    },
    "7259": {
      "op": "MSTORE"
    },
    "7260": {
      "op": "JUMPDEST"
    },
    "7261": {
      "op": "POP"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7264": {
      "op": "ADD"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7267": {
      "op": "NOT"
    },
    "7268": {
      "op": "AND"
    },
    "7269": {
      "op": "SWAP3"
    },
    "7270": {
      "op": "SWAP1"
    },
    "7271": {
      "op": "SWAP3"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "SWAP3"
    },
    "7277": {
      "op": "SWAP2"
    },
    "7278": {
      "op": "POP"
    },
    "7279": {
      "op": "POP"
    },
    "7280": {
      "jump": "o",
      "op": "JUMP"
    },
    "7281": {
      "op": "JUMPDEST"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7284": {
      "op": "DUP2"
    },
    "7285": {
      "op": "MSTORE"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7288": {
      "op": "PUSH2",
      "value": "0x87B"
    },
    "7291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7293": {
      "op": "DUP4"
    },
    "7294": {
      "op": "ADD"
    },
    "7295": {
      "op": "DUP5"
    },
    "7296": {
      "op": "PUSH2",
      "value": "0x1C24"
    },
    "7299": {
      "jump": "i",
      "op": "JUMP"
    },
    "7300": {
      "op": "JUMPDEST"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7303": {
      "op": "DUP2"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7306": {
      "op": "NOT"
    },
    "7307": {
      "op": "DIV"
    },
    "7308": {
      "op": "DUP4"
    },
    "7309": {
      "op": "GT"
    },
    "7310": {
      "op": "DUP3"
    },
    "7311": {
      "op": "ISZERO"
    },
    "7312": {
      "op": "ISZERO"
    },
    "7313": {
      "op": "AND"
    },
    "7314": {
      "op": "ISZERO"
    },
    "7315": {
      "op": "PUSH2",
      "value": "0x1C9E"
    },
    "7318": {
      "op": "JUMPI"
    },
    "7319": {
      "op": "PUSH2",
      "value": "0x1C9E"
    },
    "7322": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7325": {
      "jump": "i",
      "op": "JUMP"
    },
    "7326": {
      "op": "JUMPDEST"
    },
    "7327": {
      "op": "POP"
    },
    "7328": {
      "op": "MUL"
    },
    "7329": {
      "op": "SWAP1"
    },
    "7330": {
      "jump": "o",
      "op": "JUMP"
    },
    "7331": {
      "op": "JUMPDEST"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7334": {
      "op": "DUP3"
    },
    "7335": {
      "op": "PUSH2",
      "value": "0x1CB2"
    },
    "7338": {
      "op": "JUMPI"
    },
    "7339": {
      "op": "PUSH2",
      "value": "0x1CB2"
    },
    "7342": {
      "op": "PUSH2",
      "value": "0x1BC8"
    },
    "7345": {
      "jump": "i",
      "op": "JUMP"
    },
    "7346": {
      "op": "JUMPDEST"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "op": "DIV"
    },
    "7349": {
      "op": "SWAP1"
    },
    "7350": {
      "jump": "o",
      "op": "JUMP"
    },
    "7351": {
      "op": "JUMPDEST"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7354": {
      "op": "DUP1"
    },
    "7355": {
      "op": "DUP4"
    },
    "7356": {
      "op": "SLT"
    },
    "7357": {
      "op": "DUP1"
    },
    "7358": {
      "op": "ISZERO"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7363": {
      "op": "SHL"
    },
    "7364": {
      "op": "DUP6"
    },
    "7365": {
      "op": "ADD"
    },
    "7366": {
      "op": "DUP5"
    },
    "7367": {
      "op": "SLT"
    },
    "7368": {
      "op": "AND"
    },
    "7369": {
      "op": "ISZERO"
    },
    "7370": {
      "op": "PUSH2",
      "value": "0x1CD5"
    },
    "7373": {
      "op": "JUMPI"
    },
    "7374": {
      "op": "PUSH2",
      "value": "0x1CD5"
    },
    "7377": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7380": {
      "jump": "i",
      "op": "JUMP"
    },
    "7381": {
      "op": "JUMPDEST"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7388": {
      "op": "SHL"
    },
    "7389": {
      "op": "SUB"
    },
    "7390": {
      "op": "DUP5"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "op": "DUP4"
    },
    "7393": {
      "op": "SGT"
    },
    "7394": {
      "op": "DUP2"
    },
    "7395": {
      "op": "AND"
    },
    "7396": {
      "op": "ISZERO"
    },
    "7397": {
      "op": "PUSH2",
      "value": "0x1CF0"
    },
    "7400": {
      "op": "JUMPI"
    },
    "7401": {
      "op": "PUSH2",
      "value": "0x1CF0"
    },
    "7404": {
      "op": "PUSH2",
      "value": "0x1B0E"
    },
    "7407": {
      "jump": "i",
      "op": "JUMP"
    },
    "7408": {
      "op": "JUMPDEST"
    },
    "7409": {
      "op": "POP"
    },
    "7410": {
      "op": "POP"
    },
    "7411": {
      "op": "SUB"
    },
    "7412": {
      "op": "SWAP1"
    },
    "7413": {
      "jump": "o",
      "op": "JUMP"
    },
    "7414": {
      "op": "JUMPDEST"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7417": {
      "op": "DUP1"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7420": {
      "op": "SHL"
    },
    "7421": {
      "op": "SUB"
    },
    "7422": {
      "op": "DUP5"
    },
    "7423": {
      "op": "AND"
    },
    "7424": {
      "op": "DUP2"
    },
    "7425": {
      "op": "MSTORE"
    },
    "7426": {
      "op": "DUP3"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "op": "MSTORE"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7436": {
      "op": "DUP3"
    },
    "7437": {
      "op": "ADD"
    },
    "7438": {
      "op": "MSTORE"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7441": {
      "op": "PUSH2",
      "value": "0x142E"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7446": {
      "op": "DUP4"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "op": "DUP5"
    },
    "7449": {
      "op": "PUSH2",
      "value": "0x1C24"
    },
    "7452": {
      "jump": "i",
      "op": "JUMP"
    },
    "7453": {
      "op": "JUMPDEST"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7456": {
      "op": "DUP3"
    },
    "7457": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7460": {
      "op": "JUMPI"
    },
    "7461": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7464": {
      "op": "PUSH2",
      "value": "0x1BC8"
    },
    "7467": {
      "jump": "i",
      "op": "JUMP"
    },
    "7468": {
      "op": "JUMPDEST"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "op": "MOD"
    },
    "7471": {
      "op": "SWAP1"
    },
    "7472": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ba657fa18726d218308675fe44ed3e0e830f96b1",
  "source": "// Forge Guess - Contract\n//\n// Forge Guess allows users to guess a number 1-97 and hope a random number 0-99 is lower.  \n// Odds and bet maximums are calculated automatically at the contract level. Forge tokens using chainlink VRF.\n// House edge of 0.5% - 10% depending on bet size.\n//\n// Forge Guess gives 100% of all profits to investors of the contract. \n// Invest Forge and become the house and make Forge when users use this contract!\n// 2.5% Withdrawl fee goes 100% back to investors to promote longeviity!\n\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"./VRFConsumerBase.sol\";\n\n/**\n * Request testnet LINK and ETH here: https://faucets.chain.link/\n * Find information on LINK Token Contracts and get the latest ETH and LINK faucets here: https://docs.chain.link/docs/link-token-contracts/\n */\n interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract ForgeGuess is VRFConsumerBase {\n\n    bytes32 internal keyHash;\n    uint256 internal fee;\n    //Guess Storage\n    uint256 public betid = 0;\n    uint256 public betidIN = 0;\n    mapping(uint256 => uint256) public betResults;\n    mapping(uint256 => uint256) public blockNumForBetID;\n    mapping(uint256 => uint256) public betAmt;\n    mapping(uint256 => uint256) public betOdds;\n    mapping(uint256 => uint256) public randomNumber;\n    mapping(uint256 => address) public betee;\n    mapping(uint256 => uint256) public winnings;\n    mapping(address => int) public profitz;\n    mapping(address => int) public profitzGuess;\n\n    uint256 public randomResult;\n    uint256 public unreleased = 0;\n    uint256 public totalSupply = 1;\n    \n    mapping(address => uint256) private _balances;\n    \n    IERC20 public stakedToken = IERC20(0xF44fB43066F7ECC91058E3A614Fb8A15A2735276);\n    \n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event GuessNote(uint256 UsersGuess, uint256 amount, address indexed user, uint256 betID);\n    event ShowAnswer(uint256 UsersGuess, uint256 Result, uint256 amountWagered, uint256 betID, address indexed AddressOfGuesser, uint256 AmountWon, uint256 chainlinkRandom);\n    \n    \n    \n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n    \n    string constant _transferErrorMessage = \"staked token transfer failed\";\n    \n    /**\n     * Constructor inherits VRFConsumerBase\n     * \n     * Network: Mumbai\n     * Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n     * LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n     * Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\n     */\n    constructor() \n        VRFConsumerBase(\n            0x3d2341ADb2D31f1c5530cDC622016af293177AE0, // VRF Coordinator\n            0xb0897686c545045aFc77CF20eC7A532E3120E0F1  // LINK Token\n        )\n    {\n        \n        keyHash = 0xf86195cf7690c55907b2b611ebb7343a6f649bff128701cc542f0569e2c549da;\n        fee = 1 * 10 ** 14; // 0.0001 LINK\n    }\n    \n    /** \n     * Requests randomness \n     */\n    function getRandomNumber(uint256 guess, uint256 amt, uint256 extraLINK) public returns (bytes32 requestId) {\n        uint256 esT = estOUTPUT(amt, guess);\n        require(amt < esT, \"You will loose money everytime at these settings\");\n        require(amt >= 10**18, \"Min bet 1 Forge\");\n        require(extraLINK >= 1, \"Must send at least the minimum 0.0001\"); //Allows increase in fees to be handled\n        require(MaxINForGuess(guess) >= amt , \"Bankroll too low for this bet, Please lower bet\"); //MaxBet Amounts   \n        require(guess<98 && guess > 0, \"Must guess between 1-98\");\n        require(stakedToken.transferFrom(msg.sender, address(this), amt), \"Transfer must work\");\n        \n        uint256 lBal = LINK.balanceOf(address(this));\n        //Free chainlink for player rolls\n        if(extraLINK > 1){\n        LINK.transferFrom(msg.sender, address(this), (fee * (extraLINK-1)));\n        }\n        if(amt < (10 * 10 ** 18)){\n            LINK.transferFrom(msg.sender, address(this), fee * extraLINK);\n        }else if(amt < 50 * 10 ** 18 ){\n            if(betidIN > 100000 || lBal < fee * 21){  //Must seed with 10 link = 100,000 * 0.0001 = 10 LINK\n                LINK.transferFrom(msg.sender, address(this), fee * extraLINK);\n            }\n        }else if(guess <= 93)\n        {\n            if(lBal < fee*21 ){\n                LINK.transferFrom(msg.sender, address(this), fee * extraLINK);\n            }\n        }else\n        {\n            if(lBal < fee*21 ){\n                LINK.transferFrom(msg.sender, address(this), fee * extraLINK);\n            }\n        }\n        betOdds[betidIN] = guess;\n        betAmt[betidIN] = amt;\n        betee[betidIN] = msg.sender;\n        winnings[betidIN] = esT;\n        profitzGuess[msg.sender] -= int(amt);\n        blockNumForBetID[betidIN] = block.number;\n        emit GuessNote(guess, amt, msg.sender, betidIN);\n        betidIN++;\n        unreleased +=  amt;\n        return requestRandomness(keyHash, fee * extraLINK);\n    }\n\n    function lastBlockFilled() public view returns (uint256){\n        if(betid == betidIN){\n            return block.number;\n        }\n        return blockNumForBetID[betid];\n    }\n\n    // Max AMT for a certien guess\n     function MaxINForGuess(uint256 guess) public view returns (uint256){\n         //AT 50% chance u get 1/23 of bankroll to bet\n         uint256 ret = ((IERC20(address(stakedToken)).balanceOf(address(this)) - unreleased) * guess) / (50 * 21);\n         return ret;\n     }\n\n    function penalty () public view returns (uint num){\n\n        uint tot = 0;\n        for(uint x = betid; x<betidIN; x++){\n            tot += winnings[x];\n        }\n      \n      return tot;\n    }\n \n    //Incase of Chainlink failure\n    function getBlank(uint256 extraLINK) public returns (bytes32 requestId) {\n        LINK.transferFrom(msg.sender, address(this), fee * extraLINK);\n\n        return requestRandomness(keyHash, fee * extraLINK);\n    }\n\n    /**\n     * Callback function used by VRF Coordinator\n     */\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        if(betid >= betidIN){\n            return;\n        }\n        \n        require(betid < betidIN, \"Must have new bets\");\n        \n        randomNumber[betid] = randomness;\n        betResults[betid] = randomness % 100;\n        address Guesser = betee[betid];\n        uint256 odds = betOdds[betid];\n        uint256 betAmount = betAmt[betid];\n        uint256 esT = winnings[betid];\n        if(randomness%100 < odds){\n            profitzGuess[Guesser] += int(esT);\n            stakedToken.transfer(Guesser, esT);\n        }else{\n            stakedToken.transfer(Guesser, 1);\n            profitzGuess[Guesser] += int(1);\n            winnings[betid] = 1;\n        }\n        unreleased -= betAmount;\n        emit ShowAnswer(odds, randomness%100, betAmount,  betid, Guesser, winnings[betid], randomness);\n        betid++;\n    }\n\n    //Stake and become the house\n    function stakeFor(address forWhom, uint256 amount) public virtual {\n        IERC20 st = stakedToken;\n        require(amount > 0, \"Cannot stake 0\");\n\n        unchecked { \n            uint toAdd = (amount * totalSupply) / (IERC20(address(stakedToken)).balanceOf(address(this)) - unreleased);\n            _balances[forWhom] += toAdd;\n            totalSupply += toAdd;\n            profitz[forWhom] -= int(amount);\n        }\n        \n        require(st.transferFrom(msg.sender, address(this), amount), _transferErrorMessage);\n            \n        emit Staked(forWhom, amount);\n    }\n\n    function maxGuessPerInput(uint guess, uint amt) public view returns(uint){\n        uint x = 0;\n    \n        for(x =0; x<90; x++){\n            if(MaxINForGuess(98-x) < amt){\n                amt = MaxINForGuess(99-x);\n            }\n            if(estOUTPUT(amt, 99 - x) > amt){\n                break;\n            }\n        }\n        return 99 - x;\n    }\n\n    //Output Amount of payout based on odds and bet\n    function estOUTPUT(uint256 betAmount, uint256 odds) public view returns (uint256){\n        uint256 ratioz = (IERC20(address(stakedToken)).balanceOf(address(this)) - unreleased) * 50 / (betAmount * odds);\n        uint256 estOutput = 0;\n            if(ratioz < 30){\n\n            estOutput = (100 * 90 * betAmount)/(odds*100);\n\n            }else if(ratioz < 50){\n\n            estOutput = (100 * 93 * betAmount)/(odds * 100);\n                \n            }else if(ratioz < 100){\n\n            estOutput = (100 * 96 * betAmount)/(odds * 100);\n                \n            }else if(ratioz < 200){\n\n            estOutput = (100 * 98 * betAmount)/(odds * 100);\n            \n            }else if(ratioz < 400){\n\n            estOutput = (100 * 99 * betAmount)/(odds * 100);\n\n            }else if (ratioz < 1000){\n                \n            estOutput = (100 * 995 * betAmount)/(odds * 1000);\n\n            }else {\n                \n            estOutput = (100 * 99 * betAmount)/(odds * 100);\n\n            }\n            \n            return estOutput;\n\n     }\n\n    //Withdrawl Estimator\n    function withEstimator(uint256 amountOut) public view returns (uint256) {\n        uint256 v = (975 * uOut(amountOut) / 1000);\n        return v;\n    }\n    \n    //Withdrawl Estimator\n    function currentForge(address forWhom) public view returns (uint256) {\n        uint256 v = (975 * uOut(balanceOf(forWhom)) / 1000);\n        return v;\n    }\n    \n\n        \n    \n    //Prevents you from withdrawing if large bets in play\n    function perfectWithdraw(uint maxLoss) public {\n    \n         withdraw(balanceOf(msg.sender), maxLoss);\n       \n        \n    }\n\n    function uOut(uint amount)public view returns (uint256 tot){\n    \n        uint256 stakeMinusUnreleased = (IERC20(address(stakedToken)).balanceOf(address(this)) - unreleased);\n        \n        uint256 amt = amount * stakeMinusUnreleased / totalSupply ;\n        \n        \n         tot = amt -  ( amt * penalty() ) / stakeMinusUnreleased;\n\n    return tot;\n    }\n    \n    \n    //2.5% fee on withdrawls back to holders\n    //Withdrawl function for house\n    //maxLoss as low as possible for best payouts.\n    function withdraw(uint256 amount, uint256 maxLoss) public virtual {\n          if(maxLoss<penalty()){\n           return;\n          }\n        \n        require(amount <= _balances[msg.sender], \"withdraw: balance is lower\");\n        \n        uint OutEst = uOut(amount);\n\n        unchecked {\n            _balances[msg.sender] -= amount;\n            totalSupply = totalSupply - amount;\n            profitz[msg.sender] += int(OutEst * 975 / 1000);\n        }\n        \n        require(stakedToken.transfer(address(this), (OutEst * 25 / 1000)));\n        require(stakedToken.transfer(msg.sender, ((OutEst * 975) / 1000)));\n        \n        emit Withdrawn(msg.sender, amount);\n    }    \n\n    function Profit(address user) public view returns(int) {\n        uint256 withdrawable = withEstimator(balanceOf(user));\n        int profit = profitz[user] + int(withdrawable);\n        return profit;\n    }\n\n    function blockNumber() public view returns(uint) {\n        return block.number;\n    }\n}\n\n\n/*\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2022 Forge\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.   \n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n",
  "sourceMap": "1493:10262:3:-:0;;;1638:1;1615:24;;;;1645:26;;;;2155:29;;2219:1;2190:30;;2287:78;;;-1:-1:-1;;;;;;2287:78:3;2322:42;2287:78;;;3318:344;;;;;;;;;-1:-1:-1;3370:42:3;9489:32:1;;3445:42:3;9528:32:1;;3546:66:3::1;3536:7;:76:::0;3628:12:::1;3622:3;:18:::0;1493:10262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/guess.sol",
  "type": "contract"
}