{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NumberOfTokensMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "TokenMultipler",
          "type": "uint256"
        }
      ],
      "name": "MegaMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "ARewardSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressLPReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressZeroXBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Token2Per",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BLOCKS_PER_READJUSTMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAXIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MINIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "testTarget",
          "type": "uint256"
        }
      ],
      "name": "checkMintSolution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "empty_mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChallengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        }
      ],
      "name": "getMintDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "digesttest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupplyForEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "nonce",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "challenge_digest",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "mintFREE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "mintTokensArrayTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "MintTo",
          "type": "address"
        }
      ],
      "name": "mintTokensSameAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multipler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AuctionAddress2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LPGuild2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ZeroXBTCAddress",
          "type": "address"
        }
      ],
      "name": "zinit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/forge.sol"
  },
  "ast": {
    "absolutePath": "contracts/forge.sol",
    "exportedSymbols": {
      "ApproveAndCallFallBack": [
        1265
      ],
      "ExtendedMath2": [
        1186
      ],
      "ForgeTest": [
        3423
      ],
      "IERC20": [
        1253
      ],
      "IsContract": [
        1027
      ],
      "Ownable": [
        1000
      ],
      "SafeMath2": [
        1167
      ]
    },
    "id": 3424,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 944,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "2993:24:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1000,
        "linearizedBaseContracts": [
          1000
        ],
        "name": "Ownable",
        "nameLocation": "3028:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 946,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "3057:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1000,
            "src": "3042:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 945,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3042:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 952,
            "name": "TransferOwnership",
            "nameLocation": "3075:17:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3101:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "3093:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3116:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "3108:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:28:3"
            },
            "src": "3069:52:3"
          },
          {
            "body": {
              "id": 969,
              "nodeType": "Block",
              "src": "3148:91:3",
              "statements": [
                {
                  "expression": {
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 955,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "3158:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 956,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3166:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3166:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3158:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:18:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3217:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3209:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 961,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3209:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3209:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3221:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3221:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 960,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "3191:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 968,
                  "nodeType": "EmitStatement",
                  "src": "3186:46:3"
                }
              ]
            },
            "id": 970,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3138:2:3"
            },
            "returnParameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3148:0:3"
            },
            "scope": 1000,
            "src": "3127:112:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 981,
              "nodeType": "Block",
              "src": "3266:70:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 973,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3284:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3284:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 975,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "3298:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3284:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572",
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3305:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        },
                        "value": "only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        }
                      ],
                      "id": 972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3276:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:42:3"
                },
                {
                  "id": 980,
                  "nodeType": "PlaceholderStatement",
                  "src": "3328:1:3"
                }
              ]
            },
            "id": 982,
            "name": "onlyOwner",
            "nameLocation": "3254:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:2:3"
            },
            "src": "3245:91:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "3395:78:3",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 990,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "3428:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 991,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3435:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "3410:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "EmitStatement",
                  "src": "3405:37:3"
                },
                {
                  "expression": {
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 994,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "3452:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 995,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "3460:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3452:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:14:3"
                }
              ]
            },
            "id": 999,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 986,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 982,
                  "src": "3385:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:9:3"
              }
            ],
            "name": "setOwner",
            "nameLocation": "3351:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3368:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "3360:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3359:16:3"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3395:0:3"
            },
            "scope": 1000,
            "src": "3342:131:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3424,
        "src": "3019:456:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IsContract",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1027,
        "linearizedBaseContracts": [
          1027
        ],
        "name": "IsContract",
        "nameLocation": "3488:10:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "3569:254:3",
              "statements": [
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "3587:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1025,
                      "src": "3579:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1007,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3579:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1009,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3579:16:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3653:34:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3655:30:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "3679:5:3"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "3667:11:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3667:18:3"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "3655:8:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1002,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3679:5:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1008,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3655:8:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 1010,
                  "nodeType": "InlineAssembly",
                  "src": "3644:43:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1011,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "3703:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3723:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3715:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1012,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3715:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3715:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3703:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1017,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "3729:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3749:66:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            },
                            "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            }
                          ],
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3741:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1018,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3741:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3741:75:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3729:87:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3703:113:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1024,
                  "nodeType": "Return",
                  "src": "3696:120:3"
                }
              ]
            },
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "3514:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "3533:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "3525:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3524:15:3"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "3563:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:6:3"
            },
            "scope": 1027,
            "src": "3505:318:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3424,
        "src": "3480:345:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1167,
        "linearizedBaseContracts": [
          1167
        ],
        "name": "SafeMath2",
        "nameLocation": "3874:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1051,
              "nodeType": "Block",
              "src": "3957:93:3",
              "statements": [
                {
                  "assignments": [
                    1037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1037,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "3975:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1051,
                      "src": "3967:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3967:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1041,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1038,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "3979:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1039,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "3983:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3979:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3967:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1043,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "4002:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1044,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "4007:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4002:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464206f766572666c6f77",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        },
                        "value": "Add overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        }
                      ],
                      "id": 1042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3994:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:31:3"
                },
                {
                  "expression": {
                    "id": 1049,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1037,
                    "src": "4042:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1035,
                  "id": 1050,
                  "nodeType": "Return",
                  "src": "4035:8:3"
                }
              ]
            },
            "id": 1052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "3899:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3911:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "3903:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3922:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "3914:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:22:3"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "3948:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:9:3"
            },
            "scope": 1167,
            "src": "3890:160:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "4123:71:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1062,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "4141:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1063,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "4146:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4141:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756220756e646572666c6f77",
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4149:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        },
                        "value": "Sub underflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        }
                      ],
                      "id": 1061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4133:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:32:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1068,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "4182:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1069,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "4186:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4182:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1060,
                  "id": 1071,
                  "nodeType": "Return",
                  "src": "4175:12:3"
                }
              ]
            },
            "id": 1073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "4065:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4077:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "4069:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4069:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4088:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "4080:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4068:22:3"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "4114:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4113:9:3"
            },
            "scope": 1167,
            "src": "4056:138:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1106,
              "nodeType": "Block",
              "src": "4268:153:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1082,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "4282:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4287:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4282:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1088,
                  "nodeType": "IfStatement",
                  "src": "4278:45:3",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "4290:33:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4311:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1081,
                        "id": 1086,
                        "nodeType": "Return",
                        "src": "4304:8:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1090,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "4341:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1106,
                      "src": "4333:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4333:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1094,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1091,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "4345:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1092,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "4349:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4345:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4333:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1096,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "4368:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1097,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "4372:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4368:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1099,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "4377:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4368:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74206f766572666c6f77",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4380:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        },
                        "value": "Mult overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4360:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:36:3"
                },
                {
                  "expression": {
                    "id": 1104,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1090,
                    "src": "4413:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1081,
                  "id": 1105,
                  "nodeType": "Return",
                  "src": "4406:8:3"
                }
              ]
            },
            "id": 1107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mult",
            "nameLocation": "4209:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4222:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "4214:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4233:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "4225:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4213:22:3"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "4259:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:9:3"
            },
            "scope": 1167,
            "src": "4200:221:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "4494:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1117,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "4512:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4517:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4512:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4520:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 1116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4504:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:30:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1123,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "4551:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1124,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4555:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4551:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1115,
                  "id": 1126,
                  "nodeType": "Return",
                  "src": "4544:12:3"
                }
              ]
            },
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "4436:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4448:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4440:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4459:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4451:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:22:3"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4485:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:9:3"
            },
            "scope": 1167,
            "src": "4427:136:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "4641:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1138,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "4659:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4664:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4659:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4667:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4651:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4651:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "4651:30:3"
                },
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4699:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "4691:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1149,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1146,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "4703:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1147,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "4707:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4703:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4691:17:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1150,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "4722:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 1151,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "4726:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4722:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4731:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4722:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1162,
                  "nodeType": "IfStatement",
                  "src": "4718:50:3",
                  "trueBody": {
                    "id": 1161,
                    "nodeType": "Block",
                    "src": "4734:34:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1155,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "4748:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1156,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "4752:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4756:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4752:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4748:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "4748:9:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1163,
                    "name": "r",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1145,
                    "src": "4785:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1136,
                  "id": 1164,
                  "nodeType": "Return",
                  "src": "4778:8:3"
                }
              ]
            },
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divRound",
            "nameLocation": "4578:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4595:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "4587:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4606:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "4598:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:22:3"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "4632:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4632:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4631:9:3"
            },
            "scope": 1167,
            "src": "4569:224:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3424,
        "src": "3866:929:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtendedMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1186,
        "linearizedBaseContracts": [
          1186
        ],
        "name": "ExtendedMath2",
        "nameLocation": "4840:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "4984:56:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1176,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "4998:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1177,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "5002:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4998:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1181,
                  "nodeType": "IfStatement",
                  "src": "4995:18:3",
                  "trueBody": {
                    "expression": {
                      "id": 1179,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "5012:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1175,
                    "id": 1180,
                    "nodeType": "Return",
                    "src": "5005:8:3"
                  }
                },
                {
                  "expression": {
                    "id": 1182,
                    "name": "a",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1169,
                    "src": "5031:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1175,
                  "id": 1183,
                  "nodeType": "Return",
                  "src": "5024:8:3"
                }
              ]
            },
            "id": 1185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "limitLessThan",
            "nameLocation": "4923:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "4942:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "4937:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4937:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "4950:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "4945:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4936:16:3"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "4981:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "4976:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:8:3"
            },
            "scope": 1186,
            "src": "4914:126:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3424,
        "src": "4832:210:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1253,
        "linearizedBaseContracts": [
          1253
        ],
        "name": "IERC20",
        "nameLocation": "5096:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 1191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "5115:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5126:2:3"
            },
            "returnParameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "5152:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5152:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5151:9:3"
            },
            "scope": 1253,
            "src": "5106:55:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 1199,
            "name": "Transfer",
            "nameLocation": "5172:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5197:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "5181:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5181:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5220:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "5204:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5204:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5233:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "5225:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5180:60:3"
            },
            "src": "5166:75:3"
          },
          {
            "anonymous": false,
            "id": 1207,
            "name": "Approval",
            "nameLocation": "5252:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5277:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "5261:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5301:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "5285:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5285:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5319:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "5311:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:66:3"
            },
            "src": "5246:81:3"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 1216,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5341:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5358:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "5350:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5368:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "5363:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:26:3"
            },
            "returnParameters": {
              "id": 1215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5399:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "5394:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:14:3"
            },
            "scope": 1253,
            "src": "5332:76:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 1227,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5422:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5443:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "5435:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5435:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5458:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "5450:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5450:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5471:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "5463:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5434:44:3"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5502:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "5497:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5496:14:3"
            },
            "scope": 1253,
            "src": "5413:98:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 1236,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5525:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5543:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "5535:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5559:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "5551:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5551:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5534:34:3"
            },
            "returnParameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "5600:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "5592:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5592:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5591:19:3"
            },
            "scope": 1253,
            "src": "5516:95:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 1245,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5625:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5641:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1245,
                  "src": "5633:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5633:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5659:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1245,
                  "src": "5651:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5651:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5632:34:3"
            },
            "returnParameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5690:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1245,
                  "src": "5685:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5684:14:3"
            },
            "scope": 1253,
            "src": "5616:83:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 1252,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5713:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5731:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "5723:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5722:16:3"
            },
            "returnParameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5770:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "5762:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5762:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5761:17:3"
            },
            "scope": 1253,
            "src": "5704:75:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3424,
        "src": "5086:700:3",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "ApproveAndCallFallBack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 1265,
        "linearizedBaseContracts": [
          1265
        ],
        "name": "ApproveAndCallFallBack",
        "nameLocation": "5856:22:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8f4ffcb1",
            "id": 1264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "5894:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5918:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5910:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5910:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5932:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5924:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5948:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5940:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5940:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5968:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "5955:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5909:64:3"
            },
            "returnParameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5988:0:3"
            },
            "scope": 1265,
            "src": "5885:104:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3424,
        "src": "5838:153:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1266,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1000,
              "src": "6033:7:3"
            },
            "id": 1267,
            "nodeType": "InheritanceSpecifier",
            "src": "6033:7:3"
          },
          {
            "baseName": {
              "id": 1268,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1253,
              "src": "6042:6:3"
            },
            "id": 1269,
            "nodeType": "InheritanceSpecifier",
            "src": "6042:6:3"
          },
          {
            "baseName": {
              "id": 1270,
              "name": "ApproveAndCallFallBack",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1265,
              "src": "6050:22:3"
            },
            "id": 1271,
            "nodeType": "InheritanceSpecifier",
            "src": "6050:22:3"
          }
        ],
        "canonicalName": "ForgeTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3423,
        "linearizedBaseContracts": [
          3423,
          1265,
          1253,
          1000
        ],
        "name": "ForgeTest",
        "nameLocation": "6020:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "45d8a232",
            "id": 1276,
            "mutability": "constant",
            "name": "targetTime",
            "nameLocation": "6097:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6076:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1272,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6076:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              },
              "id": 1275,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3630",
                "id": 1273,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6110:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3438",
                "id": 1274,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6115:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "src": "6110:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "99f584b3",
            "id": 1279,
            "mutability": "mutable",
            "name": "multipler",
            "nameLocation": "6135:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6123:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1277,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6123:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6147:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94b939ef",
            "id": 1281,
            "mutability": "mutable",
            "name": "AddressAuction",
            "nameLocation": "6193:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6178:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1280,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6178:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f104e0c",
            "id": 1283,
            "mutability": "mutable",
            "name": "AddressLPReward",
            "nameLocation": "6228:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6213:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1282,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6213:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "510de094",
            "id": 1285,
            "mutability": "mutable",
            "name": "AddressZeroXBTC",
            "nameLocation": "6264:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6249:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1284,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6249:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1288,
            "libraryName": {
              "id": 1286,
              "name": "SafeMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1167,
              "src": "6300:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "6294:28:3",
            "typeName": {
              "id": 1287,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6314:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1291,
            "libraryName": {
              "id": 1289,
              "name": "ExtendedMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1186,
              "src": "6333:13:3"
            },
            "nodeType": "UsingForDirective",
            "src": "6327:29:3",
            "typeName": {
              "id": 1290,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6351:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 1301,
            "name": "Mint",
            "nameLocation": "6367:4:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6388:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "6372:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6372:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward_amount",
                  "nameLocation": "6399:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "6394:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6394:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6419:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "6414:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6414:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6439:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "6431:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6431:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6371:87:3"
            },
            "src": "6361:98:3"
          },
          {
            "anonymous": false,
            "id": 1313,
            "name": "MegaMint",
            "nameLocation": "6470:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6495:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "6479:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1305,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6506:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "6501:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6501:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1307,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6526:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "6518:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6518:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NumberOfTokensMinted",
                  "nameLocation": "6551:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "6546:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TokenMultipler",
                  "nameLocation": "6581:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "6573:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6573:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6478:118:3"
            },
            "src": "6464:133:3"
          },
          {
            "baseFunctions": [
              1191
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 1317,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "6647:11:3",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1315,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6631:8:3"
            },
            "scope": 3423,
            "src": "6623:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1314,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6623:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3432303030303031303030303030303030303030303030303030",
              "id": 1316,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6661:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_42000001000000000000000000_by_1",
                "typeString": "int_const 42000001000000000000000000"
              },
              "value": "42000001000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1322,
            "mutability": "constant",
            "name": "BALANCE_KEY",
            "nameLocation": "6718:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6693:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1318,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6693:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "62616c616e6365",
                  "id": 1320,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6742:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  },
                  "value": "balance"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  }
                ],
                "id": 1319,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6732:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1321,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6732:20:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1325,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "6796:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6791:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1323,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6791:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231303030303030303030303030303030303030303030303030",
              "id": 1324,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6811:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e932012b",
            "id": 1329,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted2",
            "nameLocation": "6855:30:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6843:60:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1326,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6843:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 1327,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "6888:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 1328,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "6888:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "829965cc",
            "id": 1332,
            "mutability": "mutable",
            "name": "epochCount",
            "nameLocation": "6921:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6909:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1330,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6909:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6934:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5ade81b",
            "id": 1335,
            "mutability": "mutable",
            "name": "_BLOCKS_PER_READJUSTMENT",
            "nameLocation": "6980:24:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "6968:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1333,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6968:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536",
              "id": 1334,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7007:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e9cf9",
            "id": 1340,
            "mutability": "mutable",
            "name": "_MINIMUM_TARGET",
            "nameLocation": "7052:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7039:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1336,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7039:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              },
              "id": 1339,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 1337,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7070:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3136",
                "id": 1338,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7073:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16_by_1",
                  "typeString": "int_const 16"
                },
                "value": "16"
              },
              "src": "7070:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87a2a9d6",
            "id": 1345,
            "mutability": "mutable",
            "name": "_MAXIMUM_TARGET",
            "nameLocation": "7099:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7086:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1341,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7086:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              },
              "id": 1344,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 1342,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7117:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "323334",
                "id": 1343,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7120:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_234_by_1",
                  "typeString": "int_const 234"
                },
                "value": "234"
              },
              "src": "7117:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a769d35",
            "id": 1353,
            "mutability": "mutable",
            "name": "miningTarget",
            "nameLocation": "7141:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7129:63:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1346,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7129:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  },
                  "id": 1351,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "323030303030303030303030",
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7176:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000_by_1",
                      "typeString": "int_const 200000000000"
                    },
                    "value": "200000000000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3235",
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7189:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "src": "7176:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                ],
                "expression": {
                  "id": 1347,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1345,
                  "src": "7156:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1348,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 1128,
                "src": "7156:19:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 1352,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7156:36:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ae0368b",
            "id": 1361,
            "mutability": "mutable",
            "name": "challengeNumber",
            "nameLocation": "7276:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7261:60:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1354,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "7261:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 1359,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "expression": {
                      "id": 1356,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "7304:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "src": "7304:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7319:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "7304:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 1355,
                "name": "blockhash",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -5,
                "src": "7294:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                  "typeString": "function (uint256) view returns (bytes32)"
                }
              },
              "id": 1360,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7294:27:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d38bf7a",
            "id": 1364,
            "mutability": "mutable",
            "name": "rewardEra",
            "nameLocation": "7390:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7378:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1362,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7378:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1363,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7402:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fa972e1",
            "id": 1378,
            "mutability": "mutable",
            "name": "maxSupplyForEra",
            "nameLocation": "7421:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7409:84:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1365,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7409:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 1376,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 1366,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1325,
                    "src": "7440:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7473:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1370,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "7477:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7489:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7477:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1373,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7476:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7473:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1367,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "7455:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "7455:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7455:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7440:52:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 1377,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "7439:54:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2381a60e",
            "id": 1381,
            "mutability": "mutable",
            "name": "reward_amount",
            "nameLocation": "7511:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7499:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1379,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7499:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1380,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7527:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1384,
            "mutability": "mutable",
            "name": "oldecount",
            "nameLocation": "7570:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7565:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1382,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7565:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1383,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7582:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "10294317",
            "id": 1388,
            "mutability": "mutable",
            "name": "previousBlockTime",
            "nameLocation": "7601:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7589:49:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1385,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7589:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 1386,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "7623:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 1387,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "7623:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1391,
            "mutability": "mutable",
            "name": "oneEthUnit",
            "nameLocation": "7649:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7644:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1389,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7644:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 1390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7665:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1394,
            "mutability": "mutable",
            "name": "one8unit",
            "nameLocation": "7695:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7690:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1392,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7690:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 1393,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7721:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a68eb88e",
            "id": 1397,
            "mutability": "mutable",
            "name": "Token2Per",
            "nameLocation": "7748:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7736:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1395,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7736:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 1396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7769:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1400,
            "mutability": "mutable",
            "name": "Token2Min",
            "nameLocation": "7787:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7782:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1398,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7782:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3838",
              "id": 1399,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7820:2:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_88_by_1",
                "typeString": "int_const 88"
              },
              "value": "88"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de9f32b",
            "id": 1402,
            "mutability": "mutable",
            "name": "tokensMinted",
            "nameLocation": "7840:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7828:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1401,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7828:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1406,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "7883:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7858:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1405,
              "keyType": {
                "id": 1403,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7866:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7858:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1404,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7877:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1412,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "7942:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7897:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1411,
              "keyType": {
                "id": 1407,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7905:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7897:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1410,
                "keyType": {
                  "id": 1408,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7924:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7916:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1409,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7935:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1415,
            "mutability": "mutable",
            "name": "give0xBTC",
            "nameLocation": "7960:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7955:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1413,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7955:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1414,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7972:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1418,
            "mutability": "mutable",
            "name": "give",
            "nameLocation": "7984:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "7979:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1416,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7979:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1417,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7991:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1421,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "8028:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8014:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1419,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8014:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466f726765",
              "id": 1420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8035:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_77767363ea794e1f1e9d0ebf67829596c5727d1b2aaffa7d888f58bfc8506a01",
                "typeString": "literal_string \"Forge\""
              },
              "value": "Forge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 1424,
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "8071:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8048:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1422,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8048:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466765",
              "id": 1423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8080:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_72bec6dc7612e67bf7079e1aafff1c2a41926b63891e6f06ea7f150ceb5d4b49",
                "typeString": "literal_string \"Fge\""
              },
              "value": "Fge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 1427,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "8113:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8091:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1425,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "8091:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 1426,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8124:2:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1431,
            "mutability": "mutable",
            "name": "lastrun",
            "nameLocation": "8141:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8133:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1428,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8133:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 1429,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8151:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 1430,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "8151:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "cb9ae707",
            "id": 1435,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted",
            "nameLocation": "8184:29:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8172:56:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1432,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8172:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 1433,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8216:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 1434,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "number",
              "nodeType": "MemberAccess",
              "src": "8216:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1438,
            "mutability": "mutable",
            "name": "initeds",
            "nameLocation": "8239:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 3423,
            "src": "8234:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1436,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8234:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1437,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8249:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "8320:116:3",
              "statements": [
                {
                  "expression": {
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1441,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "8326:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1444,
                      "indexExpression": {
                        "expression": {
                          "id": 1442,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8335:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8335:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8326:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8349:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "8326:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1447,
                  "nodeType": "ExpressionStatement",
                  "src": "8326:42:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8396:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8388:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1449,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8388:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8388:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8400:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8400:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8412:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 1448,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "8379:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8379:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1457,
                  "nodeType": "EmitStatement",
                  "src": "8374:58:3"
                }
              ]
            },
            "id": 1459,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8310:2:3"
            },
            "returnParameters": {
              "id": 1440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8320:0:3"
            },
            "scope": 3423,
            "src": "8299:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "8542:819:3",
              "statements": [
                {
                  "assignments": [
                    1471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1471,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "8557:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1577,
                      "src": "8552:6:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1470,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8552:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1473,
                  "initialValue": {
                    "hexValue": "3231303030303030303030303030303030303030303030303030",
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8561:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                      "typeString": "int_const 21000000000000000000000000"
                    },
                    "value": "21000000000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8552:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8631:8:3",
                        "subExpression": {
                          "id": 1475,
                          "name": "initeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1438,
                          "src": "8632:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1474,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "8624:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8624:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "8624:16:3"
                },
                {
                  "expression": {
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1479,
                      "name": "initeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "8650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8660:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8650:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:14:3"
                },
                {
                  "expression": {
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1483,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "8671:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1484,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8691:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8691:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8671:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1487,
                  "nodeType": "ExpressionStatement",
                  "src": "8671:35:3"
                },
                {
                  "expression": {
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1488,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "8713:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 1499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8762:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 1500,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "8765:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8762:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030",
                                "id": 1489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8730:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8736:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1493,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "8745:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8740:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1491,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8740:4:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8740:14:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8736:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8730:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1497,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8729:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1128,
                        "src": "8729:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8729:47:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8713:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "8713:63:3"
                },
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1505,
                      "name": "rewardEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "8783:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8795:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8783:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "8783:13:3"
                },
                {
                  "expression": {
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1509,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "8803:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8818:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8803:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "8803:16:3"
                },
                {
                  "expression": {
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1513,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "8826:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8839:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8826:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "8826:14:3"
                },
                {
                  "expression": {
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1517,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "8847:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8882:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 1518,
                          "name": "_MAXIMUM_TARGET",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "8862:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1128,
                        "src": "8862:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8862:22:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8847:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "8847:37:3"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1524,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "8937:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1525,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8970:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8970:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8937:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "8937:48:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1529,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "8992:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8992:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "8992:22:3"
                },
                {
                  "expression": {
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1532,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "9068:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1534,
                      "indexExpression": {
                        "id": 1533,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "9077:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9068:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1535,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "9096:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9098:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "9096:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9068:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "9068:31:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9133:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9125:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1541,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9125:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9125:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1545,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "9137:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1546,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1471,
                          "src": "9154:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9156:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9154:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1540,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "9116:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "EmitStatement",
                  "src": "9111:47:3"
                },
                {
                  "expression": {
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1551,
                      "name": "AddressAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "9167:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1552,
                      "name": "AuctionAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "9184:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9167:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "9167:32:3"
                },
                {
                  "expression": {
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1555,
                      "name": "AddressLPReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "9209:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1558,
                          "name": "LPGuild2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1463,
                          "src": "9235:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9227:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1556,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9227:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9227:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9209:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1561,
                  "nodeType": "ExpressionStatement",
                  "src": "9209:35:3"
                },
                {
                  "expression": {
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1562,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "9254:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1563,
                      "name": "_ZeroXBTCAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1465,
                      "src": "9272:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9254:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "9254:34:3"
                },
                {
                  "expression": {
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1566,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1384,
                      "src": "9300:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1567,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "9312:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9300:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:22:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9345:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9337:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1571,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9337:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9337:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1570,
                      "name": "setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "9328:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1576,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:20:3"
                }
              ]
            },
            "functionSelector": "64e46726",
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1467,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 982,
                  "src": "8533:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8533:9:3"
              }
            ],
            "name": "zinit",
            "nameLocation": "8451:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "AuctionAddress2",
                  "nameLocation": "8465:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "8457:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8457:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1463,
                  "mutability": "mutable",
                  "name": "LPGuild2",
                  "nameLocation": "8490:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "8482:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1465,
                  "mutability": "mutable",
                  "name": "_ZeroXBTCAddress",
                  "nameLocation": "8508:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "8500:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8500:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8456:69:3"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8542:0:3"
            },
            "scope": 3423,
            "src": "8442:919:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1772,
              "nodeType": "Block",
              "src": "9465:1064:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1589,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "9470:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9470:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "9470:22:3"
                },
                {
                  "assignments": [
                    1593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1593,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "9558:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1772,
                      "src": "9550:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9550:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1594,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9564:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1595,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9564:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1596,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "9582:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9564:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1598,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9563:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 1599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9603:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "9563:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1601,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9562:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1602,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "9610:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9562:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9550:70:3"
                },
                {
                  "assignments": [
                    1606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1606,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "9629:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1772,
                      "src": "9624:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1605,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9624:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1612,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1607,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "9637:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9641:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "9637:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 1610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9647:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "9637:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9624:26:3"
                },
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "9659:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1772,
                      "src": "9654:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1613,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9654:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1616,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9671:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9654:18:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1617,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1606,
                      "src": "9679:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 1618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9687:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "9679:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1657,
                    "nodeType": "Block",
                    "src": "9779:60:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1644,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "9784:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9816:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1647,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1645,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1593,
                                        "src": "9797:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 1646,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9801:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "9797:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1648,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9796:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "9796:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9796:24:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 1652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9824:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 1653,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9823:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "9796:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9784:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1656,
                        "nodeType": "ExpressionStatement",
                        "src": "9784:50:3"
                      }
                    ]
                  },
                  "id": 1658,
                  "nodeType": "IfStatement",
                  "src": "9676:163:3",
                  "trueBody": {
                    "id": 1643,
                    "nodeType": "Block",
                    "src": "9691:83:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1620,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "9696:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 1631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 1629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9735:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 1630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9742:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9735:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 1621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9709:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1624,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1622,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1593,
                                              "src": "9721:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 1623,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9726:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "9721:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1625,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9720:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9709:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1627,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9708:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "9708:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9708:36:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9765:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1635,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 1633,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9747:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1634,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1593,
                                        "src": "9758:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9747:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1636,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9746:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "9746:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9746:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9708:61:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9696:73:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1642,
                        "nodeType": "ExpressionStatement",
                        "src": "9696:73:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1659,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "9845:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1661,
                      "indexExpression": {
                        "id": 1660,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "9854:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9845:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 1671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9917:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1666,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "9886:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1667,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1614,
                                    "src": "9902:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9886:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1669,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9885:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "9885:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9885:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1662,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "9864:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1664,
                          "indexExpression": {
                            "id": 1663,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1584,
                            "src": "9873:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9864:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "9864:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9864:64:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9845:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "9845:83:3"
                },
                {
                  "expression": {
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1676,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "9932:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1678,
                      "indexExpression": {
                        "id": 1677,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "9941:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9932:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              },
                              "id": 1690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10022:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10034:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "10022:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1683,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "9991:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1684,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1614,
                                    "src": "10007:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9991:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1686,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9990:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "9990:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9990:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1679,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "9960:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1681,
                          "indexExpression": {
                            "id": 1680,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "9969:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9960:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "9960:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9960:77:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9932:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1694,
                  "nodeType": "ExpressionStatement",
                  "src": "9932:105:3"
                },
                {
                  "expression": {
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1695,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "10046:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 1703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1698,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "10079:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1699,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1614,
                                    "src": "10095:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10079:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1701,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10078:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "10078:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10078:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1696,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "10061:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "10061:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10061:60:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10046:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "10046:75:3"
                },
                {
                  "expression": {
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1708,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "10125:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1709,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10145:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10145:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10125:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "10125:35:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1713,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "10168:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10180:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10168:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1755,
                  "nodeType": "IfStatement",
                  "src": "10165:239:3",
                  "trueBody": {
                    "id": 1754,
                    "nodeType": "Block",
                    "src": "10182:222:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1716,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1606,
                            "src": "10190:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 1717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10198:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "10190:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1752,
                          "nodeType": "Block",
                          "src": "10310:90:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1740,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1584,
                                    "src": "10349:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 1748,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10390:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1745,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1743,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3334",
                                                "id": 1741,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10358:2:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_34_by_1",
                                                  "typeString": "int_const 34"
                                                },
                                                "value": "34"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1742,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "10363:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "10358:14:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1744,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1415,
                                              "src": "10375:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "10358:26:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1746,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10357:28:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1747,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "10357:32:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10357:36:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1737,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1285,
                                        "src": "10323:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1736,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "10316:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10316:23:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1253",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1216,
                                  "src": "10316:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10316:78:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1751,
                              "nodeType": "ExpressionStatement",
                              "src": "10316:78:3"
                            }
                          ]
                        },
                        "id": 1753,
                        "nodeType": "IfStatement",
                        "src": "10187:213:3",
                        "trueBody": {
                          "id": 1735,
                          "nodeType": "Block",
                          "src": "10202:104:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1723,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1584,
                                    "src": "10241:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "313030303030303030",
                                        "id": 1731,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10289:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1728,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1726,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1724,
                                                "name": "totalOwed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1614,
                                                "src": "10250:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1725,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "10262:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "10250:21:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1727,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1415,
                                              "src": "10274:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "10250:33:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1729,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10249:35:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1730,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "10249:39:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10249:50:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1720,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1285,
                                        "src": "10215:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1719,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "10208:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10208:23:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1253",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1216,
                                  "src": "10208:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10208:92:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1734,
                              "nodeType": "ExpressionStatement",
                              "src": "10208:92:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10418:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10418:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030303030",
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10462:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1759,
                                  "name": "reward_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1381,
                                  "src": "10431:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1760,
                                  "name": "totalOwed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1614,
                                  "src": "10447:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10431:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1762,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10430:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1128,
                          "src": "10430:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10430:42:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1766,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "10474:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1767,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "10486:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1756,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "10413:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10413:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1769,
                  "nodeType": "EmitStatement",
                  "src": "10408:95:3"
                },
                {
                  "expression": {
                    "id": 1770,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1614,
                    "src": "10515:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1588,
                  "id": 1771,
                  "nodeType": "Return",
                  "src": "10508:16:3"
                }
              ]
            },
            "functionSelector": "f8bf8df5",
            "id": 1773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintFREE",
            "nameLocation": "9374:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "9388:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "9383:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9383:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "9400:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "9395:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9395:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "9427:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "9419:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9419:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9382:52:3"
            },
            "returnParameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "9459:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "9451:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9450:14:3"
            },
            "scope": 3423,
            "src": "9365:1164:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "10591:969:3",
              "statements": [
                {
                  "assignments": [
                    1777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1777,
                      "mutability": "mutable",
                      "name": "runs",
                      "nameLocation": "10648:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10640:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1776,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10640:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1782,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1778,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10655:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10655:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1780,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "10673:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10655:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10640:40:3"
                },
                {
                  "assignments": [
                    1784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "epochsPast",
                      "nameLocation": "10693:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10685:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10685:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1788,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1785,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "10706:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1786,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1384,
                      "src": "10719:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10706:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10685:43:3"
                },
                {
                  "assignments": [
                    1790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1790,
                      "mutability": "mutable",
                      "name": "runsperepoch",
                      "nameLocation": "10757:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10749:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10749:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1794,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1791,
                      "name": "runs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "10772:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1792,
                      "name": "epochsPast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1784,
                      "src": "10779:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10772:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10749:40:3"
                },
                {
                  "expression": {
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1795,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "10794:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10842:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 1807,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "10845:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10842:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030",
                                "id": 1796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10811:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10817:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1800,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "10826:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1799,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10821:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1798,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10821:4:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1801,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10821:14:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10817:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10811:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1804,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10810:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1128,
                        "src": "10810:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10810:46:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10794:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "10794:62:3"
                },
                {
                  "assignments": [
                    1813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1813,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "10868:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10860:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1812,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10860:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1821,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1819,
                        "name": "targetTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "10902:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1814,
                              "name": "runsperepoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "10873:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "383838",
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10888:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_888_by_1",
                                "typeString": "int_const 888"
                              },
                              "value": "888"
                            },
                            "src": "10873:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1817,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10872:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1166,
                      "src": "10872:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10872:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10860:53:3"
                },
                {
                  "assignments": [
                    1823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1823,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "10925:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10917:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1829,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1824,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "10933:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10937:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "10933:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 1827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10943:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "10933:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10917:29:3"
                },
                {
                  "assignments": [
                    1831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1831,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "10958:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1931,
                      "src": "10950:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1830,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10950:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1832,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10950:17:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1833,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "10978:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10986:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "10978:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1865,
                    "nodeType": "Block",
                    "src": "11079:33:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1860,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "11084:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "hexValue": "333430303030303030",
                                "id": 1861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11097:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_340000000_by_1",
                                  "typeString": "int_const 340000000"
                                },
                                "value": "340000000"
                              }
                            ],
                            "id": 1862,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11096:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_340000000_by_1",
                              "typeString": "int_const 340000000"
                            }
                          },
                          "src": "11084:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1864,
                        "nodeType": "ExpressionStatement",
                        "src": "11084:23:3"
                      }
                    ]
                  },
                  "id": 1866,
                  "nodeType": "IfStatement",
                  "src": "10975:137:3",
                  "trueBody": {
                    "id": 1859,
                    "nodeType": "Block",
                    "src": "10990:84:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1836,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "10995:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 1847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 1845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11034:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 1846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11039:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "11034:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 1837,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11008:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1840,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1838,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1813,
                                              "src": "11020:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 1839,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11025:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "11020:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1841,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11019:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11008:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1843,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11007:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "11007:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11007:34:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11063:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 1849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11045:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1850,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1813,
                                        "src": "11056:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11045:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1852,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11044:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "11044:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11044:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11007:60:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10995:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1858,
                        "nodeType": "ExpressionStatement",
                        "src": "10995:72:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1873,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11162:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                "typeString": "contract ForgeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                "typeString": "contract ForgeTest"
                              }
                            ],
                            "id": 1872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11154:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1871,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11154:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11154:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1868,
                              "name": "AddressZeroXBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "11127:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1867,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "11120:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11120:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1253",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1252,
                        "src": "11120:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11120:48:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3330",
                                "id": 1876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11172:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11177:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "11172:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1879,
                                    "name": "Token2Per",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1397,
                                    "src": "11182:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1880,
                                    "name": "_BLOCKS_PER_READJUSTMENT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1335,
                                    "src": "11194:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11182:36:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1882,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11181:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11172:47:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11220:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "11172:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1886,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11171:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11120:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1920,
                    "nodeType": "Block",
                    "src": "11461:23:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1916,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "11466:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11478:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11466:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1919,
                        "nodeType": "ExpressionStatement",
                        "src": "11466:13:3"
                      }
                    ]
                  },
                  "id": 1921,
                  "nodeType": "IfStatement",
                  "src": "11117:367:3",
                  "trueBody": {
                    "id": 1915,
                    "nodeType": "Block",
                    "src": "11223:234:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1892,
                              "name": "AddressLPReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "11340:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  },
                                  "id": 1905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11412:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030303030303030",
                                    "id": 1904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11416:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000_by_1",
                                      "typeString": "int_const 100000000"
                                    },
                                    "value": "100000000"
                                  },
                                  "src": "11412:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1900,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1898,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1896,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "id": 1893,
                                                "name": "epochsPast",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1784,
                                                "src": "11359:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1894,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11358:12:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 1895,
                                            "name": "totalOwed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1831,
                                            "src": "11373:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11358:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 1897,
                                          "name": "Token2Per",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1397,
                                          "src": "11385:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11358:36:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1899,
                                        "name": "give0xBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1415,
                                        "src": "11397:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11358:48:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1901,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11357:50:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "11357:54:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11357:69:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1889,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "11314:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1888,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "11307:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11307:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1253",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1216,
                            "src": "11307:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11307:120:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1908,
                        "nodeType": "ExpressionStatement",
                        "src": "11307:120:3"
                      },
                      {
                        "expression": {
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1909,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "11432:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11444:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1911,
                              "name": "give",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1418,
                              "src": "11448:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11444:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11432:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1914,
                        "nodeType": "ExpressionStatement",
                        "src": "11432:20:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1922,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1384,
                      "src": "11487:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1923,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "11499:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11487:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1925,
                  "nodeType": "ExpressionStatement",
                  "src": "11487:22:3"
                },
                {
                  "expression": {
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1926,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "11531:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1927,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11541:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11541:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11531:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "11531:25:3"
                }
              ]
            },
            "functionSelector": "d0856d16",
            "id": 1932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ARewardSender",
            "nameLocation": "10568:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10581:2:3"
            },
            "returnParameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10591:0:3"
            },
            "scope": 3423,
            "src": "10559:1001:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "11672:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1942,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "11683:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1943,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "11690:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11708:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11708:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1941,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2181,
                      "src": "11676:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11676:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "11676:43:3"
                }
              ]
            },
            "functionSelector": "1801fbe5",
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "11596:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "11609:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "11601:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11601:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "11624:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "11616:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11600:41:3"
            },
            "returnParameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11663:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "11658:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11658:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11657:14:3"
            },
            "scope": 3423,
            "src": "11587:136:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2180,
              "nodeType": "Block",
              "src": "11831:1497:3",
              "statements": [
                {
                  "assignments": [
                    1961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1961,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "11844:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2180,
                      "src": "11836:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1960,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11836:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1971,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1965,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "11881:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1966,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11898:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11898:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1968,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1951,
                            "src": "11910:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1963,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11864:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11864:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11864:52:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1962,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11854:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11854:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11836:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1973,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "11979:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1974,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1953,
                          "src": "11989:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11979:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 1976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12007:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 1972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11971:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11971:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1978,
                  "nodeType": "ExpressionStatement",
                  "src": "11971:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1982,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1961,
                              "src": "12124:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12116:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1980,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12116:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12116:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1984,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "12134:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12116:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12148:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 1979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12108:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12108:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "12108:83:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1989,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "12195:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12195:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "12195:22:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1993,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12230:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12230:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1995,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "12248:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12230:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 1997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12267:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 1992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12222:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1999,
                  "nodeType": "ExpressionStatement",
                  "src": "12222:69:3"
                },
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "12357:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2180,
                      "src": "12349:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2000,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12349:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2012,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2002,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12363:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12363:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2004,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "12381:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12363:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2006,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12362:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 2007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12402:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "12362:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2009,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12361:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2010,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "12409:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12361:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12349:70:3"
                },
                {
                  "assignments": [
                    2014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2014,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "12428:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2180,
                      "src": "12423:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2013,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12423:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2020,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2015,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "12436:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12440:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "12436:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 2018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12446:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "12436:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12423:26:3"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "12458:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2180,
                      "src": "12453:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12453:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12470:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12453:18:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2025,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2014,
                      "src": "12478:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12486:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "12478:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2065,
                    "nodeType": "Block",
                    "src": "12578:60:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2052,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "12583:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12615:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2053,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2001,
                                        "src": "12596:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 2054,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12600:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "12596:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2056,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "12595:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "12595:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12595:24:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 2060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12623:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 2061,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12622:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "12595:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12583:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2064,
                        "nodeType": "ExpressionStatement",
                        "src": "12583:50:3"
                      }
                    ]
                  },
                  "id": 2066,
                  "nodeType": "IfStatement",
                  "src": "12475:163:3",
                  "trueBody": {
                    "id": 2051,
                    "nodeType": "Block",
                    "src": "12490:83:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2028,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "12495:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 2039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 2037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12534:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2038,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12541:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "12534:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 2029,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12508:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2032,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2030,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2001,
                                              "src": "12520:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 2031,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12525:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "12520:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2033,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "12519:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12508:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2035,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "12507:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "12507:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12507:36:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 2046,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12564:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2043,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 2041,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12546:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2042,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2001,
                                        "src": "12557:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12546:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2044,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "12545:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "12545:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12545:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12507:61:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12495:73:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ExpressionStatement",
                        "src": "12495:73:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2067,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "12644:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2069,
                      "indexExpression": {
                        "id": 2068,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1955,
                        "src": "12653:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12644:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 2079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12716:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2074,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "12685:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2075,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2022,
                                    "src": "12701:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12685:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2077,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12684:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "12684:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12684:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2070,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "12663:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2072,
                          "indexExpression": {
                            "id": 2071,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "12672:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12663:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "12663:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12663:64:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12644:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "12644:83:3"
                },
                {
                  "expression": {
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2084,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "12731:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2086,
                      "indexExpression": {
                        "id": 2085,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "12740:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12731:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 2096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12821:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 2097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12833:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "12821:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2091,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "12790:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2092,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2022,
                                    "src": "12806:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12790:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2094,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12789:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "12789:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12789:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2087,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "12759:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2089,
                          "indexExpression": {
                            "id": 2088,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "12768:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12759:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "12759:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12759:77:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12731:105:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2102,
                  "nodeType": "ExpressionStatement",
                  "src": "12731:105:3"
                },
                {
                  "expression": {
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2103,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "12845:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 2111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12909:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2108,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2106,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "12878:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2107,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2022,
                                    "src": "12894:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12878:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2109,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12877:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "12877:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12877:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2104,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "12860:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "12860:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12860:60:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12845:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "12845:75:3"
                },
                {
                  "expression": {
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2116,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "12924:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2117,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12944:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12944:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12924:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "12924:35:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2121,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "12967:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12979:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12967:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2163,
                  "nodeType": "IfStatement",
                  "src": "12964:239:3",
                  "trueBody": {
                    "id": 2162,
                    "nodeType": "Block",
                    "src": "12981:222:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2124,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "12989:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12997:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "12989:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2160,
                          "nodeType": "Block",
                          "src": "13109:90:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2148,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1955,
                                    "src": "13148:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 2156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13189:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2153,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2151,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3334",
                                                "id": 2149,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13157:2:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_34_by_1",
                                                  "typeString": "int_const 34"
                                                },
                                                "value": "34"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 2150,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "13162:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13157:14:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2152,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1415,
                                              "src": "13174:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13157:26:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2154,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13156:28:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "13156:32:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13156:36:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2145,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1285,
                                        "src": "13122:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2144,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "13115:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2146,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13115:23:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1253",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1216,
                                  "src": "13115:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13115:78:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2159,
                              "nodeType": "ExpressionStatement",
                              "src": "13115:78:3"
                            }
                          ]
                        },
                        "id": 2161,
                        "nodeType": "IfStatement",
                        "src": "12986:213:3",
                        "trueBody": {
                          "id": 2143,
                          "nodeType": "Block",
                          "src": "13001:104:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2131,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1955,
                                    "src": "13040:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "313030303030303030",
                                        "id": 2139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13088:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2136,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2134,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2132,
                                                "name": "totalOwed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2022,
                                                "src": "13049:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 2133,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1397,
                                                "src": "13061:9:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13049:21:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2135,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1415,
                                              "src": "13073:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13049:33:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2137,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13048:35:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "13048:39:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2140,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13048:50:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2128,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1285,
                                        "src": "13014:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2127,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "13007:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13007:23:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1253",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1216,
                                  "src": "13007:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13007:92:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2142,
                              "nodeType": "ExpressionStatement",
                              "src": "13007:92:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13217:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13217:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030303030",
                            "id": 2172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13261:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2167,
                                  "name": "reward_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1381,
                                  "src": "13230:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2168,
                                  "name": "totalOwed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2022,
                                  "src": "13246:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13230:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2170,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13229:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1128,
                          "src": "13229:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13229:42:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2174,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "13273:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2175,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "13285:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2164,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "13212:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13212:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2177,
                  "nodeType": "EmitStatement",
                  "src": "13207:95:3"
                },
                {
                  "expression": {
                    "id": 2178,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2022,
                    "src": "13314:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1959,
                  "id": 2179,
                  "nodeType": "Return",
                  "src": "13307:16:3"
                }
              ]
            },
            "functionSelector": "ddfbd8dd",
            "id": 2181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "11736:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "11751:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "11743:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11743:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1953,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "11766:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "11758:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11758:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1955,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "11793:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "11785:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11785:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11742:58:3"
            },
            "returnParameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1958,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "11825:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2181,
                  "src": "11817:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11817:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11816:14:3"
            },
            "scope": 3423,
            "src": "11727:1601:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2412,
              "nodeType": "Block",
              "src": "13484:1417:3",
              "statements": [
                {
                  "assignments": [
                    2197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2197,
                      "mutability": "mutable",
                      "name": "totalOd",
                      "nameLocation": "13496:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "13488:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13488:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2205,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2199,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2183,
                        "src": "13513:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2200,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "13519:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2201,
                          "name": "MintTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "13537:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 2203,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 2202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13544:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13537:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2198,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2181,
                      "src": "13506:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13506:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13488:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2207,
                          "name": "totalOd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "13559:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13569:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13559:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13572:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13551:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13551:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "13551:34:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2214,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "13598:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13598:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2216,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "13615:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13615:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13635:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13615:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13598:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74546f2068617320746f206861766520616e206578747261206164647265737320636f6d706172656420746f20457874726146756e6473",
                        "id": 2221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13637:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ee008cdd80772a1739ee99b25c65a8008c6483de40670684235d79df023581e",
                          "typeString": "literal_string \"MintTo has to have an extra address compared to ExtraFunds\""
                        },
                        "value": "MintTo has to have an extra address compared to ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ee008cdd80772a1739ee99b25c65a8008c6483de40670684235d79df023581e",
                          "typeString": "literal_string \"MintTo has to have an extra address compared to ExtraFunds\""
                        }
                      ],
                      "id": 2213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13590:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13590:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2223,
                  "nodeType": "ExpressionStatement",
                  "src": "13590:108:3"
                },
                {
                  "assignments": [
                    2225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2225,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "13707:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "13702:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13702:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2227,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13710:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13702:9:3"
                },
                {
                  "body": {
                    "id": 2297,
                    "nodeType": "Block",
                    "src": "13758:301:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2239,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "13766:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13780:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2243,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2241,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2225,
                                          "src": "13784:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2242,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13787:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "13784:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2244,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "13783:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13780:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2246,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13779:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13766:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13794:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13766:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2252,
                        "nodeType": "IfStatement",
                        "src": "13763:50:3",
                        "trueBody": {
                          "id": 2251,
                          "nodeType": "Block",
                          "src": "13796:17:3",
                          "statements": [
                            {
                              "id": 2250,
                              "nodeType": "Break",
                              "src": "13802:5:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2254,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2188,
                                    "src": "13825:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2256,
                                  "indexExpression": {
                                    "id": 2255,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2225,
                                    "src": "13836:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13825:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 2259,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "13851:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                        "typeString": "contract ForgeTest"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                        "typeString": "contract ForgeTest"
                                      }
                                    ],
                                    "id": 2258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13843:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2257,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13843:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13843:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13825:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2262,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2188,
                                    "src": "13860:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2264,
                                  "indexExpression": {
                                    "id": 2263,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2225,
                                    "src": "13871:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13860:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2265,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "13878:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13860:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13825:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13895:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 2253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13817:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13817:107:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2270,
                        "nodeType": "ExpressionStatement",
                        "src": "13817:107:3"
                      },
                      {
                        "body": {
                          "id": 2295,
                          "nodeType": "Block",
                          "src": "13972:83:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2285,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2188,
                                        "src": "13986:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2287,
                                      "indexExpression": {
                                        "id": 2286,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2272,
                                        "src": "13997:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13986:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 2288,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2188,
                                        "src": "14003:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2290,
                                      "indexExpression": {
                                        "id": 2289,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2225,
                                        "src": "14014:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14003:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "13986:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 2292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14019:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 2284,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "13978:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13978:71:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2294,
                              "nodeType": "ExpressionStatement",
                              "src": "13978:71:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2277,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2272,
                            "src": "13946:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2278,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "13949:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13949:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13946:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2296,
                        "initializationExpression": {
                          "assignments": [
                            2272
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2272,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "13938:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2296,
                              "src": "13933:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2271,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "13933:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2276,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2273,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "13940:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13943:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13940:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13933:11:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13968:3:3",
                            "subExpression": {
                              "id": 2281,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2272,
                              "src": "13968:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2283,
                          "nodeType": "ExpressionStatement",
                          "src": "13968:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "13929:126:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2232,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "13727:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2233,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "13731:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13731:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13727:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2298,
                  "initializationExpression": {
                    "expression": {
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2228,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "13719:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13724:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13719:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2231,
                    "nodeType": "ExpressionStatement",
                    "src": "13719:6:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13750:4:3",
                      "subExpression": {
                        "id": 2236,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "13750:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2238,
                    "nodeType": "ExpressionStatement",
                    "src": "13750:4:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "13715:344:3"
                },
                {
                  "assignments": [
                    2300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2300,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "14073:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "14065:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14065:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2302,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14085:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14065:21:3"
                },
                {
                  "assignments": [
                    2304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2304,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "14098:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "14090:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14090:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2306,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14111:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14090:22:3"
                },
                {
                  "body": {
                    "id": 2399,
                    "nodeType": "Block",
                    "src": "14143:650:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2317,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "14404:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14418:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2319,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2308,
                                          "src": "14422:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2320,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14424:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "14422:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2322,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14421:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14418:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2324,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14417:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14404:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14431:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14404:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2398,
                        "nodeType": "IfStatement",
                        "src": "14401:382:3",
                        "trueBody": {
                          "id": 2397,
                          "nodeType": "Block",
                          "src": "14433:350:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2328,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2304,
                                  "src": "14439:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2337,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "14492:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                            "typeString": "contract ForgeTest"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                            "typeString": "contract ForgeTest"
                                          }
                                        ],
                                        "id": 2336,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "14484:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2335,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14484:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14484:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2330,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2188,
                                            "src": "14459:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 2332,
                                          "indexExpression": {
                                            "id": 2331,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2308,
                                            "src": "14470:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14459:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2329,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1253,
                                        "src": "14452:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 2333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14452:21:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1253",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1252,
                                    "src": "14452:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14452:46:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14439:59:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2341,
                              "nodeType": "ExpressionStatement",
                              "src": "14439:59:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2342,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2304,
                                  "src": "14507:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14521:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14507:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2382,
                              "nodeType": "IfStatement",
                              "src": "14504:211:3",
                              "trueBody": {
                                "id": 2381,
                                "nodeType": "Block",
                                "src": "14523:192:3",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2349,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2347,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2345,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2308,
                                            "src": "14534:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 2346,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14538:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "14534:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 2348,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14543:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "14534:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2352,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2350,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2308,
                                          "src": "14548:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 2351,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14553:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "14548:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "14534:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 2379,
                                      "nodeType": "Block",
                                      "src": "14636:73:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2377,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2367,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2300,
                                              "src": "14644:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 2375,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 2373,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14683:9:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 2374,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14695:4:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "14683:16:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2370,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2368,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2304,
                                                        "src": "14657:10:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 2369,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2197,
                                                        "src": "14670:7:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "14657:20:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 2371,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "14656:22:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2372,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1128,
                                                "src": "14656:26:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2376,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "14656:45:3",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14644:57:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2378,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14644:57:3"
                                        }
                                      ]
                                    },
                                    "id": 2380,
                                    "nodeType": "IfStatement",
                                    "src": "14530:179:3",
                                    "trueBody": {
                                      "id": 2366,
                                      "nodeType": "Block",
                                      "src": "14555:77:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2364,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2354,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2300,
                                              "src": "14563:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 2362,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 2360,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14607:9:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 2361,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14619:4:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "14607:16:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2357,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2355,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2304,
                                                        "src": "14576:10:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 2356,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2197,
                                                        "src": "14589:7:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "14576:20:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 2358,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "14575:22:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2359,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1166,
                                                "src": "14575:31:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2363,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "14575:49:3",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14563:61:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2365,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14563:61:3"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2389,
                                      "name": "MintTo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2191,
                                      "src": "14754:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 2393,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2390,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2308,
                                        "src": "14761:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 2391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14763:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "14761:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14754:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2394,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2300,
                                    "src": "14767:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 2384,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2188,
                                          "src": "14730:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 2386,
                                        "indexExpression": {
                                          "id": 2385,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2308,
                                          "src": "14741:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14730:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2383,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1253,
                                      "src": "14723:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14723:21:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1253",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1216,
                                  "src": "14723:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14723:54:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2396,
                              "nodeType": "ExpressionStatement",
                              "src": "14723:54:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2311,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "14130:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2312,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "14132:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14130:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2400,
                  "initializationExpression": {
                    "assignments": [
                      2308
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2308,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "14125:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "14120:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2307,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14120:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2310,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14127:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14120:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14136:3:3",
                      "subExpression": {
                        "id": 2314,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "14136:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2316,
                    "nodeType": "ExpressionStatement",
                    "src": "14136:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "14116:677:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14820:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14820:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2404,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "14832:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2405,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "14844:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2406,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "14861:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "totalOd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2197,
                        "src": "14865:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2401,
                      "name": "MegaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1313,
                      "src": "14811:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256,uint256)"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14811:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "EmitStatement",
                  "src": "14806:68:3"
                },
                {
                  "expression": {
                    "id": 2410,
                    "name": "totalOd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2197,
                    "src": "14886:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2195,
                  "id": 2411,
                  "nodeType": "Return",
                  "src": "14879:14:3"
                }
              ]
            },
            "functionSelector": "c8a1465c",
            "id": 2413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensArrayTo",
            "nameLocation": "13341:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2183,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "13367:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "13359:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13359:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2185,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "13382:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "13374:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13374:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "13417:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "13400:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2186,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13400:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2187,
                    "nodeType": "ArrayTypeName",
                    "src": "13400:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "13446:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "13429:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2189,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13429:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2190,
                    "nodeType": "ArrayTypeName",
                    "src": "13429:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13358:95:3"
            },
            "returnParameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "13478:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "13470:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13470:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13469:14:3"
            },
            "scope": 3423,
            "src": "13332:1569:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2472,
              "nodeType": "Block",
              "src": "15052:225:3",
              "statements": [
                {
                  "assignments": [
                    2431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2431,
                      "mutability": "mutable",
                      "name": "dd",
                      "nameLocation": "15073:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2472,
                      "src": "15056:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15056:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2430,
                        "nodeType": "ArrayTypeName",
                        "src": "15056:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2440,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2435,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2420,
                            "src": "15092:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15092:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 2437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15112:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15092:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15078:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15082:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2433,
                        "nodeType": "ArrayTypeName",
                        "src": "15082:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15078:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15056:58:3"
                },
                {
                  "body": {
                    "id": 2461,
                    "nodeType": "Block",
                    "src": "15169:24:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2455,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2431,
                              "src": "15174:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2457,
                            "indexExpression": {
                              "id": 2456,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2442,
                              "src": "15177:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15174:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2458,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "15182:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15174:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2460,
                        "nodeType": "ExpressionStatement",
                        "src": "15174:14:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2445,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2442,
                      "src": "15134:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2446,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2420,
                              "src": "15138:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15138:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15158:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15138:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2450,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15137:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15134:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2462,
                  "initializationExpression": {
                    "assignments": [
                      2442
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2442,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "15129:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2462,
                        "src": "15124:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2441,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15124:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2444,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15131:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15124:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15162:3:3",
                      "subExpression": {
                        "id": 2452,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2442,
                        "src": "15162:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2454,
                    "nodeType": "ExpressionStatement",
                    "src": "15162:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "15120:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2464,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2415,
                        "src": "15217:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2465,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "15224:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2466,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "15242:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2467,
                        "name": "dd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "15254:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 2463,
                      "name": "mintTokensArrayTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2413,
                      "src": "15199:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address[] memory,address[] memory) returns (uint256)"
                      }
                    },
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15199:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2469,
                  "nodeType": "ExpressionStatement",
                  "src": "15199:58:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15269:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2426,
                  "id": 2471,
                  "nodeType": "Return",
                  "src": "15262:11:3"
                }
              ]
            },
            "functionSelector": "1fccb33c",
            "id": 2473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensSameAddress",
            "nameLocation": "14914:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "14944:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "14936:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14936:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "14959:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "14951:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14951:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "14994:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "14977:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2418,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14977:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2419,
                    "nodeType": "ArrayTypeName",
                    "src": "14977:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2422,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "15014:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "15006:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15006:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14935:86:3"
            },
            "returnParameters": {
              "id": 2426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "15043:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "15038:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15038:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15037:14:3"
            },
            "scope": 3423,
            "src": "14905:372:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2791,
              "nodeType": "Block",
              "src": "15428:2054:3",
              "statements": [
                {
                  "assignments": [
                    2489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2489,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "15440:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "15432:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2488,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15432:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2493,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "15477:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2494,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15494:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15494:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2496,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2475,
                            "src": "15506:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2491,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15460:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15460:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15460:52:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2490,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "15450:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15450:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15432:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2501,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2489,
                          "src": "15575:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2502,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2477,
                          "src": "15585:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "15575:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15603:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 2500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15567:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15567:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "15567:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2510,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2489,
                              "src": "15720:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15712:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2508,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15712:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15712:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 2512,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "15730:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15712:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 2514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15744:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 2507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15704:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15704:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "15704:83:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2517,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "15791:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15791:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "15791:22:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2521,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15826:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15826:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 2523,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1388,
                          "src": "15844:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15826:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15863:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 2520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15818:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15818:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "15818:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2529,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2483,
                            "src": "15899:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15899:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2531,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2480,
                            "src": "15916:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15916:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15899:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74546f2068617320746f20686176652073616d65206e756d626572206f66206164647265737373657320617320457874726146756e6473",
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15934:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eb71923dbb444c9a84deb86604f762f8b2bba32c8aa383d9af390df4915cc74",
                          "typeString": "literal_string \"MintTo has to have same number of addressses as ExtraFunds\""
                        },
                        "value": "MintTo has to have same number of addressses as ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eb71923dbb444c9a84deb86604f762f8b2bba32c8aa383d9af390df4915cc74",
                          "typeString": "literal_string \"MintTo has to have same number of addressses as ExtraFunds\""
                        }
                      ],
                      "id": 2528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15891:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15891:104:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2536,
                  "nodeType": "ExpressionStatement",
                  "src": "15891:104:3"
                },
                {
                  "assignments": [
                    2538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2538,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "16004:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "15999:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15999:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2540,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16007:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15999:9:3"
                },
                {
                  "body": {
                    "id": 2610,
                    "nodeType": "Block",
                    "src": "16055:301:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2552,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "16063:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16077:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2556,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2554,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2538,
                                          "src": "16081:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2555,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16084:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16081:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2557,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16080:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16077:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2559,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16076:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16063:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16091:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16063:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2565,
                        "nodeType": "IfStatement",
                        "src": "16060:50:3",
                        "trueBody": {
                          "id": 2564,
                          "nodeType": "Block",
                          "src": "16093:17:3",
                          "statements": [
                            {
                              "id": 2563,
                              "nodeType": "Break",
                              "src": "16099:5:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2567,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2480,
                                    "src": "16122:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2569,
                                  "indexExpression": {
                                    "id": 2568,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2538,
                                    "src": "16133:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16122:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 2572,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "16148:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                        "typeString": "contract ForgeTest"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                        "typeString": "contract ForgeTest"
                                      }
                                    ],
                                    "id": 2571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16140:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2570,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16140:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16140:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "16122:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2575,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2480,
                                    "src": "16157:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2577,
                                  "indexExpression": {
                                    "id": 2576,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2538,
                                    "src": "16168:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16157:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2578,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "16175:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "16157:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "16122:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 2581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16192:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 2566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16114:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16114:107:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2583,
                        "nodeType": "ExpressionStatement",
                        "src": "16114:107:3"
                      },
                      {
                        "body": {
                          "id": 2608,
                          "nodeType": "Block",
                          "src": "16269:83:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2598,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2480,
                                        "src": "16283:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2600,
                                      "indexExpression": {
                                        "id": 2599,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2585,
                                        "src": "16294:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16283:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 2601,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2480,
                                        "src": "16300:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 2603,
                                      "indexExpression": {
                                        "id": 2602,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2538,
                                        "src": "16311:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16300:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "16283:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 2605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16316:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 2597,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16275:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16275:71:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2607,
                              "nodeType": "ExpressionStatement",
                              "src": "16275:71:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2590,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2585,
                            "src": "16243:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2591,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "16246:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16246:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16243:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2609,
                        "initializationExpression": {
                          "assignments": [
                            2585
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2585,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "16235:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 2609,
                              "src": "16230:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2584,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "16230:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2589,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2586,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2538,
                              "src": "16237:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16240:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16237:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16230:11:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16265:3:3",
                            "subExpression": {
                              "id": 2594,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2585,
                              "src": "16265:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2596,
                          "nodeType": "ExpressionStatement",
                          "src": "16265:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "16226:126:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2545,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2538,
                      "src": "16024:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2546,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "16028:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16028:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16024:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2611,
                  "initializationExpression": {
                    "expression": {
                      "id": 2543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2541,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "16016:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16021:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16016:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2544,
                    "nodeType": "ExpressionStatement",
                    "src": "16016:6:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16047:4:3",
                      "subExpression": {
                        "id": 2549,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "16047:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2551,
                    "nodeType": "ExpressionStatement",
                    "src": "16047:4:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "16012:344:3"
                },
                {
                  "assignments": [
                    2613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2613,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "16368:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "16360:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16360:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2624,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2614,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "16374:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "16374:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 2616,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1388,
                                  "src": "16392:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16374:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2618,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16373:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 2619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16413:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "16373:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2621,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16372:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2622,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "16420:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16372:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16360:70:3"
                },
                {
                  "assignments": [
                    2626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2626,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "16439:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "16434:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16434:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2632,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2627,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "16447:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16451:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "16447:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 2630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16457:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "16447:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16434:26:3"
                },
                {
                  "assignments": [
                    2634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2634,
                      "mutability": "mutable",
                      "name": "totalIN",
                      "nameLocation": "16469:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "16464:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2633,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16464:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2636,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16479:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16464:16:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2637,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2626,
                      "src": "16487:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 2638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16495:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "16487:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2677,
                    "nodeType": "Block",
                    "src": "16585:58:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2664,
                            "name": "totalIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2634,
                            "src": "16590:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 2670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16620:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2667,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2665,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2613,
                                        "src": "16601:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 2666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16605:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "16601:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2668,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "16600:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "16600:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16600:24:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 2672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16628:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 2673,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16627:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "16600:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16590:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2676,
                        "nodeType": "ExpressionStatement",
                        "src": "16590:48:3"
                      }
                    ]
                  },
                  "id": 2678,
                  "nodeType": "IfStatement",
                  "src": "16484:159:3",
                  "trueBody": {
                    "id": 2663,
                    "nodeType": "Block",
                    "src": "16499:81:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2640,
                            "name": "totalIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2634,
                            "src": "16504:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 2651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 2649,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16541:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16548:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "16541:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 2641,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16515:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2644,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2642,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2613,
                                              "src": "16527:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 2643,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "16532:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "16527:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2645,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "16526:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16515:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2647,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "16514:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "16514:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16514:36:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 2658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16571:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 2653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16553:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 2654,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2613,
                                        "src": "16564:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16553:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2656,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "16552:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "16552:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16552:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16514:61:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16504:71:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2662,
                        "nodeType": "ExpressionStatement",
                        "src": "16504:71:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2680,
                          "name": "totalIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2634,
                          "src": "16655:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16665:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16655:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 2683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16668:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 2679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16647:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16647:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2685,
                  "nodeType": "ExpressionStatement",
                  "src": "16647:34:3"
                },
                {
                  "assignments": [
                    2687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2687,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "16693:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "16685:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16685:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2688,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16685:17:3"
                },
                {
                  "assignments": [
                    2690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2690,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "16714:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2791,
                      "src": "16706:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16706:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2691,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16706:18:3"
                },
                {
                  "body": {
                    "id": 2782,
                    "nodeType": "Block",
                    "src": "16755:663:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2702,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "17016:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17030:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2706,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2704,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2693,
                                          "src": "17034:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2705,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17036:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "17034:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2707,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "17033:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17030:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2709,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17029:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17016:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17043:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17016:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2781,
                        "nodeType": "IfStatement",
                        "src": "17013:395:3",
                        "trueBody": {
                          "id": 2780,
                          "nodeType": "Block",
                          "src": "17045:363:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2713,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "17051:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2722,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "17104:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                            "typeString": "contract ForgeTest"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                            "typeString": "contract ForgeTest"
                                          }
                                        ],
                                        "id": 2721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "17096:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2720,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "17096:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17096:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2715,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2480,
                                            "src": "17071:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 2717,
                                          "indexExpression": {
                                            "id": 2716,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2693,
                                            "src": "17082:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17071:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2714,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1253,
                                        "src": "17064:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 2718,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17064:21:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1253",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1252,
                                    "src": "17064:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17064:46:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17051:59:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2726,
                              "nodeType": "ExpressionStatement",
                              "src": "17051:59:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2727,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2690,
                                  "src": "17119:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17133:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17119:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2779,
                              "nodeType": "IfStatement",
                              "src": "17116:278:3",
                              "trueBody": {
                                "id": 2778,
                                "nodeType": "Block",
                                "src": "17135:259:3",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2734,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2732,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2730,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2693,
                                            "src": "17146:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 2731,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17150:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "17146:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 2733,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17155:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "17146:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2735,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2693,
                                          "src": "17160:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 2736,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17165:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "17160:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17146:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 2764,
                                      "nodeType": "Block",
                                      "src": "17248:76:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2762,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2752,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2687,
                                              "src": "17256:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 2760,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 2758,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17295:9:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 2759,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17307:4:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "17295:16:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2755,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2753,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2690,
                                                        "src": "17269:10:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 2754,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2634,
                                                        "src": "17282:7:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "17269:20:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 2756,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "17268:22:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2757,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1128,
                                                "src": "17268:26:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2761,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17268:45:3",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17256:57:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2763,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17256:57:3"
                                        }
                                      ]
                                    },
                                    "id": 2765,
                                    "nodeType": "IfStatement",
                                    "src": "17142:182:3",
                                    "trueBody": {
                                      "id": 2751,
                                      "nodeType": "Block",
                                      "src": "17167:77:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2749,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2739,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2687,
                                              "src": "17175:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 2747,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 2745,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17219:9:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 2746,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17231:4:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "17219:16:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2742,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2740,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2690,
                                                        "src": "17188:10:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 2741,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2634,
                                                        "src": "17201:7:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "17188:20:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 2743,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "17187:22:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2744,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1166,
                                                "src": "17187:31:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2748,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17187:49:3",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17175:61:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2750,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17175:61:3"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 2772,
                                            "name": "MintTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2483,
                                            "src": "17363:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 2774,
                                          "indexExpression": {
                                            "id": 2773,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2693,
                                            "src": "17370:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17363:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2775,
                                          "name": "totalOwed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2687,
                                          "src": "17374:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 2767,
                                                "name": "ExtraFunds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2480,
                                                "src": "17339:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                }
                                              },
                                              "id": 2769,
                                              "indexExpression": {
                                                "id": 2768,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2693,
                                                "src": "17350:1:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "17339:13:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2766,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1253,
                                            "src": "17332:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2770,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17332:21:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1253",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 2771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1216,
                                        "src": "17332:30:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 2776,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17332:52:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2777,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17332:52:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2696,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2693,
                      "src": "16742:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2697,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2538,
                      "src": "16744:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16742:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2783,
                  "initializationExpression": {
                    "assignments": [
                      2693
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2693,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "16737:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "16732:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2692,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16732:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2695,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16739:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16732:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16748:3:3",
                      "subExpression": {
                        "id": 2699,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2693,
                        "src": "16748:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2701,
                    "nodeType": "ExpressionStatement",
                    "src": "16748:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "16728:690:3"
                },
                {
                  "expression": {
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2784,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "17422:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2785,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "17442:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "17442:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17422:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2788,
                  "nodeType": "ExpressionStatement",
                  "src": "17422:35:3"
                },
                {
                  "expression": {
                    "id": 2789,
                    "name": "totalIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2634,
                    "src": "17468:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2487,
                  "id": 2790,
                  "nodeType": "Return",
                  "src": "17461:14:3"
                }
              ]
            },
            "functionSelector": "f7a5f155",
            "id": 2792,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "empty_mintTo",
            "nameLocation": "15290:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2475,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "15311:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2792,
                  "src": "15303:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15303:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2477,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "15326:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2792,
                  "src": "15318:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15318:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2480,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "15361:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2792,
                  "src": "15344:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2478,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15344:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2479,
                    "nodeType": "ArrayTypeName",
                    "src": "15344:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2483,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "15390:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2792,
                  "src": "15373:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2481,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15373:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2482,
                    "nodeType": "ArrayTypeName",
                    "src": "15373:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15302:95:3"
            },
            "returnParameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "15422:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2792,
                  "src": "15414:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15414:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15413:14:3"
            },
            "scope": 3423,
            "src": "15281:2201:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "17528:1324:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2797,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1381,
                            "src": "17720:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2795,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "17703:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1052,
                          "src": "17703:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17703:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2799,
                        "name": "maxSupplyForEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "17737:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17703:49:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2801,
                        "name": "rewardEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "17756:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 2802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17768:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "17756:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17703:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2826,
                  "nodeType": "IfStatement",
                  "src": "17699:185:3",
                  "trueBody": {
                    "id": 2825,
                    "nodeType": "Block",
                    "src": "17774:110:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2805,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "17779:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2806,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "17791:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17803:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17791:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17779:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2810,
                        "nodeType": "ExpressionStatement",
                        "src": "17779:25:3"
                      },
                      {
                        "expression": {
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2811,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "17809:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2812,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "17827:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2815,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17860:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2818,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2816,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1364,
                                          "src": "17864:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2817,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17876:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "17864:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2819,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "17863:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17860:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2813,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1325,
                                  "src": "17842:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "17842:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17842:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17827:52:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17809:70:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2824,
                        "nodeType": "ExpressionStatement",
                        "src": "17809:70:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2827,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "18043:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 2830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18071:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 2828,
                          "name": "epochCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1332,
                          "src": "18056:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "18056:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18056:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18043:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2833,
                  "nodeType": "ExpressionStatement",
                  "src": "18043:30:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "id": 2834,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "18152:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2835,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18151:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2836,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1335,
                              "src": "18167:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 2837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18194:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "18167:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2839,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18166:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18151:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18200:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18151:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2937,
                  "nodeType": "IfStatement",
                  "src": "18148:651:3",
                  "trueBody": {
                    "id": 2936,
                    "nodeType": "Block",
                    "src": "18205:594:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2843,
                            "name": "ARewardSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "18210:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18210:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2845,
                        "nodeType": "ExpressionStatement",
                        "src": "18210:15:3"
                      },
                      {
                        "expression": {
                          "id": 2858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2846,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "18230:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2847,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "18248:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 2850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18281:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2853,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2851,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1364,
                                          "src": "18285:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 2852,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18297:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "18285:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2854,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18284:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18281:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2848,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1325,
                                  "src": "18263:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "18263:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18263:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18248:52:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18230:70:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2859,
                        "nodeType": "ExpressionStatement",
                        "src": "18230:70:3"
                      },
                      {
                        "condition": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2860,
                                  "name": "epochCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1332,
                                  "src": "18310:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 2861,
                                  "name": "_BLOCKS_PER_READJUSTMENT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1335,
                                  "src": "18323:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18310:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18350:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "18310:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2865,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18309:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2935,
                        "nodeType": "IfStatement",
                        "src": "18306:489:3",
                        "trueBody": {
                          "id": 2934,
                          "nodeType": "Block",
                          "src": "18357:438:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2866,
                                  "name": "multipler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "18363:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2882,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2873,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "18418:4:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                                  "typeString": "contract ForgeTest"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                                  "typeString": "contract ForgeTest"
                                                }
                                              ],
                                              "id": 2872,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "18410:7:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2871,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "18410:7:3",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2874,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18410:13:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2868,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1285,
                                                "src": "18383:15:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2867,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1253,
                                              "src": "18376:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 2869,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18376:23:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$1253",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 2870,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1252,
                                          "src": "18376:33:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18376:48:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_200000000000_by_1",
                                              "typeString": "int_const 200000000000"
                                            },
                                            "id": 2880,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "32303030",
                                              "id": 2876,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18428:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_100000000_by_1",
                                                "typeString": "int_const 100000000"
                                              },
                                              "id": 2879,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3130",
                                                "id": 2877,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "18435:2:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "**",
                                              "rightExpression": {
                                                "hexValue": "38",
                                                "id": 2878,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "18441:1:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_8_by_1",
                                                  "typeString": "int_const 8"
                                                },
                                                "value": "8"
                                              },
                                              "src": "18435:7:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100000000_by_1",
                                                "typeString": "int_const 100000000"
                                              }
                                            },
                                            "src": "18428:14:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_200000000000_by_1",
                                              "typeString": "int_const 200000000000"
                                            }
                                          }
                                        ],
                                        "id": 2881,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "18427:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_200000000000_by_1",
                                          "typeString": "int_const 200000000000"
                                        }
                                      },
                                      "src": "18376:67:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2883,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18375:69:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18363:81:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2885,
                              "nodeType": "ExpressionStatement",
                              "src": "18363:81:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2896,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2892,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "18497:4:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                                  "typeString": "contract ForgeTest"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                                  "typeString": "contract ForgeTest"
                                                }
                                              ],
                                              "id": 2891,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "18489:7:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2890,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "18489:7:3",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2893,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18489:13:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2887,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1285,
                                                "src": "18462:15:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2886,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1253,
                                              "src": "18455:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 2888,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18455:23:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$1253",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 2889,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1252,
                                          "src": "18455:33:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2894,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18455:48:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2895,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1397,
                                        "src": "18506:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18455:60:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2897,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18453:63:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2903,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130303030",
                                        "id": 2898,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18521:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10000_by_1",
                                          "typeString": "int_const 10000"
                                        },
                                        "value": "10000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130303030",
                                          "id": 2899,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18529:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "id": 2900,
                                              "name": "multipler",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1279,
                                              "src": "18536:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2901,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "18535:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18529:17:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18521:25:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2904,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18520:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18453:94:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2929,
                                "nodeType": "Block",
                                "src": "18720:43:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2927,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2922,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1397,
                                        "src": "18727:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "33",
                                            "id": 2925,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18754:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2923,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1397,
                                            "src": "18739:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2924,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mult",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1107,
                                          "src": "18739:14:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18739:17:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18727:29:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2928,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18727:29:3"
                                  }
                                ]
                              },
                              "id": 2930,
                              "nodeType": "IfStatement",
                              "src": "18450:313:3",
                              "trueBody": {
                                "id": 2921,
                                "nodeType": "Block",
                                "src": "18621:95:3",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "32",
                                            "id": 2908,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18645:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2906,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1397,
                                            "src": "18631:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2907,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1128,
                                          "src": "18631:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2909,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18631:16:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2910,
                                        "name": "Token2Min",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1400,
                                        "src": "18650:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18631:28:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2920,
                                    "nodeType": "IfStatement",
                                    "src": "18628:82:3",
                                    "trueBody": {
                                      "id": 2919,
                                      "nodeType": "Block",
                                      "src": "18666:44:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2917,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2912,
                                              "name": "Token2Per",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1397,
                                              "src": "18674:9:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "32",
                                                  "id": 2915,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "18700:1:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 2913,
                                                  "name": "Token2Per",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1397,
                                                  "src": "18686:9:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2914,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1128,
                                                "src": "18686:13:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2916,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18686:16:3",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18674:28:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2918,
                                          "nodeType": "ExpressionStatement",
                                          "src": "18674:28:3"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2931,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3078,
                                  "src": "18768:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 2932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18768:21:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2933,
                              "nodeType": "ExpressionStatement",
                              "src": "18768:21:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2938,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "18803:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2940,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "18831:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "18831:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18846:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "18831:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2939,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "18821:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18821:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "18803:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2946,
                  "nodeType": "ExpressionStatement",
                  "src": "18803:45:3"
                }
              ]
            },
            "id": 2948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startNewMiningEpoch",
            "nameLocation": "17496:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17516:2:3"
            },
            "returnParameters": {
              "id": 2794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17528:0:3"
            },
            "scope": 3423,
            "src": "17487:1365:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3077,
              "nodeType": "Block",
              "src": "18896:1339:3",
              "statements": [
                {
                  "assignments": [
                    2952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2952,
                      "mutability": "mutable",
                      "name": "blktimestamp",
                      "nameLocation": "18908:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3077,
                      "src": "18900:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18900:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2955,
                  "initialValue": {
                    "expression": {
                      "id": 2953,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "18923:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 2954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "18923:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18900:38:3"
                },
                {
                  "assignments": [
                    2957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2957,
                      "mutability": "mutable",
                      "name": "TimeSinceLastDifficultyPeriod2",
                      "nameLocation": "18947:30:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3077,
                      "src": "18942:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2956,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18942:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2961,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2958,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2952,
                      "src": "18980:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2959,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "18995:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18980:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18942:83:3"
                },
                {
                  "assignments": [
                    2963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2963,
                      "mutability": "mutable",
                      "name": "adjusDiffTargetTime",
                      "nameLocation": "19035:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3077,
                      "src": "19030:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2962,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19030:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2967,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2964,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "19057:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2965,
                      "name": "_BLOCKS_PER_READJUSTMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1335,
                      "src": "19071:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19057:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19030:65:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2968,
                      "name": "TimeSinceLastDifficultyPeriod2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "19198:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2969,
                      "name": "adjusDiffTargetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2963,
                      "src": "19231:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19198:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3048,
                    "nodeType": "Block",
                    "src": "19583:359:3",
                    "statements": [
                      {
                        "assignments": [
                          3011
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3011,
                            "mutability": "mutable",
                            "name": "shortage_block_pct",
                            "nameLocation": "19593:18:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3048,
                            "src": "19588:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3010,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19588:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3020,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3018,
                              "name": "adjusDiffTargetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "19662:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 3014,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19651:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3012,
                                      "name": "TimeSinceLastDifficultyPeriod2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2957,
                                      "src": "19615:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1107,
                                    "src": "19615:35:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19615:40:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3016,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "19614:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "19614:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19614:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19588:95:3"
                      },
                      {
                        "expression": {
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3021,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1418,
                            "src": "19688:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19695:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19688:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3024,
                        "nodeType": "ExpressionStatement",
                        "src": "19688:8:3"
                      },
                      {
                        "assignments": [
                          3026
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3026,
                            "mutability": "mutable",
                            "name": "shortage_block_pct_extra",
                            "nameLocation": "19706:24:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3048,
                            "src": "19701:29:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3025,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19701:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3034,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 3032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19775:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 3029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19756:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 3027,
                                  "name": "shortage_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3011,
                                  "src": "19733:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1073,
                                "src": "19733:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19733:27:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1185,
                            "src": "19733:41:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19733:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19701:79:3"
                      },
                      {
                        "expression": {
                          "id": 3046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3035,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "19833:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3043,
                                    "name": "shortage_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3026,
                                    "src": "19892:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "353030",
                                        "id": 3040,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19882:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_500_by_1",
                                          "typeString": "int_const 500"
                                        },
                                        "value": "500"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_500_by_1",
                                          "typeString": "int_const 500"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3038,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1353,
                                        "src": "19865:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3039,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "19865:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19865:21:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1107,
                                  "src": "19865:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19865:52:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3036,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1353,
                                "src": "19848:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1052,
                              "src": "19848:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19848:70:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19833:85:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3047,
                        "nodeType": "ExpressionStatement",
                        "src": "19833:85:3"
                      }
                    ]
                  },
                  "id": 3049,
                  "nodeType": "IfStatement",
                  "src": "19194:748:3",
                  "trueBody": {
                    "id": 3009,
                    "nodeType": "Block",
                    "src": "19255:324:3",
                    "statements": [
                      {
                        "assignments": [
                          2972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2972,
                            "mutability": "mutable",
                            "name": "excess_block_pct",
                            "nameLocation": "19265:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3009,
                            "src": "19260:21:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2971,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19260:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2981,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2979,
                              "name": "TimeSinceLastDifficultyPeriod2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2957,
                              "src": "19321:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 2975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19310:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2973,
                                      "name": "adjusDiffTargetTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2963,
                                      "src": "19285:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1107,
                                    "src": "19285:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19285:29:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2977,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "19284:31:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1128,
                            "src": "19284:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19284:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19260:93:3"
                      },
                      {
                        "expression": {
                          "id": 2984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2982,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1418,
                            "src": "19358:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19365:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19358:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2985,
                        "nodeType": "ExpressionStatement",
                        "src": "19358:8:3"
                      },
                      {
                        "assignments": [
                          2987
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2987,
                            "mutability": "mutable",
                            "name": "excess_block_pct_extra",
                            "nameLocation": "19376:22:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3009,
                            "src": "19371:27:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2986,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19371:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2995,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 2993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19441:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 2990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19422:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 2988,
                                  "name": "excess_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2972,
                                  "src": "19401:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1073,
                                "src": "19401:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19401:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1185,
                            "src": "19401:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19401:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19371:75:3"
                      },
                      {
                        "expression": {
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2996,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "19472:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3004,
                                    "name": "excess_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2987,
                                    "src": "19532:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32303030",
                                        "id": 3001,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19521:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        },
                                        "value": "2000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2999,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1353,
                                        "src": "19504:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3000,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1128,
                                      "src": "19504:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19504:22:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3003,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1107,
                                  "src": "19504:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19504:51:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2997,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1353,
                                "src": "19487:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1073,
                              "src": "19487:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19487:69:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19472:84:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3008,
                        "nodeType": "ExpressionStatement",
                        "src": "19472:84:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3050,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "19946:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3051,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2952,
                      "src": "19979:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19946:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "19946:45:3"
                },
                {
                  "expression": {
                    "id": 3057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3054,
                      "name": "latestDifficultyPeriodStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "19995:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3055,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "20027:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "20027:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19995:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3058,
                  "nodeType": "ExpressionStatement",
                  "src": "19995:44:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3059,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "20046:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3060,
                      "name": "_MINIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "20061:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20046:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3067,
                  "nodeType": "IfStatement",
                  "src": "20043:94:3",
                  "trueBody": {
                    "id": 3066,
                    "nodeType": "Block",
                    "src": "20097:40:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3062,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "20102:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3063,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "20117:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20102:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3065,
                        "nodeType": "ExpressionStatement",
                        "src": "20102:30:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3068,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "20143:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3069,
                      "name": "_MAXIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "20158:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20143:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3076,
                  "nodeType": "IfStatement",
                  "src": "20140:89:3",
                  "trueBody": {
                    "id": 3075,
                    "nodeType": "Block",
                    "src": "20189:40:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3071,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "20194:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3072,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "20209:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20194:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "20194:30:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reAdjustDifficulty",
            "nameLocation": "18865:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18884:2:3"
            },
            "returnParameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18896:0:3"
            },
            "scope": 3423,
            "src": "18856:1379:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "20570:181:3",
              "statements": [
                {
                  "assignments": [
                    3092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3092,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "20582:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3121,
                      "src": "20574:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3091,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20574:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3105,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3098,
                                "name": "challenge_number",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "20626:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3099,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "20643:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "20643:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3101,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3080,
                                "src": "20654:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3096,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "20609:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "20609:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20609:51:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3095,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "20599:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20599:62:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "20591:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 3093,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20591:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20591:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20574:88:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3108,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "20677:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20669:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 3106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20669:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20669:15:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3110,
                      "name": "testTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3086,
                      "src": "20687:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20669:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3115,
                  "nodeType": "IfStatement",
                  "src": "20666:41:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3112,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "20699:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20699:8:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3114,
                    "nodeType": "ExpressionStatement",
                    "src": "20699:8:3"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3116,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "20720:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3117,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3082,
                          "src": "20730:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "20720:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 3119,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20719:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3090,
                  "id": 3120,
                  "nodeType": "Return",
                  "src": "20712:35:3"
                }
              ]
            },
            "functionSelector": "81269a56",
            "id": 3122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkMintSolution",
            "nameLocation": "20433:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3080,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "20459:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "20451:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20451:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "20474:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "20466:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20466:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3084,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "20500:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "20492:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3083,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20492:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3086,
                  "mutability": "mutable",
                  "name": "testTarget",
                  "nameLocation": "20523:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "20518:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3085,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20518:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20450:84:3"
            },
            "returnParameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3089,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "20561:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "20556:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3088,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20556:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20555:14:3"
            },
            "scope": 3423,
            "src": "20424:327:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3129,
              "nodeType": "Block",
              "src": "20897:32:3",
              "statements": [
                {
                  "expression": {
                    "id": 3127,
                    "name": "challengeNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1361,
                    "src": "20909:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3126,
                  "id": 3128,
                  "nodeType": "Return",
                  "src": "20902:22:3"
                }
              ]
            },
            "functionSelector": "4ef37628",
            "id": 3130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeNumber",
            "nameLocation": "20846:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20864:2:3"
            },
            "returnParameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3130,
                  "src": "20888:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20888:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20887:9:3"
            },
            "scope": 3423,
            "src": "20837:92:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3140,
              "nodeType": "Block",
              "src": "21070:49:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3137,
                        "name": "miningTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "21102:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3135,
                        "name": "_MAXIMUM_TARGET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1345,
                        "src": "21082:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "21082:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21082:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3134,
                  "id": 3139,
                  "nodeType": "Return",
                  "src": "21075:40:3"
                }
              ]
            },
            "functionSelector": "17da485f",
            "id": 3141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningDifficulty",
            "nameLocation": "21021:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21040:2:3"
            },
            "returnParameters": {
              "id": 3134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3141,
                  "src": "21064:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21064:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21063:6:3"
            },
            "scope": 3423,
            "src": "21012:107:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3148,
              "nodeType": "Block",
              "src": "21177:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 3146,
                    "name": "miningTarget",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1353,
                    "src": "21189:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3145,
                  "id": 3147,
                  "nodeType": "Return",
                  "src": "21182:19:3"
                }
              ]
            },
            "functionSelector": "32e99708",
            "id": 3149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningTarget",
            "nameLocation": "21132:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21147:2:3"
            },
            "returnParameters": {
              "id": 3145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3149,
                  "src": "21171:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21171:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21170:6:3"
            },
            "scope": 3423,
            "src": "21123:83:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "21264:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 3154,
                    "name": "tokensMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1402,
                    "src": "21276:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3153,
                  "id": 3155,
                  "nodeType": "Return",
                  "src": "21269:19:3"
                }
              ]
            },
            "functionSelector": "c0abebe0",
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningMinted",
            "nameLocation": "21219:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21234:2:3"
            },
            "returnParameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "21258:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21258:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21257:6:3"
            },
            "scope": 3423,
            "src": "21210:83:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3177,
              "nodeType": "Block",
              "src": "21452:177:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21608:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 3173,
                          "name": "rewardEra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "21611:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21608:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 3162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21576:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 3163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21582:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 3166,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1427,
                                    "src": "21591:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 3165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21586:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3164,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21586:4:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21586:14:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21582:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21576:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3170,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "21575:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1128,
                      "src": "21575:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21575:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3161,
                  "id": 3176,
                  "nodeType": "Return",
                  "src": "21568:54:3"
                }
              ]
            },
            "functionSelector": "490203a7",
            "id": 3178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "21407:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21422:2:3"
            },
            "returnParameters": {
              "id": 3161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3178,
                  "src": "21446:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3159,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21446:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21445:6:3"
            },
            "scope": 3423,
            "src": "21398:231:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3185,
              "nodeType": "Block",
              "src": "21680:28:3",
              "statements": [
                {
                  "expression": {
                    "id": 3183,
                    "name": "epochCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1332,
                    "src": "21692:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3182,
                  "id": 3184,
                  "nodeType": "Return",
                  "src": "21685:17:3"
                }
              ]
            },
            "functionSelector": "757991a8",
            "id": 3186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpoch",
            "nameLocation": "21642:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21650:2:3"
            },
            "returnParameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3186,
                  "src": "21674:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3180,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21674:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21673:6:3"
            },
            "scope": 3423,
            "src": "21633:75:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3211,
              "nodeType": "Block",
              "src": "21873:109:3",
              "statements": [
                {
                  "assignments": [
                    3198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3198,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "21886:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3211,
                      "src": "21878:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3197,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "21878:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3208,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3202,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "21923:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3203,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21940:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "21940:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3205,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3188,
                            "src": "21952:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3200,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21906:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "21906:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21906:52:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3199,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "21896:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21896:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21878:81:3"
                },
                {
                  "expression": {
                    "id": 3209,
                    "name": "digest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3198,
                    "src": "21971:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3196,
                  "id": 3210,
                  "nodeType": "Return",
                  "src": "21964:13:3"
                }
              ]
            },
            "functionSelector": "97566aa0",
            "id": 3212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintDigest",
            "nameLocation": "21751:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3188,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "21773:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3212,
                  "src": "21765:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21765:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3190,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "21788:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3212,
                  "src": "21780:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21780:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3192,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "21814:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3212,
                  "src": "21806:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3191,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21806:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21764:67:3"
            },
            "returnParameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3195,
                  "mutability": "mutable",
                  "name": "digesttest",
                  "nameLocation": "21861:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3212,
                  "src": "21853:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21853:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21852:20:3"
            },
            "scope": 3423,
            "src": "21742:240:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1252
            ],
            "body": {
              "id": 3224,
              "nodeType": "Block",
              "src": "22280:37:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3220,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "22292:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3222,
                    "indexExpression": {
                      "id": 3221,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3214,
                      "src": "22301:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22292:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3219,
                  "id": 3223,
                  "nodeType": "Return",
                  "src": "22285:27:3"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 3225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "22206:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22243:8:3"
            },
            "parameters": {
              "id": 3215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3214,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "22224:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "22216:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22216:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22215:20:3"
            },
            "returnParameters": {
              "id": 3219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3218,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "22271:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "22266:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22266:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22265:14:3"
            },
            "scope": 3423,
            "src": "22197:120:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1216
            ],
            "body": {
              "id": 3268,
              "nodeType": "Block",
              "src": "22735:166:3",
              "statements": [
                {
                  "expression": {
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3235,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "22740:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3238,
                      "indexExpression": {
                        "expression": {
                          "id": 3236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22749:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22749:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22740:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3244,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3229,
                          "src": "22788:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3239,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "22763:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3242,
                          "indexExpression": {
                            "expression": {
                              "id": 3240,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22772:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "22772:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22763:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1073,
                        "src": "22763:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22763:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22740:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3247,
                  "nodeType": "ExpressionStatement",
                  "src": "22740:55:3"
                },
                {
                  "expression": {
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3248,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "22799:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3250,
                      "indexExpression": {
                        "id": 3249,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3227,
                        "src": "22808:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22799:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3255,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3229,
                          "src": "22831:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3251,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "22814:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3253,
                          "indexExpression": {
                            "id": 3252,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3227,
                            "src": "22823:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22814:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "22814:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22814:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22799:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3258,
                  "nodeType": "ExpressionStatement",
                  "src": "22799:39:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22857:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22857:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3262,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3227,
                        "src": "22869:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3263,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3229,
                        "src": "22873:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3259,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "22848:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22848:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3265,
                  "nodeType": "EmitStatement",
                  "src": "22843:37:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22892:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3234,
                  "id": 3267,
                  "nodeType": "Return",
                  "src": "22885:11:3"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 3269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "22662:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3231,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22703:8:3"
            },
            "parameters": {
              "id": 3230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3227,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "22679:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "22671:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22671:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3229,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "22688:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "22683:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3228,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22683:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22670:25:3"
            },
            "returnParameters": {
              "id": 3234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3233,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "22726:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "22721:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22721:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22720:14:3"
            },
            "scope": 3423,
            "src": "22653:248:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1245
            ],
            "body": {
              "id": 3297,
              "nodeType": "Block",
              "src": "23482:110:3",
              "statements": [
                {
                  "expression": {
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3279,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1412,
                          "src": "23487:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3283,
                        "indexExpression": {
                          "expression": {
                            "id": 3280,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23495:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "23495:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23487:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3284,
                      "indexExpression": {
                        "id": 3282,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3271,
                        "src": "23507:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23487:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3285,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3273,
                      "src": "23518:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23487:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "23487:37:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23543:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23543:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3291,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3271,
                        "src": "23555:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3292,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3273,
                        "src": "23564:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3288,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "23534:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23534:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3294,
                  "nodeType": "EmitStatement",
                  "src": "23529:42:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23583:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3278,
                  "id": 3296,
                  "nodeType": "Return",
                  "src": "23576:11:3"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 3298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "23405:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3275,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23450:8:3"
            },
            "parameters": {
              "id": 3274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3271,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "23421:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "23413:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23413:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3273,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "23435:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "23430:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23430:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23412:30:3"
            },
            "returnParameters": {
              "id": 3278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3277,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "23473:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3298,
                  "src": "23468:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3276,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23468:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23467:14:3"
            },
            "scope": 3423,
            "src": "23396:196:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1227
            ],
            "body": {
              "id": 3357,
              "nodeType": "Block",
              "src": "24212:217:3",
              "statements": [
                {
                  "expression": {
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3310,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "24217:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3312,
                      "indexExpression": {
                        "id": 3311,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3300,
                        "src": "24226:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24217:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3317,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3304,
                          "src": "24253:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3313,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "24234:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3315,
                          "indexExpression": {
                            "id": 3314,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3300,
                            "src": "24243:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24234:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1073,
                        "src": "24234:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24234:26:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24217:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3320,
                  "nodeType": "ExpressionStatement",
                  "src": "24217:43:3"
                },
                {
                  "expression": {
                    "id": 3336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3321,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1412,
                          "src": "24264:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3325,
                        "indexExpression": {
                          "id": 3322,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3300,
                          "src": "24272:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24264:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3326,
                      "indexExpression": {
                        "expression": {
                          "id": 3323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24278:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24278:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24264:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3334,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3304,
                          "src": "24322:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3327,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "24292:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3329,
                            "indexExpression": {
                              "id": 3328,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3300,
                              "src": "24300:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24292:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3332,
                          "indexExpression": {
                            "expression": {
                              "id": 3330,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "24306:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24306:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24292:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1073,
                        "src": "24292:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24292:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24264:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3337,
                  "nodeType": "ExpressionStatement",
                  "src": "24264:65:3"
                },
                {
                  "expression": {
                    "id": 3347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3338,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1406,
                        "src": "24333:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3340,
                      "indexExpression": {
                        "id": 3339,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "24342:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24333:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3345,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3304,
                          "src": "24365:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3341,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "24348:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3343,
                          "indexExpression": {
                            "id": 3342,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3302,
                            "src": "24357:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24348:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "24348:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24348:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24333:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3348,
                  "nodeType": "ExpressionStatement",
                  "src": "24333:39:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3350,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3300,
                        "src": "24391:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3351,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "24397:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3352,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3304,
                        "src": "24401:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3349,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "24382:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24382:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3354,
                  "nodeType": "EmitStatement",
                  "src": "24377:31:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24420:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3309,
                  "id": 3356,
                  "nodeType": "Return",
                  "src": "24413:11:3"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 3358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "24121:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3306,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24180:8:3"
            },
            "parameters": {
              "id": 3305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3300,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "24142:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "24134:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24134:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24156:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "24148:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24148:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3304,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "24165:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "24160:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3303,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24160:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24133:39:3"
            },
            "returnParameters": {
              "id": 3309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "24203:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "24198:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24198:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24197:14:3"
            },
            "scope": 3423,
            "src": "24112:317:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1236
            ],
            "body": {
              "id": 3374,
              "nodeType": "Block",
              "src": "24806:45:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3368,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "24818:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3370,
                      "indexExpression": {
                        "id": 3369,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3360,
                        "src": "24826:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24818:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3372,
                    "indexExpression": {
                      "id": 3371,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3362,
                      "src": "24838:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24818:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3367,
                  "id": 3373,
                  "nodeType": "Return",
                  "src": "24811:35:3"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 3375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "24713:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3364,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24767:8:3"
            },
            "parameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "24731:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "24723:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24723:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3362,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "24751:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "24743:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24743:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24722:37:3"
            },
            "returnParameters": {
              "id": 3367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3366,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "24795:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "24790:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24790:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24789:16:3"
            },
            "scope": 3423,
            "src": "24704:147:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1264
            ],
            "body": {
              "id": 3407,
              "nodeType": "Block",
              "src": "25308:90:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3388,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3381,
                          "src": "25321:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3391,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "25338:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                "typeString": "contract ForgeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                "typeString": "contract ForgeTest"
                              }
                            ],
                            "id": 3390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25330:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25330:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25330:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25321:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25313:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25313:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3395,
                  "nodeType": "ExpressionStatement",
                  "src": "25313:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3403,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3377,
                        "src": "25379:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3404,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3379,
                        "src": "25385:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3399,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "25363:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                  "typeString": "contract ForgeTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeTest_$3423",
                                  "typeString": "contract ForgeTest"
                                }
                              ],
                              "id": 3398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25355:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3397,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25355:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25355:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3396,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "25348:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1253_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25348:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1253",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1216,
                      "src": "25348:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25348:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3406,
                  "nodeType": "ExpressionStatement",
                  "src": "25348:44:3"
                }
              ]
            },
            "functionSelector": "8f4ffcb1",
            "id": 3408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "25213:15:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3385,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25300:8:3"
            },
            "parameters": {
              "id": 3384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3377,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25237:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "25229:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25229:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3379,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "25251:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "25243:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25243:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3381,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "25267:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "25259:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25259:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "25287:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "25274:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25274:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25228:64:3"
            },
            "returnParameters": {
              "id": 3386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25308:0:3"
            },
            "scope": 3423,
            "src": "25204:194:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "25460:17:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3411,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "25465:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25465:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "25465:8:3"
                }
              ]
            },
            "id": 3415,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25440:2:3"
            },
            "returnParameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25460:0:3"
            },
            "scope": 3423,
            "src": "25433:44:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3421,
              "nodeType": "Block",
              "src": "25509:17:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3418,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "25514:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25514:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3420,
                  "nodeType": "ExpressionStatement",
                  "src": "25514:8:3"
                }
              ]
            },
            "id": 3422,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25489:2:3"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25509:0:3"
            },
            "scope": 3423,
            "src": "25481:45:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3424,
        "src": "6011:19517:3",
        "usedErrors": []
      }
    ],
    "src": "2993:23649:3"
  },
  "bytecode": "608060405260006001556a22bdd89dce55b0116400006005556a115eec47f6cf7e3500000060065542600755600060085561010060095562010000600a55600160ea1b600b556200006765048c27395000600b54620001f560201b620022871790919060201c565b600c556200007760014362000308565b40600d556000600e55620000b9600e54600162000095919062000322565b620000a29060026200043a565b600654620001f560201b620022871790919060201c565b600654620000c8919062000308565b600f5560006010819055601181905542601255670de0b6b3a76400006013556305f5e100601455620f42406015556058601655601a556001601b5560408051808201909152600580825264466f72676560d81b60209092019182526200013191601c916200024c565b5042601d5543601e55601f805460ff191690553480156200015157600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1336000818152601860209081526040808320670de0b6b3a76400009081905590519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620004a8565b600081620002375760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b604482015260640160405180910390fd5b62000243828462000448565b90505b92915050565b8280546200025a906200046b565b90600052602060002090601f0160209004810192826200027e5760008555620002c9565b82601f106200029957805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c9578251825591602001919060010190620002ac565b50620002d7929150620002db565b5090565b5b80821115620002d75760008155600101620002dc565b634e487b7160e01b600052601160045260246000fd5b6000828210156200031d576200031d620002f2565b500390565b60008219821115620003385762000338620002f2565b500190565b600181815b808511156200037e578160001904821115620003625762000362620002f2565b808516156200037057918102915b93841c939080029062000342565b509250929050565b600082620003975750600162000246565b81620003a65750600062000246565b8160018114620003bf5760028114620003ca57620003ea565b600191505062000246565b60ff841115620003de57620003de620002f2565b50506001821b62000246565b5060208310610133831016604e8410600b84101617156200040f575081810a62000246565b6200041b83836200033d565b8060001904821115620004325762000432620002f2565b029392505050565b600062000243838362000386565b6000826200046657634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200048057607f821691505b60208210811415620004a257634e487b7160e01b600052602260045260246000fd5b50919050565b61308b80620004b86000396000f3fe6080604052600436106102815760003560e01c8063829965cc1161014f578063a9059cbb116100c1578063dc6e9cf91161007a578063dc6e9cf91461071c578063dd62ed3e14610732578063ddfbd8dd14610778578063e932012b14610798578063f7a5f155146107ae578063f8bf8df5146107ce57600080fd5b8063a9059cbb14610686578063b5ade81b146106a6578063c0abebe0146106bc578063c8a1465c146106d1578063cb9ae707146106f1578063d0856d161461070757600080fd5b80638f4ffcb1116101135780638f4ffcb1146105cb57806394b939ef146105eb57806395d89b411461060b57806397566aa01461063a57806399f584b31461065a578063a68eb88e1461067057600080fd5b8063829965cc1461055357806387a2a9d6146105695780638a769d351461057f5780638ae0368b146105955780638da5cb5b146105ab57600080fd5b8063313ce567116101f3578063510de094116101ac578063510de0941461049057806364e46726146104b05780636de9f32b146104d257806370a08231146104e8578063757991a81461051e57806381269a561461053357600080fd5b8063313ce567146103fe57806332e997081461042557806345d8a2321461043a578063490203a7146104505780634ef37628146104655780634fa972e11461047a57600080fd5b806318160ddd1161024557806318160ddd146103445780631fccb33c1461035a5780632381a60e1461037a57806323b872dd146103905780632d38bf7a146103b05780632f104e0c146103c657600080fd5b806306fdde0314610290578063095ea7b3146102bb57806310294317146102eb57806317da485f1461030f5780631801fbe51461032457600080fd5b3661028b57600080fd5b600080fd5b34801561029c57600080fd5b506102a56107ee565b6040516102b29190612883565b60405180910390f35b3480156102c757600080fd5b506102db6102d63660046128f4565b61087c565b60405190151581526020016102b2565b3480156102f757600080fd5b5061030160125481565b6040519081526020016102b2565b34801561031b57600080fd5b506103016108e9565b34801561033057600080fd5b506102db61033f36600461291e565b610907565b34801561035057600080fd5b5061030160055481565b34801561036657600080fd5b506102db610375366004612a0e565b61091b565b34801561038657600080fd5b5061030160105481565b34801561039c57600080fd5b506102db6103ab366004612a6f565b6109de565b3480156103bc57600080fd5b50610301600e5481565b3480156103d257600080fd5b506003546103e6906001600160a01b031681565b6040516001600160a01b0390911681526020016102b2565b34801561040a57600080fd5b50610413601281565b60405160ff90911681526020016102b2565b34801561043157600080fd5b50600c54610301565b34801561044657600080fd5b50610301610b4081565b34801561045c57600080fd5b50610301610adc565b34801561047157600080fd5b50600d54610301565b34801561048657600080fd5b50610301600f5481565b34801561049c57600080fd5b506004546103e6906001600160a01b031681565b3480156104bc57600080fd5b506104d06104cb366004612aab565b610b0d565b005b3480156104de57600080fd5b5061030160175481565b3480156104f457600080fd5b50610301610503366004612aee565b6001600160a01b031660009081526018602052604090205490565b34801561052a57600080fd5b50600854610301565b34801561053f57600080fd5b506102db61054e366004612b09565b610c83565b34801561055f57600080fd5b5061030160085481565b34801561057557600080fd5b50610301600b5481565b34801561058b57600080fd5b50610301600c5481565b3480156105a157600080fd5b50610301600d5481565b3480156105b757600080fd5b506000546103e6906001600160a01b031681565b3480156105d757600080fd5b506104d06105e6366004612b3b565b610cce565b3480156105f757600080fd5b506002546103e6906001600160a01b031681565b34801561061757600080fd5b506102a56040518060400160405280600381526020016246676560e81b81525081565b34801561064657600080fd5b50610301610655366004612bfb565b610d5b565b34801561066657600080fd5b5061030160015481565b34801561067c57600080fd5b5061030160155481565b34801561069257600080fd5b506102db6106a13660046128f4565b610d96565b3480156106b257600080fd5b5061030160095481565b3480156106c857600080fd5b50601754610301565b3480156106dd57600080fd5b506103016106ec366004612c27565b610e2d565b3480156106fd57600080fd5b50610301601e5481565b34801561071357600080fd5b506104d0611324565b34801561072857600080fd5b50610301600a5481565b34801561073e57600080fd5b5061030161074d366004612c9e565b6001600160a01b03918216600090815260196020908152604080832093909416825291909152205490565b34801561078457600080fd5b50610301610793366004612cd1565b611577565b3480156107a457600080fd5b5061030160075481565b3480156107ba57600080fd5b506103016107c9366004612c27565b611985565b3480156107da57600080fd5b506103016107e9366004612d0e565b611f5d565b601c80546107fb90612d3e565b80601f016020809104026020016040519081016040528092919081815260200182805461082790612d3e565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b505050505081565b3360008181526019602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108d79086815260200190565b60405180910390a35060015b92915050565b6000610902600c54600b5461228790919063ffffffff16565b905090565b6000610914838333611577565b5092915050565b6000808351600161092c9190612d8f565b67ffffffffffffffff81111561094457610944612940565b60405190808252806020026020018201604052801561096d578160200160208202803683370190505b50905060005b8451610980906001612d8f565b8110156109c4578382828151811061099a5761099a612da7565b6001600160a01b0390921660209283029190910190910152806109bc81612dbd565b915050610973565b506109d186868684610e2d565b5060019695505050505050565b6001600160a01b038316600090815260186020526040812054610a0190836122d5565b6001600160a01b0385166000908152601860209081526040808320939093556019815282822033835290522054610a3890836122d5565b6001600160a01b038086166000908152601960209081526040808320338452825280832094909455918616815260189091522054610a769083612321565b6001600160a01b0380851660008181526018602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610aca9086815260200190565b60405180910390a35060019392505050565b6000610902600e546002610af09190612ebc565b610afc6012600a612ebc565b610b07906064612ec8565b90612287565b6000546001600160a01b03163314610b595760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b601f546a115eec47f6cf7e350000009060ff1615610b7957610b79612ee7565b601f805460ff1916600117905542601255600e54610b9c90610af0906002612ebc565b6010556000600e8190556017819055600855600b54610bbc906001612287565b600c5542600755610bcb61236f565b610bd6600282612f13565b6001600160a01b038516600081815260186020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610c1f600285612f13565b60405190815260200160405180910390a3600280546001600160a01b038087166001600160a01b031992831617909255600380548684169083161790556004805492851692909116919091179055600854601155610c7d60006125c0565b50505050565b600080833387604051602001610c9b93929190612f27565b604051602081830303815290604052805190602001209050828160001c1115610cc357600080fd5b909314949350505050565b6001600160a01b0382163014610ce357600080fd5b60405163a9059cbb60e01b81526001600160a01b038516600482015260248101849052309063a9059cbb906044016020604051808303816000875af1158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190612f4f565b5050505050565b600080600d543386604051602001610d7593929190612f27565b60408051808303601f19018152919052805160209091012095945050505050565b33600090815260186020526040812054610db090836122d5565b33600090815260186020526040808220929092556001600160a01b03851681522054610ddc9083612321565b6001600160a01b0384166000818152601860205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108d79086815260200190565b600080610e55868685600081518110610e4857610e48612da7565b6020026020010151611577565b905060008111610e945760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610b50565b8351610ea1906001612d8f565b835114610f165760405162461bcd60e51b815260206004820152603a60248201527f4d696e74546f2068617320746f206861766520616e206578747261206164647260448201527f65737320636f6d706172656420746f20457874726146756e64730000000000006064820152608401610b50565b60005b84518110156110da57610f2d816001612d8f565b610f38906002612ebc565b600854610f459190612f6c565b15610f4f576110da565b306001600160a01b0316858281518110610f6b57610f6b612da7565b60200260200101516001600160a01b031614158015610fbc575060045485516001600160a01b0390911690869083908110610fa857610fa8612da7565b60200260200101516001600160a01b031614155b6110085760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610b50565b6000611015826001612d8f565b90505b85518110156110c75785828151811061103357611033612da7565b60200260200101516001600160a01b031686828151811061105657611056612da7565b60200260200101516001600160a01b031614156110b55760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610b50565b806110bf81612dbd565b915050611018565b50806110d281612dbd565b915050610f19565b60008060005b838110156112c6576110f3816001612d8f565b6110fe906002612ebc565b60085461110b9190612f6c565b6112b45787818151811061112157611121612da7565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190612f80565b915081156111ef576111a8600382612f6c565b1580156111b457508015155b156111d9576111d2643a352944006111cc8785612ec8565b90612670565b92506111ef565b6111ec643a35294400610b078785612ec8565b92505b87818151811061120157611201612da7565b60200260200101516001600160a01b031663a9059cbb888360016112259190612d8f565b8151811061123557611235612da7565b6020026020010151856040518363ffffffff1660e01b815260040161126f9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b29190612f4f565b505b806112be81612dbd565b9150506110e0565b50600854600d5460408051928352602083019190915281018490526060810185905233907f87e5a7775b8ac2ead741e32752431bffeff76ec5f347cc202a6bad454653930b9060800160405180910390a25091979650505050505050565b6000601d54426113349190612f99565b905060006011546008546113489190612f99565b905060006113568284612f13565b905061136a600e546002610af09190612ebc565b6010556000611381610b406111cc84610378612ec8565b90506000610378611393836064612ec8565b61139d9190612f13565b9050600060c88210156113ef576113be610378610b078563026f7f3c612ec8565b6113de620c08406113d0600287612fb0565b610b07906303a2cdf0612ec8565b6113e89190612d8f565b90506113f6565b50631443fd005b60046009546015546114089190612ec8565b61141390603c612ec8565b61141d9190612f13565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a9190612f80565b111561155f57600454600354601a546015546001600160a01b039384169363a9059cbb9316916114d991630bebc20091906114c5888d612ec8565b6114cf9190612ec8565b610b079190612ec8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115489190612f4f565b50601b54611557906001612ec8565b601a55611565565b6000601a555b5050600854601155505042601d555050565b600080600d54338660405160200161159193929190612f27565b6040516020818303038152906040528051906020012090508381146115c85760405162461bcd60e51b8152600401610b5090612fbf565b600c5481106115e95760405162461bcd60e51b8152600401610b509061300d565b6115f161236f565b601254421161163a5760405162461bcd60e51b81526020600482015260156024820152744e6f2073616d65207365636f6e6420736f6c76657360581b6044820152606401610b50565b6000610b406012544261164d9190612f99565b61165990610378612ec8565b6116639190612f13565b90506000610378611675836064612ec8565b61167f9190612f13565b9050600061013a8210156116c4576116a1610378610b078563026f7f3c612ec8565b6116b3620c08406113d0600287612fb0565b6116bd9190612d8f565b90506116e9565b6116d8610378610b07856305f5e100612ec8565b6116e6906314dc9380612d8f565b90505b6117216117026305f5e10083601054610b079190612ec8565b6001600160a01b03881660009081526018602052604090205490612321565b6001600160a01b0387166000908152601860205260409020556010546117779061175690630bebc20090610b07908590612ec8565b6003546001600160a01b031660009081526018602052604090205490612321565b6003546001600160a01b03166000908152601860205260409020556010546117b7906117ae906305f5e10090610b07908590612ec8565b60175490612321565b60175542601255601a54156119155760c882101561187557600454601a546015546001600160a01b039092169163a9059cbb918991611800916305f5e100916114cf9088612ec8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f9190612f4f565b50611915565b600454601a546015546001600160a01b039092169163a9059cbb9189916118a491600a916114cf906022612ec8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119139190612f4f565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6119566305f5e10084601054610b079190612ec8565b600854600d546040805193845260208401929092529082015260600160405180910390a2979650505050505050565b600080600d54338760405160200161199f93929190612f27565b6040516020818303038152906040528051906020012090508481146119d65760405162461bcd60e51b8152600401610b5090612fbf565b600c5481106119f75760405162461bcd60e51b8152600401610b509061300d565b6119ff61236f565b6012544211611a485760405162461bcd60e51b81526020600482015260156024820152744e6f2073616d65207365636f6e6420736f6c76657360581b6044820152606401610b50565b8351835114611abf5760405162461bcd60e51b815260206004820152603a60248201527f4d696e74546f2068617320746f20686176652073616d65206e756d626572206f60448201527f66206164647265737373657320617320457874726146756e64730000000000006064820152608401610b50565b60005b8451811015611c8357611ad6816001612d8f565b611ae1906002612ebc565b600854611aee9190612f6c565b15611af857611c83565b306001600160a01b0316858281518110611b1457611b14612da7565b60200260200101516001600160a01b031614158015611b65575060045485516001600160a01b0390911690869083908110611b5157611b51612da7565b60200260200101516001600160a01b031614155b611bb15760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610b50565b6000611bbe826001612d8f565b90505b8551811015611c7057858281518110611bdc57611bdc612da7565b60200260200101516001600160a01b0316868281518110611bff57611bff612da7565b60200260200101516001600160a01b03161415611c5e5760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610b50565b80611c6881612dbd565b915050611bc1565b5080611c7b81612dbd565b915050611ac2565b6000610b4060125442611c969190612f99565b611ca290610378612ec8565b611cac9190612f13565b90506000610378611cbe836064612ec8565b611cc89190612f13565b9050600061013a821015611d0d57611cea610378610b078563026f7f3c612ec8565b611cfc620c08406113d0600287612fb0565b611d069190612d8f565b9050611d32565b611d21610378610b07856305f5e100612ec8565b611d2f906314dc9380612d8f565b90505b60008111611d6f5760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610b50565b60008060005b86811015611f4957611d88816001612d8f565b611d93906002612ebc565b600854611da09190612f6c565b611f37578a8181518110611db657611db6612da7565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2a9190612f80565b91508115611f3757611e3d600382612f6c565b158015611e4957508015155b15611e6857611e61643a352944006111cc8685612ec8565b9250611e7e565b611e7b643a35294400610b078685612ec8565b92505b8a8181518110611e9057611e90612da7565b60200260200101516001600160a01b031663a9059cbb8b8381518110611eb857611eb8612da7565b6020026020010151856040518363ffffffff1660e01b8152600401611ef29291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611f11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f359190612f4f565b505b80611f4181612dbd565b915050611d75565b505042601255509998505050505050505050565b6000611f6761236f565b6000610b4060125442611f7a9190612f99565b611f8690610378612ec8565b611f909190612f13565b90506000610378611fa2836064612ec8565b611fac9190612f13565b9050600061013a821015611ff157611fce610378610b078563026f7f3c612ec8565b611fe0620c08406113d0600287612fb0565b611fea9190612d8f565b9050612016565b612005610378610b07856305f5e100612ec8565b612013906314dc9380612d8f565b90505b61204e61202f6305f5e10083601054610b079190612ec8565b6001600160a01b03871660009081526018602052604090205490612321565b6001600160a01b0386166000908152601860205260409020556010546120839061175690630bebc20090610b07908590612ec8565b6003546001600160a01b03166000908152601860205260409020556010546120ba906117ae906305f5e10090610b07908590612ec8565b60175542601255601a54156122185760c882101561217857600454601a546015546001600160a01b039092169163a9059cbb918891612103916305f5e100916114cf9088612ec8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561214e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121729190612f4f565b50612218565b600454601a546015546001600160a01b039092169163a9059cbb9188916121a791600a916114cf906022612ec8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156121f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122169190612f4f565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6122596305f5e10084601054610b079190612ec8565b600854600d546040805193845260208401929092529082015260600160405180910390a29695505050505050565b6000816122c45760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610b50565b6122ce8284612f13565b9392505050565b6000818310156123175760405162461bcd60e51b815260206004820152600d60248201526c53756220756e646572666c6f7760981b6044820152606401610b50565b6122ce8284612f99565b60008061232e8385612d8f565b9050838110156122ce5760405162461bcd60e51b815260206004820152600c60248201526b416464206f766572666c6f7760a01b6044820152606401610b50565b600f5460105460175461238191612321565b1180156123905750603c600e54105b156123dc57600e546123a3906001612d8f565b600e8190556123cb906123b7906001612d8f565b6123c2906002612ebc565b60065490612287565b6006546123d89190612f99565b600f555b6008546123ea906001612321565b6008556009546123fc90600490612f13565b6008546124099190612f6c565b6125af57612415611324565b612427600e5460016123b79190612d8f565b6006546124349190612f99565b600f556009546008546124479190612f6c565b6125af57600480546040516370a0823160e01b81523092810192909252642e90edd000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561249d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c19190612f80565b6124cb9190612f13565b60018190556124dc90612710612ec8565b6124e890612710612d8f565b601554600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015612534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125589190612f80565b6125629190612f13565b1161259557601654601554612578906002612287565b11156125905760155461258c906002612287565b6015555b6125a7565b6015546125a39060036126dd565b6015555b6125af612742565b6125ba600143612f99565b40600d55565b6000546001600160a01b031633146126075760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610b50565b600054604080516001600160a01b03928316815291831660208301527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000816126ad5760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610b50565b60006126b98385612f13565b90506126c58385612f6c565b156122ce576126d5816001612d8f565b949350505050565b6000826126ec575060006108e3565b60006126f88385612ec8565b9050826127058583612f13565b146122ce5760405162461bcd60e51b815260206004820152600d60248201526c4d756c74206f766572666c6f7760981b6044820152606401610b50565b60075442906000906127549083612f99565b90506000600954610b406127689190612ec8565b9050808210156127dd57600061278383610b078460646126dd565b6001601b55905060006127a36103e861279d8460646122d5565b9061286b565b90506127d26127c9826127c36107d0600c5461228790919063ffffffff16565b906126dd565b600c54906122d5565b600c55506128379050565b60006127ee82610b078560646126dd565b6002601b55905060006128086103e861279d8460646122d5565b9050612831612828826127c36101f4600c5461228790919063ffffffff16565b600c5490612321565b600c5550505b600783905543601e55600a54600c54101561285357600a54600c555b600b54600c54111561286657600b54600c555b505050565b60008183111561287c5750806108e3565b5090919050565b600060208083528351808285015260005b818110156128b057858101830151858201604001528201612894565b818111156128c2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146128ef57600080fd5b919050565b6000806040838503121561290757600080fd5b612910836128d8565b946020939093013593505050565b6000806040838503121561293157600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561297f5761297f612940565b604052919050565b600082601f83011261299857600080fd5b8135602067ffffffffffffffff8211156129b4576129b4612940565b8160051b6129c3828201612956565b92835284810182019282810190878511156129dd57600080fd5b83870192505b84831015612a03576129f4836128d8565b825291830191908301906129e3565b979650505050505050565b60008060008060808587031215612a2457600080fd5b8435935060208501359250604085013567ffffffffffffffff811115612a4957600080fd5b612a5587828801612987565b925050612a64606086016128d8565b905092959194509250565b600080600060608486031215612a8457600080fd5b612a8d846128d8565b9250612a9b602085016128d8565b9150604084013590509250925092565b600080600060608486031215612ac057600080fd5b612ac9846128d8565b9250612ad7602085016128d8565b9150612ae5604085016128d8565b90509250925092565b600060208284031215612b0057600080fd5b6122ce826128d8565b60008060008060808587031215612b1f57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060808587031215612b5157600080fd5b612b5a856128d8565b93506020808601359350612b70604087016128d8565b9250606086013567ffffffffffffffff80821115612b8d57600080fd5b818801915088601f830112612ba157600080fd5b813581811115612bb357612bb3612940565b612bc5601f8201601f19168501612956565b91508082528984828501011115612bdb57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080600060608486031215612c1057600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612c3d57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115612c6357600080fd5b612c6f88838901612987565b93506060870135915080821115612c8557600080fd5b50612c9287828801612987565b91505092959194509250565b60008060408385031215612cb157600080fd5b612cba836128d8565b9150612cc8602084016128d8565b90509250929050565b600080600060608486031215612ce657600080fd5b8335925060208401359150612ae5604085016128d8565b8015158114612d0b57600080fd5b50565b600080600060608486031215612d2357600080fd5b8335612d2e81612cfd565b92506020840135612ad781612cfd565b600181811c90821680612d5257607f821691505b60208210811415612d7357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612da257612da2612d79565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612dd157612dd1612d79565b5060010190565b600181815b80851115612e13578160001904821115612df957612df9612d79565b80851615612e0657918102915b93841c9390800290612ddd565b509250929050565b600082612e2a575060016108e3565b81612e37575060006108e3565b8160018114612e4d5760028114612e5757612e73565b60019150506108e3565b60ff841115612e6857612e68612d79565b50506001821b6108e3565b5060208310610133831016604e8410600b8410161715612e96575081810a6108e3565b612ea08383612dd8565b8060001904821115612eb457612eb4612d79565b029392505050565b60006122ce8383612e1b565b6000816000190483118215151615612ee257612ee2612d79565b500290565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082612f2257612f22612efd565b500490565b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b600060208284031215612f6157600080fd5b81516122ce81612cfd565b600082612f7b57612f7b612efd565b500690565b600060208284031215612f9257600080fd5b5051919050565b600082821015612fab57612fab612d79565b500390565b60006122ce60ff841683612e1b565b6020808252602e908201527f4f6c64206368616c6c656e67655f646967657374206f722077726f6e6720636860408201526d185b1b195b99d957d91a59d95cdd60921b606082015260800190565b60208082526028908201527f446967657374206d75737420626520736d616c6c6572207468616e206d696e696040820152671b99d5185c99d95d60c21b60608201526080019056fea264697066735822122044d860b2262af0664c789208c04c554c41766b5e8dd205a140f970c8bd6348a164736f6c634300080b0033",
  "bytecodeSha1": "cc1a12806ab4eb372356d49a9731a417bed4e691",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ForgeTest",
  "coverageMap": {
    "branches": {
      "3": {
        "ExtendedMath2.limitLessThan": {
          "194": [
            4998,
            5003,
            false
          ]
        },
        "ForgeTest.ARewardSender": {
          "156": [
            10978,
            10989,
            false
          ],
          "157": [
            11120,
            11222,
            false
          ]
        },
        "ForgeTest._reAdjustDifficulty": {
          "191": [
            19198,
            19250,
            false
          ],
          "192": [
            20046,
            20076,
            false
          ],
          "193": [
            20143,
            20173,
            false
          ]
        },
        "ForgeTest._startNewMiningEpoch": {
          "183": [
            17703,
            17752,
            false
          ],
          "184": [
            17756,
            17770,
            false
          ],
          "185": [
            18453,
            18547,
            false
          ],
          "186": [
            18631,
            18659,
            false
          ]
        },
        "ForgeTest.checkMintSolution": {
          "145": [
            20669,
            20697,
            false
          ]
        },
        "ForgeTest.empty_mintTo": {
          "164": [
            15575,
            15601,
            true
          ],
          "165": [
            15712,
            15742,
            true
          ],
          "166": [
            15826,
            15861,
            true
          ],
          "167": [
            15899,
            15933,
            true
          ],
          "168": [
            16063,
            16092,
            false
          ],
          "169": [
            16122,
            16153,
            false
          ],
          "170": [
            16157,
            16190,
            true
          ],
          "171": [
            16283,
            16314,
            true
          ],
          "172": [
            16487,
            16498,
            false
          ],
          "173": [
            16655,
            16666,
            true
          ],
          "174": [
            17119,
            17134,
            false
          ],
          "175": [
            17146,
            17156,
            false
          ],
          "176": [
            17160,
            17166,
            false
          ]
        },
        "ForgeTest.mintFREE": {
          "177": [
            9679,
            9690,
            false
          ],
          "178": [
            10168,
            10181,
            false
          ],
          "179": [
            10190,
            10201,
            false
          ]
        },
        "ForgeTest.mintTo": {
          "158": [
            11979,
            12005,
            true
          ],
          "159": [
            12116,
            12146,
            true
          ],
          "160": [
            12230,
            12265,
            true
          ],
          "161": [
            12478,
            12489,
            false
          ],
          "162": [
            12967,
            12980,
            false
          ],
          "163": [
            12989,
            13000,
            false
          ]
        },
        "ForgeTest.mintTokensArrayTo": {
          "147": [
            13559,
            13570,
            true
          ],
          "148": [
            13598,
            13636,
            true
          ],
          "149": [
            13766,
            13795,
            false
          ],
          "150": [
            13825,
            13856,
            false
          ],
          "151": [
            13860,
            13893,
            true
          ],
          "152": [
            13986,
            14017,
            true
          ],
          "153": [
            14507,
            14522,
            false
          ],
          "154": [
            14534,
            14544,
            false
          ],
          "155": [
            14548,
            14554,
            false
          ]
        },
        "ForgeTest.receiveApproval": {
          "146": [
            25321,
            25343,
            true
          ]
        },
        "SafeMath2.add": {
          "182": [
            4002,
            4008,
            true
          ]
        },
        "SafeMath2.div": {
          "180": [
            4512,
            4518,
            true
          ]
        },
        "SafeMath2.divRound": {
          "187": [
            4659,
            4665,
            true
          ],
          "188": [
            4722,
            4732,
            false
          ]
        },
        "SafeMath2.mult": {
          "189": [
            4282,
            4288,
            false
          ],
          "190": [
            4368,
            4378,
            true
          ]
        },
        "SafeMath2.sub": {
          "181": [
            4141,
            4147,
            true
          ]
        }
      }
    },
    "statements": {
      "3": {
        "ExtendedMath2.limitLessThan": {
          "143": [
            5005,
            5013
          ],
          "144": [
            5024,
            5032
          ]
        },
        "ForgeTest.<fallback>": {
          "0": [
            25514,
            25522
          ]
        },
        "ForgeTest.<receive>": {
          "1": [
            25465,
            25473
          ]
        },
        "ForgeTest.ARewardSender": {
          "61": [
            10794,
            10856
          ],
          "62": [
            10995,
            11067
          ],
          "63": [
            11084,
            11107
          ],
          "64": [
            11307,
            11427
          ],
          "65": [
            11432,
            11452
          ],
          "66": [
            11466,
            11479
          ],
          "67": [
            11487,
            11509
          ],
          "68": [
            11531,
            11556
          ]
        },
        "ForgeTest._reAdjustDifficulty": {
          "135": [
            19358,
            19366
          ],
          "136": [
            19472,
            19556
          ],
          "137": [
            19688,
            19696
          ],
          "138": [
            19833,
            19918
          ],
          "139": [
            19946,
            19991
          ],
          "140": [
            19995,
            20039
          ],
          "141": [
            20102,
            20132
          ],
          "142": [
            20194,
            20224
          ]
        },
        "ForgeTest._startNewMiningEpoch": {
          "119": [
            17779,
            17804
          ],
          "120": [
            17809,
            17879
          ],
          "121": [
            18043,
            18073
          ],
          "122": [
            18210,
            18225
          ],
          "123": [
            18230,
            18300
          ],
          "124": [
            18363,
            18444
          ],
          "125": [
            18674,
            18702
          ],
          "126": [
            18727,
            18756
          ],
          "127": [
            18768,
            18789
          ],
          "128": [
            18803,
            18848
          ]
        },
        "ForgeTest.allowance": {
          "7": [
            24811,
            24846
          ]
        },
        "ForgeTest.approve": {
          "8": [
            23487,
            23524
          ],
          "9": [
            23529,
            23571
          ],
          "10": [
            23576,
            23587
          ]
        },
        "ForgeTest.balanceOf": {
          "4": [
            22285,
            22312
          ]
        },
        "ForgeTest.checkMintSolution": {
          "40": [
            20699,
            20707
          ],
          "41": [
            20712,
            20747
          ]
        },
        "ForgeTest.empty_mintTo": {
          "83": [
            15567,
            15652
          ],
          "84": [
            15704,
            15787
          ],
          "85": [
            15791,
            15813
          ],
          "86": [
            15818,
            15887
          ],
          "87": [
            15891,
            15995
          ],
          "88": [
            16099,
            16104
          ],
          "89": [
            16114,
            16221
          ],
          "90": [
            16275,
            16346
          ],
          "91": [
            16265,
            16268
          ],
          "92": [
            16047,
            16051
          ],
          "93": [
            16504,
            16575
          ],
          "94": [
            16590,
            16638
          ],
          "95": [
            16647,
            16681
          ],
          "96": [
            17051,
            17110
          ],
          "97": [
            17175,
            17236
          ],
          "98": [
            17256,
            17313
          ],
          "99": [
            17332,
            17384
          ],
          "100": [
            16748,
            16751
          ],
          "101": [
            17422,
            17457
          ],
          "102": [
            17461,
            17475
          ]
        },
        "ForgeTest.getChallengeNumber": {
          "3": [
            20902,
            20924
          ]
        },
        "ForgeTest.getEpoch": {
          "5": [
            21685,
            21702
          ]
        },
        "ForgeTest.getMiningDifficulty": {
          "11": [
            21075,
            21115
          ]
        },
        "ForgeTest.getMiningMinted": {
          "6": [
            21269,
            21288
          ]
        },
        "ForgeTest.getMiningReward": {
          "22": [
            21568,
            21622
          ]
        },
        "ForgeTest.getMiningTarget": {
          "2": [
            21182,
            21201
          ]
        },
        "ForgeTest.mint": {
          "12": [
            11676,
            11719
          ]
        },
        "ForgeTest.mintFREE": {
          "103": [
            9470,
            9492
          ],
          "104": [
            9696,
            9769
          ],
          "105": [
            9784,
            9834
          ],
          "106": [
            9845,
            9928
          ],
          "107": [
            9932,
            10037
          ],
          "108": [
            10046,
            10121
          ],
          "109": [
            10125,
            10160
          ],
          "110": [
            10208,
            10300
          ],
          "111": [
            10316,
            10394
          ],
          "112": [
            10408,
            10503
          ],
          "113": [
            10508,
            10524
          ]
        },
        "ForgeTest.mintTo": {
          "69": [
            11971,
            12056
          ],
          "70": [
            12108,
            12191
          ],
          "71": [
            12195,
            12217
          ],
          "72": [
            12222,
            12291
          ],
          "73": [
            12495,
            12568
          ],
          "74": [
            12583,
            12633
          ],
          "75": [
            12644,
            12727
          ],
          "76": [
            12731,
            12836
          ],
          "77": [
            12845,
            12920
          ],
          "78": [
            12924,
            12959
          ],
          "79": [
            13007,
            13099
          ],
          "80": [
            13115,
            13193
          ],
          "81": [
            13207,
            13302
          ],
          "82": [
            13307,
            13323
          ]
        },
        "ForgeTest.mintTokensArrayTo": {
          "47": [
            13551,
            13585
          ],
          "48": [
            13590,
            13698
          ],
          "49": [
            13802,
            13807
          ],
          "50": [
            13817,
            13924
          ],
          "51": [
            13978,
            14049
          ],
          "52": [
            13968,
            13971
          ],
          "53": [
            13750,
            13754
          ],
          "54": [
            14439,
            14498
          ],
          "55": [
            14563,
            14624
          ],
          "56": [
            14644,
            14701
          ],
          "57": [
            14723,
            14777
          ],
          "58": [
            14136,
            14139
          ],
          "59": [
            14806,
            14874
          ],
          "60": [
            14879,
            14893
          ]
        },
        "ForgeTest.mintTokensSameAddress": {
          "13": [
            15174,
            15188
          ],
          "14": [
            15162,
            15165
          ],
          "15": [
            15199,
            15257
          ],
          "16": [
            15262,
            15273
          ]
        },
        "ForgeTest.receiveApproval": {
          "42": [
            25313,
            25344
          ],
          "43": [
            25348,
            25392
          ]
        },
        "ForgeTest.transfer": {
          "44": [
            22740,
            22795
          ],
          "45": [
            22799,
            22838
          ],
          "46": [
            22843,
            22880
          ]
        },
        "ForgeTest.transferFrom": {
          "17": [
            24217,
            24260
          ],
          "18": [
            24264,
            24329
          ],
          "19": [
            24333,
            24372
          ],
          "20": [
            24377,
            24408
          ],
          "21": [
            24413,
            24424
          ]
        },
        "ForgeTest.zinit": {
          "23": [
            8624,
            8640
          ],
          "24": [
            8650,
            8664
          ],
          "25": [
            8671,
            8706
          ],
          "26": [
            8713,
            8776
          ],
          "27": [
            8783,
            8796
          ],
          "28": [
            8803,
            8819
          ],
          "29": [
            8826,
            8840
          ],
          "30": [
            8847,
            8884
          ],
          "31": [
            8937,
            8985
          ],
          "32": [
            8992,
            9014
          ],
          "33": [
            9068,
            9099
          ],
          "34": [
            9111,
            9158
          ],
          "35": [
            9167,
            9199
          ],
          "36": [
            9209,
            9244
          ],
          "37": [
            9254,
            9288
          ],
          "38": [
            9300,
            9322
          ],
          "39": [
            9328,
            9348
          ]
        },
        "Ownable.setOwner": {
          "129": [
            3405,
            3442
          ],
          "130": [
            3452,
            3466
          ]
        },
        "SafeMath2.add": {
          "118": [
            3994,
            4025
          ]
        },
        "SafeMath2.div": {
          "114": [
            4504,
            4534
          ],
          "115": [
            4544,
            4556
          ]
        },
        "SafeMath2.divRound": {
          "131": [
            4651,
            4681
          ],
          "132": [
            4748,
            4757
          ]
        },
        "SafeMath2.mult": {
          "133": [
            4304,
            4312
          ],
          "134": [
            4360,
            4396
          ]
        },
        "SafeMath2.sub": {
          "116": [
            4133,
            4165
          ],
          "117": [
            4175,
            4187
          ]
        }
      }
    }
  },
  "dependencies": [
    "ApproveAndCallFallBack",
    "ExtendedMath2",
    "IERC20",
    "Ownable",
    "SafeMath2"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "6011:19517:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;;;;;;;;;;;;;;;;;;;;;;;25514:8;;;6011:19517;;;;25465:8;;;6011:19517;25514:8;;;8014:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23396:196;;;;;;;;;;-1:-1:-1;23396:196:3;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;23396:196:3;1053:187:5;7589:49:3;;;;;;;;;;;;;;;;;;;1391:25:5;;;1379:2;1364:18;7589:49:3;1245:177:5;21012:107:3;;;;;;;;;;;;;:::i;11587:136::-;;;;;;;;;;-1:-1:-1;11587:136:3;;;;;:::i;:::-;;:::i;6623:64::-;;;;;;;;;;;;;;;;14905:372;;;;;;;;;;-1:-1:-1;14905:372:3;;;;;:::i;:::-;;:::i;7499:29::-;;;;;;;;;;;;;;;;24112:317;;;;;;;;;;-1:-1:-1;24112:317:3;;;;;:::i;:::-;;:::i;7378:25::-;;;;;;;;;;;;;;;;6213:30;;;;;;;;;;-1:-1:-1;6213:30:3;;;;-1:-1:-1;;;;;6213:30:3;;;;;;-1:-1:-1;;;;;3876:32:5;;;3858:51;;3846:2;3831:18;6213:30:3;3712:203:5;8091:35:3;;;;;;;;;;;;8124:2;8091:35;;;;;4092:4:5;4080:17;;;4062:36;;4050:2;4035:18;8091:35:3;3920:184:5;21123:83:3;;;;;;;;;;-1:-1:-1;21189:12:3;;21123:83;;6076:41;;;;;;;;;;;;6110:7;6076:41;;21398:231;;;;;;;;;;;;;:::i;20837:92::-;;;;;;;;;;-1:-1:-1;20909:15:3;;20837:92;;7409:84;;;;;;;;;;;;;;;;6249:30;;;;;;;;;;-1:-1:-1;6249:30:3;;;;-1:-1:-1;;;;;6249:30:3;;;8442:919;;;;;;;;;;-1:-1:-1;8442:919:3;;;;;:::i;:::-;;:::i;:::-;;7828:24;;;;;;;;;;;;;;;;22197:120;;;;;;;;;;-1:-1:-1;22197:120:3;;;;;:::i;:::-;-1:-1:-1;;;;;22292:20:3;22266:12;22292:20;;;:8;:20;;;;;;;22197:120;21633:75;;;;;;;;;;-1:-1:-1;21692:10:3;;21633:75;;20424:327;;;;;;;;;;-1:-1:-1;20424:327:3;;;;;:::i;:::-;;:::i;6909:26::-;;;;;;;;;;;;;;;;7086:37;;;;;;;;;;;;;;;;7129:63;;;;;;;;;;;;;;;;7261:60;;;;;;;;;;;;;;;;3042:20;;;;;;;;;;-1:-1:-1;3042:20:3;;;;-1:-1:-1;;;;;3042:20:3;;;25204:194;;;;;;;;;;-1:-1:-1;25204:194:3;;;;;:::i;:::-;;:::i;6178:29::-;;;;;;;;;;-1:-1:-1;6178:29:3;;;;-1:-1:-1;;;;;6178:29:3;;;8048:37;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8048:37:3;;;;;21742:240;;;;;;;;;;-1:-1:-1;21742:240:3;;;;;:::i;:::-;;:::i;6123:25::-;;;;;;;;;;;;;;;;7736:40;;;;;;;;;;;;;;;;22653:248;;;;;;;;;;-1:-1:-1;22653:248:3;;;;;:::i;:::-;;:::i;6968:42::-;;;;;;;;;;;;;;;;21210:83;;;;;;;;;;-1:-1:-1;21276:12:3;;21210:83;;13332:1569;;;;;;;;;;-1:-1:-1;13332:1569:3;;;;;:::i;:::-;;:::i;8172:56::-;;;;;;;;;;;;;;;;10559:1001;;;;;;;;;;;;;:::i;7039:36::-;;;;;;;;;;;;;;;;24704:147;;;;;;;;;;-1:-1:-1;24704:147:3;;;;;:::i;:::-;-1:-1:-1;;;;;24818:19:3;;;24790:14;24818:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;24704:147;11727:1601;;;;;;;;;;-1:-1:-1;11727:1601:3;;;;;:::i;:::-;;:::i;6843:60::-;;;;;;;;;;;;;;;;15281:2201;;;;;;;;;;-1:-1:-1;15281:2201:3;;;;;:::i;:::-;;:::i;9365:1164::-;;;;;;;;;;-1:-1:-1;9365:1164:3;;;;;:::i;:::-;;:::i;8014:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23396:196::-;23495:10;23468:12;23487:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;23487:28:3;;;;;;;;;;:37;;;23534;23468:12;;23487:28;;23534:37;;;;23518:6;1391:25:5;;1379:2;1364:18;;1245:177;23534:37:3;;;;;;;;-1:-1:-1;23583:4:3;23396:196;;;;;:::o;21012:107::-;21064:4;21082:33;21102:12;;21082:15;;:19;;:33;;;;:::i;:::-;21075:40;;21012:107;:::o;11587:136::-;11658:12;11676:43;11683:5;11690:16;11708:10;11676:6;:43::i;:::-;;11587:136;;;;:::o;14905:372::-;15038:12;15056:19;15092:10;:17;15112:1;15092:21;;;;:::i;:::-;15078:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15078:36:3;;15056:58;;15124:6;15120:73;15138:17;;:21;;15158:1;15138:21;:::i;:::-;15134:1;:26;15120:73;;;15182:6;15174:2;15177:1;15174:5;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15174:14:3;;;:5;;;;;;;;;;;:14;15162:3;;;;:::i;:::-;;;;15120:73;;;;15199:58;15217:5;15224:16;15242:10;15254:2;15199:17;:58::i;:::-;-1:-1:-1;15269:4:3;;14905:372;-1:-1:-1;;;;;;14905:372:3:o;24112:317::-;-1:-1:-1;;;;;24234:14:3;;24198:12;24234:14;;;:8;:14;;;;;;:26;;24253:6;24234:18;:26::i;:::-;-1:-1:-1;;;;;24217:14:3;;;;;;:8;:14;;;;;;;;:43;;;;24292:7;:13;;;;;24306:10;24292:25;;;;;;:37;;24322:6;24292:29;:37::i;:::-;-1:-1:-1;;;;;24264:13:3;;;;;;;:7;:13;;;;;;;;24278:10;24264:25;;;;;;;:65;;;;24348:12;;;;;:8;:12;;;;;:24;;24365:6;24348:16;:24::i;:::-;-1:-1:-1;;;;;24333:12:3;;;;;;;:8;:12;;;;;;;:39;;;;24382:26;;;;;;;;;;24401:6;1391:25:5;;1379:2;1364:18;;1245:177;24382:26:3;;;;;;;;-1:-1:-1;24420:4:3;24112:317;;;;;:::o;21398:231::-;21446:4;21575:47;21611:9;;21608:1;:12;;;;:::i;:::-;21582:18;8124:2;21582;:18;:::i;:::-;21576:24;;:3;:24;:::i;:::-;21575:31;;:47::i;8442:919::-;3298:5;;-1:-1:-1;;;;;3298:5:3;3284:10;:19;3276:42;;;;-1:-1:-1;;;3276:42:3;;11095:2:5;3276:42:3;;;11077:21:5;11134:2;11114:18;;;11107:30;-1:-1:-1;;;11153:18:5;;;11146:40;11203:18;;3276:42:3;;;;;;;;;8632:7:::1;::::0;8561:26:::1;::::0;8632:7:::1;;8631:8;8624:16;;;;:::i;:::-;8650:7;:14:::0;;-1:-1:-1;;8650:14:3::1;8660:4;8650:14;::::0;;8691:15:::1;8671:17;:35:::0;8765:9:::1;::::0;8729:47:::1;::::0;8762:12:::1;::::0;:1:::1;:12;:::i;8729:47::-;8713:13;:63:::0;8795:1:::1;8783:9;:13:::0;;;8803:12:::1;:16:::0;;;8826:10:::1;:14:::0;8862:15:::1;::::0;:22:::1;::::0;8882:1:::1;8862:19;:22::i;:::-;8847:12;:37:::0;8970:15:::1;8937:30;:48:::0;8992:22:::1;:20;:22::i;:::-;9096:3;9098:1;9096::::0;:3:::1;:::i;:::-;-1:-1:-1::0;;;;;9068:25:3;::::1;;::::0;;;:8:::1;:25;::::0;;;;:31;;;;:25;9116:42:::1;9154:3;9156:1;9154::::0;:3:::1;:::i;:::-;9116:42;::::0;1391:25:5;;;1379:2;1364:18;9116:42:3::1;;;;;;;9167:14;:32:::0;;-1:-1:-1;;;;;9167:32:3;;::::1;-1:-1:-1::0;;;;;;9167:32:3;;::::1;;::::0;;;9209:15:::1;:35:::0;;;;::::1;::::0;;::::1;;::::0;;9254:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;9312:10:::1;::::0;9300:9:::1;:22:::0;9328:20:::1;9167:14;9328:8;:20::i;:::-;8542:819;8442:919:::0;;;:::o;20424:327::-;20556:12;20574:14;20626:16;20643:10;20654:5;20609:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20599:62;;;;;;20574:88;;20687:10;20677:6;20669:15;;:28;20666:41;;;20699:8;;;20666:41;20720:26;;;;20424:327;-1:-1:-1;;;;20424:327:3:o;25204:194::-;-1:-1:-1;;;;;25321:22:3;;25338:4;25321:22;25313:31;;;;;;25348:44;;-1:-1:-1;;;25348:44:3;;-1:-1:-1;;;;;12177:32:5;;25348:44:3;;;12159:51:5;12226:18;;;12219:34;;;25363:4:3;;25348:30;;12132:18:5;;25348:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;25204:194;;;;:::o;21742:240::-;21853:18;21878:14;21923:15;;21940:10;21952:5;21906:52;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;21906:52:3;;;;;;21896:63;;21906:52;21896:63;;;;;21742:240;-1:-1:-1;;;;;21742:240:3:o;22653:248::-;22772:10;22721:12;22763:20;;;:8;:20;;;;;;:32;;22788:6;22763:24;:32::i;:::-;22749:10;22740:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;22814:12:3;;;;;;:24;;22831:6;22814:16;:24::i;:::-;-1:-1:-1;;;;;22799:12:3;;;;;;:8;:12;;;;;;;:39;;;;22848:32;;22857:10;;22848:32;;;;22873:6;1391:25:5;;1379:2;1364:18;;1245:177;13332:1569:3;13470:12;13488:15;13506:41;13513:5;13519:16;13537:6;13544:1;13537:9;;;;;;;;:::i;:::-;;;;;;;13506:6;:41::i;:::-;13488:59;;13569:1;13559:7;:11;13551:34;;;;-1:-1:-1;;;13551:34:3;;12716:2:5;13551:34:3;;;12698:21:5;12755:2;12735:18;;;12728:30;-1:-1:-1;;;12774:18:5;;;12767:40;12824:18;;13551:34:3;12514:334:5;13551:34:3;13615:17;;:21;;13635:1;13615:21;:::i;:::-;13598:6;:13;:38;13590:108;;;;-1:-1:-1;;;13590:108:3;;13055:2:5;13590:108:3;;;13037:21:5;13094:2;13074:18;;;13067:30;13133:34;13113:18;;;13106:62;13204:28;13184:18;;;13177:56;13250:19;;13590:108:3;12853:422:5;13590:108:3;13702:7;13715:344;13731:10;:17;13727:2;:21;13715:344;;;13784:4;:2;13787:1;13784:4;:::i;:::-;13780:9;;:1;:9;:::i;:::-;13766:10;;:24;;;;:::i;:::-;:29;13763:50;;13802:5;;13763:50;13851:4;-1:-1:-1;;;;;13825:31:3;:10;13836:2;13825:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13825:31:3;;;:68;;;;-1:-1:-1;13878:15:3;;13860:14;;-1:-1:-1;;;;;13878:15:3;;;;13860:10;;13871:2;;13860:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13860:33:3;;;13825:68;13817:107;;;;-1:-1:-1;;;13817:107:3;;13599:2:5;13817:107:3;;;13581:21:5;13638:2;13618:18;;;13611:30;13677:28;13657:18;;;13650:56;13723:18;;13817:107:3;13397:350:5;13817:107:3;13933:6;13940:4;:2;13943:1;13940:4;:::i;:::-;13933:11;;13929:126;13949:10;:17;13946:1;:20;13929:126;;;14003:10;14014:2;14003:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13986:31:3;:10;13997:1;13986:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13986:31:3;;;13978:71;;;;-1:-1:-1;;;13978:71:3;;13954:2:5;13978:71:3;;;13936:21:5;13993:2;13973:18;;;13966:30;14032:29;14012:18;;;14005:57;14079:18;;13978:71:3;13752:351:5;13978:71:3;13968:3;;;;:::i;:::-;;;;13929:126;;;-1:-1:-1;13750:4:3;;;;:::i;:::-;;;;13715:344;;;14065:17;14090:18;14120:6;14116:677;14132:2;14130:1;:4;14116:677;;;14422:3;:1;14424;14422:3;:::i;:::-;14418:8;;:1;:8;:::i;:::-;14404:10;;:23;;;;:::i;:::-;14401:382;;14459:10;14470:1;14459:13;;;;;;;;:::i;:::-;;;;;;;;;;;14452:46;;-1:-1:-1;;;14452:46:3;;14492:4;14452:46;;;3858:51:5;-1:-1:-1;;;;;14452:31:3;;;;;;3831:18:5;;14452:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14439:59;-1:-1:-1;14507:15:3;;14504:211;;14534:5;14538:1;14534;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;14548:6:3;;;14534:20;14530:179;;;14575:49;14607:16;14576:20;14589:7;14576:10;:20;:::i;:::-;14575:31;;:49::i;:::-;14563:61;;14530:179;;;14656:45;14683:16;14657:20;14670:7;14657:10;:20;:::i;14656:45::-;14644:57;;14530:179;14730:10;14741:1;14730:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14723:30:3;;14754:6;14761:1;14763;14761:3;;;;:::i;:::-;14754:11;;;;;;;;:::i;:::-;;;;;;;14767:9;14723:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;12177:32:5;;;;12159:51;;12241:2;12226:18;;12219:34;12147:2;12132:18;;11985:274;14723:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14401:382;14136:3;;;;:::i;:::-;;;;14116:677;;;-1:-1:-1;14832:10:3;;14844:15;;14811:63;;;14528:25:5;;;14584:2;14569:18;;14562:34;;;;14612:18;;14605:34;;;14670:2;14655:18;;14648:34;;;14820:10:3;;14811:63;;14515:3:5;14500:19;14811:63:3;;;;;;;-1:-1:-1;14886:7:3;;13332:1569;-1:-1:-1;;;;;;;13332:1569:3:o;10559:1001::-;10640:12;10673:7;;10655:15;:25;;;;:::i;:::-;10640:40;;10685:18;10719:9;;10706:10;;:22;;;;:::i;:::-;10685:43;-1:-1:-1;10749:20:3;10772:17;10685:43;10772:4;:17;:::i;:::-;10749:40;;10810:46;10845:9;;10842:1;:12;;;;:::i;10810:46::-;10794:13;:62;10860:9;10872:41;6110:7;10873:18;:12;10888:3;10873:18;:::i;10872:41::-;10860:53;-1:-1:-1;10917:13:3;10943:3;10933:7;10860:53;10937:3;10933:7;:::i;:::-;:13;;;;:::i;:::-;10917:29;;10950:17;10986:3;10978:5;:11;10975:137;;;11044:23;11063:3;11045:12;11056:1;11045:8;:12;:::i;11044:23::-;11007:34;11034:6;11020;11025:1;11020;:6;:::i;:::-;11008:20;;:8;:20;:::i;11007:34::-;:60;;;;:::i;:::-;10995:72;;10975:137;;;-1:-1:-1;11097:9:3;10975:137;11220:1;11194:24;;11182:9;;:36;;;;:::i;:::-;11172:47;;:6;:47;:::i;:::-;:49;;;;:::i;:::-;11127:15;;;11120:48;;-1:-1:-1;;;11120:48:3;;11162:4;11120:48;;;3858:51:5;;;;-1:-1:-1;;;;;11127:15:3;;11120:33;;3831:18:5;;11120:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:102;11117:367;;;11314:15;;11340;;11397:9;;11385;;-1:-1:-1;;;;;11314:15:3;;;;11307:32;;11340:15;;11357:69;;11412:13;;11397:9;11358:24;11373:9;11359:10;11358:24;:::i;:::-;:36;;;;:::i;:::-;:48;;;;:::i;11357:69::-;11307:120;;-1:-1:-1;;;;;;11307:120:3;;;;;;;-1:-1:-1;;;;;12177:32:5;;;11307:120:3;;;12159:51:5;12226:18;;;12219:34;12132:18;;11307:120:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11448:4:3;;11444:8;;:1;:8;:::i;:::-;11432:9;:20;11117:367;;;11478:1;11466:9;:13;11117:367;-1:-1:-1;;11499:10:3;;11487:9;:22;-1:-1:-1;;11541:15:3;11531:7;:25;-1:-1:-1;;10559:1001:3:o;11727:1601::-;11817:12;11836:14;11881:15;;11898:10;11910:5;11864:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11854:63;;;;;;11836:81;;11989:16;11979:6;:26;11971:85;;;;-1:-1:-1;;;11971:85:3;;;;;;;:::i;:::-;12134:12;;12116:30;;12108:83;;;;-1:-1:-1;;;12108:83:3;;;;;;;:::i;:::-;12195:22;:20;:22::i;:::-;12248:17;;12230:15;:35;12222:69;;;;-1:-1:-1;;;12222:69:3;;15994:2:5;12222:69:3;;;15976:21:5;16033:2;16013:18;;;16006:30;-1:-1:-1;;;16052:18:5;;;16045:51;16113:18;;12222:69:3;15792:345:5;12222:69:3;12349:9;6110:7;12381:17;;12363:15;:35;;;;:::i;:::-;12362:43;;12402:3;12362:43;:::i;:::-;12361:58;;;;:::i;:::-;12349:70;-1:-1:-1;12423:10:3;12446:3;12436:7;12349:70;12440:3;12436:7;:::i;:::-;:13;;;;:::i;:::-;12423:26;;12453:14;12486:3;12478:5;:11;12475:163;;;12545:23;12564:3;12546:12;12557:1;12546:8;:12;:::i;12545:23::-;12507:36;12534:8;12520:6;12525:1;12520;:6;:::i;12507:36::-;:61;;;;:::i;:::-;12495:73;;12475:163;;;12595:24;12615:3;12596:13;:1;12600:9;12596:13;:::i;12595:24::-;:38;;12623:9;12595:38;:::i;:::-;12583:50;;12475:163;12663:64;12684:42;12716:9;12701;12685:13;;:25;;;;:::i;12684:42::-;-1:-1:-1;;;;;12663:16:3;;;;;;:8;:16;;;;;;;:20;:64::i;:::-;-1:-1:-1;;;;;12644:16:3;;;;;;:8;:16;;;;;:83;12790:13;;12759:77;;12789:46;;12821:13;;12790:25;;12806:9;;12790:25;:::i;12789:46::-;12768:15;;-1:-1:-1;;;;;12768:15:3;12759:25;;;;:8;:25;;;;;;;:29;:77::i;:::-;12740:15;;-1:-1:-1;;;;;12740:15:3;12731:25;;;;:8;:25;;;;;:105;12878:13;;12860:60;;12877:42;;12909:9;;12878:25;;12894:9;;12878:25;:::i;12877:42::-;12860:12;;;:16;:60::i;:::-;12845:12;:75;12944:15;12924:17;:35;12967:9;;:13;12964:239;;12997:3;12989:5;:11;12986:213;;;13014:15;;13073:9;;13061;;-1:-1:-1;;;;;13014:15:3;;;;13007:32;;13040:6;;13048:50;;13088:9;;13049:21;;:9;:21;:::i;13048:50::-;13007:92;;-1:-1:-1;;;;;;13007:92:3;;;;;;;-1:-1:-1;;;;;12177:32:5;;;13007:92:3;;;12159:51:5;12226:18;;;12219:34;12132:18;;13007:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12986:213;;;13122:15;;13174:9;;13162;;-1:-1:-1;;;;;13122:15:3;;;;13115:32;;13148:6;;13156:36;;13189:2;;13157:14;;:2;:14;:::i;13156:36::-;13115:78;;-1:-1:-1;;;;;;13115:78:3;;;;;;;-1:-1:-1;;;;;12177:32:5;;;13115:78:3;;;12159:51:5;12226:18;;;12219:34;12132:18;;13115:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12986:213;13217:10;-1:-1:-1;;;;;13212:90:3;;13229:42;13261:9;13246;13230:13;;:25;;;;:::i;13229:42::-;13273:10;;13285:15;;13212:90;;;16344:25:5;;;16400:2;16385:18;;16378:34;;;;16428:18;;;16421:34;16332:2;16317:18;13212:90:3;;;;;;;13314:9;11727:1601;-1:-1:-1;;;;;;;11727:1601:3:o;15281:2201::-;15414:12;15432:14;15477:15;;15494:10;15506:5;15460:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15450:63;;;;;;15432:81;;15585:16;15575:6;:26;15567:85;;;;-1:-1:-1;;;15567:85:3;;;;;;;:::i;:::-;15730:12;;15712:30;;15704:83;;;;-1:-1:-1;;;15704:83:3;;;;;;;:::i;:::-;15791:22;:20;:22::i;:::-;15844:17;;15826:15;:35;15818:69;;;;-1:-1:-1;;;15818:69:3;;15994:2:5;15818:69:3;;;15976:21:5;16033:2;16013:18;;;16006:30;-1:-1:-1;;;16052:18:5;;;16045:51;16113:18;;15818:69:3;15792:345:5;15818:69:3;15916:10;:17;15899:6;:13;:34;15891:104;;;;-1:-1:-1;;;15891:104:3;;16668:2:5;15891:104:3;;;16650:21:5;16707:2;16687:18;;;16680:30;16746:34;16726:18;;;16719:62;16817:28;16797:18;;;16790:56;16863:19;;15891:104:3;16466:422:5;15891:104:3;15999:7;16012:344;16028:10;:17;16024:2;:21;16012:344;;;16081:4;:2;16084:1;16081:4;:::i;:::-;16077:9;;:1;:9;:::i;:::-;16063:10;;:24;;;;:::i;:::-;:29;16060:50;;16099:5;;16060:50;16148:4;-1:-1:-1;;;;;16122:31:3;:10;16133:2;16122:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16122:31:3;;;:68;;;;-1:-1:-1;16175:15:3;;16157:14;;-1:-1:-1;;;;;16175:15:3;;;;16157:10;;16168:2;;16157:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16157:33:3;;;16122:68;16114:107;;;;-1:-1:-1;;;16114:107:3;;13599:2:5;16114:107:3;;;13581:21:5;13638:2;13618:18;;;13611:30;13677:28;13657:18;;;13650:56;13723:18;;16114:107:3;13397:350:5;16114:107:3;16230:6;16237:4;:2;16240:1;16237:4;:::i;:::-;16230:11;;16226:126;16246:10;:17;16243:1;:20;16226:126;;;16300:10;16311:2;16300:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16283:31:3;:10;16294:1;16283:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16283:31:3;;;16275:71;;;;-1:-1:-1;;;16275:71:3;;13954:2:5;16275:71:3;;;13936:21:5;13993:2;13973:18;;;13966:30;14032:29;14012:18;;;14005:57;14079:18;;16275:71:3;13752:351:5;16275:71:3;16265:3;;;;:::i;:::-;;;;16226:126;;;-1:-1:-1;16047:4:3;;;;:::i;:::-;;;;16012:344;;;16360:9;6110:7;16392:17;;16374:15;:35;;;;:::i;:::-;16373:43;;16413:3;16373:43;:::i;:::-;16372:58;;;;:::i;:::-;16360:70;-1:-1:-1;16434:10:3;16457:3;16447:7;16360:70;16451:3;16447:7;:::i;:::-;:13;;;;:::i;:::-;16434:26;;16464:12;16495:3;16487:5;:11;16484:159;;;16552:23;16571:3;16553:12;16564:1;16553:8;:12;:::i;16552:23::-;16514:36;16541:8;16527:6;16532:1;16527;:6;:::i;16514:36::-;:61;;;;:::i;:::-;16504:71;;16484:159;;;16600:24;16620:3;16601:13;:1;16605:9;16601:13;:::i;16600:24::-;:38;;16628:9;16600:38;:::i;:::-;16590:48;;16484:159;16665:1;16655:7;:11;16647:34;;;;-1:-1:-1;;;16647:34:3;;12716:2:5;16647:34:3;;;12698:21:5;12755:2;12735:18;;;12728:30;-1:-1:-1;;;12774:18:5;;;12767:40;12824:18;;16647:34:3;12514:334:5;16647:34:3;16685:17;16706:18;16732:6;16728:690;16744:2;16742:1;:4;16728:690;;;17034:3;:1;17036;17034:3;:::i;:::-;17030:8;;:1;:8;:::i;:::-;17016:10;;:23;;;;:::i;:::-;17013:395;;17071:10;17082:1;17071:13;;;;;;;;:::i;:::-;;;;;;;;;;;17064:46;;-1:-1:-1;;;17064:46:3;;17104:4;17064:46;;;3858:51:5;-1:-1:-1;;;;;17064:31:3;;;;;;3831:18:5;;17064:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17051:59;-1:-1:-1;17119:15:3;;17116:278;;17146:5;17150:1;17146;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;17160:6:3;;;17146:20;17142:182;;;17187:49;17219:16;17188:20;17201:7;17188:10;:20;:::i;17187:49::-;17175:61;;17142:182;;;17268:45;17295:16;17269:20;17282:7;17269:10;:20;:::i;17268:45::-;17256:57;;17142:182;17339:10;17350:1;17339:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;17332:30:3;;17363:6;17370:1;17363:9;;;;;;;;:::i;:::-;;;;;;;17374;17332:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;12177:32:5;;;;12159:51;;12241:2;12226:18;;12219:34;12147:2;12132:18;;11985:274;17332:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17116:278;16748:3;;;;:::i;:::-;;;;16728:690;;;-1:-1:-1;;17442:15:3;17422:17;:35;-1:-1:-1;17468:7:3;15281:2201;-1:-1:-1;;;;;;;;;15281:2201:3:o;9365:1164::-;9451:12;9470:22;:20;:22::i;:::-;9550:9;6110:7;9582:17;;9564:15;:35;;;;:::i;:::-;9563:43;;9603:3;9563:43;:::i;:::-;9562:58;;;;:::i;:::-;9550:70;-1:-1:-1;9624:10:3;9647:3;9637:7;9550:70;9641:3;9637:7;:::i;:::-;:13;;;;:::i;:::-;9624:26;;9654:14;9687:3;9679:5;:11;9676:163;;;9746:23;9765:3;9747:12;9758:1;9747:8;:12;:::i;9746:23::-;9708:36;9735:8;9721:6;9726:1;9721;:6;:::i;9708:36::-;:61;;;;:::i;:::-;9696:73;;9676:163;;;9796:24;9816:3;9797:13;:1;9801:9;9797:13;:::i;9796:24::-;:38;;9824:9;9796:38;:::i;:::-;9784:50;;9676:163;9864:64;9885:42;9917:9;9902;9886:13;;:25;;;;:::i;9885:42::-;-1:-1:-1;;;;;9864:16:3;;;;;;:8;:16;;;;;;;:20;:64::i;:::-;-1:-1:-1;;;;;9845:16:3;;;;;;:8;:16;;;;;:83;9991:13;;9960:77;;9990:46;;10022:13;;9991:25;;10007:9;;9991:25;:::i;9960:77::-;9941:15;;-1:-1:-1;;;;;9941:15:3;9932:25;;;;:8;:25;;;;;:105;10079:13;;10061:60;;10078:42;;10110:9;;10079:25;;10095:9;;10079:25;:::i;10061:60::-;10046:12;:75;10145:15;10125:17;:35;10168:9;;:13;10165:239;;10198:3;10190:5;:11;10187:213;;;10215:15;;10274:9;;10262;;-1:-1:-1;;;;;10215:15:3;;;;10208:32;;10241:6;;10249:50;;10289:9;;10250:21;;:9;:21;:::i;10249:50::-;10208:92;;-1:-1:-1;;;;;;10208:92:3;;;;;;;-1:-1:-1;;;;;12177:32:5;;;10208:92:3;;;12159:51:5;12226:18;;;12219:34;12132:18;;10208:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10187:213;;;10323:15;;10375:9;;10363;;-1:-1:-1;;;;;10323:15:3;;;;10316:32;;10349:6;;10357:36;;10390:2;;10358:14;;:2;:14;:::i;10357:36::-;10316:78;;-1:-1:-1;;;;;;10316:78:3;;;;;;;-1:-1:-1;;;;;12177:32:5;;;10316:78:3;;;12159:51:5;12226:18;;;12219:34;12132:18;;10316:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10187:213;10418:10;-1:-1:-1;;;;;10413:90:3;;10430:42;10462:9;10447;10431:13;;:25;;;;:::i;10430:42::-;10474:10;;10486:15;;10413:90;;;16344:25:5;;;16400:2;16385:18;;16378:34;;;;16428:18;;;16421:34;16332:2;16317:18;10413:90:3;;;;;;;10515:9;9365:1164;-1:-1:-1;;;;;;9365:1164:3:o;4427:136::-;4485:7;4512:6;4504:30;;;;-1:-1:-1;;;4504:30:3;;17095:2:5;4504:30:3;;;17077:21:5;17134:2;17114:18;;;17107:30;-1:-1:-1;;;17153:18:5;;;17146:41;17204:18;;4504:30:3;16893:335:5;4504:30:3;4551:5;4555:1;4551;:5;:::i;:::-;4544:12;4427:136;-1:-1:-1;;;4427:136:3:o;4056:138::-;4114:7;4146:1;4141;:6;;4133:32;;;;-1:-1:-1;;;4133:32:3;;17435:2:5;4133:32:3;;;17417:21:5;17474:2;17454:18;;;17447:30;-1:-1:-1;;;17493:18:5;;;17486:43;17546:18;;4133:32:3;17233:337:5;4133:32:3;4182:5;4186:1;4182;:5;:::i;3890:160::-;3948:7;;3979:5;3983:1;3979;:5;:::i;:::-;3967:17;;4007:1;4002;:6;;3994:31;;;;-1:-1:-1;;;3994:31:3;;17777:2:5;3994:31:3;;;17759:21:5;17816:2;17796:18;;;17789:30;-1:-1:-1;;;17835:18:5;;;17828:42;17887:18;;3994:31:3;17575:336:5;17487:1365:3;17737:15;;17720:13;;17703:12;;:31;;:16;:31::i;:::-;:49;:67;;;;;17768:2;17756:9;;:14;17703:67;17699:185;;;17791:9;;:13;;17803:1;17791:13;:::i;:::-;17779:9;:25;;;17842:37;;17864:13;;17876:1;17864:13;:::i;:::-;17860:18;;:1;:18;:::i;:::-;17842:12;;;:16;:37::i;:::-;17827:12;;:52;;;;:::i;:::-;17809:15;:70;17699:185;18056:10;;:17;;18071:1;18056:14;:17::i;:::-;18043:10;:30;18167:24;;:28;;18194:1;;18167:28;:::i;:::-;18152:10;;18151:45;;;;:::i;:::-;18148:651;;18210:15;:13;:15::i;:::-;18263:37;18285:9;;18297:1;18285:13;;;;:::i;18263:37::-;18248:12;;:52;;;;:::i;:::-;18230:15;:70;18323:24;;18310:10;;:37;;18323:24;18310:37;:::i;:::-;18306:489;;18383:15;;;18376:48;;-1:-1:-1;;;18376:48:3;;18418:4;18376:48;;;3858:51:5;;;;18428:14:3;;-1:-1:-1;;;;;18383:15:3;;;;18376:33;;3831:18:5;;18376:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;:::-;18363:9;:81;;;18529:17;;:5;:17;:::i;:::-;18521:25;;:5;:25;:::i;:::-;18506:9;;18462:15;;;18455:48;;-1:-1:-1;;;18455:48:3;;18497:4;18455:48;;;3858:51:5;;;;-1:-1:-1;;;;;18462:15:3;;18455:33;;3831:18:5;;18455:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;;;:::i;:::-;18453:94;18450:313;;18650:9;;18631;;:16;;18645:1;18631:13;:16::i;:::-;:28;18628:82;;;18686:9;;:16;;18700:1;18686:13;:16::i;:::-;18674:9;:28;18628:82;18450:313;;;18739:9;;:17;;18754:1;18739:14;:17::i;:::-;18727:9;:29;18450:313;18768:21;:19;:21::i;:::-;18831:16;18846:1;18831:12;:16;:::i;:::-;18821:27;18803:15;:45;17487:1365::o;3342:131::-;3298:5;;-1:-1:-1;;;;;3298:5:3;3284:10;:19;3276:42;;;;-1:-1:-1;;;3276:42:3;;11095:2:5;3276:42:3;;;11077:21:5;11134:2;11114:18;;;11107:30;-1:-1:-1;;;11153:18:5;;;11146:40;11203:18;;3276:42:3;10893:334:5;3276:42:3;3428:5:::1;::::0;3410:32:::1;::::0;;-1:-1:-1;;;;;3428:5:3;;::::1;18128:34:5::0;;18198:15;;;18193:2;18178:18;;18171:43;3410:32:3::1;::::0;18063:18:5;3410:32:3::1;;;;;;;3452:5;:14:::0;;-1:-1:-1;;;;;;3452:14:3::1;-1:-1:-1::0;;;;;3452:14:3;;;::::1;::::0;;;::::1;::::0;;3342:131::o;4569:224::-;4632:7;4659:6;4651:30;;;;-1:-1:-1;;;4651:30:3;;17095:2:5;4651:30:3;;;17077:21:5;17134:2;17114:18;;;17107:30;-1:-1:-1;;;17153:18:5;;;17146:41;17204:18;;4651:30:3;16893:335:5;4651:30:3;4691:9;4703:5;4707:1;4703;:5;:::i;:::-;4691:17;-1:-1:-1;4722:5:3;4726:1;4722;:5;:::i;:::-;:10;4718:50;;4752:5;:1;4756;4752:5;:::i;:::-;4748:9;4569:224;-1:-1:-1;;;;4569:224:3:o;4200:221::-;4259:7;4282:6;4278:45;;-1:-1:-1;4311:1:3;4304:8;;4278:45;4333:9;4345:5;4349:1;4345;:5;:::i;:::-;4333:17;-1:-1:-1;4377:1:3;4368:5;4372:1;4333:17;4368:5;:::i;:::-;:10;4360:36;;;;-1:-1:-1;;;4360:36:3;;18427:2:5;4360:36:3;;;18409:21:5;18466:2;18446:18;;;18439:30;-1:-1:-1;;;18485:18:5;;;18478:43;18538:18;;4360:36:3;18225:337:5;18856:1379:3;18995:30;;18923:15;;18900:20;;18980:45;;18923:15;18980:45;:::i;:::-;18942:83;;19030:24;19071;;6110:7;19057:38;;;;:::i;:::-;19030:65;;19231:19;19198:30;:52;19194:748;;;19260:21;19284:69;19321:30;19285:29;:19;19310:3;19285:24;:29::i;19284:69::-;19365:1;19358:4;:8;19260:93;-1:-1:-1;19371:27:3;19401:45;19441:4;19401:25;19260:93;19422:3;19401:20;:25::i;:::-;:39;;:45::i;:::-;19371:75;;19487:69;19504:51;19532:22;19504;19521:4;19504:12;;:16;;:22;;;;:::i;:::-;:27;;:51::i;:::-;19487:12;;;:16;:69::i;:::-;19472:12;:84;-1:-1:-1;19194:748:3;;-1:-1:-1;19194:748:3;;19588:23;19614:69;19662:19;19615:40;:30;19651:3;19615:35;:40::i;19614:69::-;19695:1;19688:4;:8;19588:95;-1:-1:-1;19701:29:3;19733:47;19775:4;19733:27;19588:95;19756:3;19733:22;:27::i;:47::-;19701:79;;19848:70;19865:52;19892:24;19865:21;19882:3;19865:12;;:16;;:21;;;;:::i;:52::-;19848:12;;;:16;:70::i;:::-;19833:12;:85;-1:-1:-1;;19194:748:3;19946:30;:45;;;20027:12;19995:29;:44;20061:15;;20046:12;;:30;20043:94;;;20117:15;;20102:12;:30;20043:94;20158:15;;20143:12;;:30;20140:89;;;20209:15;;20194:12;:30;20140:89;18896:1339;;;18856:1379::o;4914:126::-;4976:6;5002:1;4998;:5;4995:18;;;-1:-1:-1;5012:1:3;5005:8;;4995:18;-1:-1:-1;5031:1:3;;4914:126;-1:-1:-1;4914:126:3:o;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:248::-;1495:6;1503;1556:2;1544:9;1535:7;1531:23;1527:32;1524:52;;;1572:1;1569;1562:12;1524:52;-1:-1:-1;;1595:23:5;;;1665:2;1650:18;;;1637:32;;-1:-1:-1;1427:248:5:o;1680:127::-;1741:10;1736:3;1732:20;1729:1;1722:31;1772:4;1769:1;1762:15;1796:4;1793:1;1786:15;1812:275;1883:2;1877:9;1948:2;1929:13;;-1:-1:-1;;1925:27:5;1913:40;;1983:18;1968:34;;2004:22;;;1965:62;1962:88;;;2030:18;;:::i;:::-;2066:2;2059:22;1812:275;;-1:-1:-1;1812:275:5:o;2092:718::-;2146:5;2199:3;2192:4;2184:6;2180:17;2176:27;2166:55;;2217:1;2214;2207:12;2166:55;2253:6;2240:20;2279:4;2302:18;2298:2;2295:26;2292:52;;;2324:18;;:::i;:::-;2370:2;2367:1;2363:10;2393:28;2417:2;2413;2409:11;2393:28;:::i;:::-;2455:15;;;2525;;;2521:24;;;2486:12;;;;2557:15;;;2554:35;;;2585:1;2582;2575:12;2554:35;2621:2;2613:6;2609:15;2598:26;;2633:148;2649:6;2644:3;2641:15;2633:148;;;2715:23;2734:3;2715:23;:::i;:::-;2703:36;;2666:12;;;;2759;;;;2633:148;;;2799:5;2092:718;-1:-1:-1;;;;;;;2092:718:5:o;2815:559::-;2926:6;2934;2942;2950;3003:3;2991:9;2982:7;2978:23;2974:33;2971:53;;;3020:1;3017;3010:12;2971:53;3056:9;3043:23;3033:33;;3113:2;3102:9;3098:18;3085:32;3075:42;;3168:2;3157:9;3153:18;3140:32;3195:18;3187:6;3184:30;3181:50;;;3227:1;3224;3217:12;3181:50;3250:61;3303:7;3294:6;3283:9;3279:22;3250:61;:::i;:::-;3240:71;;;3330:38;3364:2;3353:9;3349:18;3330:38;:::i;:::-;3320:48;;2815:559;;;;;;;:::o;3379:328::-;3456:6;3464;3472;3525:2;3513:9;3504:7;3500:23;3496:32;3493:52;;;3541:1;3538;3531:12;3493:52;3564:29;3583:9;3564:29;:::i;:::-;3554:39;;3612:38;3646:2;3635:9;3631:18;3612:38;:::i;:::-;3602:48;;3697:2;3686:9;3682:18;3669:32;3659:42;;3379:328;;;;;:::o;4291:334::-;4368:6;4376;4384;4437:2;4425:9;4416:7;4412:23;4408:32;4405:52;;;4453:1;4450;4443:12;4405:52;4476:29;4495:9;4476:29;:::i;:::-;4466:39;;4524:38;4558:2;4547:9;4543:18;4524:38;:::i;:::-;4514:48;;4581:38;4615:2;4604:9;4600:18;4581:38;:::i;:::-;4571:48;;4291:334;;;;;:::o;4630:186::-;4689:6;4742:2;4730:9;4721:7;4717:23;4713:32;4710:52;;;4758:1;4755;4748:12;4710:52;4781:29;4800:9;4781:29;:::i;4821:385::-;4907:6;4915;4923;4931;4984:3;4972:9;4963:7;4959:23;4955:33;4952:53;;;5001:1;4998;4991:12;4952:53;-1:-1:-1;;5024:23:5;;;5094:2;5079:18;;5066:32;;-1:-1:-1;5145:2:5;5130:18;;5117:32;;5196:2;5181:18;5168:32;;-1:-1:-1;4821:385:5;-1:-1:-1;4821:385:5:o;5211:980::-;5306:6;5314;5322;5330;5383:3;5371:9;5362:7;5358:23;5354:33;5351:53;;;5400:1;5397;5390:12;5351:53;5423:29;5442:9;5423:29;:::i;:::-;5413:39;;5471:2;5520;5509:9;5505:18;5492:32;5482:42;;5543:38;5577:2;5566:9;5562:18;5543:38;:::i;:::-;5533:48;;5632:2;5621:9;5617:18;5604:32;5655:18;5696:2;5688:6;5685:14;5682:34;;;5712:1;5709;5702:12;5682:34;5750:6;5739:9;5735:22;5725:32;;5795:7;5788:4;5784:2;5780:13;5776:27;5766:55;;5817:1;5814;5807:12;5766:55;5853:2;5840:16;5875:2;5871;5868:10;5865:36;;;5881:18;;:::i;:::-;5923:53;5966:2;5947:13;;-1:-1:-1;;5943:27:5;5939:36;;5923:53;:::i;:::-;5910:66;;5999:2;5992:5;5985:17;6039:7;6034:2;6029;6025;6021:11;6017:20;6014:33;6011:53;;;6060:1;6057;6050:12;6011:53;6115:2;6110;6106;6102:11;6097:2;6090:5;6086:14;6073:45;6159:1;6154:2;6149;6142:5;6138:14;6134:23;6127:34;;6180:5;6170:15;;;;;5211:980;;;;;;;:::o;6196:316::-;6273:6;6281;6289;6342:2;6330:9;6321:7;6317:23;6313:32;6310:52;;;6358:1;6355;6348:12;6310:52;-1:-1:-1;;6381:23:5;;;6451:2;6436:18;;6423:32;;-1:-1:-1;6502:2:5;6487:18;;;6474:32;;6196:316;-1:-1:-1;6196:316:5:o;6517:732::-;6653:6;6661;6669;6677;6730:3;6718:9;6709:7;6705:23;6701:33;6698:53;;;6747:1;6744;6737:12;6698:53;6783:9;6770:23;6760:33;;6840:2;6829:9;6825:18;6812:32;6802:42;;6895:2;6884:9;6880:18;6867:32;6918:18;6959:2;6951:6;6948:14;6945:34;;;6975:1;6972;6965:12;6945:34;6998:61;7051:7;7042:6;7031:9;7027:22;6998:61;:::i;:::-;6988:71;;7112:2;7101:9;7097:18;7084:32;7068:48;;7141:2;7131:8;7128:16;7125:36;;;7157:1;7154;7147:12;7125:36;;7180:63;7235:7;7224:8;7213:9;7209:24;7180:63;:::i;:::-;7170:73;;;6517:732;;;;;;;:::o;7254:260::-;7322:6;7330;7383:2;7371:9;7362:7;7358:23;7354:32;7351:52;;;7399:1;7396;7389:12;7351:52;7422:29;7441:9;7422:29;:::i;:::-;7412:39;;7470:38;7504:2;7493:9;7489:18;7470:38;:::i;:::-;7460:48;;7254:260;;;;;:::o;7519:322::-;7596:6;7604;7612;7665:2;7653:9;7644:7;7640:23;7636:32;7633:52;;;7681:1;7678;7671:12;7633:52;7717:9;7704:23;7694:33;;7774:2;7763:9;7759:18;7746:32;7736:42;;7797:38;7831:2;7820:9;7816:18;7797:38;:::i;7846:118::-;7932:5;7925:13;7918:21;7911:5;7908:32;7898:60;;7954:1;7951;7944:12;7898:60;7846:118;:::o;7969:450::-;8040:6;8048;8056;8109:2;8097:9;8088:7;8084:23;8080:32;8077:52;;;8125:1;8122;8115:12;8077:52;8164:9;8151:23;8183:28;8205:5;8183:28;:::i;:::-;8230:5;-1:-1:-1;8287:2:5;8272:18;;8259:32;8300:30;8259:32;8300:30;:::i;8424:380::-;8503:1;8499:12;;;;8546;;;8567:61;;8621:4;8613:6;8609:17;8599:27;;8567:61;8674:2;8666:6;8663:14;8643:18;8640:38;8637:161;;;8720:10;8715:3;8711:20;8708:1;8701:31;8755:4;8752:1;8745:15;8783:4;8780:1;8773:15;8637:161;;8424:380;;;:::o;8809:127::-;8870:10;8865:3;8861:20;8858:1;8851:31;8901:4;8898:1;8891:15;8925:4;8922:1;8915:15;8941:128;8981:3;9012:1;9008:6;9005:1;9002:13;8999:39;;;9018:18;;:::i;:::-;-1:-1:-1;9054:9:5;;8941:128::o;9074:127::-;9135:10;9130:3;9126:20;9123:1;9116:31;9166:4;9163:1;9156:15;9190:4;9187:1;9180:15;9206:135;9245:3;-1:-1:-1;;9266:17:5;;9263:43;;;9286:18;;:::i;:::-;-1:-1:-1;9333:1:5;9322:13;;9206:135::o;9346:422::-;9435:1;9478:5;9435:1;9492:270;9513:7;9503:8;9500:21;9492:270;;;9572:4;9568:1;9564:6;9560:17;9554:4;9551:27;9548:53;;;9581:18;;:::i;:::-;9631:7;9621:8;9617:22;9614:55;;;9651:16;;;;9614:55;9730:22;;;;9690:15;;;;9492:270;;;9496:3;9346:422;;;;;:::o;9773:806::-;9822:5;9852:8;9842:80;;-1:-1:-1;9893:1:5;9907:5;;9842:80;9941:4;9931:76;;-1:-1:-1;9978:1:5;9992:5;;9931:76;10023:4;10041:1;10036:59;;;;10109:1;10104:130;;;;10016:218;;10036:59;10066:1;10057:10;;10080:5;;;10104:130;10141:3;10131:8;10128:17;10125:43;;;10148:18;;:::i;:::-;-1:-1:-1;;10204:1:5;10190:16;;10219:5;;10016:218;;10318:2;10308:8;10305:16;10299:3;10293:4;10290:13;10286:36;10280:2;10270:8;10267:16;10262:2;10256:4;10253:12;10249:35;10246:77;10243:159;;;-1:-1:-1;10355:19:5;;;10387:5;;10243:159;10434:34;10459:8;10453:4;10434:34;:::i;:::-;10504:6;10500:1;10496:6;10492:19;10483:7;10480:32;10477:58;;;10515:18;;:::i;:::-;10553:20;;9773:806;-1:-1:-1;;;9773:806:5:o;10584:131::-;10644:5;10673:36;10700:8;10694:4;10673:36;:::i;10720:168::-;10760:7;10826:1;10822;10818:6;10814:14;10811:1;10808:21;10803:1;10796:9;10789:17;10785:45;10782:71;;;10833:18;;:::i;:::-;-1:-1:-1;10873:9:5;;10720:168::o;11232:127::-;11293:10;11288:3;11284:20;11281:1;11274:31;11324:4;11321:1;11314:15;11348:4;11345:1;11338:15;11364:127;11425:10;11420:3;11416:20;11413:1;11406:31;11456:4;11453:1;11446:15;11480:4;11477:1;11470:15;11496:120;11536:1;11562;11552:35;;11567:18;;:::i;:::-;-1:-1:-1;11601:9:5;;11496:120::o;11621:359::-;11806:19;;;11863:2;11859:15;;;;-1:-1:-1;;11855:53:5;11850:2;11841:12;;11834:75;11934:2;11925:12;;11918:28;11971:2;11962:12;;11621:359::o;12264:245::-;12331:6;12384:2;12372:9;12363:7;12359:23;12355:32;12352:52;;;12400:1;12397;12390:12;12352:52;12432:9;12426:16;12451:28;12473:5;12451:28;:::i;13280:112::-;13312:1;13338;13328:35;;13343:18;;:::i;:::-;-1:-1:-1;13377:9:5;;13280:112::o;14108:184::-;14178:6;14231:2;14219:9;14210:7;14206:23;14202:32;14199:52;;;14247:1;14244;14237:12;14199:52;-1:-1:-1;14270:16:5;;14108:184;-1:-1:-1;14108:184:5:o;14693:125::-;14733:4;14761:1;14758;14755:8;14752:34;;;14766:18;;:::i;:::-;-1:-1:-1;14803:9:5;;14693:125::o;14823:140::-;14881:5;14910:47;14951:4;14941:8;14937:19;14931:4;14910:47;:::i;14968:410::-;15170:2;15152:21;;;15209:2;15189:18;;;15182:30;15248:34;15243:2;15228:18;;15221:62;-1:-1:-1;;;15314:2:5;15299:18;;15292:44;15368:3;15353:19;;14968:410::o;15383:404::-;15585:2;15567:21;;;15624:2;15604:18;;;15597:30;15663:34;15658:2;15643:18;;15636:62;-1:-1:-1;;;15729:2:5;15714:18;;15707:38;15777:3;15762:19;;15383:404::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    6011,
    25528
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x281 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x829965CC GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDC6E9CF9 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x732 JUMPI DUP1 PUSH4 0xDDFBD8DD EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0xE932012B EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xF7A5F155 EQ PUSH2 0x7AE JUMPI DUP1 PUSH4 0xF8BF8DF5 EQ PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xC0ABEBE0 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xC8A1465C EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xD0856D16 EQ PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F4FFCB1 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0x94B939EF EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x99F584B3 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xA68EB88E EQ PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x829965CC EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x510DE094 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x510DE094 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x64E46726 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x757991A8 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x45D8A232 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x1FCCB33C EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x2381A60E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x2F104E0C EQ PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x10294317 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x8E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x291E JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xB40 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xADC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D0 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2AAB JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B09 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D0 PUSH2 0x5E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3E6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x466765 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFB JUMP JUMPDEST PUSH2 0xD5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x6EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D0 PUSH2 0x1324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x793 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD1 JUMP JUMPDEST PUSH2 0x1577 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x7C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C27 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x7E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0E JUMP JUMPDEST PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH2 0x7FB SWAP1 PUSH2 0x2D3E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x827 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x874 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x849 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x874 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x857 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x8D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH2 0x2287 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP4 DUP4 CALLER PUSH2 0x1577 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x1 PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x944 JUMPI PUSH2 0x944 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x96D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD PUSH2 0x980 SWAP1 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x9C4 JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x99A JUMPI PUSH2 0x99A PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x9BC DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x973 JUMP JUMPDEST POP PUSH2 0x9D1 DUP7 DUP7 DUP7 DUP5 PUSH2 0xE2D JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA01 SWAP1 DUP4 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x19 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0xA38 SWAP1 DUP4 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xA76 SWAP1 DUP4 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xACA SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH1 0xE SLOAD PUSH1 0x2 PUSH2 0xAF0 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0xAFC PUSH1 0x12 PUSH1 0xA PUSH2 0x2EBC JUMP JUMPDEST PUSH2 0xB07 SWAP1 PUSH1 0x64 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH11 0x115EEC47F6CF7E35000000 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB79 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0xE SLOAD PUSH2 0xB9C SWAP1 PUSH2 0xAF0 SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0xB SLOAD PUSH2 0xBBC SWAP1 PUSH1 0x1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0xC SSTORE TIMESTAMP PUSH1 0x7 SSTORE PUSH2 0xBCB PUSH2 0x236F JUMP JUMPDEST PUSH2 0xBD6 PUSH1 0x2 DUP3 PUSH2 0x2F13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0xC1F PUSH1 0x2 DUP6 PUSH2 0x2F13 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x11 SSTORE PUSH2 0xC7D PUSH1 0x0 PUSH2 0x25C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 SHR GT ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0xCE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD54 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD75 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xDB0 SWAP1 DUP4 PUSH2 0x22D5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDDC SWAP1 DUP4 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE55 DUP7 DUP7 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE48 JUMPI PUSH2 0xE48 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1577 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xE94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST DUP4 MLOAD PUSH2 0xEA1 SWAP1 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST DUP4 MLOAD EQ PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74546F2068617320746F206861766520616E2065787472612061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65737320636F6D706172656420746F20457874726146756E6473000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10DA JUMPI PUSH2 0xF2D DUP2 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0xF38 SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST ISZERO PUSH2 0xF4F JUMPI PUSH2 0x10DA JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF6B JUMPI PUSH2 0xF6B PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xFBC JUMPI POP PUSH1 0x4 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xFA8 JUMPI PUSH2 0xFA8 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1015 DUP3 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x10C7 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1033 JUMPI PUSH2 0x1033 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1056 JUMPI PUSH2 0x1056 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST DUP1 PUSH2 0x10BF DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1018 JUMP JUMPDEST POP DUP1 PUSH2 0x10D2 DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x10F3 DUP2 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x10FE SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x12B4 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x11EF JUMPI PUSH2 0x11A8 PUSH1 0x3 DUP3 PUSH2 0x2F6C JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x11B4 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11D9 JUMPI PUSH2 0x11D2 PUSH5 0x3A35294400 PUSH2 0x11CC DUP8 DUP6 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 PUSH2 0x2670 JUMP JUMPDEST SWAP3 POP PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x11EC PUSH5 0x3A35294400 PUSH2 0xB07 DUP8 DUP6 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1201 JUMPI PUSH2 0x1201 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP4 PUSH1 0x1 PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1235 JUMPI PUSH2 0x1235 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B2 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x12BE DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x87E5A7775B8AC2EAD741E32752431BFFEFF76EC5F347CC202A6BAD454653930B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1D SLOAD TIMESTAMP PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1348 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1356 DUP3 DUP5 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH2 0x136A PUSH1 0xE SLOAD PUSH1 0x2 PUSH2 0xAF0 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x0 PUSH2 0x1381 PUSH2 0xB40 PUSH2 0x11CC DUP5 PUSH2 0x378 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1393 DUP4 PUSH1 0x64 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13BE PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x26F7F3C PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x13DE PUSH3 0xC0840 PUSH2 0x13D0 PUSH1 0x2 DUP8 PUSH2 0x2FB0 JUMP JUMPDEST PUSH2 0xB07 SWAP1 PUSH4 0x3A2CDF0 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x13E8 SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP PUSH2 0x13F6 JUMP JUMPDEST POP PUSH4 0x1443FD00 JUMPDEST PUSH1 0x4 PUSH1 0x9 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1413 SWAP1 PUSH1 0x3C PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x141D SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148A SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST GT ISZERO PUSH2 0x155F JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH2 0x14D9 SWAP2 PUSH4 0xBEBC200 SWAP2 SWAP1 PUSH2 0x14C5 DUP9 DUP14 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1524 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x1557 SWAP1 PUSH1 0x1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x1A SSTORE PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1A SSTORE JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x11 SSTORE POP POP TIMESTAMP PUSH1 0x1D SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1591 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 EQ PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x15F1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT PUSH2 0x163A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2073616D65207365636F6E6420736F6C766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x12 SLOAD TIMESTAMP PUSH2 0x164D SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x1659 SWAP1 PUSH2 0x378 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1675 DUP4 PUSH1 0x64 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x167F SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x16C4 JUMPI PUSH2 0x16A1 PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x26F7F3C PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x16B3 PUSH3 0xC0840 PUSH2 0x13D0 PUSH1 0x2 DUP8 PUSH2 0x2FB0 JUMP JUMPDEST PUSH2 0x16BD SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x16D8 PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x5F5E100 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x16E6 SWAP1 PUSH4 0x14DC9380 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1721 PUSH2 0x1702 PUSH4 0x5F5E100 DUP4 PUSH1 0x10 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x1777 SWAP1 PUSH2 0x1756 SWAP1 PUSH4 0xBEBC200 SWAP1 PUSH2 0xB07 SWAP1 DUP6 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x17B7 SWAP1 PUSH2 0x17AE SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0xB07 SWAP1 DUP6 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x17 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0x1A SLOAD ISZERO PUSH2 0x1915 JUMPI PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x1875 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x1800 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0x14CF SWAP1 DUP9 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x184B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x18A4 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x14CF SWAP1 PUSH1 0x22 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D PUSH2 0x1956 PUSH4 0x5F5E100 DUP5 PUSH1 0x10 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x199F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 DUP2 EQ PUSH2 0x19D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT PUSH2 0x19F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x19FF PUSH2 0x236F JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2073616D65207365636F6E6420736F6C766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST DUP4 MLOAD DUP4 MLOAD EQ PUSH2 0x1ABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74546F2068617320746F20686176652073616D65206E756D626572206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66206164647265737373657320617320457874726146756E6473000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1AD6 DUP2 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x1AE1 SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AEE SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST ISZERO PUSH2 0x1AF8 JUMPI PUSH2 0x1C83 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B14 JUMPI PUSH2 0x1B14 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B65 JUMPI POP PUSH1 0x4 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1B51 JUMPI PUSH2 0x1B51 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BBE DUP3 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1C70 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BDC JUMPI PUSH2 0x1BDC PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BFF JUMPI PUSH2 0x1BFF PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST DUP1 PUSH2 0x1C68 DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BC1 JUMP JUMPDEST POP DUP1 PUSH2 0x1C7B DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x12 SLOAD TIMESTAMP PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x1CA2 SWAP1 PUSH2 0x378 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1CAC SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1CBE DUP4 PUSH1 0x64 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1CC8 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1CEA PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x26F7F3C PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1CFC PUSH3 0xC0840 PUSH2 0x13D0 PUSH1 0x2 DUP8 PUSH2 0x2FB0 JUMP JUMPDEST PUSH2 0x1D06 SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x1D21 PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x5F5E100 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1D2F SWAP1 PUSH4 0x14DC9380 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1F49 JUMPI PUSH2 0x1D88 DUP2 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x1D93 SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1DA0 SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x1F37 JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1DB6 JUMPI PUSH2 0x1DB6 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E2A SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x1F37 JUMPI PUSH2 0x1E3D PUSH1 0x3 DUP3 PUSH2 0x2F6C JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1E49 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1E68 JUMPI PUSH2 0x1E61 PUSH5 0x3A35294400 PUSH2 0x11CC DUP7 DUP6 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E7E JUMP JUMPDEST PUSH2 0x1E7B PUSH5 0x3A35294400 PUSH2 0xB07 DUP7 DUP6 PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E90 JUMPI PUSH2 0x1E90 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP12 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EB8 JUMPI PUSH2 0x1EB8 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F35 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1F41 DUP2 PUSH2 0x2DBD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D75 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x12 SSTORE POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F67 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x12 SLOAD TIMESTAMP PUSH2 0x1F7A SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x1F86 SWAP1 PUSH2 0x378 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1F90 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1FA2 DUP4 PUSH1 0x64 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1FAC SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x1FF1 JUMPI PUSH2 0x1FCE PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x26F7F3C PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1FE0 PUSH3 0xC0840 PUSH2 0x13D0 PUSH1 0x2 DUP8 PUSH2 0x2FB0 JUMP JUMPDEST PUSH2 0x1FEA SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x2005 PUSH2 0x378 PUSH2 0xB07 DUP6 PUSH4 0x5F5E100 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x2013 SWAP1 PUSH4 0x14DC9380 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x204E PUSH2 0x202F PUSH4 0x5F5E100 DUP4 PUSH1 0x10 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x2083 SWAP1 PUSH2 0x1756 SWAP1 PUSH4 0xBEBC200 SWAP1 PUSH2 0xB07 SWAP1 DUP6 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x20BA SWAP1 PUSH2 0x17AE SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0xB07 SWAP1 DUP6 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x17 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0x1A SLOAD ISZERO PUSH2 0x2218 JUMPI PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x2178 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP9 SWAP2 PUSH2 0x2103 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0x14CF SWAP1 DUP9 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x214E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2172 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP9 SWAP2 PUSH2 0x21A7 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x14CF SWAP1 PUSH1 0x22 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2216 SWAP2 SWAP1 PUSH2 0x2F4F JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D PUSH2 0x2259 PUSH4 0x5F5E100 DUP5 PUSH1 0x10 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x22C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x22CE DUP3 DUP5 PUSH2 0x2F13 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x53756220756E646572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x22CE DUP3 DUP5 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x232E DUP4 DUP6 PUSH2 0x2D8F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x22CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x416464206F766572666C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x17 SLOAD PUSH2 0x2381 SWAP2 PUSH2 0x2321 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2390 JUMPI POP PUSH1 0x3C PUSH1 0xE SLOAD LT JUMPDEST ISZERO PUSH2 0x23DC JUMPI PUSH1 0xE SLOAD PUSH2 0x23A3 SWAP1 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH2 0x23CB SWAP1 PUSH2 0x23B7 SWAP1 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x23C2 SWAP1 PUSH1 0x2 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x23D8 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0xF SSTORE JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x23EA SWAP1 PUSH1 0x1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x23FC SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2409 SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x25AF JUMPI PUSH2 0x2415 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x2427 PUSH1 0xE SLOAD PUSH1 0x1 PUSH2 0x23B7 SWAP2 SWAP1 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2434 SWAP2 SWAP1 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2447 SWAP2 SWAP1 PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x25AF JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH5 0x2E90EDD000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24C1 SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0x24CB SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x24DC SWAP1 PUSH2 0x2710 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x24E8 SWAP1 PUSH2 0x2710 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2534 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2558 SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0x2562 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST GT PUSH2 0x2595 JUMPI PUSH1 0x16 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2578 SWAP1 PUSH1 0x2 PUSH2 0x2287 JUMP JUMPDEST GT ISZERO PUSH2 0x2590 JUMPI PUSH1 0x15 SLOAD PUSH2 0x258C SWAP1 PUSH1 0x2 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST PUSH2 0x25A7 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x25A3 SWAP1 PUSH1 0x3 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST PUSH2 0x25AF PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x25BA PUSH1 0x1 NUMBER PUSH2 0x2F99 JUMP JUMPDEST BLOCKHASH PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x26AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B9 DUP4 DUP6 PUSH2 0x2F13 JUMP JUMPDEST SWAP1 POP PUSH2 0x26C5 DUP4 DUP6 PUSH2 0x2F6C JUMP JUMPDEST ISZERO PUSH2 0x22CE JUMPI PUSH2 0x26D5 DUP2 PUSH1 0x1 PUSH2 0x2D8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x26EC JUMPI POP PUSH1 0x0 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F8 DUP4 DUP6 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2705 DUP6 DUP4 PUSH2 0x2F13 JUMP JUMPDEST EQ PUSH2 0x22CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D756C74206F766572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2754 SWAP1 DUP4 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0xB40 PUSH2 0x2768 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x27DD JUMPI PUSH1 0x0 PUSH2 0x2783 DUP4 PUSH2 0xB07 DUP5 PUSH1 0x64 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1B SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x27A3 PUSH2 0x3E8 PUSH2 0x279D DUP5 PUSH1 0x64 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP PUSH2 0x27D2 PUSH2 0x27C9 DUP3 PUSH2 0x27C3 PUSH2 0x7D0 PUSH1 0xC SLOAD PUSH2 0x2287 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0xC SSTORE POP PUSH2 0x2837 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EE DUP3 PUSH2 0xB07 DUP6 PUSH1 0x64 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1B SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2808 PUSH2 0x3E8 PUSH2 0x279D DUP5 PUSH1 0x64 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2831 PUSH2 0x2828 DUP3 PUSH2 0x27C3 PUSH2 0x1F4 PUSH1 0xC SLOAD PUSH2 0x2287 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0xC SSTORE POP POP JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE NUMBER PUSH1 0x1E SSTORE PUSH1 0xA SLOAD PUSH1 0xC SLOAD LT ISZERO PUSH2 0x2853 JUMPI PUSH1 0xA SLOAD PUSH1 0xC SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD GT ISZERO PUSH2 0x2866 JUMPI PUSH1 0xB SLOAD PUSH1 0xC SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x287C JUMPI POP DUP1 PUSH2 0x8E3 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28B0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2894 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x28C2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2910 DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x297F JUMPI PUSH2 0x297F PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29B4 JUMPI PUSH2 0x29B4 PUSH2 0x2940 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x29C3 DUP3 DUP3 ADD PUSH2 0x2956 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x29DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x2A03 JUMPI PUSH2 0x29F4 DUP4 PUSH2 0x28D8 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x29E3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A55 DUP8 DUP3 DUP9 ADD PUSH2 0x2987 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2A64 PUSH1 0x60 DUP7 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A8D DUP5 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2A9B PUSH1 0x20 DUP6 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AC9 DUP5 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP PUSH2 0x2AD7 PUSH1 0x20 DUP6 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE5 PUSH1 0x40 DUP6 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22CE DUP3 PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5A DUP6 PUSH2 0x28D8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP1 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2B70 PUSH1 0x40 DUP8 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2B8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2BB3 JUMPI PUSH2 0x2BB3 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0x2BC5 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x2956 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6F DUP9 DUP4 DUP10 ADD PUSH2 0x2987 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C92 DUP8 DUP3 DUP9 ADD PUSH2 0x2987 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CBA DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC8 PUSH1 0x20 DUP5 ADD PUSH2 0x28D8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2AE5 PUSH1 0x40 DUP6 ADD PUSH2 0x28D8 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2D2E DUP2 PUSH2 0x2CFD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2AD7 DUP2 PUSH2 0x2CFD JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2DA2 JUMPI PUSH2 0x2DA2 PUSH2 0x2D79 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2DD1 JUMPI PUSH2 0x2DD1 PUSH2 0x2D79 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2E13 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2DF9 JUMPI PUSH2 0x2DF9 PUSH2 0x2D79 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2E06 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2DDD JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E2A JUMPI POP PUSH1 0x1 PUSH2 0x8E3 JUMP JUMPDEST DUP2 PUSH2 0x2E37 JUMPI POP PUSH1 0x0 PUSH2 0x8E3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2E4D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2E57 JUMPI PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E68 JUMPI PUSH2 0x2E68 PUSH2 0x2D79 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8E3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E96 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x2EA0 DUP4 DUP4 PUSH2 0x2DD8 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2EB4 JUMPI PUSH2 0x2EB4 PUSH2 0x2D79 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE DUP4 DUP4 PUSH2 0x2E1B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2EE2 JUMPI PUSH2 0x2EE2 PUSH2 0x2D79 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F22 JUMPI PUSH2 0x2F22 PUSH2 0x2EFD JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22CE DUP2 PUSH2 0x2CFD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F7B JUMPI PUSH2 0x2F7B PUSH2 0x2EFD JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2FAB JUMPI PUSH2 0x2FAB PUSH2 0x2D79 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2E1B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x185B1B195B99D957D91A59D95CDD PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x1B99D5185C99D95D PUSH1 0xC2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xD8 PUSH1 0xB2 0x26 0x2A CREATE PUSH7 0x4C789208C04C55 0x4C COINBASE PUSH23 0x6B5E8DD205A140F970C8BD6348A164736F6C634300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281"
    },
    "12": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x829965CC"
    },
    "25": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "36": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDC6E9CF9"
    },
    "47": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDC6E9CF9"
    },
    "58": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71C"
    },
    "62": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "69": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "73": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDDFBD8DD"
    },
    "80": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x778"
    },
    "84": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE932012B"
    },
    "91": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x798"
    },
    "95": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF7A5F155"
    },
    "102": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AE"
    },
    "106": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "107": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF8BF8DF5"
    },
    "113": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CE"
    },
    "117": {
      "fn": null,
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "118": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x0"
    },
    "120": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "121": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "122": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "123": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "129": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x686"
    },
    "133": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB5ADE81B"
    },
    "140": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A6"
    },
    "144": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "146": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC0ABEBE0"
    },
    "151": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "152": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BC"
    },
    "155": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "156": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "157": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC8A1465C"
    },
    "162": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "163": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D1"
    },
    "166": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "167": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "168": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB9AE707"
    },
    "173": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "174": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F1"
    },
    "177": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "178": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "179": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD0856D16"
    },
    "184": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "185": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x707"
    },
    "188": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "189": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "191": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "192": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "193": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "194": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F4FFCB1"
    },
    "200": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "201": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113"
    },
    "204": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "206": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8F4FFCB1"
    },
    "211": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "212": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CB"
    },
    "215": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "216": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "217": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x94B939EF"
    },
    "222": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "223": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EB"
    },
    "226": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "227": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "228": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "233": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "234": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60B"
    },
    "237": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "238": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "239": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x97566AA0"
    },
    "244": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "245": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63A"
    },
    "248": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "249": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "250": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x99F584B3"
    },
    "255": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "256": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65A"
    },
    "259": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "260": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "261": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA68EB88E"
    },
    "266": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "267": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x670"
    },
    "270": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "271": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "273": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "274": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "275": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "276": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "277": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x829965CC"
    },
    "282": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "283": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x553"
    },
    "286": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "287": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "288": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x87A2A9D6"
    },
    "293": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "294": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "297": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "298": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8A769D35"
    },
    "304": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "305": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57F"
    },
    "308": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "309": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "310": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8AE0368B"
    },
    "315": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "316": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x595"
    },
    "319": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "320": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "321": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "326": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "327": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AB"
    },
    "330": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "331": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "333": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "334": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "335": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "337": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "342": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "343": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F3"
    },
    "346": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "347": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "348": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x510DE094"
    },
    "353": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "354": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC"
    },
    "357": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "358": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "359": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x510DE094"
    },
    "364": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "365": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x490"
    },
    "368": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "369": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "370": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x64E46726"
    },
    "375": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "376": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B0"
    },
    "379": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "380": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "381": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6DE9F32B"
    },
    "386": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "387": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D2"
    },
    "390": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "391": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "392": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "397": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "398": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8"
    },
    "401": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "402": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "403": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x757991A8"
    },
    "408": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "409": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51E"
    },
    "412": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "413": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "414": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81269A56"
    },
    "419": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "420": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x533"
    },
    "423": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "424": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "426": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "427": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "428": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "429": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "430": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "435": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "436": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FE"
    },
    "439": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "440": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "441": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x32E99708"
    },
    "446": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "447": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x425"
    },
    "450": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "451": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "452": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45D8A232"
    },
    "457": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "458": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "461": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "462": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "463": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x490203A7"
    },
    "468": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "469": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "472": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "473": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "474": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4EF37628"
    },
    "479": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "480": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x465"
    },
    "483": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "484": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "485": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4FA972E1"
    },
    "490": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "491": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "494": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "495": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "497": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "498": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "499": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "500": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "501": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "506": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "GT",
      "path": "3"
    },
    "507": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245"
    },
    "510": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "511": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "512": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "517": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "518": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x344"
    },
    "521": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "522": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "523": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FCCB33C"
    },
    "528": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "529": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35A"
    },
    "532": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "533": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "534": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2381A60E"
    },
    "539": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "540": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37A"
    },
    "543": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "544": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "545": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "550": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "551": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x390"
    },
    "554": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "555": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "556": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2D38BF7A"
    },
    "561": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "562": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B0"
    },
    "565": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "566": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "567": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F104E0C"
    },
    "572": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "573": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C6"
    },
    "576": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "577": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "579": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "580": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "581": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "582": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "583": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "588": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "589": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x290"
    },
    "592": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "593": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "594": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "599": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "600": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BB"
    },
    "603": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "604": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "605": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x10294317"
    },
    "610": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "611": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EB"
    },
    "614": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "615": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "616": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x17DA485F"
    },
    "621": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "622": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30F"
    },
    "625": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "626": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "627": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1801FBE5"
    },
    "632": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "EQ",
      "path": "3"
    },
    "633": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x324"
    },
    "636": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "637": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "639": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "640": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "641": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "642": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "643": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28B"
    },
    "646": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "647": {
      "fn": "ForgeTest.<receive>",
      "offset": [
        25465,
        25473
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x0"
    },
    "649": {
      "fn": "ForgeTest.<receive>",
      "offset": [
        25465,
        25473
      ],
      "op": "DUP1",
      "path": "3"
    },
    "650": {
      "fn": "ForgeTest.<receive>",
      "offset": [
        25465,
        25473
      ],
      "op": "REVERT",
      "path": "3"
    },
    "651": {
      "offset": [
        6011,
        25528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "652": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "654": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "655": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        25514,
        25522
      ],
      "op": "REVERT",
      "path": "3"
    },
    "656": {
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "657": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "658": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "659": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "660": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29C"
    },
    "663": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "664": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "666": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "667": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "REVERT",
      "path": "3"
    },
    "668": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "669": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "670": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5"
    },
    "673": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7EE"
    },
    "676": {
      "fn": "ForgeTest.<fallback>",
      "jump": "i",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "677": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "678": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "680": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "681": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "684": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "685": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "686": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2883"
    },
    "689": {
      "fn": "ForgeTest.<fallback>",
      "jump": "i",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "690": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "691": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "693": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "694": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "696": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "SUB",
      "path": "3"
    },
    "697": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "698": {
      "fn": "ForgeTest.<fallback>",
      "offset": [
        8014,
        8042
      ],
      "op": "RETURN",
      "path": "3"
    },
    "699": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "700": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "701": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "702": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "703": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7"
    },
    "706": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "707": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "709": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "710": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "711": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "716": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D6"
    },
    "719": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "720": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "722": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28F4"
    },
    "725": {
      "fn": "ForgeTest.approve",
      "jump": "i",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMP",
      "path": "3"
    },
    "726": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "727": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87C"
    },
    "730": {
      "fn": "ForgeTest.approve",
      "jump": "i",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMP",
      "path": "3"
    },
    "731": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "732": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "734": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "735": {
      "op": "SWAP1"
    },
    "736": {
      "op": "ISZERO"
    },
    "737": {
      "op": "ISZERO"
    },
    "738": {
      "op": "DUP2"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "746": {
      "op": "JUMP"
    },
    "747": {
      "offset": [
        7589,
        7638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "748": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "749": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "DUP1",
      "path": "3"
    },
    "750": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "751": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "755": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "757": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "DUP1",
      "path": "3"
    },
    "758": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "REVERT",
      "path": "3"
    },
    "759": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "760": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "POP",
      "path": "3"
    },
    "761": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "764": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "766": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "767": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "DUP2",
      "path": "3"
    },
    "768": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "JUMP",
      "path": "3"
    },
    "769": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "770": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "772": {
      "fn": "ForgeTest.approve",
      "offset": [
        7589,
        7638
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "773": {
      "op": "SWAP1"
    },
    "774": {
      "op": "DUP2"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "offset": [
        7589,
        7638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "782": {
      "op": "JUMP"
    },
    "783": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "784": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "785": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "786": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "787": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31B"
    },
    "790": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "791": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "793": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "794": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "REVERT",
      "path": "3"
    },
    "795": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "796": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "POP",
      "path": "3"
    },
    "797": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "800": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E9"
    },
    "803": {
      "fn": "ForgeTest.getMiningDifficulty",
      "jump": "i",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "804": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "805": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "806": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "DUP1",
      "path": "3"
    },
    "807": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "808": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x330"
    },
    "811": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "812": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "814": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "DUP1",
      "path": "3"
    },
    "815": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "REVERT",
      "path": "3"
    },
    "816": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "821": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33F"
    },
    "824": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "825": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "827": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x291E"
    },
    "830": {
      "fn": "ForgeTest.mint",
      "jump": "i",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMP",
      "path": "3"
    },
    "831": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "832": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x907"
    },
    "835": {
      "fn": "ForgeTest.mint",
      "jump": "i",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMP",
      "path": "3"
    },
    "836": {
      "offset": [
        6623,
        6687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "837": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "838": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "839": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "840": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x350"
    },
    "843": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "844": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "846": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "847": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "REVERT",
      "path": "3"
    },
    "848": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "849": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "POP",
      "path": "3"
    },
    "850": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "853": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "855": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "856": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "DUP2",
      "path": "3"
    },
    "857": {
      "fn": "ForgeTest.mint",
      "offset": [
        6623,
        6687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "858": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "859": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "860": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "DUP1",
      "path": "3"
    },
    "861": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "862": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x366"
    },
    "865": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "866": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "868": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "DUP1",
      "path": "3"
    },
    "869": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "REVERT",
      "path": "3"
    },
    "870": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "875": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x375"
    },
    "878": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "879": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "881": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0E"
    },
    "884": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMP",
      "path": "3"
    },
    "885": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "886": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91B"
    },
    "889": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMP",
      "path": "3"
    },
    "890": {
      "offset": [
        7499,
        7528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "891": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "892": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "893": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "894": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x386"
    },
    "897": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "898": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "900": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "DUP1",
      "path": "3"
    },
    "901": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "REVERT",
      "path": "3"
    },
    "902": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "903": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "POP",
      "path": "3"
    },
    "904": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "907": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "909": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "910": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "911": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        7499,
        7528
      ],
      "op": "JUMP",
      "path": "3"
    },
    "912": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "913": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "914": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "DUP1",
      "path": "3"
    },
    "915": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "916": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39C"
    },
    "919": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "920": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "922": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "DUP1",
      "path": "3"
    },
    "923": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "REVERT",
      "path": "3"
    },
    "924": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "929": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AB"
    },
    "932": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "933": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "935": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6F"
    },
    "938": {
      "fn": "ForgeTest.transferFrom",
      "jump": "i",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "939": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "940": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DE"
    },
    "943": {
      "fn": "ForgeTest.transferFrom",
      "jump": "i",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "944": {
      "offset": [
        7378,
        7403
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "945": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "946": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "DUP1",
      "path": "3"
    },
    "947": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "948": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BC"
    },
    "951": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "952": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "954": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "DUP1",
      "path": "3"
    },
    "955": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "REVERT",
      "path": "3"
    },
    "956": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "957": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "POP",
      "path": "3"
    },
    "958": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "961": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "963": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "964": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "DUP2",
      "path": "3"
    },
    "965": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        7378,
        7403
      ],
      "op": "JUMP",
      "path": "3"
    },
    "966": {
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "968": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP1",
      "path": "3"
    },
    "969": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "970": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "974": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "976": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP1",
      "path": "3"
    },
    "977": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "REVERT",
      "path": "3"
    },
    "978": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "982": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "983": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "986": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "SUB"
    },
    "995": {
      "offset": [
        6213,
        6243
      ],
      "op": "AND",
      "path": "3"
    },
    "996": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP2",
      "path": "3"
    },
    "997": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "998": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "999": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1001": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        6213,
        6243
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "SUB"
    },
    "1010": {
      "op": "SWAP1"
    },
    "1011": {
      "op": "SWAP2"
    },
    "1012": {
      "op": "AND"
    },
    "1013": {
      "op": "DUP2"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "1021": {
      "op": "JUMP"
    },
    "1022": {
      "offset": [
        8091,
        8126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1023": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1024": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1025": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1026": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40A"
    },
    "1029": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1030": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1032": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1033": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1034": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1035": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "POP",
      "path": "3"
    },
    "1036": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x413"
    },
    "1039": {
      "offset": [
        8124,
        8126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1041": {
      "offset": [
        8091,
        8126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1042": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1043": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1044": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1046": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        8091,
        8126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1049": {
      "op": "SWAP1"
    },
    "1050": {
      "op": "SWAP2"
    },
    "1051": {
      "op": "AND"
    },
    "1052": {
      "op": "DUP2"
    },
    "1053": {
      "op": "MSTORE"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "offset": [
        8091,
        8126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "1060": {
      "op": "JUMP"
    },
    "1061": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1062": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1063": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1064": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1065": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x431"
    },
    "1068": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1069": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1071": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1072": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1073": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21189,
        21201
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0xC"
    },
    "1077": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21189,
        21201
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1078": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1081": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        21123,
        21206
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1082": {
      "offset": [
        6076,
        6117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1083": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1084": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1085": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1086": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x446"
    },
    "1089": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1090": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1092": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1093": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1094": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1095": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "POP",
      "path": "3"
    },
    "1096": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1099": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "1102": {
      "offset": [
        6076,
        6117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1103": {
      "fn": "ForgeTest.getMiningTarget",
      "offset": [
        6076,
        6117
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1104": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1106": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1107": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1108": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45C"
    },
    "1111": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1112": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1114": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1115": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1116": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1117": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "POP",
      "path": "3"
    },
    "1118": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1121": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADC"
    },
    "1124": {
      "fn": "ForgeTest.getMiningReward",
      "jump": "i",
      "offset": [
        21398,
        21629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1125": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1126": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1127": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1128": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1129": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x471"
    },
    "1132": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1133": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1135": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1136": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1137": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20909,
        20924
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0xD"
    },
    "1141": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20909,
        20924
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1142": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1145": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        20837,
        20929
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1146": {
      "offset": [
        7409,
        7493
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1147": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1148": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1149": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1150": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x486"
    },
    "1153": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1154": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1156": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1157": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1158": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "POP",
      "path": "3"
    },
    "1160": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1163": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1165": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1166": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1167": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        7409,
        7493
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1168": {
      "offset": [
        6249,
        6279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1169": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1170": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1171": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1172": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49C"
    },
    "1175": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1176": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1178": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1179": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1180": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "offset": [
        6249,
        6279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1184": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1185": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "1188": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "op": "SUB"
    },
    "1197": {
      "offset": [
        6249,
        6279
      ],
      "op": "AND",
      "path": "3"
    },
    "1198": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1199": {
      "fn": "ForgeTest.getChallengeNumber",
      "offset": [
        6249,
        6279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1200": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1201": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1202": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1203": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1204": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BC"
    },
    "1207": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1208": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1210": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1211": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1212": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D0"
    },
    "1217": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CB"
    },
    "1220": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1221": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1223": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AAB"
    },
    "1226": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1227": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1228": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0D"
    },
    "1231": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1232": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1233": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "STOP",
      "path": "3"
    },
    "1234": {
      "offset": [
        7828,
        7852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1235": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1236": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1237": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1238": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DE"
    },
    "1241": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1242": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1244": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1245": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1246": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1247": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "POP",
      "path": "3"
    },
    "1248": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1251": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "1253": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1254": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1255": {
      "fn": "ForgeTest.zinit",
      "offset": [
        7828,
        7852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1256": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1257": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1258": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1259": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1260": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F4"
    },
    "1263": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1264": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1266": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1267": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1268": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1273": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x503"
    },
    "1276": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1277": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1279": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AEE"
    },
    "1282": {
      "fn": "ForgeTest.balanceOf",
      "jump": "i",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1283": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "AND",
      "path": "3",
      "statement": 4
    },
    "1293": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22266,
        22278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1295": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1296": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1297": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1298": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "1300": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1302": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1303": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1305": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1306": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1307": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1308": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22292,
        22312
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1309": {
      "fn": "ForgeTest.balanceOf",
      "offset": [
        22197,
        22317
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1310": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1311": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1312": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1313": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1314": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52A"
    },
    "1317": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1318": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1320": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1321": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1322": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21692,
        21702
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x8"
    },
    "1326": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21692,
        21702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1327": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1330": {
      "fn": "ForgeTest.getEpoch",
      "offset": [
        21633,
        21708
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1331": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1332": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1333": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1334": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1335": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53F"
    },
    "1338": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1339": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1341": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1342": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1343": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1344": {
      "op": "POP"
    },
    "1345": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "1348": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54E"
    },
    "1351": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1352": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1354": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B09"
    },
    "1357": {
      "fn": "ForgeTest.checkMintSolution",
      "jump": "i",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1358": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1359": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC83"
    },
    "1362": {
      "fn": "ForgeTest.checkMintSolution",
      "jump": "i",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1363": {
      "offset": [
        6909,
        6935
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1364": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1365": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1366": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1367": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55F"
    },
    "1370": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1371": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1373": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1374": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1375": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1376": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "POP",
      "path": "3"
    },
    "1377": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1380": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1382": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1383": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1384": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        6909,
        6935
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1385": {
      "offset": [
        7086,
        7123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1386": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1387": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1388": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1389": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x575"
    },
    "1392": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1393": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1395": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1396": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1397": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1398": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "POP",
      "path": "3"
    },
    "1399": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1402": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1404": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1405": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1406": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7086,
        7123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1407": {
      "offset": [
        7129,
        7192
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1408": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1409": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1410": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1411": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58B"
    },
    "1414": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1415": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1417": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1418": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1419": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1420": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "POP",
      "path": "3"
    },
    "1421": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1424": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "1426": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1427": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1428": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7129,
        7192
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1429": {
      "offset": [
        7261,
        7321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1430": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1431": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1432": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1433": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1437": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1439": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1440": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1441": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1442": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "POP",
      "path": "3"
    },
    "1443": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1446": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "1448": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1449": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1450": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        7261,
        7321
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1451": {
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1452": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1453": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1454": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1455": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B7"
    },
    "1458": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1459": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1461": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1462": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1463": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1467": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1468": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "1471": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "offset": [
        3042,
        3062
      ],
      "op": "AND",
      "path": "3"
    },
    "1481": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1482": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1483": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1484": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1485": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1486": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1487": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D7"
    },
    "1490": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1491": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1493": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1494": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1495": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D0"
    },
    "1500": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E6"
    },
    "1503": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1504": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1506": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B3B"
    },
    "1509": {
      "fn": "ForgeTest.receiveApproval",
      "jump": "i",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1510": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1511": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCE"
    },
    "1514": {
      "fn": "ForgeTest.receiveApproval",
      "jump": "i",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1515": {
      "offset": [
        6178,
        6207
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1516": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1517": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1518": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1519": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F7"
    },
    "1522": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1523": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1525": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1526": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1527": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1531": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1532": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "1535": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "offset": [
        6178,
        6207
      ],
      "op": "AND",
      "path": "3"
    },
    "1545": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1546": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        6178,
        6207
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1547": {
      "offset": [
        8048,
        8085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1548": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1549": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1550": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1551": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x617"
    },
    "1554": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1555": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1557": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1558": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1559": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1560": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "POP",
      "path": "3"
    },
    "1561": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5"
    },
    "1564": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1566": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1567": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1568": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1570": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "ADD",
      "path": "3"
    },
    "1571": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1573": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1574": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1575": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1577": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1578": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1579": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1581": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "ADD",
      "path": "3"
    },
    "1582": {
      "op": "PUSH3",
      "value": "0x466765"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1588": {
      "op": "SHL"
    },
    "1589": {
      "offset": [
        8048,
        8085
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1590": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1591": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "POP",
      "path": "3"
    },
    "1592": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1593": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        8048,
        8085
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1594": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1595": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1596": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1597": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1598": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x646"
    },
    "1601": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1602": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1604": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1605": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1606": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1611": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x655"
    },
    "1614": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1615": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1617": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BFB"
    },
    "1620": {
      "fn": "ForgeTest.getMintDigest",
      "jump": "i",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1621": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1622": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5B"
    },
    "1625": {
      "fn": "ForgeTest.getMintDigest",
      "jump": "i",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1626": {
      "offset": [
        6123,
        6148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1627": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1628": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1629": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1630": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x666"
    },
    "1633": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1634": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1636": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1637": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1638": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1639": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "POP",
      "path": "3"
    },
    "1640": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1643": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1645": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1646": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1647": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        6123,
        6148
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1648": {
      "offset": [
        7736,
        7776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1649": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1650": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1651": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1652": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67C"
    },
    "1655": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1656": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1658": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1659": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1660": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1661": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "POP",
      "path": "3"
    },
    "1662": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1665": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "1667": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1668": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1669": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        7736,
        7776
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1670": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1671": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1672": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1673": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1674": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x692"
    },
    "1677": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1678": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1680": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1681": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1682": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1683": {
      "op": "POP"
    },
    "1684": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DB"
    },
    "1687": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A1"
    },
    "1690": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1691": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1693": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28F4"
    },
    "1696": {
      "fn": "ForgeTest.transfer",
      "jump": "i",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1697": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1698": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD96"
    },
    "1701": {
      "fn": "ForgeTest.transfer",
      "jump": "i",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1702": {
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1703": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1704": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1705": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1706": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1710": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1712": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1713": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1714": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1715": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "POP",
      "path": "3"
    },
    "1716": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1719": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1721": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1722": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1723": {
      "fn": "ForgeTest.transfer",
      "offset": [
        6968,
        7010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1724": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1725": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1726": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1727": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1728": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C8"
    },
    "1731": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1732": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1734": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1735": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1736": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21276,
        21288
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x17"
    },
    "1740": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21276,
        21288
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1741": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1744": {
      "fn": "ForgeTest.getMiningMinted",
      "offset": [
        21210,
        21293
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1745": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1746": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1747": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1748": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1749": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DD"
    },
    "1752": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1753": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1755": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1756": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1757": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1762": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6EC"
    },
    "1765": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1766": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1768": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C27"
    },
    "1771": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1772": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1773": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "1776": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1777": {
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1778": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1779": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1780": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1781": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FD"
    },
    "1784": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1785": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1787": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1788": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1789": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1790": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "POP",
      "path": "3"
    },
    "1791": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1794": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "1796": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1797": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1798": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        8172,
        8228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1799": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1800": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1801": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1802": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1803": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x713"
    },
    "1806": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1807": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1809": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1810": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1811": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1812": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "POP",
      "path": "3"
    },
    "1813": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D0"
    },
    "1816": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1324"
    },
    "1819": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1820": {
      "offset": [
        7039,
        7075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1821": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1822": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1823": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1824": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x728"
    },
    "1827": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1828": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1830": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1831": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1832": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1833": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "POP",
      "path": "3"
    },
    "1834": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1837": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "1839": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1840": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1841": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        7039,
        7075
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1842": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1843": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1844": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1845": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1846": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73E"
    },
    "1849": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1850": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1852": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1853": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1854": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1859": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74D"
    },
    "1862": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1863": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1865": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C9E"
    },
    "1868": {
      "fn": "ForgeTest.allowance",
      "jump": "i",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1869": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 7
    },
    "1879": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1880": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "AND",
      "path": "3"
    },
    "1881": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24790,
        24804
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1883": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1884": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1885": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1886": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x19"
    },
    "1888": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1890": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1891": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1892": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1893": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1895": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1896": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1897": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24837
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1898": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1899": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1900": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1901": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "AND",
      "path": "3"
    },
    "1902": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1903": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1904": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1905": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1906": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1907": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1908": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1909": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1910": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24818,
        24846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1911": {
      "fn": "ForgeTest.allowance",
      "offset": [
        24704,
        24851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1912": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1913": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1914": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1915": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1916": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x784"
    },
    "1919": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1920": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1922": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1923": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1924": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1929": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x793"
    },
    "1932": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1933": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1935": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CD1"
    },
    "1938": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1939": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1940": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1577"
    },
    "1943": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1944": {
      "offset": [
        6843,
        6903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1945": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1946": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1947": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1948": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A4"
    },
    "1951": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1952": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1954": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1955": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1956": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1957": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "POP",
      "path": "3"
    },
    "1958": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1961": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "1963": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1964": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1965": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        6843,
        6903
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1966": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1967": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1968": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1969": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1970": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BA"
    },
    "1973": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1974": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1976": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1977": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1978": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "1983": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C9"
    },
    "1986": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1987": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1989": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C27"
    },
    "1992": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1993": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1994": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1985"
    },
    "1997": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1998": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1999": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2000": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2001": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2002": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DA"
    },
    "2005": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2006": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2008": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2009": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2010": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x301"
    },
    "2015": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E9"
    },
    "2018": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2019": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2021": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D0E"
    },
    "2024": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2025": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2026": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F5D"
    },
    "2029": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2030": {
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2031": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1C"
    },
    "2033": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2034": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2035": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FB"
    },
    "2038": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2039": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D3E"
    },
    "2042": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2043": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2044": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2045": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2047": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2048": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2050": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2051": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2052": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DIV",
      "path": "3"
    },
    "2053": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MUL",
      "path": "3"
    },
    "2054": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2056": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2057": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2059": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2060": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2061": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2062": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2063": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2065": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2066": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2067": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2068": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2069": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2070": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2071": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2072": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2073": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2075": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2076": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2077": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2078": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2079": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x827"
    },
    "2082": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2083": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D3E"
    },
    "2086": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2087": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2088": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2089": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2090": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x874"
    },
    "2093": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2094": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2095": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2097": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "LT",
      "path": "3"
    },
    "2098": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x849"
    },
    "2101": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2102": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2105": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2106": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2107": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2108": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DIV",
      "path": "3"
    },
    "2109": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MUL",
      "path": "3"
    },
    "2110": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2111": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2112": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2113": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2115": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2116": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2117": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x874"
    },
    "2120": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2121": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2122": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2123": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2124": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2125": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2126": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2128": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2129": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2131": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2133": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2134": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2135": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2136": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2137": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2138": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2139": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2140": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2141": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2143": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2144": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2145": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2147": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2148": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2149": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2150": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "GT",
      "path": "3"
    },
    "2151": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x857"
    },
    "2154": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2155": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2156": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2157": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SUB",
      "path": "3"
    },
    "2158": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2160": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "AND",
      "path": "3"
    },
    "2161": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2162": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "ADD",
      "path": "3"
    },
    "2163": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2164": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2165": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "2166": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "2167": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "2168": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "2169": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "2170": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        8014,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2171": {
      "fn": "ForgeTest.mintFREE",
      "jump": "o",
      "offset": [
        8014,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2172": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2173": {
      "fn": "ForgeTest.approve",
      "offset": [
        23495,
        23505
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "2174": {
      "fn": "ForgeTest.approve",
      "offset": [
        23468,
        23480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2176": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2177": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2178": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2179": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x19"
    },
    "2181": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2183": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2184": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2185": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2186": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2188": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2189": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2190": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23506
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2200": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "AND",
      "path": "3"
    },
    "2201": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2202": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2203": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2204": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2205": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2206": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2207": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2208": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2209": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23524
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2210": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2211": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23524
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2212": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 9
    },
    "2213": {
      "fn": "ForgeTest.approve",
      "offset": [
        23468,
        23480
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2214": {
      "fn": "ForgeTest.approve",
      "offset": [
        23468,
        23480
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2215": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2216": {
      "fn": "ForgeTest.approve",
      "offset": [
        23487,
        23515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2217": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2250": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2251": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D7"
    },
    "2254": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2255": {
      "fn": "ForgeTest.approve",
      "offset": [
        23518,
        23524
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2256": {
      "op": "DUP2"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "SWAP1"
    },
    "2262": {
      "op": "JUMP"
    },
    "2263": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2264": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2266": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2267": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2268": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2269": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "SUB",
      "path": "3"
    },
    "2270": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2271": {
      "fn": "ForgeTest.approve",
      "offset": [
        23534,
        23571
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "fn": "ForgeTest.approve",
      "offset": [
        23583,
        23587
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "2275": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2276": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2277": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2278": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "POP",
      "path": "3"
    },
    "2279": {
      "fn": "ForgeTest.approve",
      "offset": [
        23396,
        23592
      ],
      "op": "POP",
      "path": "3"
    },
    "2280": {
      "fn": "ForgeTest.approve",
      "jump": "o",
      "offset": [
        23396,
        23592
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2281": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2282": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21064,
        21068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2284": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0x902"
    },
    "2287": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21102,
        21114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2289": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21102,
        21114
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2290": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "2292": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21097
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2293": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21101
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "2296": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2297": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2298": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2299": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2304": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "AND",
      "path": "3"
    },
    "2305": {
      "fn": "ForgeTest.getMiningDifficulty",
      "jump": "i",
      "offset": [
        21082,
        21115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2306": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21082,
        21115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2307": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21075,
        21115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2308": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21075,
        21115
      ],
      "op": "POP",
      "path": "3"
    },
    "2309": {
      "fn": "ForgeTest.getMiningDifficulty",
      "offset": [
        21012,
        21119
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2310": {
      "fn": "ForgeTest.getMiningDifficulty",
      "jump": "o",
      "offset": [
        21012,
        21119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2311": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2312": {
      "fn": "ForgeTest.mint",
      "offset": [
        11658,
        11670
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2314": {
      "fn": "ForgeTest.mint",
      "offset": [
        11676,
        11719
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x914"
    },
    "2317": {
      "fn": "ForgeTest.mint",
      "offset": [
        11683,
        11688
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2318": {
      "fn": "ForgeTest.mint",
      "offset": [
        11690,
        11706
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2319": {
      "fn": "ForgeTest.mint",
      "offset": [
        11708,
        11718
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2320": {
      "fn": "ForgeTest.mint",
      "offset": [
        11676,
        11682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1577"
    },
    "2323": {
      "fn": "ForgeTest.mint",
      "jump": "i",
      "offset": [
        11676,
        11719
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2324": {
      "fn": "ForgeTest.mint",
      "offset": [
        11676,
        11719
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2325": {
      "fn": "ForgeTest.mint",
      "offset": [
        11676,
        11719
      ],
      "op": "POP",
      "path": "3"
    },
    "2326": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2327": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2328": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "POP",
      "path": "3"
    },
    "2329": {
      "fn": "ForgeTest.mint",
      "offset": [
        11587,
        11723
      ],
      "op": "POP",
      "path": "3"
    },
    "2330": {
      "fn": "ForgeTest.mint",
      "jump": "o",
      "offset": [
        11587,
        11723
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2331": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2332": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15038,
        15050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2334": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15056,
        15075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2335": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15102
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2336": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15109
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2337": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15112,
        15113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2339": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x92C"
    },
    "2342": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15113
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2343": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2344": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "2347": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15092,
        15113
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2348": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15092,
        15113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2349": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2358": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2359": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "GT",
      "path": "3"
    },
    "2360": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2361": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x944"
    },
    "2364": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2365": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x944"
    },
    "2368": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2940"
    },
    "2371": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15078,
        15114
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2372": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2373": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2375": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2376": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2377": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2378": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2379": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2380": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2381": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2383": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "MUL",
      "path": "3"
    },
    "2384": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2386": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ADD",
      "path": "3"
    },
    "2387": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2388": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ADD",
      "path": "3"
    },
    "2389": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2391": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2392": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2393": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2394": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96D"
    },
    "2397": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2398": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2399": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2401": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ADD",
      "path": "3"
    },
    "2402": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2404": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2405": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "MUL",
      "path": "3"
    },
    "2406": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2407": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2408": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2409": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "2410": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "ADD",
      "path": "3"
    },
    "2411": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2414": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15078,
        15114
      ],
      "op": "POP",
      "path": "3"
    },
    "2415": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15056,
        15114
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2416": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15056,
        15114
      ],
      "op": "POP",
      "path": "3"
    },
    "2417": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15124,
        15130
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2419": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2420": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15155
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2421": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2422": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15159
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x980"
    },
    "2425": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2426": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15158,
        15159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2428": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15159
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "2431": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15138,
        15159
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2432": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15138,
        15159
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2433": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15134,
        15135
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2434": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15134,
        15160
      ],
      "op": "LT",
      "path": "3"
    },
    "2435": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2436": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C4"
    },
    "2439": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2440": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15182,
        15188
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 13
    },
    "2441": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15176
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2442": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15177,
        15178
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2443": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2444": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2445": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2446": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "LT",
      "path": "3"
    },
    "2447": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99A"
    },
    "2450": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2451": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99A"
    },
    "2454": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "2457": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15174,
        15179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2458": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15188
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2468": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15188
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2469": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15188
      ],
      "op": "AND",
      "path": "3"
    },
    "2470": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2472": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2473": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2474": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "MUL",
      "path": "3"
    },
    "2475": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2476": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2477": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2478": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "ADD",
      "path": "3"
    },
    "2479": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2480": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2481": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15179
      ],
      "op": "ADD",
      "path": "3"
    },
    "2482": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15174,
        15188
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2483": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 14
    },
    "2484": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9BC"
    },
    "2487": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2488": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "2491": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15162,
        15165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2492": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2493": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2494": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "POP",
      "path": "3"
    },
    "2495": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15162,
        15165
      ],
      "op": "POP",
      "path": "3"
    },
    "2496": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x973"
    },
    "2499": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2500": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2501": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15120,
        15193
      ],
      "op": "POP",
      "path": "3"
    },
    "2502": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15199,
        15257
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0x9D1"
    },
    "2505": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15217,
        15222
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2506": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15224,
        15240
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2507": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15242,
        15252
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2508": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15254,
        15256
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2509": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15199,
        15216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2D"
    },
    "2512": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15199,
        15257
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2513": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15199,
        15257
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15269,
        15273
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x1"
    },
    "2517": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        15269,
        15273
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "2518": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "offset": [
        14905,
        15277
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "op": "POP"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "fn": "ForgeTest.mintTokensSameAddress",
      "jump": "o",
      "offset": [
        14905,
        15277
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2526": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 17
    },
    "2536": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "AND",
      "path": "3"
    },
    "2537": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24198,
        24210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2539": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2540": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2541": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2542": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24242
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "2544": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2546": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2547": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2549": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2550": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2551": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2552": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA01"
    },
    "2555": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2556": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24253,
        24259
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2557": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "2560": {
      "fn": "ForgeTest.transferFrom",
      "jump": "i",
      "offset": [
        24234,
        24260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2561": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24234,
        24260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2571": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "AND",
      "path": "3"
    },
    "2572": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2574": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2575": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2576": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2577": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "2579": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2581": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2582": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2583": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2584": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2586": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2587": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2588": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24231
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2589": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24260
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2590": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2591": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24260
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2592": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24217,
        24260
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2593": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24299
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x19"
    },
    "2595": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24305
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2596": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24305
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2597": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24305
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2598": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24305
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2599": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24305
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2600": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24306,
        24316
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2601": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2602": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2603": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2604": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2605": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2606": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24317
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2607": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA38"
    },
    "2610": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2611": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24322,
        24328
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2612": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "2615": {
      "fn": "ForgeTest.transferFrom",
      "jump": "i",
      "offset": [
        24292,
        24329
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2616": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24292,
        24329
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2623": {
      "op": "SHL"
    },
    "2624": {
      "op": "SUB"
    },
    "2625": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2626": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2627": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "AND",
      "path": "3"
    },
    "2628": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2630": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2631": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2632": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2633": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x19"
    },
    "2635": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2637": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2638": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2639": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2640": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2642": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2643": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2644": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24277
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2645": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24278,
        24288
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2646": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2647": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2648": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2649": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2650": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2651": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2652": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24289
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2653": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24329
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2654": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2655": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24329
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2656": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24264,
        24329
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2657": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 19
    },
    "2658": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2659": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "AND",
      "path": "3"
    },
    "2660": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2661": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2662": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "2664": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2665": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2666": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2667": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2668": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24360
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2669": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA76"
    },
    "2672": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2673": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24365,
        24371
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2674": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "2677": {
      "fn": "ForgeTest.transferFrom",
      "jump": "i",
      "offset": [
        24348,
        24372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2678": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24348,
        24372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "op": "SUB"
    },
    "2687": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2688": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2689": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "AND",
      "path": "3"
    },
    "2690": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2692": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2693": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2694": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2695": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "2697": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2699": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2700": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2702": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2703": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2704": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2705": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24345
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2706": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24372
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2707": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2708": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24372
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2709": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24333,
        24372
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2710": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 20
    },
    "2711": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2712": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2713": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2714": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "AND",
      "path": "3"
    },
    "2715": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2716": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2749": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2750": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "2753": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2754": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24401,
        24407
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2755": {
      "op": "DUP2"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "op": "SWAP1"
    },
    "2761": {
      "op": "JUMP"
    },
    "2762": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2763": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2765": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2766": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2767": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2768": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SUB",
      "path": "3"
    },
    "2769": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2770": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24382,
        24408
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24420,
        24424
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x1"
    },
    "2774": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2775": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2776": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "POP",
      "path": "3"
    },
    "2777": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "POP",
      "path": "3"
    },
    "2778": {
      "fn": "ForgeTest.transferFrom",
      "offset": [
        24112,
        24429
      ],
      "op": "POP",
      "path": "3"
    },
    "2779": {
      "fn": "ForgeTest.transferFrom",
      "jump": "o",
      "offset": [
        24112,
        24429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2780": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21398,
        21629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2781": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21446,
        21450
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2783": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21575,
        21622
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 22,
      "value": "0x902"
    },
    "2786": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21611,
        21620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2788": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21611,
        21620
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2789": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2791": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF0"
    },
    "2794": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21620
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2795": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2796": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "2799": {
      "fn": "ForgeTest.getMiningReward",
      "jump": "i",
      "offset": [
        21608,
        21620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2800": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21608,
        21620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2801": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21582,
        21600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFC"
    },
    "2804": {
      "offset": [
        8124,
        8126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "2806": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21582,
        21584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2808": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21582,
        21600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "2811": {
      "fn": "ForgeTest.getMiningReward",
      "jump": "i",
      "offset": [
        21582,
        21600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2812": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21582,
        21600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2813": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21576,
        21600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "2816": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21576,
        21600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2817": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21576,
        21579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2819": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21576,
        21600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "2822": {
      "fn": "ForgeTest.getMiningReward",
      "jump": "i",
      "offset": [
        21576,
        21600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2823": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21576,
        21600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2824": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21575,
        21606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2825": {
      "fn": "ForgeTest.getMiningReward",
      "offset": [
        21575,
        21606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "2828": {
      "fn": "ForgeTest.getMiningReward",
      "jump": "i",
      "offset": [
        21575,
        21622
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2829": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2830": {
      "offset": [
        3298,
        3303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2832": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3298,
        3303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "offset": [
        3298,
        3303
      ],
      "op": "AND",
      "path": "3"
    },
    "2842": {
      "offset": [
        3284,
        3294
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2843": {
      "offset": [
        3284,
        3303
      ],
      "op": "EQ",
      "path": "3"
    },
    "2844": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB59"
    },
    "2847": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2848": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2850": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "offset": [
        3276,
        3318
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2859": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2862": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2864": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2865": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "ADD",
      "path": "3"
    },
    "2866": {
      "op": "MSTORE"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2895": {
      "op": "ADD"
    },
    "2896": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2897": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2899": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2900": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2901": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2902": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SUB",
      "path": "3"
    },
    "2903": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2904": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2905": {
      "fn": "ForgeTest.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2906": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8632,
        8639
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x1F"
    },
    "2908": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8632,
        8639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2909": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8561,
        8587
      ],
      "op": "PUSH11",
      "path": "3",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "2921": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8561,
        8587
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2922": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8632,
        8639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2924": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8632,
        8639
      ],
      "op": "AND",
      "path": "3"
    },
    "2925": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8631,
        8639
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2926": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8624,
        8640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB79"
    },
    "2929": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8624,
        8640
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2930": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8624,
        8640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB79"
    },
    "2933": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8624,
        8640
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EE7"
    },
    "2936": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8624,
        8640
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2937": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8624,
        8640
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2938": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8657
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x1F"
    },
    "2940": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2941": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2944": {
      "op": "NOT"
    },
    "2945": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "AND",
      "path": "3"
    },
    "2946": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8660,
        8664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2948": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "OR",
      "path": "3"
    },
    "2949": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2950": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8650,
        8664
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2951": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8691,
        8706
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 25
    },
    "2952": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8671,
        8688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "2954": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8671,
        8706
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2955": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8765,
        8774
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0xE"
    },
    "2957": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8765,
        8774
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2958": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8729,
        8776
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9C"
    },
    "2961": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8729,
        8776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2962": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8762,
        8774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF0"
    },
    "2965": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8762,
        8774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2966": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8762,
        8763
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2968": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8762,
        8774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "2971": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8762,
        8774
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2972": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8729,
        8776
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2973": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8713,
        8726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "2975": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8713,
        8776
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2976": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8795,
        8796
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x0"
    },
    "2978": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8783,
        8792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2980": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8783,
        8796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2981": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8783,
        8796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2982": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8783,
        8796
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2983": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8803,
        8815
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x17"
    },
    "2985": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8803,
        8819
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2986": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8803,
        8819
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2987": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8803,
        8819
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2988": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8826,
        8836
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x8"
    },
    "2990": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8826,
        8840
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2991": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8877
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 30,
      "value": "0xB"
    },
    "2993": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8877
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2994": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBBC"
    },
    "2997": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8884
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2998": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8882,
        8883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3000": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "3003": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8862,
        8884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3004": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8862,
        8884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3005": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8847,
        8859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3007": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8847,
        8884
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3008": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8970,
        8985
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 31
    },
    "3009": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8937,
        8967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "3011": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8937,
        8985
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3012": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8992,
        9014
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 32,
      "value": "0xBCB"
    },
    "3015": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8992,
        9012
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236F"
    },
    "3018": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        8992,
        9014
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3019": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8992,
        9014
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3020": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9096,
        9099
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 33,
      "value": "0xBD6"
    },
    "3023": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9098,
        9099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3025": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9096,
        9097
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3026": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9096,
        9099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "3029": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        9096,
        9099
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3030": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9096,
        9099
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3037": {
      "op": "SHL"
    },
    "3038": {
      "op": "SUB"
    },
    "3039": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3040": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "AND",
      "path": "3"
    },
    "3041": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3043": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3044": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3045": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3046": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "3048": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3050": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3051": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3053": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3054": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3055": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9099
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3056": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3057": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9099
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3058": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9099
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3059": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9068,
        9093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3060": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 34,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3093": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9154,
        9157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1F"
    },
    "3096": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9156,
        9157
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3098": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9154,
        9155
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3099": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9154,
        9157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "3102": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        9154,
        9157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3103": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9154,
        9157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3104": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3106": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3107": {
      "op": "SWAP1"
    },
    "3108": {
      "op": "DUP2"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3115": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3116": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3117": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3118": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "SUB",
      "path": "3"
    },
    "3119": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3120": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9116,
        9158
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3121": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9181
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x2"
    },
    "3123": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3124": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3131": {
      "op": "SHL"
    },
    "3132": {
      "op": "SUB"
    },
    "3133": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3134": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3135": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "AND",
      "path": "3"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "op": "NOT"
    },
    "3145": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3146": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3147": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "AND",
      "path": "3"
    },
    "3148": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "OR",
      "path": "3"
    },
    "3149": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3150": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3151": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9199
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3152": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9224
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x3"
    },
    "3154": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3155": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3156": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3157": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3158": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "AND",
      "path": "3"
    },
    "3159": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3160": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3161": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "AND",
      "path": "3"
    },
    "3162": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "OR",
      "path": "3"
    },
    "3163": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3164": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9209,
        9244
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3165": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9269
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 37,
      "value": "0x4"
    },
    "3167": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3168": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3169": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3170": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3171": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "AND",
      "path": "3"
    },
    "3172": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3173": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3174": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3175": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "AND",
      "path": "3"
    },
    "3176": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3177": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3178": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3179": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "OR",
      "path": "3"
    },
    "3180": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3181": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9254,
        9288
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3182": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9312,
        9322
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 38,
      "value": "0x8"
    },
    "3184": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9312,
        9322
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3185": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9300,
        9309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "3187": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9300,
        9322
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3188": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9328,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xC7D"
    },
    "3191": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9167,
        9181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3193": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9328,
        9336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C0"
    },
    "3196": {
      "fn": "ForgeTest.zinit",
      "jump": "i",
      "offset": [
        9328,
        9348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3197": {
      "fn": "ForgeTest.zinit",
      "offset": [
        9328,
        9348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3198": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8542,
        9361
      ],
      "op": "POP",
      "path": "3"
    },
    "3199": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "POP",
      "path": "3"
    },
    "3200": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "POP",
      "path": "3"
    },
    "3201": {
      "fn": "ForgeTest.zinit",
      "offset": [
        8442,
        9361
      ],
      "op": "POP",
      "path": "3"
    },
    "3202": {
      "fn": "ForgeTest.zinit",
      "jump": "o",
      "offset": [
        8442,
        9361
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3203": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3204": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20556,
        20568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3206": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20574,
        20588
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3207": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20626,
        20642
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3208": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20643,
        20653
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3209": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20654,
        20659
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3210": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3212": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3213": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3215": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "ADD",
      "path": "3"
    },
    "3216": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9B"
    },
    "3219": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3220": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3221": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3222": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3223": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F27"
    },
    "3226": {
      "fn": "ForgeTest.checkMintSolution",
      "jump": "i",
      "offset": [
        20609,
        20660
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3227": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3228": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3230": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3231": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3233": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3234": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3235": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SUB",
      "path": "3"
    },
    "3236": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SUB",
      "path": "3"
    },
    "3237": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3238": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3239": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3240": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3242": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20609,
        20660
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3243": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3244": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3245": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3246": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3248": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "ADD",
      "path": "3"
    },
    "3249": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20599,
        20661
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3250": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20574,
        20662
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3251": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20574,
        20662
      ],
      "op": "POP",
      "path": "3"
    },
    "3252": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20687,
        20697
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3253": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20677,
        20683
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3254": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20669,
        20684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3256": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20669,
        20684
      ],
      "op": "SHR",
      "path": "3"
    },
    "3257": {
      "branch": 145,
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20669,
        20697
      ],
      "op": "GT",
      "path": "3"
    },
    "3258": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20666,
        20707
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3259": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20666,
        20707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC3"
    },
    "3262": {
      "branch": 145,
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20666,
        20707
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3263": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20699,
        20707
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x0"
    },
    "3265": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20699,
        20707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3266": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20699,
        20707
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3267": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20666,
        20707
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3268": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20720,
        20746
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 41
    },
    "3269": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20720,
        20746
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3270": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20720,
        20746
      ],
      "op": "EQ",
      "path": "3"
    },
    "3271": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20720,
        20746
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3272": {
      "fn": "ForgeTest.checkMintSolution",
      "offset": [
        20424,
        20751
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "fn": "ForgeTest.checkMintSolution",
      "jump": "o",
      "offset": [
        20424,
        20751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3278": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25321,
        25343
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 42
    },
    "3288": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25321,
        25343
      ],
      "op": "AND",
      "path": "3"
    },
    "3289": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25338,
        25342
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3290": {
      "branch": 146,
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25321,
        25343
      ],
      "op": "EQ",
      "path": "3"
    },
    "3291": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE3"
    },
    "3294": {
      "branch": 146,
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3295": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3297": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3298": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3299": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25313,
        25344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3300": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x40"
    },
    "3302": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3303": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3310": {
      "op": "SHL"
    },
    "3311": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3312": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "op": "DUP6"
    },
    "3322": {
      "op": "AND"
    },
    "3323": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3325": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3326": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ADD",
      "path": "3"
    },
    "3327": {
      "op": "MSTORE"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3330": {
      "op": "DUP2"
    },
    "3331": {
      "op": "ADD"
    },
    "3332": {
      "op": "DUP5"
    },
    "3333": {
      "op": "SWAP1"
    },
    "3334": {
      "op": "MSTORE"
    },
    "3335": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25363,
        25367
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3336": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25363,
        25367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3337": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25378
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "3342": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3348": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3350": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3351": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3352": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3353": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "SUB",
      "path": "3"
    },
    "3354": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3355": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3357": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3358": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "GAS",
      "path": "3"
    },
    "3359": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "CALL",
      "path": "3"
    },
    "3360": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3361": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3362": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3363": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD30"
    },
    "3366": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3367": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3368": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3370": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3371": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3372": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3373": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3375": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3376": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3377": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3378": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3379": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3380": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3381": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3383": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3384": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3385": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3387": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "NOT",
      "path": "3"
    },
    "3388": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3390": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3391": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ADD",
      "path": "3"
    },
    "3392": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "AND",
      "path": "3"
    },
    "3393": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3394": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ADD",
      "path": "3"
    },
    "3395": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3396": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3398": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3399": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3400": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3401": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "ADD",
      "path": "3"
    },
    "3402": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3403": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD54"
    },
    "3406": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3407": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3408": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "3411": {
      "fn": "ForgeTest.receiveApproval",
      "jump": "i",
      "offset": [
        25348,
        25392
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3412": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3413": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25348,
        25392
      ],
      "op": "POP",
      "path": "3"
    },
    "3414": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "POP",
      "path": "3"
    },
    "3415": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "POP",
      "path": "3"
    },
    "3416": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "POP",
      "path": "3"
    },
    "3417": {
      "fn": "ForgeTest.receiveApproval",
      "offset": [
        25204,
        25398
      ],
      "op": "POP",
      "path": "3"
    },
    "3418": {
      "fn": "ForgeTest.receiveApproval",
      "jump": "o",
      "offset": [
        25204,
        25398
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3419": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3420": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21853,
        21871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3422": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21878,
        21892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3423": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21923,
        21938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "3425": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21923,
        21938
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3426": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21940,
        21950
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3427": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21952,
        21957
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3428": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3430": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3431": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3433": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "ADD",
      "path": "3"
    },
    "3434": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD75"
    },
    "3437": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3438": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3439": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3440": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3441": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F27"
    },
    "3444": {
      "fn": "ForgeTest.getMintDigest",
      "jump": "i",
      "offset": [
        21906,
        21958
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3445": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3446": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3448": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3449": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3450": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3451": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3452": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SUB",
      "path": "3"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3455": {
      "op": "NOT"
    },
    "3456": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "ADD",
      "path": "3"
    },
    "3457": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3458": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3459": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3460": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3461": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3462": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3463": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3464": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21906,
        21958
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3466": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3467": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3468": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "ADD",
      "path": "3"
    },
    "3469": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3470": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21896,
        21959
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3471": {
      "fn": "ForgeTest.getMintDigest",
      "offset": [
        21742,
        21982
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "op": "POP"
    },
    "3474": {
      "op": "POP"
    },
    "3475": {
      "op": "POP"
    },
    "3476": {
      "op": "POP"
    },
    "3477": {
      "fn": "ForgeTest.getMintDigest",
      "jump": "o",
      "offset": [
        21742,
        21982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3478": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22653,
        22901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3479": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22772,
        22782
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 44
    },
    "3480": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22721,
        22733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3482": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3483": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3484": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3485": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22771
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "3487": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3489": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3490": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3492": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3493": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3494": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22783
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3495": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22795
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB0"
    },
    "3498": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22795
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3499": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22788,
        22794
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3500": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "3503": {
      "fn": "ForgeTest.transfer",
      "jump": "i",
      "offset": [
        22763,
        22795
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3504": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22763,
        22795
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3505": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22749,
        22759
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3506": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3508": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3509": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3510": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3511": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22748
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "3513": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3515": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3516": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3518": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3519": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3520": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22760
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3521": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22795
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3522": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22795
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3523": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22795
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3524": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22740,
        22795
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 45
    },
    "3534": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "AND",
      "path": "3"
    },
    "3535": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3536": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3537": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3538": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22826
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3539": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22838
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDC"
    },
    "3542": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22838
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3543": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22831,
        22837
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3544": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "3547": {
      "fn": "ForgeTest.transfer",
      "jump": "i",
      "offset": [
        22814,
        22838
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3548": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22814,
        22838
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3555": {
      "op": "SHL"
    },
    "3556": {
      "op": "SUB"
    },
    "3557": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3558": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "AND",
      "path": "3"
    },
    "3559": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3561": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3562": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3563": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3564": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "3566": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3568": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3569": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3571": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3572": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3573": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3574": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22811
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3575": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22838
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3576": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22838
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3577": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22838
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3578": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22799,
        22838
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3579": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 46
    },
    "3580": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3581": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22857,
        22867
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3582": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22857,
        22867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3583": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3616": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3617": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D7"
    },
    "3620": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22848,
        22880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3621": {
      "fn": "ForgeTest.transfer",
      "offset": [
        22873,
        22879
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3622": {
      "op": "DUP2"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3626": {
      "op": "ADD"
    },
    "3627": {
      "op": "SWAP1"
    },
    "3628": {
      "op": "JUMP"
    },
    "3629": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3630": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13470,
        13482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3632": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13488,
        13503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3633": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13506,
        13547
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE55"
    },
    "3636": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13513,
        13518
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3637": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13519,
        13535
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3638": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13543
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3639": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13544,
        13545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3641": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3642": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3643": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3644": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "LT",
      "path": "3"
    },
    "3645": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE48"
    },
    "3648": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3649": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE48"
    },
    "3652": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "3655": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13537,
        13546
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3656": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3657": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3659": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "MUL",
      "path": "3"
    },
    "3660": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3662": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "ADD",
      "path": "3"
    },
    "3663": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "ADD",
      "path": "3"
    },
    "3664": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13537,
        13546
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3665": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13506,
        13512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1577"
    },
    "3668": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13506,
        13547
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3669": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13506,
        13547
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3670": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13488,
        13547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3671": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13488,
        13547
      ],
      "op": "POP",
      "path": "3"
    },
    "3672": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13569,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x0"
    },
    "3674": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13559,
        13566
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3675": {
      "branch": 147,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13559,
        13570
      ],
      "op": "GT",
      "path": "3"
    },
    "3676": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE94"
    },
    "3679": {
      "branch": 147,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3680": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3682": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3689": {
      "op": "SHL"
    },
    "3690": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3691": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3694": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3696": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3697": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "ADD",
      "path": "3"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3703": {
      "op": "DUP3"
    },
    "3704": {
      "op": "ADD"
    },
    "3705": {
      "op": "MSTORE"
    },
    "3706": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3722": {
      "op": "DUP3"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "MSTORE"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "3731": {
      "op": "JUMP"
    },
    "3732": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13551,
        13585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3733": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13632
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 48
    },
    "3734": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13632
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3735": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA1"
    },
    "3738": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13636
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3739": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13635,
        13636
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3741": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "3744": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13615,
        13636
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3745": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13615,
        13636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3746": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13598,
        13604
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3747": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13598,
        13611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3748": {
      "branch": 148,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13598,
        13636
      ],
      "op": "EQ",
      "path": "3"
    },
    "3749": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF16"
    },
    "3752": {
      "branch": 148,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3753": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3755": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3764": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3767": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3769": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3770": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "ADD",
      "path": "3"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH32",
      "value": "0x4D696E74546F2068617320746F206861766520616E2065787472612061646472"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "ADD"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "PUSH32",
      "value": "0x65737320636F6D706172656420746F20457874726146756E6473000000000000"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3852": {
      "op": "DUP3"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "MSTORE"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "3861": {
      "op": "JUMP"
    },
    "3862": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13590,
        13698
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3863": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13702,
        13709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3865": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3866": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13731,
        13741
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3867": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13731,
        13748
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3868": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13727,
        13729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3869": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13727,
        13748
      ],
      "op": "LT",
      "path": "3"
    },
    "3870": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3871": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10DA"
    },
    "3874": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3875": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13784,
        13788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2D"
    },
    "3878": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13784,
        13786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3879": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13787,
        13788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3881": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13784,
        13788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "3884": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13784,
        13788
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3885": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13784,
        13788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3886": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13780,
        13789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF38"
    },
    "3889": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13780,
        13789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3890": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13780,
        13781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3892": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13780,
        13789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "3895": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13780,
        13789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3896": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13780,
        13789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3897": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "3899": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3900": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13790
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF45"
    },
    "3903": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13790
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3904": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13790
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3905": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13790
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "3908": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13766,
        13790
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3909": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13790
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3910": {
      "branch": 149,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13766,
        13795
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3911": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13763,
        13813
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4F"
    },
    "3914": {
      "branch": 149,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13763,
        13813
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3915": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13802,
        13807
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x10DA"
    },
    "3918": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13802,
        13807
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3919": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13763,
        13813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3920": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13851,
        13855
      ],
      "op": "ADDRESS",
      "path": "3",
      "statement": 50
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "op": "SUB"
    },
    "3929": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13856
      ],
      "op": "AND",
      "path": "3"
    },
    "3930": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13835
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3931": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13836,
        13838
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3932": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3933": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3934": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3935": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "LT",
      "path": "3"
    },
    "3936": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF6B"
    },
    "3939": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3940": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF6B"
    },
    "3943": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "3946": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13825,
        13839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3947": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3948": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3950": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "MUL",
      "path": "3"
    },
    "3951": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3953": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "ADD",
      "path": "3"
    },
    "3954": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "ADD",
      "path": "3"
    },
    "3955": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13839
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13856
      ],
      "op": "AND",
      "path": "3"
    },
    "3965": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13856
      ],
      "op": "EQ",
      "path": "3"
    },
    "3966": {
      "branch": 150,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13856
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3967": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13893
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3968": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13893
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3969": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13893
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFBC"
    },
    "3972": {
      "branch": 150,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13893
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3976": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3977": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3978": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3985": {
      "op": "SHL"
    },
    "3986": {
      "op": "SUB"
    },
    "3987": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3988": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3989": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "AND",
      "path": "3"
    },
    "3990": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13878,
        13893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3991": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13870
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3992": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3993": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13871,
        13873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3994": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13871,
        13873
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3995": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3996": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "LT",
      "path": "3"
    },
    "3997": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA8"
    },
    "4000": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4001": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA8"
    },
    "4004": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4007": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13860,
        13874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4008": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4009": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4011": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "MUL",
      "path": "3"
    },
    "4012": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4014": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "ADD",
      "path": "3"
    },
    "4015": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "ADD",
      "path": "3"
    },
    "4016": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13874
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4023": {
      "op": "SHL"
    },
    "4024": {
      "op": "SUB"
    },
    "4025": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13893
      ],
      "op": "AND",
      "path": "3"
    },
    "4026": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13893
      ],
      "op": "EQ",
      "path": "3"
    },
    "4027": {
      "branch": 151,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13860,
        13893
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4028": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13825,
        13893
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4029": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1008"
    },
    "4032": {
      "branch": 151,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4033": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4035": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4044": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4049": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4050": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "ADD",
      "path": "3"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "ADD"
    },
    "4058": {
      "op": "MSTORE"
    },
    "4059": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4094": {
      "op": "DUP3"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4099": {
      "op": "ADD"
    },
    "4100": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "4103": {
      "op": "JUMP"
    },
    "4104": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13817,
        13924
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4105": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13933,
        13939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4107": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13940,
        13944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1015"
    },
    "4110": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13940,
        13942
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4111": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13943,
        13944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4113": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13940,
        13944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "4116": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13940,
        13944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4117": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13940,
        13944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4118": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13933,
        13944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4119": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13933,
        13944
      ],
      "op": "POP",
      "path": "3"
    },
    "4120": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4121": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13949,
        13959
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4122": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13949,
        13966
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4123": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13946,
        13947
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4124": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13946,
        13966
      ],
      "op": "LT",
      "path": "3"
    },
    "4125": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4126": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C7"
    },
    "4129": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4130": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14013
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 51
    },
    "4131": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14014,
        14016
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4132": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4133": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4134": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4135": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "LT",
      "path": "3"
    },
    "4136": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1033"
    },
    "4139": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4140": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1033"
    },
    "4143": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4146": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14003,
        14017
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4147": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4148": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4150": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "MUL",
      "path": "3"
    },
    "4151": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4153": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "ADD",
      "path": "3"
    },
    "4154": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "ADD",
      "path": "3"
    },
    "4155": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14003,
        14017
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "op": "SUB"
    },
    "4164": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        14017
      ],
      "op": "AND",
      "path": "3"
    },
    "4165": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13996
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4166": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13997,
        13998
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4167": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4168": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4169": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4170": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "LT",
      "path": "3"
    },
    "4171": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1056"
    },
    "4174": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4175": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1056"
    },
    "4178": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4181": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13986,
        13999
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4182": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4183": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4185": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "MUL",
      "path": "3"
    },
    "4186": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4188": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "ADD",
      "path": "3"
    },
    "4189": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "ADD",
      "path": "3"
    },
    "4190": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        13999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4197": {
      "op": "SHL"
    },
    "4198": {
      "op": "SUB"
    },
    "4199": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        14017
      ],
      "op": "AND",
      "path": "3"
    },
    "4200": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        14017
      ],
      "op": "EQ",
      "path": "3"
    },
    "4201": {
      "branch": 152,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13986,
        14017
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4202": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B5"
    },
    "4205": {
      "branch": 152,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4206": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4208": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4215": {
      "op": "SHL"
    },
    "4216": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4217": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4220": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4222": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4223": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "ADD",
      "path": "3"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4229": {
      "op": "DUP3"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4267": {
      "op": "DUP3"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4272": {
      "op": "ADD"
    },
    "4273": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "4276": {
      "op": "JUMP"
    },
    "4277": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13978,
        14049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4278": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 52
    },
    "4279": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10BF"
    },
    "4282": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4283": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "4286": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13968,
        13971
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4287": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4288": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4289": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "POP",
      "path": "3"
    },
    "4290": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13968,
        13971
      ],
      "op": "POP",
      "path": "3"
    },
    "4291": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1018"
    },
    "4294": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4295": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13929,
        14055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4296": {
      "op": "POP"
    },
    "4297": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 53
    },
    "4298": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D2"
    },
    "4301": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4302": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "4305": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13750,
        13754
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4306": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4307": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4308": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "POP",
      "path": "3"
    },
    "4309": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13750,
        13754
      ],
      "op": "POP",
      "path": "3"
    },
    "4310": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF19"
    },
    "4313": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4314": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13715,
        14059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4315": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14065,
        14082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4317": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14090,
        14108
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4318": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14120,
        14126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4320": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4321": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14132,
        14134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4322": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14130,
        14131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4323": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14130,
        14134
      ],
      "op": "LT",
      "path": "3"
    },
    "4324": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4325": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C6"
    },
    "4328": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4329": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14422,
        14425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F3"
    },
    "4332": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14422,
        14423
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4333": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14424,
        14425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4335": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14422,
        14425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "4338": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14422,
        14425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4339": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14422,
        14425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4340": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14418,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10FE"
    },
    "4343": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14418,
        14426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4344": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14418,
        14419
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4346": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14418,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "4349": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14418,
        14426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4350": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14418,
        14426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4351": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14414
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4353": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14414
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4354": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x110B"
    },
    "4357": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4358": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4359": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "4362": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14404,
        14427
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4363": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14404,
        14427
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4364": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14401,
        14783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B4"
    },
    "4367": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14401,
        14783
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4368": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14469
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 54
    },
    "4369": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14470,
        14471
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4370": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4371": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4372": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4373": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "LT",
      "path": "3"
    },
    "4374": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1121"
    },
    "4377": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4378": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1121"
    },
    "4381": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4384": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14459,
        14472
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4385": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4386": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4388": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4389": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4390": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "MUL",
      "path": "3"
    },
    "4391": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4392": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4393": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4394": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "ADD",
      "path": "3"
    },
    "4395": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "ADD",
      "path": "3"
    },
    "4396": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14459,
        14472
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4397": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4399": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4400": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4409": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4410": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14492,
        14496
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4411": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4413": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4414": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ADD",
      "path": "3"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "op": "SUB"
    },
    "4424": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4425": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4426": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "AND",
      "path": "3"
    },
    "4427": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4428": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4433": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14483
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4436": {
      "op": "ADD"
    },
    "4437": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4439": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4441": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4442": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4443": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4444": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "SUB",
      "path": "3"
    },
    "4445": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4446": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4447": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "GAS",
      "path": "3"
    },
    "4448": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4449": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4450": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4451": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4452": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1171"
    },
    "4455": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4456": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4457": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4459": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4460": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4461": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4462": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4464": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4465": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4466": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "POP",
      "path": "3"
    },
    "4467": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "POP",
      "path": "3"
    },
    "4468": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "POP",
      "path": "3"
    },
    "4469": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "POP",
      "path": "3"
    },
    "4470": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4472": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4473": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4474": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4476": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "NOT",
      "path": "3"
    },
    "4477": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4479": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4480": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ADD",
      "path": "3"
    },
    "4481": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "AND",
      "path": "3"
    },
    "4482": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4483": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ADD",
      "path": "3"
    },
    "4484": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4485": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4487": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4488": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "POP",
      "path": "3"
    },
    "4489": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4490": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "ADD",
      "path": "3"
    },
    "4491": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4492": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1195"
    },
    "4495": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4496": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4497": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F80"
    },
    "4500": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14452,
        14498
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4501": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14452,
        14498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4502": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14439,
        14498
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14507,
        14522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4505": {
      "branch": 153,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14507,
        14522
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4506": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14504,
        14715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EF"
    },
    "4509": {
      "branch": 153,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14504,
        14715
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4510": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A8"
    },
    "4513": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14538,
        14539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4515": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14535
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4516": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "4519": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14534,
        14539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4520": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14539
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4521": {
      "branch": 154,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14544
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4522": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4523": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4524": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B4"
    },
    "4527": {
      "branch": 154,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14554
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14548,
        14554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4530": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14548,
        14554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4531": {
      "branch": 155,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14548,
        14554
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4532": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14534,
        14554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4533": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4534": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D9"
    },
    "4537": {
      "branch": 155,
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4538": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14575,
        14624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 55,
      "value": "0x11D2"
    },
    "4541": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14607,
        14623
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x3A35294400"
    },
    "4547": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14576,
        14596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CC"
    },
    "4550": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14589,
        14596
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4551": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14576,
        14586
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4552": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14576,
        14596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "4555": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14576,
        14596
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4556": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14576,
        14596
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4557": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14575,
        14606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4558": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14575,
        14606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2670"
    },
    "4561": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14575,
        14624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4562": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14575,
        14624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4563": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14563,
        14624
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4564": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14563,
        14624
      ],
      "op": "POP",
      "path": "3"
    },
    "4565": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EF"
    },
    "4568": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4569": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4570": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14656,
        14701
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 56,
      "value": "0x11EC"
    },
    "4573": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14683,
        14699
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x3A35294400"
    },
    "4579": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14657,
        14677
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "4582": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14670,
        14677
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4583": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14657,
        14667
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4584": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14657,
        14677
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "4587": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14657,
        14677
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4588": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14656,
        14701
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4589": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14644,
        14701
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4590": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14644,
        14701
      ],
      "op": "POP",
      "path": "3"
    },
    "4591": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14530,
        14709
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4592": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14740
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 57
    },
    "4593": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14741,
        14742
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4594": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4595": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4596": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4597": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "LT",
      "path": "3"
    },
    "4598": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1201"
    },
    "4601": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4602": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1201"
    },
    "4605": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4608": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14730,
        14743
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4609": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4610": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4612": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "MUL",
      "path": "3"
    },
    "4613": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4615": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "ADD",
      "path": "3"
    },
    "4616": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "ADD",
      "path": "3"
    },
    "4617": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14730,
        14743
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "op": "SUB"
    },
    "4626": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14753
      ],
      "op": "AND",
      "path": "3"
    },
    "4627": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14753
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "4632": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14760
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4633": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14762
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4634": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14763,
        14764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4636": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1225"
    },
    "4639": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14764
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4640": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14764
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4641": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "4644": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14761,
        14764
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4645": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14761,
        14764
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4646": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4647": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4648": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4649": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "LT",
      "path": "3"
    },
    "4650": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1235"
    },
    "4653": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4654": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1235"
    },
    "4657": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "4660": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14754,
        14765
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4661": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4662": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4664": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "MUL",
      "path": "3"
    },
    "4665": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4667": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "ADD",
      "path": "3"
    },
    "4668": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "ADD",
      "path": "3"
    },
    "4669": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14754,
        14765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4670": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14767,
        14776
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4671": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4673": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4674": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4675": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4680": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "AND",
      "path": "3"
    },
    "4681": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4683": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SHL",
      "path": "3"
    },
    "4684": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4685": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4686": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4688": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4689": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126F"
    },
    "4692": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4693": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4694": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "SUB"
    },
    "4703": {
      "op": "SWAP3"
    },
    "4704": {
      "op": "SWAP1"
    },
    "4705": {
      "op": "SWAP3"
    },
    "4706": {
      "op": "AND"
    },
    "4707": {
      "op": "DUP3"
    },
    "4708": {
      "op": "MSTORE"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4711": {
      "op": "DUP3"
    },
    "4712": {
      "op": "ADD"
    },
    "4713": {
      "op": "MSTORE"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "SWAP1"
    },
    "4718": {
      "op": "JUMP"
    },
    "4719": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4720": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4722": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4724": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4725": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4726": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4727": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SUB",
      "path": "3"
    },
    "4728": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4729": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4731": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4732": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "GAS",
      "path": "3"
    },
    "4733": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "CALL",
      "path": "3"
    },
    "4734": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4735": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4736": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4737": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x128E"
    },
    "4740": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4741": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4742": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4744": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4745": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4746": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4747": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4749": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4750": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4751": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4752": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4753": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4754": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4755": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4757": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4758": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4759": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4761": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "NOT",
      "path": "3"
    },
    "4762": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4764": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4765": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4766": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "AND",
      "path": "3"
    },
    "4767": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4768": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4769": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4770": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4772": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4773": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4774": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4775": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "ADD",
      "path": "3"
    },
    "4776": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4777": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B2"
    },
    "4780": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4781": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4782": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "4785": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14723,
        14777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4786": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4787": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14723,
        14777
      ],
      "op": "POP",
      "path": "3"
    },
    "4788": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14401,
        14783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4789": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 58
    },
    "4790": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12BE"
    },
    "4793": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4794": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "4797": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14136,
        14139
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4798": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4799": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4800": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "POP",
      "path": "3"
    },
    "4801": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14136,
        14139
      ],
      "op": "POP",
      "path": "3"
    },
    "4802": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10E0"
    },
    "4805": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4806": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14116,
        14793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14832,
        14842
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 59,
      "value": "0x8"
    },
    "4810": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14832,
        14842
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4811": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14844,
        14859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4813": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14844,
        14859
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4814": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4816": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4817": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4818": {
      "op": "SWAP3"
    },
    "4819": {
      "op": "DUP4"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4823": {
      "op": "DUP4"
    },
    "4824": {
      "op": "ADD"
    },
    "4825": {
      "op": "SWAP2"
    },
    "4826": {
      "op": "SWAP1"
    },
    "4827": {
      "op": "SWAP2"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "DUP2"
    },
    "4830": {
      "op": "ADD"
    },
    "4831": {
      "op": "DUP5"
    },
    "4832": {
      "op": "SWAP1"
    },
    "4833": {
      "op": "MSTORE"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4836": {
      "op": "DUP2"
    },
    "4837": {
      "op": "ADD"
    },
    "4838": {
      "op": "DUP6"
    },
    "4839": {
      "op": "SWAP1"
    },
    "4840": {
      "op": "MSTORE"
    },
    "4841": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14820,
        14830
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4842": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14820,
        14830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4843": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x87E5A7775B8AC2EAD741E32752431BFFEFF76EC5F347CC202A6BAD454653930B"
    },
    "4876": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4882": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4883": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4884": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4885": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "SUB",
      "path": "3"
    },
    "4886": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4887": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14811,
        14874
      ],
      "op": "LOG2",
      "path": "3"
    },
    "4888": {
      "op": "POP"
    },
    "4889": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14886,
        14893
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 60
    },
    "4890": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        14886,
        14893
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4891": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "offset": [
        13332,
        14901
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "fn": "ForgeTest.mintTokensArrayTo",
      "jump": "o",
      "offset": [
        13332,
        14901
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4900": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4901": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10640,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4903": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10673,
        10680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1D"
    },
    "4905": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10673,
        10680
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4906": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10670
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4907": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1334"
    },
    "4910": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4911": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4912": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "4915": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10655,
        10680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4916": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10655,
        10680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4917": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10640,
        10680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4918": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10640,
        10680
      ],
      "op": "POP",
      "path": "3"
    },
    "4919": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10685,
        10703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4921": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10719,
        10728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "4923": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10719,
        10728
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4924": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4926": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10716
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4927": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1348"
    },
    "4930": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10728
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4931": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4932": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "4935": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10706,
        10728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4936": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10706,
        10728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4937": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10685,
        10728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10749,
        10769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4941": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10772,
        10789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1356"
    },
    "4944": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10685,
        10728
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4945": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10772,
        10776
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4946": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10772,
        10789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "4949": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10772,
        10789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4950": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10772,
        10789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4951": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10749,
        10789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4952": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10749,
        10789
      ],
      "op": "POP",
      "path": "3"
    },
    "4953": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10810,
        10856
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 61,
      "value": "0x136A"
    },
    "4956": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10845,
        10854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "4958": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10845,
        10854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4959": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10842,
        10843
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4961": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10842,
        10854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF0"
    },
    "4964": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10842,
        10854
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4965": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10842,
        10854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4966": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10842,
        10854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "4969": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10842,
        10854
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4970": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10810,
        10856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4971": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10794,
        10807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "4973": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10794,
        10856
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4974": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10860,
        10869
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4976": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10872,
        10913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1381"
    },
    "4979": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "4982": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10873,
        10891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CC"
    },
    "4985": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10873,
        10885
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4986": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10888,
        10891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "4989": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10873,
        10891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "4992": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10873,
        10891
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4993": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10872,
        10913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4994": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10860,
        10913
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10917,
        10930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4998": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10943,
        10946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5001": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10940
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1393"
    },
    "5004": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10860,
        10913
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5005": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10937,
        10940
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5007": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10940
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5010": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10933,
        10940
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5011": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10940
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5012": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x139D"
    },
    "5015": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10946
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5016": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5017": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "5020": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        10933,
        10946
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5021": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10933,
        10946
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5022": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10917,
        10946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5023": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10917,
        10946
      ],
      "op": "POP",
      "path": "3"
    },
    "5024": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10950,
        10967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5026": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10986,
        10989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "5028": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10978,
        10983
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5029": {
      "branch": 156,
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10978,
        10989
      ],
      "op": "LT",
      "path": "3"
    },
    "5030": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5031": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13EF"
    },
    "5034": {
      "branch": 156,
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5035": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11044,
        11067
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 62,
      "value": "0x13BE"
    },
    "5038": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11063,
        11066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5041": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11045,
        11057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5044": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11056,
        11057
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5045": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11045,
        11053
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x26F7F3C"
    },
    "5050": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11045,
        11057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5053": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11045,
        11057
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5054": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11044,
        11067
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5055": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13DE"
    },
    "5058": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11034,
        11040
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xC0840"
    },
    "5062": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11020,
        11026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13D0"
    },
    "5065": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11025,
        11026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5067": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11020,
        11021
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5068": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11020,
        11026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB0"
    },
    "5071": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11020,
        11026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5072": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11020,
        11026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5073": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11008,
        11028
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5076": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11008,
        11028
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5077": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11008,
        11016
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3A2CDF0"
    },
    "5082": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11008,
        11028
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5085": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11008,
        11028
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5086": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5087": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11067
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "5090": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5091": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5092": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11067
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "5095": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11007,
        11067
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5096": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11007,
        11067
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5097": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10995,
        11067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5098": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10995,
        11067
      ],
      "op": "POP",
      "path": "3"
    },
    "5099": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F6"
    },
    "5102": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5103": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11097,
        11106
      ],
      "op": "PUSH4",
      "path": "3",
      "statement": 63,
      "value": "0x1443FD00"
    },
    "5110": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        10975,
        11112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5111": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11220,
        11221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5113": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11194,
        11218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "5115": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11194,
        11218
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5116": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "5118": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11191
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5119": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1408"
    },
    "5122": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11218
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5123": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11218
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5124": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5127": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11182,
        11218
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5128": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11182,
        11218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5129": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1413"
    },
    "5132": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11219
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5133": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11178
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3C"
    },
    "5135": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5138": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11172,
        11219
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5139": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11219
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5140": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141D"
    },
    "5143": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11221
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5144": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11221
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5145": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "5148": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11172,
        11221
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5149": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11172,
        11221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5150": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11127,
        11142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5152": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11127,
        11142
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5153": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11127,
        11142
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5154": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5156": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5157": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5164": {
      "op": "SHL"
    },
    "5165": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5166": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5167": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11162,
        11166
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5168": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5169": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5170": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ADD",
      "path": "3"
    },
    "5171": {
      "op": "SWAP3"
    },
    "5172": {
      "op": "SWAP1"
    },
    "5173": {
      "op": "SWAP3"
    },
    "5174": {
      "op": "MSTORE"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11127,
        11142
      ],
      "op": "AND",
      "path": "3"
    },
    "5184": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11127,
        11142
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5185": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11153
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "5190": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5193": {
      "op": "ADD"
    },
    "5194": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5196": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5198": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5199": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5200": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5201": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "SUB",
      "path": "3"
    },
    "5202": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5203": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5204": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "GAS",
      "path": "3"
    },
    "5205": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "5206": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5207": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5208": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5209": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1466"
    },
    "5212": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5213": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5214": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5216": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5217": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5218": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5219": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5221": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5222": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5223": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "POP",
      "path": "3"
    },
    "5224": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "POP",
      "path": "3"
    },
    "5225": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "POP",
      "path": "3"
    },
    "5226": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "POP",
      "path": "3"
    },
    "5227": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5229": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5230": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5231": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5233": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "NOT",
      "path": "3"
    },
    "5234": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5236": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5237": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ADD",
      "path": "3"
    },
    "5238": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "AND",
      "path": "3"
    },
    "5239": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5240": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ADD",
      "path": "3"
    },
    "5241": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5242": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5244": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5245": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "POP",
      "path": "3"
    },
    "5246": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5247": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "ADD",
      "path": "3"
    },
    "5248": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5249": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x148A"
    },
    "5252": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5253": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5254": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F80"
    },
    "5257": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11120,
        11168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5258": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5259": {
      "branch": 157,
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11120,
        11222
      ],
      "op": "GT",
      "path": "3"
    },
    "5260": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5261": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155F"
    },
    "5264": {
      "branch": 157,
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5265": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 64,
      "value": "0x4"
    },
    "5267": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5268": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11340,
        11355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5270": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11340,
        11355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5271": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11397,
        11406
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "5273": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11397,
        11406
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5274": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11385,
        11394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "5276": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11385,
        11394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5283": {
      "op": "SHL"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5286": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5287": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "AND",
      "path": "3"
    },
    "5288": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11314,
        11329
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5289": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11339
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "5294": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11339
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5295": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11340,
        11355
      ],
      "op": "AND",
      "path": "3"
    },
    "5296": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11340,
        11355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5297": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11357,
        11426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D9"
    },
    "5300": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11357,
        11426
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5301": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11412,
        11425
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBEBC200"
    },
    "5306": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11412,
        11425
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5307": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11397,
        11406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5308": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14C5"
    },
    "5311": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11373,
        11382
      ],
      "op": "DUP9",
      "path": "3"
    },
    "5312": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11359,
        11369
      ],
      "op": "DUP14",
      "path": "3"
    },
    "5313": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5316": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11358,
        11382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5317": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5318": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CF"
    },
    "5321": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5322": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5323": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5326": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11358,
        11394
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5327": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11394
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5328": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11406
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5331": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11406
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5332": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11406
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5333": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11358,
        11406
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5336": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11358,
        11406
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5337": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11357,
        11426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5338": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5340": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5347": {
      "op": "SHL"
    },
    "5348": {
      "op": "SUB"
    },
    "5349": {
      "op": "NOT"
    },
    "5350": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "5352": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5353": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5354": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SHL",
      "path": "3"
    },
    "5355": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "AND",
      "path": "3"
    },
    "5356": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5357": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "SUB"
    },
    "5366": {
      "op": "SWAP1"
    },
    "5367": {
      "op": "SWAP3"
    },
    "5368": {
      "op": "AND"
    },
    "5369": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5371": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5372": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ADD",
      "path": "3"
    },
    "5373": {
      "op": "MSTORE"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5376": {
      "op": "DUP3"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5384": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5386": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5387": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5388": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5389": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SUB",
      "path": "3"
    },
    "5390": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5391": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5393": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5394": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "GAS",
      "path": "3"
    },
    "5395": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "CALL",
      "path": "3"
    },
    "5396": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5397": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5398": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5399": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1524"
    },
    "5402": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5403": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5404": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5406": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5407": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5408": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5409": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5411": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5412": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5413": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "POP",
      "path": "3"
    },
    "5414": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "POP",
      "path": "3"
    },
    "5415": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "POP",
      "path": "3"
    },
    "5416": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "POP",
      "path": "3"
    },
    "5417": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5419": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5420": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5421": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5423": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "NOT",
      "path": "3"
    },
    "5424": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5426": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5427": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ADD",
      "path": "3"
    },
    "5428": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "AND",
      "path": "3"
    },
    "5429": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5430": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ADD",
      "path": "3"
    },
    "5431": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5432": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5434": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5435": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "POP",
      "path": "3"
    },
    "5436": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5437": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "ADD",
      "path": "3"
    },
    "5438": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5439": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1548"
    },
    "5442": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5443": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5444": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "5447": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11307,
        11427
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5448": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11307,
        11427
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11448,
        11452
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x1B"
    },
    "5452": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11448,
        11452
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5453": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1557"
    },
    "5456": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11444,
        11452
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5457": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11444,
        11445
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5459": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11444,
        11452
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5462": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "i",
      "offset": [
        11444,
        11452
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5463": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11444,
        11452
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5464": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11432,
        11441
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "5466": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11432,
        11452
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5467": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1565"
    },
    "5470": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5471": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5472": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11478,
        11479
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0x0"
    },
    "5474": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11466,
        11475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "5476": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11466,
        11479
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5477": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11117,
        11484
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5478": {
      "op": "POP"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11499,
        11509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x8"
    },
    "5482": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11499,
        11509
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5483": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11487,
        11496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "5485": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11487,
        11509
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5486": {
      "op": "POP"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11541,
        11556
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 68
    },
    "5489": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11531,
        11538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1D"
    },
    "5491": {
      "fn": "ForgeTest.ARewardSender",
      "offset": [
        11531,
        11556
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "fn": "ForgeTest.ARewardSender",
      "jump": "o",
      "offset": [
        10559,
        11560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5495": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5496": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11817,
        11829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5498": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11836,
        11850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5499": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11881,
        11896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "5501": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11881,
        11896
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5502": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11898,
        11908
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5503": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11910,
        11915
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5504": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5506": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5507": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5509": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "ADD",
      "path": "3"
    },
    "5510": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1591"
    },
    "5513": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5514": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5515": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5516": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5517": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F27"
    },
    "5520": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        11864,
        11916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5521": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5522": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5524": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5525": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5527": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5528": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5529": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SUB",
      "path": "3"
    },
    "5530": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SUB",
      "path": "3"
    },
    "5531": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5532": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5533": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5534": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5536": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11864,
        11916
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5537": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5538": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5539": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5540": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5542": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "ADD",
      "path": "3"
    },
    "5543": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11854,
        11917
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5544": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11836,
        11917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5545": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11836,
        11917
      ],
      "op": "POP",
      "path": "3"
    },
    "5546": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11989,
        12005
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 69
    },
    "5547": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11979,
        11985
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5548": {
      "branch": 158,
      "fn": "ForgeTest.mintTo",
      "offset": [
        11979,
        12005
      ],
      "op": "EQ",
      "path": "3"
    },
    "5549": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C8"
    },
    "5552": {
      "branch": 158,
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5553": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5555": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5562": {
      "op": "SHL"
    },
    "5563": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5564": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5565": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5567": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "ADD",
      "path": "3"
    },
    "5568": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "5571": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5572": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FBF"
    },
    "5575": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        11971,
        12056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5576": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11971,
        12056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5577": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12134,
        12146
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 70,
      "value": "0xC"
    },
    "5579": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12134,
        12146
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5580": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12116,
        12146
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5581": {
      "branch": 159,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12116,
        12146
      ],
      "op": "LT",
      "path": "3"
    },
    "5582": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E9"
    },
    "5585": {
      "branch": 159,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5586": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5588": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5595": {
      "op": "SHL"
    },
    "5596": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5597": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5598": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5600": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "ADD",
      "path": "3"
    },
    "5601": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "5604": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5605": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300D"
    },
    "5608": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12108,
        12191
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5609": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12108,
        12191
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5610": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12195,
        12217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x15F1"
    },
    "5613": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12195,
        12215
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236F"
    },
    "5616": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12195,
        12217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5617": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12195,
        12217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5618": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12248,
        12265
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0x12"
    },
    "5620": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12248,
        12265
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5621": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12230,
        12245
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5622": {
      "branch": 160,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12230,
        12265
      ],
      "op": "GT",
      "path": "3"
    },
    "5623": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163A"
    },
    "5626": {
      "branch": 160,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5627": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5629": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5636": {
      "op": "SHL"
    },
    "5637": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5638": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5641": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5643": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5644": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "ADD",
      "path": "3"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5650": {
      "op": "DUP3"
    },
    "5651": {
      "op": "ADD"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "PUSH21",
      "value": "0x4E6F2073616D65207365636F6E6420736F6C766573"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "5677": {
      "op": "SHL"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5680": {
      "op": "DUP3"
    },
    "5681": {
      "op": "ADD"
    },
    "5682": {
      "op": "MSTORE"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "5689": {
      "op": "JUMP"
    },
    "5690": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12222,
        12291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5691": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12349,
        12358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5693": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "5696": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12381,
        12398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "5698": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12381,
        12398
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5699": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12378
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5700": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164D"
    },
    "5703": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12398
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5704": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12398
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5705": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12398
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "5708": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12363,
        12398
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5709": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12363,
        12398
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5710": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12362,
        12405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1659"
    },
    "5713": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12362,
        12405
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5714": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12402,
        12405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5717": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12362,
        12405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5720": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12362,
        12405
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5721": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12362,
        12405
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5722": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12361,
        12419
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1663"
    },
    "5725": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12361,
        12419
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5726": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12361,
        12419
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5727": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12361,
        12419
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "5730": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12361,
        12419
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5731": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12361,
        12419
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5732": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12349,
        12419
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12423,
        12433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5736": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12446,
        12449
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5739": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1675"
    },
    "5742": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12349,
        12419
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5743": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12440,
        12443
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5745": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5748": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12436,
        12443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5749": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5750": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12449
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x167F"
    },
    "5753": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12449
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5754": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12449
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5755": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12449
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "5758": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12436,
        12449
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5759": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12436,
        12449
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5760": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12423,
        12449
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5761": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12423,
        12449
      ],
      "op": "POP",
      "path": "3"
    },
    "5762": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12453,
        12467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5764": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12486,
        12489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "5767": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12478,
        12483
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5768": {
      "branch": 161,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12478,
        12489
      ],
      "op": "LT",
      "path": "3"
    },
    "5769": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5770": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C4"
    },
    "5773": {
      "branch": 161,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5774": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12545,
        12568
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 73,
      "value": "0x16A1"
    },
    "5777": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12564,
        12567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5780": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12546,
        12558
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5783": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12557,
        12558
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5784": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12546,
        12554
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x26F7F3C"
    },
    "5789": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12546,
        12558
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5792": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12546,
        12558
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5793": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12545,
        12568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5794": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B3"
    },
    "5797": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12534,
        12542
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xC0840"
    },
    "5801": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12520,
        12526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13D0"
    },
    "5804": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12525,
        12526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5806": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12520,
        12521
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5807": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12520,
        12526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB0"
    },
    "5810": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12520,
        12526
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5811": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12543
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5812": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16BD"
    },
    "5815": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12568
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5816": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5817": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "5820": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12507,
        12568
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5821": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12507,
        12568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5822": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12495,
        12568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5823": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12495,
        12568
      ],
      "op": "POP",
      "path": "3"
    },
    "5824": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E9"
    },
    "5827": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5828": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5829": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12619
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 74,
      "value": "0x16D8"
    },
    "5832": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12615,
        12618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "5835": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12596,
        12609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5838": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12596,
        12597
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5839": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12600,
        12609
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "5844": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12596,
        12609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5847": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12596,
        12609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5848": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5849": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E6"
    },
    "5852": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12633
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5853": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12623,
        12632
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x14DC9380"
    },
    "5858": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "5861": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12595,
        12633
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5862": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12595,
        12633
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5863": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12583,
        12633
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5864": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12583,
        12633
      ],
      "op": "POP",
      "path": "3"
    },
    "5865": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12475,
        12638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5866": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12727
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x1721"
    },
    "5869": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12684,
        12726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1702"
    },
    "5872": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12716,
        12725
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "5877": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12701,
        12710
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5878": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "5880": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12698
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5881": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5884": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12710
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5885": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5886": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12685,
        12710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5889": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12685,
        12710
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5890": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12684,
        12726
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "op": "SUB"
    },
    "5899": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "DUP9",
      "path": "3"
    },
    "5900": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "AND",
      "path": "3"
    },
    "5901": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5903": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5904": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5905": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5906": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "5908": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5910": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5911": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5913": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5914": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5915": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5916": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5917": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "5920": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12663,
        12727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5921": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12663,
        12727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5928": {
      "op": "SHL"
    },
    "5929": {
      "op": "SUB"
    },
    "5930": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5931": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "AND",
      "path": "3"
    },
    "5932": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5934": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5935": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5936": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5937": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "5939": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5941": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5942": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5944": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5945": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12660
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5946": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12644,
        12727
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5947": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12790,
        12803
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 76,
      "value": "0x10"
    },
    "5949": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12790,
        12803
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5950": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1777"
    },
    "5953": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12836
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5954": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12789,
        12835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1756"
    },
    "5957": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12789,
        12835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5958": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12821,
        12834
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBEBC200"
    },
    "5963": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12821,
        12834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5964": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12790,
        12815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "5967": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12790,
        12815
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5968": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12806,
        12815
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5969": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12806,
        12815
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5970": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12790,
        12815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "5973": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12790,
        12815
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5974": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12789,
        12835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5975": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12768,
        12783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5977": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12768,
        12783
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5984": {
      "op": "SHL"
    },
    "5985": {
      "op": "SUB"
    },
    "5986": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12768,
        12783
      ],
      "op": "AND",
      "path": "3"
    },
    "5987": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5989": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5990": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5991": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5992": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "5994": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5996": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5997": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5999": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6000": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6001": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6002": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12784
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6003": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "6006": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12759,
        12836
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6007": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12759,
        12836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6008": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6010": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12740,
        12755
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "op": "SUB"
    },
    "6019": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12740,
        12755
      ],
      "op": "AND",
      "path": "3"
    },
    "6020": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6022": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6023": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6024": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6025": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "6027": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6029": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6030": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6032": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6033": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12756
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6034": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12731,
        12836
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6035": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12878,
        12891
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 77,
      "value": "0x10"
    },
    "6037": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12878,
        12891
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6038": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17B7"
    },
    "6041": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6042": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12877,
        12919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17AE"
    },
    "6045": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12877,
        12919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6046": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12909,
        12918
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "6051": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12909,
        12918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6052": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12878,
        12903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "6055": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12878,
        12903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6056": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12894,
        12903
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6057": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12894,
        12903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6058": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12878,
        12903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "6061": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12878,
        12903
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6062": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12877,
        12919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6063": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "6065": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12872
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6066": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12872
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6067": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "6070": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        12860,
        12920
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6071": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12860,
        12920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6072": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12845,
        12857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "6074": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12845,
        12920
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6075": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12944,
        12959
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 78
    },
    "6076": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12924,
        12941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "6078": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12924,
        12959
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6079": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12967,
        12976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "6081": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12967,
        12976
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6082": {
      "branch": 162,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12967,
        12980
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6083": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12964,
        13203
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1915"
    },
    "6086": {
      "branch": 162,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12964,
        13203
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6087": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12997,
        13000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "6089": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12989,
        12994
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6090": {
      "branch": 163,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12989,
        13000
      ],
      "op": "LT",
      "path": "3"
    },
    "6091": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6092": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1875"
    },
    "6095": {
      "branch": 163,
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6096": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 79,
      "value": "0x4"
    },
    "6098": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6099": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13073,
        13082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "6101": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13073,
        13082
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6102": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13061,
        13070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "6104": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13061,
        13070
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "op": "SUB"
    },
    "6113": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6114": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6115": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "AND",
      "path": "3"
    },
    "6116": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13014,
        13029
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6117": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13039
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "6122": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13039
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6123": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13040,
        13046
      ],
      "op": "DUP10",
      "path": "3"
    },
    "6124": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13040,
        13046
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6125": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13048,
        13098
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1800"
    },
    "6128": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13048,
        13098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6129": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13088,
        13097
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "6134": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13088,
        13097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6135": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13049,
        13070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CF"
    },
    "6138": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13049,
        13070
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6139": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13049,
        13058
      ],
      "op": "DUP9",
      "path": "3"
    },
    "6140": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13049,
        13070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "6143": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        13049,
        13070
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6144": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13048,
        13098
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6145": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6147": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6154": {
      "op": "SHL"
    },
    "6155": {
      "op": "SUB"
    },
    "6156": {
      "op": "NOT"
    },
    "6157": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "6159": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6160": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6161": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SHL",
      "path": "3"
    },
    "6162": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "AND",
      "path": "3"
    },
    "6163": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6164": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6171": {
      "op": "SHL"
    },
    "6172": {
      "op": "SUB"
    },
    "6173": {
      "op": "SWAP1"
    },
    "6174": {
      "op": "SWAP3"
    },
    "6175": {
      "op": "AND"
    },
    "6176": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6178": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6179": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ADD",
      "path": "3"
    },
    "6180": {
      "op": "MSTORE"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6183": {
      "op": "DUP3"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "MSTORE"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6191": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6193": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6194": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6195": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6196": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SUB",
      "path": "3"
    },
    "6197": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6198": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6200": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6201": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "GAS",
      "path": "3"
    },
    "6202": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "CALL",
      "path": "3"
    },
    "6203": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6204": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6205": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6206": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184B"
    },
    "6209": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6210": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6211": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6213": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6214": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6215": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6216": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6218": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6219": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6220": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6221": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6222": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6223": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6224": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6226": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6227": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6228": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6230": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "NOT",
      "path": "3"
    },
    "6231": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6233": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6234": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ADD",
      "path": "3"
    },
    "6235": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "AND",
      "path": "3"
    },
    "6236": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6237": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ADD",
      "path": "3"
    },
    "6238": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6239": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6241": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6242": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6243": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6244": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "ADD",
      "path": "3"
    },
    "6245": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6246": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186F"
    },
    "6249": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6250": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6251": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "6254": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        13007,
        13099
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6255": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6256": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13007,
        13099
      ],
      "op": "POP",
      "path": "3"
    },
    "6257": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1915"
    },
    "6260": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6261": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6262": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 80,
      "value": "0x4"
    },
    "6264": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6265": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13174,
        13183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "6267": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13174,
        13183
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6268": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13162,
        13171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "6270": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13162,
        13171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6277": {
      "op": "SHL"
    },
    "6278": {
      "op": "SUB"
    },
    "6279": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6280": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6281": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "AND",
      "path": "3"
    },
    "6282": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13122,
        13137
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6283": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13147
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "6288": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13147
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6289": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13148,
        13154
      ],
      "op": "DUP10",
      "path": "3"
    },
    "6290": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13148,
        13154
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6291": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13156,
        13192
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A4"
    },
    "6294": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13156,
        13192
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6295": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13189,
        13191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6297": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13189,
        13191
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6298": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13157,
        13171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CF"
    },
    "6301": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13157,
        13171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6302": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13157,
        13159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "6304": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13157,
        13171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "6307": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        13157,
        13171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6308": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13156,
        13192
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6309": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6311": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6318": {
      "op": "SHL"
    },
    "6319": {
      "op": "SUB"
    },
    "6320": {
      "op": "NOT"
    },
    "6321": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "6323": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6324": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6325": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SHL",
      "path": "3"
    },
    "6326": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "AND",
      "path": "3"
    },
    "6327": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6328": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6335": {
      "op": "SHL"
    },
    "6336": {
      "op": "SUB"
    },
    "6337": {
      "op": "SWAP1"
    },
    "6338": {
      "op": "SWAP3"
    },
    "6339": {
      "op": "AND"
    },
    "6340": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6342": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6343": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ADD",
      "path": "3"
    },
    "6344": {
      "op": "MSTORE"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6347": {
      "op": "DUP3"
    },
    "6348": {
      "op": "ADD"
    },
    "6349": {
      "op": "MSTORE"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6355": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6357": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6358": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6359": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6360": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SUB",
      "path": "3"
    },
    "6361": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6362": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6364": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6365": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "GAS",
      "path": "3"
    },
    "6366": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "CALL",
      "path": "3"
    },
    "6367": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6368": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6369": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6370": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18EF"
    },
    "6373": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6374": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6375": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6377": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6378": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6379": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6380": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6382": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6383": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6384": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6385": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6386": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6387": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6388": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6390": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6391": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6392": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6394": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "NOT",
      "path": "3"
    },
    "6395": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6397": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6398": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ADD",
      "path": "3"
    },
    "6399": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "AND",
      "path": "3"
    },
    "6400": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6401": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ADD",
      "path": "3"
    },
    "6402": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6403": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6405": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6406": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6407": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6408": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "ADD",
      "path": "3"
    },
    "6409": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6410": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1913"
    },
    "6413": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6414": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6415": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "6418": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        13115,
        13193
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6419": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6420": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13115,
        13193
      ],
      "op": "POP",
      "path": "3"
    },
    "6421": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        12986,
        13199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6422": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13217,
        13227
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 81
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6429": {
      "op": "SHL"
    },
    "6430": {
      "op": "SUB"
    },
    "6431": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "AND",
      "path": "3"
    },
    "6432": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "6465": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13229,
        13271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1956"
    },
    "6468": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13261,
        13270
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "6473": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13246,
        13255
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6474": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "6476": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13243
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6477": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "6480": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13255
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6481": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13255
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6482": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13230,
        13255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "6485": {
      "fn": "ForgeTest.mintTo",
      "jump": "i",
      "offset": [
        13230,
        13255
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6486": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13229,
        13271
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6487": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13273,
        13283
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "6489": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13273,
        13283
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6490": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13285,
        13300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6492": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13285,
        13300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6493": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6495": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6496": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6497": {
      "op": "SWAP4"
    },
    "6498": {
      "op": "DUP5"
    },
    "6499": {
      "op": "MSTORE"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6502": {
      "op": "DUP5"
    },
    "6503": {
      "op": "ADD"
    },
    "6504": {
      "op": "SWAP3"
    },
    "6505": {
      "op": "SWAP1"
    },
    "6506": {
      "op": "SWAP3"
    },
    "6507": {
      "op": "MSTORE"
    },
    "6508": {
      "op": "SWAP1"
    },
    "6509": {
      "op": "DUP3"
    },
    "6510": {
      "op": "ADD"
    },
    "6511": {
      "op": "MSTORE"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6514": {
      "op": "ADD"
    },
    "6515": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6517": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6518": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6519": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6520": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "SUB",
      "path": "3"
    },
    "6521": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6522": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13212,
        13302
      ],
      "op": "LOG2",
      "path": "3"
    },
    "6523": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        13314,
        13323
      ],
      "op": "SWAP8",
      "path": "3",
      "statement": 82
    },
    "6524": {
      "fn": "ForgeTest.mintTo",
      "offset": [
        11727,
        13328
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "6525": {
      "op": "POP"
    },
    "6526": {
      "op": "POP"
    },
    "6527": {
      "op": "POP"
    },
    "6528": {
      "op": "POP"
    },
    "6529": {
      "op": "POP"
    },
    "6530": {
      "op": "POP"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "fn": "ForgeTest.mintTo",
      "jump": "o",
      "offset": [
        11727,
        13328
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6533": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6534": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15414,
        15426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6536": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15432,
        15446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6537": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15477,
        15492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "6539": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15477,
        15492
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6540": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15494,
        15504
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6541": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15506,
        15511
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6542": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6544": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6545": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6547": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "ADD",
      "path": "3"
    },
    "6548": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x199F"
    },
    "6551": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6552": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6553": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6554": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6555": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F27"
    },
    "6558": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15460,
        15512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6559": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6560": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6562": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6563": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6565": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6566": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6567": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SUB",
      "path": "3"
    },
    "6568": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SUB",
      "path": "3"
    },
    "6569": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6570": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6571": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6572": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6574": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15460,
        15512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6575": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6576": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6577": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6578": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6580": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "ADD",
      "path": "3"
    },
    "6581": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15450,
        15513
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6582": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15432,
        15513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6583": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15432,
        15513
      ],
      "op": "POP",
      "path": "3"
    },
    "6584": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15585,
        15601
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 83
    },
    "6585": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15575,
        15581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6586": {
      "branch": 164,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15575,
        15601
      ],
      "op": "EQ",
      "path": "3"
    },
    "6587": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D6"
    },
    "6590": {
      "branch": 164,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6591": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6593": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6600": {
      "op": "SHL"
    },
    "6601": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6602": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6603": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6605": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "ADD",
      "path": "3"
    },
    "6606": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "6609": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6610": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FBF"
    },
    "6613": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15567,
        15652
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6614": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15567,
        15652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6615": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15730,
        15742
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 84,
      "value": "0xC"
    },
    "6617": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15730,
        15742
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6618": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15712,
        15742
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6619": {
      "branch": 165,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15712,
        15742
      ],
      "op": "LT",
      "path": "3"
    },
    "6620": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19F7"
    },
    "6623": {
      "branch": 165,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6624": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6626": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6633": {
      "op": "SHL"
    },
    "6634": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6635": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6636": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6638": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "ADD",
      "path": "3"
    },
    "6639": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "6642": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6643": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300D"
    },
    "6646": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15704,
        15787
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6647": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15704,
        15787
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6648": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15791,
        15813
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 85,
      "value": "0x19FF"
    },
    "6651": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15791,
        15811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236F"
    },
    "6654": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        15791,
        15813
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6655": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15791,
        15813
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6656": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15844,
        15861
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 86,
      "value": "0x12"
    },
    "6658": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15844,
        15861
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6659": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15826,
        15841
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "6660": {
      "branch": 166,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15826,
        15861
      ],
      "op": "GT",
      "path": "3"
    },
    "6661": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A48"
    },
    "6664": {
      "branch": 166,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6665": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6667": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6674": {
      "op": "SHL"
    },
    "6675": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6676": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6679": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6681": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6682": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "ADD",
      "path": "3"
    },
    "6683": {
      "op": "MSTORE"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6688": {
      "op": "DUP3"
    },
    "6689": {
      "op": "ADD"
    },
    "6690": {
      "op": "MSTORE"
    },
    "6691": {
      "op": "PUSH21",
      "value": "0x4E6F2073616D65207365636F6E6420736F6C766573"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6715": {
      "op": "SHL"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6723": {
      "op": "ADD"
    },
    "6724": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "6727": {
      "op": "JUMP"
    },
    "6728": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15818,
        15887
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6729": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15916,
        15926
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 87
    },
    "6730": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15916,
        15933
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6731": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15899,
        15905
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6732": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6733": {
      "branch": 167,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15899,
        15933
      ],
      "op": "EQ",
      "path": "3"
    },
    "6734": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ABF"
    },
    "6737": {
      "branch": 167,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6738": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6740": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6747": {
      "op": "SHL"
    },
    "6748": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6749": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6752": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6754": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6755": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "ADD",
      "path": "3"
    },
    "6756": {
      "op": "MSTORE"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6761": {
      "op": "DUP3"
    },
    "6762": {
      "op": "ADD"
    },
    "6763": {
      "op": "MSTORE"
    },
    "6764": {
      "op": "PUSH32",
      "value": "0x4D696E74546F2068617320746F20686176652073616D65206E756D626572206F"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6799": {
      "op": "DUP3"
    },
    "6800": {
      "op": "ADD"
    },
    "6801": {
      "op": "MSTORE"
    },
    "6802": {
      "op": "PUSH32",
      "value": "0x66206164647265737373657320617320457874726146756E6473000000000000"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6837": {
      "op": "DUP3"
    },
    "6838": {
      "op": "ADD"
    },
    "6839": {
      "op": "MSTORE"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "6846": {
      "op": "JUMP"
    },
    "6847": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15891,
        15995
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6848": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15999,
        16006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6850": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6851": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16028,
        16038
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6852": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16028,
        16045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6853": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16024,
        16026
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6854": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16024,
        16045
      ],
      "op": "LT",
      "path": "3"
    },
    "6855": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6856": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C83"
    },
    "6859": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6860": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16081,
        16085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD6"
    },
    "6863": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16081,
        16083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6864": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16084,
        16085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6866": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16081,
        16085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "6869": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16081,
        16085
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6870": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16081,
        16085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6871": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16077,
        16086
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE1"
    },
    "6874": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16077,
        16086
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6875": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16077,
        16078
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6877": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16077,
        16086
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "6880": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16077,
        16086
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6881": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16077,
        16086
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6882": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "6884": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6885": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AEE"
    },
    "6888": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16087
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6889": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16087
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6890": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "6893": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16063,
        16087
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6894": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16087
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6895": {
      "branch": 168,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16063,
        16092
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6896": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16060,
        16110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AF8"
    },
    "6899": {
      "branch": 168,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16060,
        16110
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6900": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16099,
        16104
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 88,
      "value": "0x1C83"
    },
    "6903": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16099,
        16104
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6904": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16060,
        16110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6905": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16148,
        16152
      ],
      "op": "ADDRESS",
      "path": "3",
      "statement": 89
    },
    "6906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6912": {
      "op": "SHL"
    },
    "6913": {
      "op": "SUB"
    },
    "6914": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16153
      ],
      "op": "AND",
      "path": "3"
    },
    "6915": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16132
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6916": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16133,
        16135
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6917": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6918": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6919": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6920": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "LT",
      "path": "3"
    },
    "6921": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B14"
    },
    "6924": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6925": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B14"
    },
    "6928": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "6931": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16122,
        16136
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6932": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6933": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6935": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "MUL",
      "path": "3"
    },
    "6936": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6938": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "ADD",
      "path": "3"
    },
    "6939": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "ADD",
      "path": "3"
    },
    "6940": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16136
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6947": {
      "op": "SHL"
    },
    "6948": {
      "op": "SUB"
    },
    "6949": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16153
      ],
      "op": "AND",
      "path": "3"
    },
    "6950": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16153
      ],
      "op": "EQ",
      "path": "3"
    },
    "6951": {
      "branch": 169,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16153
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6952": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16190
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6953": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16190
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6954": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16190
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B65"
    },
    "6957": {
      "branch": 169,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16190
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6958": {
      "op": "POP"
    },
    "6959": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6961": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6962": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6963": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6970": {
      "op": "SHL"
    },
    "6971": {
      "op": "SUB"
    },
    "6972": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6973": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6974": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "AND",
      "path": "3"
    },
    "6975": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16175,
        16190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6976": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16167
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6977": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6978": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16168,
        16170
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6979": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16168,
        16170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6980": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6981": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "LT",
      "path": "3"
    },
    "6982": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B51"
    },
    "6985": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6986": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B51"
    },
    "6989": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "6992": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16157,
        16171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6993": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6994": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6996": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "MUL",
      "path": "3"
    },
    "6997": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6999": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "ADD",
      "path": "3"
    },
    "7000": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "ADD",
      "path": "3"
    },
    "7001": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16171
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7008": {
      "op": "SHL"
    },
    "7009": {
      "op": "SUB"
    },
    "7010": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16190
      ],
      "op": "AND",
      "path": "3"
    },
    "7011": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16190
      ],
      "op": "EQ",
      "path": "3"
    },
    "7012": {
      "branch": 170,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16157,
        16190
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7013": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16122,
        16190
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7014": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB1"
    },
    "7017": {
      "branch": 170,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7018": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7020": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7027": {
      "op": "SHL"
    },
    "7028": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7029": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7032": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7034": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7035": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "ADD",
      "path": "3"
    },
    "7036": {
      "op": "MSTORE"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7041": {
      "op": "DUP3"
    },
    "7042": {
      "op": "ADD"
    },
    "7043": {
      "op": "MSTORE"
    },
    "7044": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7079": {
      "op": "DUP3"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "op": "MSTORE"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "7088": {
      "op": "JUMP"
    },
    "7089": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16114,
        16221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7090": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16230,
        16236
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7092": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16237,
        16241
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BBE"
    },
    "7095": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16237,
        16239
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7096": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16240,
        16241
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7098": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16237,
        16241
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "7101": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16237,
        16241
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7102": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16237,
        16241
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7103": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16230,
        16241
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7104": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16230,
        16241
      ],
      "op": "POP",
      "path": "3"
    },
    "7105": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7106": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16246,
        16256
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7107": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16246,
        16263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7108": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16243,
        16244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7109": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16243,
        16263
      ],
      "op": "LT",
      "path": "3"
    },
    "7110": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7111": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C70"
    },
    "7114": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7115": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16310
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 90
    },
    "7116": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16311,
        16313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7117": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7118": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7119": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7120": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "LT",
      "path": "3"
    },
    "7121": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDC"
    },
    "7124": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7125": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BDC"
    },
    "7128": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "7131": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16300,
        16314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7132": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7133": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7135": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "MUL",
      "path": "3"
    },
    "7136": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7138": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "ADD",
      "path": "3"
    },
    "7139": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "ADD",
      "path": "3"
    },
    "7140": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16300,
        16314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "op": "SUB"
    },
    "7149": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16314
      ],
      "op": "AND",
      "path": "3"
    },
    "7150": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16293
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7151": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16294,
        16295
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7152": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7153": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7154": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7155": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "LT",
      "path": "3"
    },
    "7156": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BFF"
    },
    "7159": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7160": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BFF"
    },
    "7163": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "7166": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16283,
        16296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7167": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7168": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7170": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "MUL",
      "path": "3"
    },
    "7171": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7173": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "ADD",
      "path": "3"
    },
    "7174": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "ADD",
      "path": "3"
    },
    "7175": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16296
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7182": {
      "op": "SHL"
    },
    "7183": {
      "op": "SUB"
    },
    "7184": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16314
      ],
      "op": "AND",
      "path": "3"
    },
    "7185": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16314
      ],
      "op": "EQ",
      "path": "3"
    },
    "7186": {
      "branch": 171,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16283,
        16314
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7187": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5E"
    },
    "7190": {
      "branch": 171,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7191": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7193": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7200": {
      "op": "SHL"
    },
    "7201": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7202": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7205": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7207": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7208": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "ADD",
      "path": "3"
    },
    "7209": {
      "op": "MSTORE"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7214": {
      "op": "DUP3"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "op": "MSTORE"
    },
    "7217": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7252": {
      "op": "DUP3"
    },
    "7253": {
      "op": "ADD"
    },
    "7254": {
      "op": "MSTORE"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7257": {
      "op": "ADD"
    },
    "7258": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "7261": {
      "op": "JUMP"
    },
    "7262": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16275,
        16346
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7263": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 91
    },
    "7264": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C68"
    },
    "7267": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7268": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "7271": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16265,
        16268
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7272": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7273": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7274": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "POP",
      "path": "3"
    },
    "7275": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16265,
        16268
      ],
      "op": "POP",
      "path": "3"
    },
    "7276": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC1"
    },
    "7279": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7280": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16226,
        16352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7281": {
      "op": "POP"
    },
    "7282": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 92
    },
    "7283": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C7B"
    },
    "7286": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7287": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "7290": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16047,
        16051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7291": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7292": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7293": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "POP",
      "path": "3"
    },
    "7294": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16047,
        16051
      ],
      "op": "POP",
      "path": "3"
    },
    "7295": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC2"
    },
    "7298": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7299": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16012,
        16356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7300": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16360,
        16369
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7302": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "7305": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16392,
        16409
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "7307": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16392,
        16409
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7308": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16389
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7309": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C96"
    },
    "7312": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16409
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7313": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16409
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7314": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "7317": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16374,
        16409
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7318": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16374,
        16409
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7319": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16373,
        16416
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA2"
    },
    "7322": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16373,
        16416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7323": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16413,
        16416
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "7326": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16373,
        16416
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7329": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16373,
        16416
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7330": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16373,
        16416
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7331": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16372,
        16430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CAC"
    },
    "7334": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16372,
        16430
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7335": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16372,
        16430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7336": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16372,
        16430
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "7339": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16372,
        16430
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7340": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16372,
        16430
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7341": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16360,
        16430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7342": {
      "op": "POP"
    },
    "7343": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16434,
        16444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7345": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16457,
        16460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "7348": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CBE"
    },
    "7351": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16360,
        16430
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7352": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16451,
        16454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "7354": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7357": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16447,
        16454
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7358": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16454
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7359": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CC8"
    },
    "7362": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16460
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7363": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7364": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "7367": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16447,
        16460
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7368": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16447,
        16460
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7369": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16434,
        16460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7370": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16434,
        16460
      ],
      "op": "POP",
      "path": "3"
    },
    "7371": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16464,
        16476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7373": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16495,
        16498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "7376": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16487,
        16492
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7377": {
      "branch": 172,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16487,
        16498
      ],
      "op": "LT",
      "path": "3"
    },
    "7378": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7379": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0D"
    },
    "7382": {
      "branch": 172,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7383": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16552,
        16575
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x1CEA"
    },
    "7386": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16571,
        16574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "7389": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16553,
        16565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "7392": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16564,
        16565
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7393": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16553,
        16561
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x26F7F3C"
    },
    "7398": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16553,
        16565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7401": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16553,
        16565
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7402": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16552,
        16575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7403": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CFC"
    },
    "7406": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16541,
        16549
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xC0840"
    },
    "7410": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16527,
        16533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13D0"
    },
    "7413": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16532,
        16533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7415": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16527,
        16528
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7416": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16527,
        16533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB0"
    },
    "7419": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16527,
        16533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7420": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16550
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7421": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D06"
    },
    "7424": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16575
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7425": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7426": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "7429": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16514,
        16575
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7430": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16514,
        16575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7431": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16504,
        16575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7432": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16504,
        16575
      ],
      "op": "POP",
      "path": "3"
    },
    "7433": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D32"
    },
    "7436": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7437": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7438": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 94,
      "value": "0x1D21"
    },
    "7441": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16620,
        16623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "7444": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16601,
        16614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "7447": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16601,
        16602
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7448": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16605,
        16614
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "7453": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16601,
        16614
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7456": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16601,
        16614
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7457": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7458": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D2F"
    },
    "7461": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7462": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16628,
        16637
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x14DC9380"
    },
    "7467": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "7470": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16600,
        16638
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7471": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16600,
        16638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7472": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16590,
        16638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7473": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16590,
        16638
      ],
      "op": "POP",
      "path": "3"
    },
    "7474": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16484,
        16643
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7475": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16665,
        16666
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 95,
      "value": "0x0"
    },
    "7477": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16655,
        16662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7478": {
      "branch": 173,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16655,
        16666
      ],
      "op": "GT",
      "path": "3"
    },
    "7479": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6F"
    },
    "7482": {
      "branch": 173,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7483": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7485": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7492": {
      "op": "SHL"
    },
    "7493": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7494": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7497": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7499": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7500": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "ADD",
      "path": "3"
    },
    "7501": {
      "op": "MSTORE"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7506": {
      "op": "DUP3"
    },
    "7507": {
      "op": "ADD"
    },
    "7508": {
      "op": "MSTORE"
    },
    "7509": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7522": {
      "op": "SHL"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7525": {
      "op": "DUP3"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "MSTORE"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7530": {
      "op": "ADD"
    },
    "7531": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "7534": {
      "op": "JUMP"
    },
    "7535": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16647,
        16681
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7536": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16685,
        16702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7538": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16706,
        16724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7539": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16732,
        16738
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7541": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7542": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16744,
        16746
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7543": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16742,
        16743
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7544": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16742,
        16746
      ],
      "op": "LT",
      "path": "3"
    },
    "7545": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7546": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F49"
    },
    "7549": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7550": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17034,
        17037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D88"
    },
    "7553": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17034,
        17035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7554": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17036,
        17037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7556": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17034,
        17037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "7559": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17034,
        17037
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7560": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17034,
        17037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7561": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17030,
        17038
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D93"
    },
    "7564": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17030,
        17038
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7565": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17030,
        17031
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7567": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17030,
        17038
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "7570": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17030,
        17038
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7571": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17030,
        17038
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7572": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "7574": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17026
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7575": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DA0"
    },
    "7578": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17039
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7579": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17039
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7580": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "7583": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17016,
        17039
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7584": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17016,
        17039
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7585": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17013,
        17408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F37"
    },
    "7588": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17013,
        17408
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7589": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17081
      ],
      "op": "DUP11",
      "path": "3",
      "statement": 96
    },
    "7590": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17082,
        17083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7591": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7592": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7593": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7594": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "LT",
      "path": "3"
    },
    "7595": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB6"
    },
    "7598": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7599": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB6"
    },
    "7602": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "7605": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17071,
        17084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7606": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7607": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7609": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7610": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7611": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "MUL",
      "path": "3"
    },
    "7612": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7613": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7614": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7615": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "ADD",
      "path": "3"
    },
    "7616": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "ADD",
      "path": "3"
    },
    "7617": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17071,
        17084
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7618": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7620": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7621": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7628": {
      "op": "SHL"
    },
    "7629": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7630": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7631": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17104,
        17108
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "7632": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7634": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7635": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ADD",
      "path": "3"
    },
    "7636": {
      "op": "MSTORE"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7643": {
      "op": "SHL"
    },
    "7644": {
      "op": "SUB"
    },
    "7645": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7646": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7647": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "AND",
      "path": "3"
    },
    "7648": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7649": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "7654": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7660": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7662": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7663": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7664": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7665": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "SUB",
      "path": "3"
    },
    "7666": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7667": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7668": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "GAS",
      "path": "3"
    },
    "7669": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7670": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7671": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7672": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7673": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E06"
    },
    "7676": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7677": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7678": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7680": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7681": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7682": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7683": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7685": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7686": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7687": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "POP",
      "path": "3"
    },
    "7688": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "POP",
      "path": "3"
    },
    "7689": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "POP",
      "path": "3"
    },
    "7690": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "POP",
      "path": "3"
    },
    "7691": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7693": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7694": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7695": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7697": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "NOT",
      "path": "3"
    },
    "7698": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7700": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7701": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ADD",
      "path": "3"
    },
    "7702": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "AND",
      "path": "3"
    },
    "7703": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7704": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ADD",
      "path": "3"
    },
    "7705": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7706": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7708": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7709": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "POP",
      "path": "3"
    },
    "7710": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7711": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "ADD",
      "path": "3"
    },
    "7712": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7713": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E2A"
    },
    "7716": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7717": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7718": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F80"
    },
    "7721": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17064,
        17110
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7722": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17064,
        17110
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7723": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17051,
        17110
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7724": {
      "op": "POP"
    },
    "7725": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17119,
        17134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7726": {
      "branch": 174,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17119,
        17134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7727": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17116,
        17394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F37"
    },
    "7730": {
      "branch": 174,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17116,
        17394
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7731": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17151
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E3D"
    },
    "7734": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17150,
        17151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7736": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17147
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7737": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17151
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "7740": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17146,
        17151
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7741": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17151
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7742": {
      "branch": 175,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17156
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7743": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17166
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7744": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17166
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7745": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17166
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E49"
    },
    "7748": {
      "branch": 175,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17166
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7749": {
      "op": "POP"
    },
    "7750": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17160,
        17166
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7751": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17160,
        17166
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7752": {
      "branch": 176,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17160,
        17166
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7753": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17146,
        17166
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7754": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7755": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E68"
    },
    "7758": {
      "branch": 176,
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7759": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17187,
        17236
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 97,
      "value": "0x1E61"
    },
    "7762": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17219,
        17235
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x3A35294400"
    },
    "7768": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17188,
        17208
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CC"
    },
    "7771": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17201,
        17208
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7772": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17188,
        17198
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7773": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17188,
        17208
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7776": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17188,
        17208
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7777": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17187,
        17236
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7778": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17175,
        17236
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7779": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17175,
        17236
      ],
      "op": "POP",
      "path": "3"
    },
    "7780": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7E"
    },
    "7783": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7784": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7785": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17268,
        17313
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 98,
      "value": "0x1E7B"
    },
    "7788": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17295,
        17311
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x3A35294400"
    },
    "7794": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17269,
        17289
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "7797": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17282,
        17289
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7798": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17269,
        17279
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7799": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17269,
        17289
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "7802": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17269,
        17289
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7803": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17268,
        17313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7804": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17256,
        17313
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7805": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17256,
        17313
      ],
      "op": "POP",
      "path": "3"
    },
    "7806": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17142,
        17324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7807": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17349
      ],
      "op": "DUP11",
      "path": "3",
      "statement": 99
    },
    "7808": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17350,
        17351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7809": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7810": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7811": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7812": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "LT",
      "path": "3"
    },
    "7813": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E90"
    },
    "7816": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7817": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E90"
    },
    "7820": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "7823": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17339,
        17352
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7824": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7825": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7827": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "MUL",
      "path": "3"
    },
    "7828": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7830": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "ADD",
      "path": "3"
    },
    "7831": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "ADD",
      "path": "3"
    },
    "7832": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17339,
        17352
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "op": "SUB"
    },
    "7841": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17362
      ],
      "op": "AND",
      "path": "3"
    },
    "7842": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17362
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "7847": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17369
      ],
      "op": "DUP12",
      "path": "3"
    },
    "7848": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17370,
        17371
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7849": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7850": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7851": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7852": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "LT",
      "path": "3"
    },
    "7853": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB8"
    },
    "7856": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7857": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB8"
    },
    "7860": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DA7"
    },
    "7863": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17363,
        17372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7864": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7865": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7867": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "MUL",
      "path": "3"
    },
    "7868": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7870": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "ADD",
      "path": "3"
    },
    "7871": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "ADD",
      "path": "3"
    },
    "7872": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17363,
        17372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7873": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17374,
        17383
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7874": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7876": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7877": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7878": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7883": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "AND",
      "path": "3"
    },
    "7884": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7886": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SHL",
      "path": "3"
    },
    "7887": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7888": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7889": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7891": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ADD",
      "path": "3"
    },
    "7892": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF2"
    },
    "7895": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7896": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7897": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7904": {
      "op": "SHL"
    },
    "7905": {
      "op": "SUB"
    },
    "7906": {
      "op": "SWAP3"
    },
    "7907": {
      "op": "SWAP1"
    },
    "7908": {
      "op": "SWAP3"
    },
    "7909": {
      "op": "AND"
    },
    "7910": {
      "op": "DUP3"
    },
    "7911": {
      "op": "MSTORE"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "ADD"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "op": "SWAP1"
    },
    "7921": {
      "op": "JUMP"
    },
    "7922": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7923": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7925": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7927": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7928": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7929": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7930": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SUB",
      "path": "3"
    },
    "7931": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7932": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7934": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7935": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "GAS",
      "path": "3"
    },
    "7936": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "CALL",
      "path": "3"
    },
    "7937": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7938": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7939": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7940": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F11"
    },
    "7943": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7944": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7945": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7947": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7948": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7949": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7950": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7952": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7953": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7954": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7955": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7956": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7957": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7958": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7960": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7961": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7962": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7964": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "NOT",
      "path": "3"
    },
    "7965": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7967": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7968": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ADD",
      "path": "3"
    },
    "7969": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "AND",
      "path": "3"
    },
    "7970": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7971": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ADD",
      "path": "3"
    },
    "7972": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7973": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7975": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7976": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7977": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7978": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "ADD",
      "path": "3"
    },
    "7979": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7980": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F35"
    },
    "7983": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7984": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7985": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "7988": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        17332,
        17384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7989": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7990": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17332,
        17384
      ],
      "op": "POP",
      "path": "3"
    },
    "7991": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17116,
        17394
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7992": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 100
    },
    "7993": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F41"
    },
    "7996": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7997": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DBD"
    },
    "8000": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "i",
      "offset": [
        16748,
        16751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8001": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8002": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8003": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "POP",
      "path": "3"
    },
    "8004": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16748,
        16751
      ],
      "op": "POP",
      "path": "3"
    },
    "8005": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D75"
    },
    "8008": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8009": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        16728,
        17418
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8010": {
      "op": "POP"
    },
    "8011": {
      "op": "POP"
    },
    "8012": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17442,
        17457
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 101
    },
    "8013": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17422,
        17439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "8015": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17422,
        17457
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8016": {
      "op": "POP"
    },
    "8017": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        17468,
        17475
      ],
      "op": "SWAP10",
      "path": "3",
      "statement": 102
    },
    "8018": {
      "fn": "ForgeTest.empty_mintTo",
      "offset": [
        15281,
        17482
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "op": "POP"
    },
    "8021": {
      "op": "POP"
    },
    "8022": {
      "op": "POP"
    },
    "8023": {
      "op": "POP"
    },
    "8024": {
      "op": "POP"
    },
    "8025": {
      "op": "POP"
    },
    "8026": {
      "op": "POP"
    },
    "8027": {
      "op": "POP"
    },
    "8028": {
      "fn": "ForgeTest.empty_mintTo",
      "jump": "o",
      "offset": [
        15281,
        17482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8029": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8030": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9451,
        9463
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8032": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9470,
        9492
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 103,
      "value": "0x1F67"
    },
    "8035": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9470,
        9490
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236F"
    },
    "8038": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9470,
        9492
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8039": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9470,
        9492
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8040": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9550,
        9559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8042": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "8045": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9582,
        9599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "8047": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9582,
        9599
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8048": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9579
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "8049": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F7A"
    },
    "8052": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9599
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8053": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8054": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "8057": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9564,
        9599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8058": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9564,
        9599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8059": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9563,
        9606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F86"
    },
    "8062": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9563,
        9606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8063": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9603,
        9606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "8066": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9563,
        9606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8069": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9563,
        9606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8070": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9563,
        9606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8071": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9562,
        9620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F90"
    },
    "8074": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9562,
        9620
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8075": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9562,
        9620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8076": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9562,
        9620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "8079": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9562,
        9620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8080": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9562,
        9620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8081": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9550,
        9620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8082": {
      "op": "POP"
    },
    "8083": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9624,
        9634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8085": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9647,
        9650
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "8088": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9644
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA2"
    },
    "8091": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9550,
        9620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8092": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9641,
        9644
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "8094": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9644
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8097": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9637,
        9644
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8098": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9644
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8099": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9650
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FAC"
    },
    "8102": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9650
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8103": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9650
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8104": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9650
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "8107": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9637,
        9650
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8108": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9637,
        9650
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8109": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9624,
        9650
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8110": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9624,
        9650
      ],
      "op": "POP",
      "path": "3"
    },
    "8111": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9654,
        9668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8113": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9687,
        9690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A"
    },
    "8116": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9679,
        9684
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8117": {
      "branch": 177,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9679,
        9690
      ],
      "op": "LT",
      "path": "3"
    },
    "8118": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8119": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FF1"
    },
    "8122": {
      "branch": 177,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8123": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9746,
        9769
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 104,
      "value": "0x1FCE"
    },
    "8126": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9765,
        9768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "8129": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9747,
        9759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8132": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9758,
        9759
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8133": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9747,
        9755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x26F7F3C"
    },
    "8138": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9747,
        9759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8141": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9747,
        9759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8142": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9746,
        9769
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8143": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9744
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FE0"
    },
    "8146": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9735,
        9743
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xC0840"
    },
    "8150": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9721,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13D0"
    },
    "8153": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9726,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8155": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9721,
        9722
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8156": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9721,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB0"
    },
    "8159": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9721,
        9727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8160": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8161": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9769
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FEA"
    },
    "8164": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9769
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8165": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8166": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9769
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "8169": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9708,
        9769
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8170": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9708,
        9769
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8171": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9696,
        9769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8172": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9696,
        9769
      ],
      "op": "POP",
      "path": "3"
    },
    "8173": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2016"
    },
    "8176": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8177": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8178": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9820
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 105,
      "value": "0x2005"
    },
    "8181": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9816,
        9819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x378"
    },
    "8184": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9797,
        9810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8187": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9797,
        9798
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8188": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9801,
        9810
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "8193": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9797,
        9810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8196": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9797,
        9810
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8197": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9820
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8198": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2013"
    },
    "8201": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8202": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9824,
        9833
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x14DC9380"
    },
    "8207": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "8210": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9796,
        9834
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8211": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9796,
        9834
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8212": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9784,
        9834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8213": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9784,
        9834
      ],
      "op": "POP",
      "path": "3"
    },
    "8214": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9676,
        9839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8215": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9928
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 106,
      "value": "0x204E"
    },
    "8218": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9885,
        9927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x202F"
    },
    "8221": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9917,
        9926
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "8226": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9902,
        9911
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8227": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "8229": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8230": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8233": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9911
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8234": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9911
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8235": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9886,
        9911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8238": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9886,
        9911
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8239": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9885,
        9927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8246": {
      "op": "SHL"
    },
    "8247": {
      "op": "SUB"
    },
    "8248": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8249": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "AND",
      "path": "3"
    },
    "8250": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8252": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8253": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8254": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8255": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "8257": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8259": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8260": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8262": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8263": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8264": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8265": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8266": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "8269": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9864,
        9928
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8270": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9864,
        9928
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8277": {
      "op": "SHL"
    },
    "8278": {
      "op": "SUB"
    },
    "8279": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8280": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "3"
    },
    "8281": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8283": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8284": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8285": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8286": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "8288": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8290": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8291": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8293": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8294": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8295": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9845,
        9928
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8296": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9991,
        10004
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 107,
      "value": "0x10"
    },
    "8298": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9991,
        10004
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8299": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9960,
        10037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2083"
    },
    "8302": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9960,
        10037
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8303": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9990,
        10036
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1756"
    },
    "8306": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9990,
        10036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8307": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10022,
        10035
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBEBC200"
    },
    "8312": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10022,
        10035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8313": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9991,
        10016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8316": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9991,
        10016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8317": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10007,
        10016
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8318": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10007,
        10016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8319": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9991,
        10016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8322": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        9991,
        10016
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8323": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9960,
        10037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8324": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9941,
        9956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "8326": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9941,
        9956
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8333": {
      "op": "SHL"
    },
    "8334": {
      "op": "SUB"
    },
    "8335": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9941,
        9956
      ],
      "op": "AND",
      "path": "3"
    },
    "8336": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8338": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8339": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8340": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8341": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9940
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "8343": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8345": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8346": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8348": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8349": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        9957
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8350": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9932,
        10037
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8351": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10079,
        10092
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 108,
      "value": "0x10"
    },
    "8353": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10079,
        10092
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8354": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10061,
        10121
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20BA"
    },
    "8357": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10061,
        10121
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8358": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10078,
        10120
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17AE"
    },
    "8361": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10078,
        10120
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8362": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10110,
        10119
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "8367": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10110,
        10119
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8368": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10079,
        10104
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8371": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10079,
        10104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8372": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10095,
        10104
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8373": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10095,
        10104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8374": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10079,
        10104
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8377": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10079,
        10104
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8378": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10061,
        10121
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8379": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10046,
        10058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "8381": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10046,
        10121
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8382": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10145,
        10160
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 109
    },
    "8383": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10125,
        10142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "8385": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10125,
        10160
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8386": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10168,
        10177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "8388": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10168,
        10177
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8389": {
      "branch": 178,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10168,
        10181
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8390": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10165,
        10404
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "8393": {
      "branch": 178,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10165,
        10404
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8394": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10198,
        10201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "8396": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10190,
        10195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8397": {
      "branch": 179,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10190,
        10201
      ],
      "op": "LT",
      "path": "3"
    },
    "8398": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8399": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2178"
    },
    "8402": {
      "branch": 179,
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8403": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 110,
      "value": "0x4"
    },
    "8405": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8406": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10274,
        10283
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "8408": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10274,
        10283
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8409": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10262,
        10271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "8411": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10262,
        10271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8418": {
      "op": "SHL"
    },
    "8419": {
      "op": "SUB"
    },
    "8420": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8421": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8422": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "AND",
      "path": "3"
    },
    "8423": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10215,
        10230
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8424": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10240
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "8429": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8430": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10241,
        10247
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8431": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10241,
        10247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8432": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10249,
        10299
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2103"
    },
    "8435": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10249,
        10299
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8436": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10289,
        10298
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "8441": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10289,
        10298
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8442": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10250,
        10271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CF"
    },
    "8445": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10250,
        10271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8446": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10250,
        10259
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8447": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10250,
        10271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8450": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10250,
        10271
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8451": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10249,
        10299
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8452": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8454": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8461": {
      "op": "SHL"
    },
    "8462": {
      "op": "SUB"
    },
    "8463": {
      "op": "NOT"
    },
    "8464": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "8466": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8467": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8468": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SHL",
      "path": "3"
    },
    "8469": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "AND",
      "path": "3"
    },
    "8470": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8471": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8478": {
      "op": "SHL"
    },
    "8479": {
      "op": "SUB"
    },
    "8480": {
      "op": "SWAP1"
    },
    "8481": {
      "op": "SWAP3"
    },
    "8482": {
      "op": "AND"
    },
    "8483": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8485": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8486": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ADD",
      "path": "3"
    },
    "8487": {
      "op": "MSTORE"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8490": {
      "op": "DUP3"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "op": "MSTORE"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8495": {
      "op": "ADD"
    },
    "8496": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8498": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8500": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8501": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8502": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8503": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SUB",
      "path": "3"
    },
    "8504": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8505": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8507": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8508": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "GAS",
      "path": "3"
    },
    "8509": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "CALL",
      "path": "3"
    },
    "8510": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8511": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8512": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8513": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214E"
    },
    "8516": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8517": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8518": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8520": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8521": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8522": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8523": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8525": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8526": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8527": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8528": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8529": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8530": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8531": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8533": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8534": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8535": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8537": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "NOT",
      "path": "3"
    },
    "8538": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8540": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8541": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ADD",
      "path": "3"
    },
    "8542": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "AND",
      "path": "3"
    },
    "8543": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8544": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ADD",
      "path": "3"
    },
    "8545": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8546": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8548": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8549": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8550": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8551": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "ADD",
      "path": "3"
    },
    "8552": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8553": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2172"
    },
    "8556": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8557": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8558": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "8561": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10208,
        10300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8562": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8563": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10208,
        10300
      ],
      "op": "POP",
      "path": "3"
    },
    "8564": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "8567": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8568": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8569": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 111,
      "value": "0x4"
    },
    "8571": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8572": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10375,
        10384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "8574": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10375,
        10384
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8575": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10363,
        10372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "8577": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10363,
        10372
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8584": {
      "op": "SHL"
    },
    "8585": {
      "op": "SUB"
    },
    "8586": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8587": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8588": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "AND",
      "path": "3"
    },
    "8589": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10323,
        10338
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8590": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10348
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "8595": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10348
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8596": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10349,
        10355
      ],
      "op": "DUP9",
      "path": "3"
    },
    "8597": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10349,
        10355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8598": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10357,
        10393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A7"
    },
    "8601": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10357,
        10393
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8602": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10390,
        10392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "8604": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10390,
        10392
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8605": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10358,
        10372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CF"
    },
    "8608": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10358,
        10372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8609": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10358,
        10360
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "8611": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10358,
        10372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8614": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10358,
        10372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8615": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10357,
        10393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8616": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8618": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8625": {
      "op": "SHL"
    },
    "8626": {
      "op": "SUB"
    },
    "8627": {
      "op": "NOT"
    },
    "8628": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "8630": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8631": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8632": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SHL",
      "path": "3"
    },
    "8633": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "AND",
      "path": "3"
    },
    "8634": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8635": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8642": {
      "op": "SHL"
    },
    "8643": {
      "op": "SUB"
    },
    "8644": {
      "op": "SWAP1"
    },
    "8645": {
      "op": "SWAP3"
    },
    "8646": {
      "op": "AND"
    },
    "8647": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8649": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8650": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ADD",
      "path": "3"
    },
    "8651": {
      "op": "MSTORE"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8654": {
      "op": "DUP3"
    },
    "8655": {
      "op": "ADD"
    },
    "8656": {
      "op": "MSTORE"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8659": {
      "op": "ADD"
    },
    "8660": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8662": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8664": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8665": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8666": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8667": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SUB",
      "path": "3"
    },
    "8668": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8669": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8671": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8672": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "GAS",
      "path": "3"
    },
    "8673": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "CALL",
      "path": "3"
    },
    "8674": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8675": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8676": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8677": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F2"
    },
    "8680": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8681": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8682": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8684": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8685": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8686": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8687": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8689": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8690": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8691": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8692": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8693": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8694": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8695": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8697": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8698": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8699": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8701": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "NOT",
      "path": "3"
    },
    "8702": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8704": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8705": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ADD",
      "path": "3"
    },
    "8706": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "AND",
      "path": "3"
    },
    "8707": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8708": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ADD",
      "path": "3"
    },
    "8709": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8710": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8712": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8713": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8714": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8715": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "ADD",
      "path": "3"
    },
    "8716": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8717": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2216"
    },
    "8720": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8721": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8722": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4F"
    },
    "8725": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10316,
        10394
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8726": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8727": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10316,
        10394
      ],
      "op": "POP",
      "path": "3"
    },
    "8728": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10187,
        10400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8729": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10418,
        10428
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 112
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8736": {
      "op": "SHL"
    },
    "8737": {
      "op": "SUB"
    },
    "8738": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "AND",
      "path": "3"
    },
    "8739": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "8772": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10430,
        10472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2259"
    },
    "8775": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10462,
        10471
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "8780": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10447,
        10456
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8781": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "8783": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10444
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8784": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "8787": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10456
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8788": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8789": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10431,
        10456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "8792": {
      "fn": "ForgeTest.mintFREE",
      "jump": "i",
      "offset": [
        10431,
        10456
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8793": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10430,
        10472
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8794": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10474,
        10484
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "8796": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10474,
        10484
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8797": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10486,
        10501
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "8799": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10486,
        10501
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8800": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8802": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8803": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8804": {
      "op": "SWAP4"
    },
    "8805": {
      "op": "DUP5"
    },
    "8806": {
      "op": "MSTORE"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8809": {
      "op": "DUP5"
    },
    "8810": {
      "op": "ADD"
    },
    "8811": {
      "op": "SWAP3"
    },
    "8812": {
      "op": "SWAP1"
    },
    "8813": {
      "op": "SWAP3"
    },
    "8814": {
      "op": "MSTORE"
    },
    "8815": {
      "op": "SWAP1"
    },
    "8816": {
      "op": "DUP3"
    },
    "8817": {
      "op": "ADD"
    },
    "8818": {
      "op": "MSTORE"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8821": {
      "op": "ADD"
    },
    "8822": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8824": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8825": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8826": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8827": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "SUB",
      "path": "3"
    },
    "8828": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8829": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10413,
        10503
      ],
      "op": "LOG2",
      "path": "3"
    },
    "8830": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        10515,
        10524
      ],
      "op": "SWAP7",
      "path": "3",
      "statement": 113
    },
    "8831": {
      "fn": "ForgeTest.mintFREE",
      "offset": [
        9365,
        10529
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "8832": {
      "op": "POP"
    },
    "8833": {
      "op": "POP"
    },
    "8834": {
      "op": "POP"
    },
    "8835": {
      "op": "POP"
    },
    "8836": {
      "op": "POP"
    },
    "8837": {
      "op": "POP"
    },
    "8838": {
      "fn": "ForgeTest.mintFREE",
      "jump": "o",
      "offset": [
        9365,
        10529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8839": {
      "fn": "SafeMath2.div",
      "offset": [
        4427,
        4563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8840": {
      "fn": "SafeMath2.div",
      "offset": [
        4485,
        4492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8842": {
      "branch": 180,
      "fn": "SafeMath2.div",
      "offset": [
        4512,
        4518
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 114
    },
    "8843": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22C4"
    },
    "8846": {
      "branch": 180,
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8847": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8849": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8858": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8861": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8863": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8864": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "ADD",
      "path": "3"
    },
    "8865": {
      "op": "MSTORE"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8870": {
      "op": "DUP3"
    },
    "8871": {
      "op": "ADD"
    },
    "8872": {
      "op": "MSTORE"
    },
    "8873": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8887": {
      "op": "SHL"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8890": {
      "op": "DUP3"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "MSTORE"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "8899": {
      "op": "JUMP"
    },
    "8900": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8901": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 115,
      "value": "0x22CE"
    },
    "8904": {
      "fn": "SafeMath2.div",
      "offset": [
        4555,
        4556
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8905": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4552
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8906": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "8909": {
      "fn": "SafeMath2.div",
      "jump": "i",
      "offset": [
        4551,
        4556
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8910": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8911": {
      "fn": "SafeMath2.div",
      "offset": [
        4544,
        4556
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8912": {
      "fn": "SafeMath2.div",
      "offset": [
        4427,
        4563
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8913": {
      "op": "POP"
    },
    "8914": {
      "op": "POP"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "fn": "SafeMath2.div",
      "jump": "o",
      "offset": [
        4427,
        4563
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8917": {
      "fn": "SafeMath2.sub",
      "offset": [
        4056,
        4194
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8918": {
      "fn": "SafeMath2.sub",
      "offset": [
        4114,
        4121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8920": {
      "fn": "SafeMath2.sub",
      "offset": [
        4146,
        4147
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 116
    },
    "8921": {
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4142
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8922": {
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4147
      ],
      "op": "LT",
      "path": "3"
    },
    "8923": {
      "branch": 181,
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4147
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8924": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2317"
    },
    "8927": {
      "branch": 181,
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8928": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8930": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8937": {
      "op": "SHL"
    },
    "8938": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8939": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8942": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8944": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8945": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "ADD",
      "path": "3"
    },
    "8946": {
      "op": "MSTORE"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8951": {
      "op": "DUP3"
    },
    "8952": {
      "op": "ADD"
    },
    "8953": {
      "op": "MSTORE"
    },
    "8954": {
      "op": "PUSH13",
      "value": "0x53756220756E646572666C6F77"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "8970": {
      "op": "SHL"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8973": {
      "op": "DUP3"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "MSTORE"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8978": {
      "op": "ADD"
    },
    "8979": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "8982": {
      "op": "JUMP"
    },
    "8983": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8984": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4187
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 117,
      "value": "0x22CE"
    },
    "8987": {
      "fn": "SafeMath2.sub",
      "offset": [
        4186,
        4187
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8988": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4183
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8989": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4187
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "8992": {
      "fn": "SafeMath2.sub",
      "jump": "i",
      "offset": [
        4182,
        4187
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8993": {
      "fn": "SafeMath2.add",
      "offset": [
        3890,
        4050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8994": {
      "fn": "SafeMath2.add",
      "offset": [
        3948,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8996": {
      "fn": "SafeMath2.add",
      "offset": [
        3948,
        3955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8997": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x232E"
    },
    "9000": {
      "fn": "SafeMath2.add",
      "offset": [
        3983,
        3984
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9001": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3980
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9002": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9005": {
      "fn": "SafeMath2.add",
      "jump": "i",
      "offset": [
        3979,
        3984
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9006": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9007": {
      "fn": "SafeMath2.add",
      "offset": [
        3967,
        3984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9008": {
      "fn": "SafeMath2.add",
      "offset": [
        3967,
        3984
      ],
      "op": "POP",
      "path": "3"
    },
    "9009": {
      "fn": "SafeMath2.add",
      "offset": [
        4007,
        4008
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 118
    },
    "9010": {
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9011": {
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4008
      ],
      "op": "LT",
      "path": "3"
    },
    "9012": {
      "branch": 182,
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4008
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9013": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22CE"
    },
    "9016": {
      "branch": 182,
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9017": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9019": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9020": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9026": {
      "op": "SHL"
    },
    "9027": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9028": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9031": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9033": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9034": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "ADD",
      "path": "3"
    },
    "9035": {
      "op": "MSTORE"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9040": {
      "op": "DUP3"
    },
    "9041": {
      "op": "ADD"
    },
    "9042": {
      "op": "MSTORE"
    },
    "9043": {
      "op": "PUSH12",
      "value": "0x416464206F766572666C6F77"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9058": {
      "op": "SHL"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9061": {
      "op": "DUP3"
    },
    "9062": {
      "op": "ADD"
    },
    "9063": {
      "op": "MSTORE"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9066": {
      "op": "ADD"
    },
    "9067": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "9070": {
      "op": "JUMP"
    },
    "9071": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17487,
        18852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9072": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17737,
        17752
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "9074": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17737,
        17752
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9075": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17720,
        17733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "9077": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17720,
        17733
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9078": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "9080": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17715
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9081": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2381"
    },
    "9084": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9085": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "9088": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17703,
        17734
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9089": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17734
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9090": {
      "branch": 183,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17752
      ],
      "op": "GT",
      "path": "3"
    },
    "9091": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9092": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9093": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2390"
    },
    "9096": {
      "branch": 183,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9097": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "POP",
      "path": "3"
    },
    "9098": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17768,
        17770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3C"
    },
    "9100": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17756,
        17765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "9102": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17756,
        17765
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9103": {
      "branch": 184,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17756,
        17770
      ],
      "op": "LT",
      "path": "3"
    },
    "9104": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17703,
        17770
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9105": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17699,
        17884
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9106": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17699,
        17884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DC"
    },
    "9109": {
      "branch": 184,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17699,
        17884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9110": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17800
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 119,
      "value": "0xE"
    },
    "9112": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17800
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9113": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23A3"
    },
    "9116": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17804
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9117": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17803,
        17804
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9119": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9122": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17791,
        17804
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9123": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17791,
        17804
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9124": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17779,
        17788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "9126": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17779,
        17804
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9127": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17779,
        17804
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9128": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17779,
        17804
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9129": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17879
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 120,
      "value": "0x23CB"
    },
    "9132": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9133": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17864,
        17877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23B7"
    },
    "9136": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17864,
        17877
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9137": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17876,
        17877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9139": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17864,
        17877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9142": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17864,
        17877
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9143": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17864,
        17877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9144": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17860,
        17878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C2"
    },
    "9147": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17860,
        17878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9148": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17860,
        17861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9150": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17860,
        17878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EBC"
    },
    "9153": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17860,
        17878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9154": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17860,
        17878
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9155": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "9157": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9158": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9159": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "9162": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17842,
        17879
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9163": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17842,
        17879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9164": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "9166": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17839
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9167": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D8"
    },
    "9170": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17879
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9171": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9172": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "9175": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17827,
        17879
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9176": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17827,
        17879
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9177": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17809,
        17824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "9179": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17809,
        17879
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9180": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        17699,
        17884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9181": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18066
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 121,
      "value": "0x8"
    },
    "9183": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18066
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9184": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18073
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23EA"
    },
    "9187": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9188": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18071,
        18072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9190": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "9193": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18056,
        18073
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9194": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18056,
        18073
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9195": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18043,
        18053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "9197": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18043,
        18073
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9198": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "9200": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18191
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9201": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23FC"
    },
    "9204": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9205": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18194,
        18195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9207": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18194,
        18195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9208": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "9211": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18167,
        18195
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9212": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18167,
        18195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9213": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18152,
        18162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "9215": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18152,
        18162
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9216": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18151,
        18196
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2409"
    },
    "9219": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18151,
        18196
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9220": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18151,
        18196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9221": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18151,
        18196
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "9224": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18151,
        18196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9225": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18151,
        18196
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9226": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18148,
        18799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25AF"
    },
    "9229": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18148,
        18799
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9230": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18210,
        18225
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 122,
      "value": "0x2415"
    },
    "9233": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18210,
        18223
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1324"
    },
    "9236": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18210,
        18225
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9237": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18210,
        18225
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9238": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18263,
        18300
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 123,
      "value": "0x2427"
    },
    "9241": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "9243": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18294
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9244": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18297,
        18298
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9246": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18298
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23B7"
    },
    "9249": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18298
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9250": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18298
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9251": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18285,
        18298
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9254": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18285,
        18298
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9255": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18263,
        18300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9256": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "9258": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18260
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9259": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2434"
    },
    "9262": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9263": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9264": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "9267": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18248,
        18300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9268": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18248,
        18300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9269": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18230,
        18245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "9271": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18230,
        18300
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9272": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18323,
        18347
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "9274": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18323,
        18347
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9275": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18320
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "9277": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18320
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9278": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2447"
    },
    "9281": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18347
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9282": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18323,
        18347
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9283": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "9286": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18310,
        18347
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9287": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18310,
        18347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9288": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18306,
        18795
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25AF"
    },
    "9291": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18306,
        18795
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9292": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 124,
      "value": "0x4"
    },
    "9294": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9295": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9296": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9298": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9299": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9306": {
      "op": "SHL"
    },
    "9307": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9308": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9309": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18418,
        18422
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "9310": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9311": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9312": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ADD",
      "path": "3"
    },
    "9313": {
      "op": "SWAP3"
    },
    "9314": {
      "op": "SWAP1"
    },
    "9315": {
      "op": "SWAP3"
    },
    "9316": {
      "op": "MSTORE"
    },
    "9317": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18428,
        18442
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x2E90EDD000"
    },
    "9323": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18428,
        18442
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9330": {
      "op": "SHL"
    },
    "9331": {
      "op": "SUB"
    },
    "9332": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9333": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9334": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "AND",
      "path": "3"
    },
    "9335": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18383,
        18398
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9336": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18409
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "9341": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18409
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9344": {
      "op": "ADD"
    },
    "9345": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9347": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9349": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9350": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9351": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9352": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "SUB",
      "path": "3"
    },
    "9353": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9354": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9355": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "GAS",
      "path": "3"
    },
    "9356": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "9357": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9358": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9359": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9360": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x249D"
    },
    "9363": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9364": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9365": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9367": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9368": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9369": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9370": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9372": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9373": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9374": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "POP",
      "path": "3"
    },
    "9375": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "POP",
      "path": "3"
    },
    "9376": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "POP",
      "path": "3"
    },
    "9377": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "POP",
      "path": "3"
    },
    "9378": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9380": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9381": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9382": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9384": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "NOT",
      "path": "3"
    },
    "9385": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9387": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9388": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ADD",
      "path": "3"
    },
    "9389": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "AND",
      "path": "3"
    },
    "9390": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9391": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ADD",
      "path": "3"
    },
    "9392": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9393": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9395": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9396": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "POP",
      "path": "3"
    },
    "9397": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9398": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "ADD",
      "path": "3"
    },
    "9399": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9400": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24C1"
    },
    "9403": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9404": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9405": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F80"
    },
    "9408": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18376,
        18424
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9409": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18424
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9410": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24CB"
    },
    "9413": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9414": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9415": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "9418": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18376,
        18443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9419": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18376,
        18443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9420": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18363,
        18372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9422": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18363,
        18444
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9423": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18363,
        18444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9424": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18363,
        18444
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9425": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18529,
        18546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24DC"
    },
    "9428": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18529,
        18546
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9429": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18529,
        18534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "9432": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18529,
        18546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "9435": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18529,
        18546
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9436": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18529,
        18546
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9437": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18521,
        18546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E8"
    },
    "9440": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18521,
        18546
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9441": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18521,
        18526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "9444": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18521,
        18546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9447": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18521,
        18546
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9448": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18521,
        18546
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9449": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18506,
        18515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "9451": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18506,
        18515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9452": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18462,
        18477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9454": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18462,
        18477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9455": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18462,
        18477
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9456": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9458": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9459": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9466": {
      "op": "SHL"
    },
    "9467": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9468": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9469": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18497,
        18501
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "9470": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9471": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9472": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ADD",
      "path": "3"
    },
    "9473": {
      "op": "SWAP3"
    },
    "9474": {
      "op": "SWAP1"
    },
    "9475": {
      "op": "SWAP3"
    },
    "9476": {
      "op": "MSTORE"
    },
    "9477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9483": {
      "op": "SHL"
    },
    "9484": {
      "op": "SUB"
    },
    "9485": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18462,
        18477
      ],
      "op": "AND",
      "path": "3"
    },
    "9486": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18462,
        18477
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9487": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18488
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "9492": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18488
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9495": {
      "op": "ADD"
    },
    "9496": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9498": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9500": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9501": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9502": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9503": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "SUB",
      "path": "3"
    },
    "9504": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9505": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9506": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "GAS",
      "path": "3"
    },
    "9507": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "9508": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9509": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9510": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9511": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2534"
    },
    "9514": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9515": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9516": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9518": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9519": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "9520": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9521": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9523": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9524": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9525": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "POP",
      "path": "3"
    },
    "9526": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "POP",
      "path": "3"
    },
    "9527": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "POP",
      "path": "3"
    },
    "9528": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "POP",
      "path": "3"
    },
    "9529": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9531": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9532": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9533": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9535": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "NOT",
      "path": "3"
    },
    "9536": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9538": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9539": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ADD",
      "path": "3"
    },
    "9540": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "AND",
      "path": "3"
    },
    "9541": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9542": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ADD",
      "path": "3"
    },
    "9543": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9544": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9546": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9547": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "POP",
      "path": "3"
    },
    "9548": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9549": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "ADD",
      "path": "3"
    },
    "9550": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9551": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2558"
    },
    "9554": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9555": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9556": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F80"
    },
    "9559": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18455,
        18503
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9560": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9561": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2562"
    },
    "9564": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9565": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9566": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "9569": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18455,
        18515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9570": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18455,
        18515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9571": {
      "branch": 185,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18453,
        18547
      ],
      "op": "GT",
      "path": "3"
    },
    "9572": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2595"
    },
    "9575": {
      "branch": 185,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9576": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18650,
        18659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "9578": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18650,
        18659
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9579": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "9581": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18640
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9582": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2578"
    },
    "9585": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9586": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18645,
        18646
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9588": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18644
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "9591": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18631,
        18647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9592": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18647
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9593": {
      "branch": 186,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18631,
        18659
      ],
      "op": "GT",
      "path": "3"
    },
    "9594": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18628,
        18710
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9595": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18628,
        18710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2590"
    },
    "9598": {
      "branch": 186,
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18628,
        18710
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9599": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18695
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 125,
      "value": "0x15"
    },
    "9601": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18695
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9602": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258C"
    },
    "9605": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9606": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18700,
        18701
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9608": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18699
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "9611": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18686,
        18702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9612": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18686,
        18702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9613": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18674,
        18683
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "9615": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18674,
        18702
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9616": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18628,
        18710
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9617": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A7"
    },
    "9620": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9621": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9622": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18748
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 126,
      "value": "0x15"
    },
    "9624": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18748
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9625": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A3"
    },
    "9628": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9629": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18754,
        18755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9631": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26DD"
    },
    "9634": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18739,
        18756
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9635": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18739,
        18756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9636": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18727,
        18736
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "9638": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18727,
        18756
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9639": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18450,
        18763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9640": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18768,
        18789
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 127,
      "value": "0x25AF"
    },
    "9643": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18768,
        18787
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2742"
    },
    "9646": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18768,
        18789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9647": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18768,
        18789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9648": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18831,
        18847
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 128,
      "value": "0x25BA"
    },
    "9651": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18846,
        18847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9653": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18831,
        18843
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "9654": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18831,
        18847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "9657": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        18831,
        18847
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9658": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18831,
        18847
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9659": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18821,
        18848
      ],
      "op": "BLOCKHASH",
      "path": "3"
    },
    "9660": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18803,
        18818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "9662": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "offset": [
        18803,
        18848
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9663": {
      "fn": "ForgeTest._startNewMiningEpoch",
      "jump": "o",
      "offset": [
        17487,
        18852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9664": {
      "fn": "Ownable.setOwner",
      "offset": [
        3342,
        3473
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9665": {
      "offset": [
        3298,
        3303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9667": {
      "fn": "Ownable.setOwner",
      "offset": [
        3298,
        3303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9674": {
      "op": "SHL"
    },
    "9675": {
      "op": "SUB"
    },
    "9676": {
      "offset": [
        3298,
        3303
      ],
      "op": "AND",
      "path": "3"
    },
    "9677": {
      "offset": [
        3284,
        3294
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9678": {
      "offset": [
        3284,
        3303
      ],
      "op": "EQ",
      "path": "3"
    },
    "9679": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2607"
    },
    "9682": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9683": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9685": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9692": {
      "op": "SHL"
    },
    "9693": {
      "offset": [
        3276,
        3318
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9694": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9697": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9699": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9700": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "ADD",
      "path": "3"
    },
    "9701": {
      "op": "MSTORE"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9706": {
      "op": "DUP3"
    },
    "9707": {
      "op": "ADD"
    },
    "9708": {
      "op": "MSTORE"
    },
    "9709": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "9722": {
      "op": "SHL"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9725": {
      "op": "DUP3"
    },
    "9726": {
      "op": "ADD"
    },
    "9727": {
      "op": "MSTORE"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9730": {
      "op": "ADD"
    },
    "9731": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "9734": {
      "op": "JUMP"
    },
    "9735": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9736": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 129,
      "value": "0x0"
    },
    "9738": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9739": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9741": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9742": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9749": {
      "op": "SHL"
    },
    "9750": {
      "op": "SUB"
    },
    "9751": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9752": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9753": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "AND",
      "path": "3"
    },
    "9754": {
      "op": "DUP2"
    },
    "9755": {
      "op": "MSTORE"
    },
    "9756": {
      "op": "SWAP2"
    },
    "9757": {
      "op": "DUP4"
    },
    "9758": {
      "op": "AND"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9761": {
      "op": "DUP4"
    },
    "9762": {
      "op": "ADD"
    },
    "9763": {
      "op": "MSTORE"
    },
    "9764": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C"
    },
    "9797": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9798": {
      "op": "ADD"
    },
    "9799": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9801": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9802": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9803": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9804": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SUB",
      "path": "3"
    },
    "9805": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9806": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "LOG1",
      "path": "3"
    },
    "9807": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3457
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 130,
      "value": "0x0"
    },
    "9809": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9810": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9817": {
      "op": "SHL"
    },
    "9818": {
      "op": "SUB"
    },
    "9819": {
      "op": "NOT"
    },
    "9820": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "3"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9827": {
      "op": "SHL"
    },
    "9828": {
      "op": "SUB"
    },
    "9829": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9830": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9831": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9832": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "3"
    },
    "9833": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9834": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9835": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9836": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "OR",
      "path": "3"
    },
    "9837": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9838": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9839": {
      "fn": "Ownable.setOwner",
      "jump": "o",
      "offset": [
        3342,
        3473
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9840": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4569,
        4793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9841": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4632,
        4639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9843": {
      "branch": 187,
      "fn": "SafeMath2.divRound",
      "offset": [
        4659,
        4665
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 131
    },
    "9844": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26AD"
    },
    "9847": {
      "branch": 187,
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9848": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9850": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9857": {
      "op": "SHL"
    },
    "9858": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9859": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9862": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9864": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9865": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "ADD",
      "path": "3"
    },
    "9866": {
      "op": "MSTORE"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9871": {
      "op": "DUP3"
    },
    "9872": {
      "op": "ADD"
    },
    "9873": {
      "op": "MSTORE"
    },
    "9874": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9888": {
      "op": "SHL"
    },
    "9889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9891": {
      "op": "DUP3"
    },
    "9892": {
      "op": "ADD"
    },
    "9893": {
      "op": "MSTORE"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "9900": {
      "op": "JUMP"
    },
    "9901": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9902": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4691,
        4700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9904": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26B9"
    },
    "9907": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4707,
        4708
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9908": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4704
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9909": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "9912": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4703,
        4708
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9913": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9914": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4691,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9915": {
      "op": "POP"
    },
    "9916": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26C5"
    },
    "9919": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4726,
        4727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9920": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4723
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9921": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F6C"
    },
    "9924": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4722,
        4727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9925": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9926": {
      "branch": 188,
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4732
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9927": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4718,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22CE"
    },
    "9930": {
      "branch": 188,
      "fn": "SafeMath2.divRound",
      "offset": [
        4718,
        4768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9931": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 132,
      "value": "0x26D5"
    },
    "9934": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4753
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9935": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4756,
        4757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9937": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8F"
    },
    "9940": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4752,
        4757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9941": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9942": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4748,
        4757
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9943": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4569,
        4793
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9944": {
      "op": "POP"
    },
    "9945": {
      "op": "POP"
    },
    "9946": {
      "op": "POP"
    },
    "9947": {
      "op": "POP"
    },
    "9948": {
      "fn": "SafeMath2.divRound",
      "jump": "o",
      "offset": [
        4569,
        4793
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9949": {
      "fn": "SafeMath2.mult",
      "offset": [
        4200,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9950": {
      "fn": "SafeMath2.mult",
      "offset": [
        4259,
        4266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9952": {
      "branch": 189,
      "fn": "SafeMath2.mult",
      "offset": [
        4282,
        4288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9953": {
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26EC"
    },
    "9956": {
      "branch": 189,
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9957": {
      "op": "POP"
    },
    "9958": {
      "fn": "SafeMath2.mult",
      "offset": [
        4311,
        4312
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 133,
      "value": "0x0"
    },
    "9960": {
      "fn": "SafeMath2.mult",
      "offset": [
        4304,
        4312
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E3"
    },
    "9963": {
      "fn": "SafeMath2.mult",
      "offset": [
        4304,
        4312
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9964": {
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9965": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9967": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F8"
    },
    "9970": {
      "fn": "SafeMath2.mult",
      "offset": [
        4349,
        4350
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9971": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4346
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9972": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "9975": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4345,
        4350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9976": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9977": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "fn": "SafeMath2.mult",
      "offset": [
        4377,
        4378
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 134
    },
    "9980": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2705"
    },
    "9983": {
      "fn": "SafeMath2.mult",
      "offset": [
        4372,
        4373
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9984": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4350
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9985": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F13"
    },
    "9988": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4368,
        4373
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9989": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9990": {
      "branch": 190,
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4378
      ],
      "op": "EQ",
      "path": "3"
    },
    "9991": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22CE"
    },
    "9994": {
      "branch": 190,
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9995": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9997": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10004": {
      "op": "SHL"
    },
    "10005": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10006": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10009": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10011": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10012": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "ADD",
      "path": "3"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10018": {
      "op": "DUP3"
    },
    "10019": {
      "op": "ADD"
    },
    "10020": {
      "op": "MSTORE"
    },
    "10021": {
      "op": "PUSH13",
      "value": "0x4D756C74206F766572666C6F77"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "10037": {
      "op": "SHL"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10040": {
      "op": "DUP3"
    },
    "10041": {
      "op": "ADD"
    },
    "10042": {
      "op": "MSTORE"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10045": {
      "op": "ADD"
    },
    "10046": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB50"
    },
    "10049": {
      "op": "JUMP"
    },
    "10050": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18856,
        20235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10051": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18995,
        19025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "10053": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18995,
        19025
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10054": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18923,
        18938
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "10055": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18923,
        18938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10056": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18900,
        18920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10058": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18900,
        18920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10059": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18980,
        19025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2754"
    },
    "10062": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18980,
        19025
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10063": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18923,
        18938
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10064": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18980,
        19025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F99"
    },
    "10067": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18980,
        19025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10068": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18980,
        19025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10069": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18942,
        19025
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10070": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18942,
        19025
      ],
      "op": "POP",
      "path": "3"
    },
    "10071": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19030,
        19054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10073": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19071,
        19095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "10075": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19071,
        19095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10076": {
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB40"
    },
    "10079": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19057,
        19095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2768"
    },
    "10082": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19057,
        19095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10083": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19057,
        19095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10084": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19057,
        19095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC8"
    },
    "10087": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19057,
        19095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10088": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19057,
        19095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10089": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19030,
        19095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10090": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19030,
        19095
      ],
      "op": "POP",
      "path": "3"
    },
    "10091": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19231,
        19250
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10092": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19198,
        19228
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10093": {
      "branch": 191,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19198,
        19250
      ],
      "op": "LT",
      "path": "3"
    },
    "10094": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10095": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27DD"
    },
    "10098": {
      "branch": 191,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10099": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19260,
        19281
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10101": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19284,
        19353
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2783"
    },
    "10104": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19321,
        19351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10105": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19285,
        19314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "10108": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19285,
        19304
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10109": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19310,
        19313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "10111": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19285,
        19309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26DD"
    },
    "10114": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19285,
        19314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10115": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19284,
        19353
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10116": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19365,
        19366
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 135,
      "value": "0x1"
    },
    "10118": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19358,
        19362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "10120": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19358,
        19366
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10121": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19260,
        19353
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10122": {
      "op": "POP"
    },
    "10123": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19371,
        19398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10125": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A3"
    },
    "10128": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19441,
        19445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "10131": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x279D"
    },
    "10134": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19260,
        19353
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10135": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19422,
        19425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "10137": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "10140": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19401,
        19426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10141": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10142": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19440
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10143": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19440
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286B"
    },
    "10146": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19401,
        19446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10147": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19401,
        19446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10148": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19371,
        19446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10149": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19371,
        19446
      ],
      "op": "POP",
      "path": "3"
    },
    "10150": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19556
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 136,
      "value": "0x27D2"
    },
    "10153": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19555
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C9"
    },
    "10156": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19532,
        19554
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10157": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C3"
    },
    "10160": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19521,
        19525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D0"
    },
    "10163": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10165": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19516
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10166": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "10169": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19520
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10170": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10171": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10172": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "10177": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "AND",
      "path": "3"
    },
    "10178": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19504,
        19526
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10179": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10180": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19531
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10181": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19531
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26DD"
    },
    "10184": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19504,
        19555
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10185": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19504,
        19555
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10186": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10188": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19499
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10189": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10190": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "10193": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19487,
        19556
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10194": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19487,
        19556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10195": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19472,
        19484
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10197": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19472,
        19556
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10198": {
      "op": "POP"
    },
    "10199": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2837"
    },
    "10202": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10203": {
      "op": "POP"
    },
    "10204": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10205": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10206": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19588,
        19611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10208": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19614,
        19683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27EE"
    },
    "10211": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19662,
        19681
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10212": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19615,
        19655
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB07"
    },
    "10215": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19615,
        19645
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10216": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19651,
        19654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "10218": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19615,
        19650
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26DD"
    },
    "10221": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19615,
        19655
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10222": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19614,
        19683
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10223": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19695,
        19696
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 137,
      "value": "0x2"
    },
    "10225": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19688,
        19692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "10227": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19688,
        19696
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10228": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19588,
        19683
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10229": {
      "op": "POP"
    },
    "10230": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19701,
        19730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10232": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19733,
        19780
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2808"
    },
    "10235": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19775,
        19779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "10238": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19733,
        19760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x279D"
    },
    "10241": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19588,
        19683
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10242": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19756,
        19759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "10244": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19733,
        19755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "10247": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19733,
        19760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10248": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19733,
        19780
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10249": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19701,
        19780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10250": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19701,
        19780
      ],
      "op": "POP",
      "path": "3"
    },
    "10251": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19918
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 138,
      "value": "0x2831"
    },
    "10254": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2828"
    },
    "10257": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19892,
        19916
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10258": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C3"
    },
    "10261": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19882,
        19885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F4"
    },
    "10264": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10266": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19877
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10267": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2287"
    },
    "10270": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10271": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19886
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10272": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10273": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19886
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "10278": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19886
      ],
      "op": "AND",
      "path": "3"
    },
    "10279": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19865,
        19886
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10280": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19865,
        19917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10281": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10283": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19860
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10284": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19860
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10285": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2321"
    },
    "10288": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        19848,
        19918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10289": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19848,
        19918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10290": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19833,
        19845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10292": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19833,
        19918
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10293": {
      "op": "POP"
    },
    "10294": {
      "op": "POP"
    },
    "10295": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19194,
        19942
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10296": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19946,
        19976
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 139,
      "value": "0x7"
    },
    "10298": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19946,
        19991
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10299": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19946,
        19991
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10300": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19946,
        19991
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10301": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20027,
        20039
      ],
      "op": "NUMBER",
      "path": "3",
      "statement": 140
    },
    "10302": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19995,
        20024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "10304": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        19995,
        20039
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10305": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20061,
        20076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "10307": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20061,
        20076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10308": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20046,
        20058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10310": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20046,
        20058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10311": {
      "branch": 192,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20046,
        20076
      ],
      "op": "LT",
      "path": "3"
    },
    "10312": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20043,
        20137
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10313": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20043,
        20137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2853"
    },
    "10316": {
      "branch": 192,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20043,
        20137
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10317": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20117,
        20132
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 141,
      "value": "0xA"
    },
    "10319": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20117,
        20132
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10320": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20102,
        20114
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10322": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20102,
        20132
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10323": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20043,
        20137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10324": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20158,
        20173
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "10326": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20158,
        20173
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10327": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20143,
        20155
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10329": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20143,
        20155
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10330": {
      "branch": 193,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20143,
        20173
      ],
      "op": "GT",
      "path": "3"
    },
    "10331": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20140,
        20229
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10332": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20140,
        20229
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2866"
    },
    "10335": {
      "branch": 193,
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20140,
        20229
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10336": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20209,
        20224
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 142,
      "value": "0xB"
    },
    "10338": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20209,
        20224
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10339": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20194,
        20206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "10341": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20194,
        20224
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10342": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        20140,
        20229
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10343": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18896,
        20235
      ],
      "op": "POP",
      "path": "3"
    },
    "10344": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18896,
        20235
      ],
      "op": "POP",
      "path": "3"
    },
    "10345": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "offset": [
        18896,
        20235
      ],
      "op": "POP",
      "path": "3"
    },
    "10346": {
      "fn": "ForgeTest._reAdjustDifficulty",
      "jump": "o",
      "offset": [
        18856,
        20235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10347": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4914,
        5040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10348": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4976,
        4982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10350": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5002,
        5003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10351": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4998,
        4999
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10352": {
      "branch": 194,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4998,
        5003
      ],
      "op": "GT",
      "path": "3"
    },
    "10353": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10354": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x287C"
    },
    "10357": {
      "branch": 194,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10358": {
      "op": "POP"
    },
    "10359": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5012,
        5013
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 143
    },
    "10360": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5005,
        5013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E3"
    },
    "10363": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5005,
        5013
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10364": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10365": {
      "op": "POP"
    },
    "10366": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5031,
        5032
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 144
    },
    "10367": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5031,
        5032
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10368": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4914,
        5040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10369": {
      "op": "POP"
    },
    "10370": {
      "fn": "ExtendedMath2.limitLessThan",
      "jump": "o",
      "offset": [
        4914,
        5040
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10371": {
      "op": "JUMPDEST"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10376": {
      "op": "DUP1"
    },
    "10377": {
      "op": "DUP4"
    },
    "10378": {
      "op": "MSTORE"
    },
    "10379": {
      "op": "DUP4"
    },
    "10380": {
      "op": "MLOAD"
    },
    "10381": {
      "op": "DUP1"
    },
    "10382": {
      "op": "DUP3"
    },
    "10383": {
      "op": "DUP6"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "MSTORE"
    },
    "10386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10388": {
      "op": "JUMPDEST"
    },
    "10389": {
      "op": "DUP2"
    },
    "10390": {
      "op": "DUP2"
    },
    "10391": {
      "op": "LT"
    },
    "10392": {
      "op": "ISZERO"
    },
    "10393": {
      "op": "PUSH2",
      "value": "0x28B0"
    },
    "10396": {
      "op": "JUMPI"
    },
    "10397": {
      "op": "DUP6"
    },
    "10398": {
      "op": "DUP2"
    },
    "10399": {
      "op": "ADD"
    },
    "10400": {
      "op": "DUP4"
    },
    "10401": {
      "op": "ADD"
    },
    "10402": {
      "op": "MLOAD"
    },
    "10403": {
      "op": "DUP6"
    },
    "10404": {
      "op": "DUP3"
    },
    "10405": {
      "op": "ADD"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10408": {
      "op": "ADD"
    },
    "10409": {
      "op": "MSTORE"
    },
    "10410": {
      "op": "DUP3"
    },
    "10411": {
      "op": "ADD"
    },
    "10412": {
      "op": "PUSH2",
      "value": "0x2894"
    },
    "10415": {
      "op": "JUMP"
    },
    "10416": {
      "op": "JUMPDEST"
    },
    "10417": {
      "op": "DUP2"
    },
    "10418": {
      "op": "DUP2"
    },
    "10419": {
      "op": "GT"
    },
    "10420": {
      "op": "ISZERO"
    },
    "10421": {
      "op": "PUSH2",
      "value": "0x28C2"
    },
    "10424": {
      "op": "JUMPI"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10429": {
      "op": "DUP4"
    },
    "10430": {
      "op": "DUP8"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "ADD"
    },
    "10433": {
      "op": "MSTORE"
    },
    "10434": {
      "op": "JUMPDEST"
    },
    "10435": {
      "op": "POP"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10438": {
      "op": "ADD"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10441": {
      "op": "NOT"
    },
    "10442": {
      "op": "AND"
    },
    "10443": {
      "op": "SWAP3"
    },
    "10444": {
      "op": "SWAP1"
    },
    "10445": {
      "op": "SWAP3"
    },
    "10446": {
      "op": "ADD"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10449": {
      "op": "ADD"
    },
    "10450": {
      "op": "SWAP4"
    },
    "10451": {
      "op": "SWAP3"
    },
    "10452": {
      "op": "POP"
    },
    "10453": {
      "op": "POP"
    },
    "10454": {
      "op": "POP"
    },
    "10455": {
      "jump": "o",
      "op": "JUMP"
    },
    "10456": {
      "op": "JUMPDEST"
    },
    "10457": {
      "op": "DUP1"
    },
    "10458": {
      "op": "CALLDATALOAD"
    },
    "10459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10465": {
      "op": "SHL"
    },
    "10466": {
      "op": "SUB"
    },
    "10467": {
      "op": "DUP2"
    },
    "10468": {
      "op": "AND"
    },
    "10469": {
      "op": "DUP2"
    },
    "10470": {
      "op": "EQ"
    },
    "10471": {
      "op": "PUSH2",
      "value": "0x28EF"
    },
    "10474": {
      "op": "JUMPI"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10477": {
      "op": "DUP1"
    },
    "10478": {
      "op": "REVERT"
    },
    "10479": {
      "op": "JUMPDEST"
    },
    "10480": {
      "op": "SWAP2"
    },
    "10481": {
      "op": "SWAP1"
    },
    "10482": {
      "op": "POP"
    },
    "10483": {
      "jump": "o",
      "op": "JUMP"
    },
    "10484": {
      "op": "JUMPDEST"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10487": {
      "op": "DUP1"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10490": {
      "op": "DUP4"
    },
    "10491": {
      "op": "DUP6"
    },
    "10492": {
      "op": "SUB"
    },
    "10493": {
      "op": "SLT"
    },
    "10494": {
      "op": "ISZERO"
    },
    "10495": {
      "op": "PUSH2",
      "value": "0x2907"
    },
    "10498": {
      "op": "JUMPI"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10501": {
      "op": "DUP1"
    },
    "10502": {
      "op": "REVERT"
    },
    "10503": {
      "op": "JUMPDEST"
    },
    "10504": {
      "op": "PUSH2",
      "value": "0x2910"
    },
    "10507": {
      "op": "DUP4"
    },
    "10508": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10511": {
      "jump": "i",
      "op": "JUMP"
    },
    "10512": {
      "op": "JUMPDEST"
    },
    "10513": {
      "op": "SWAP5"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10516": {
      "op": "SWAP4"
    },
    "10517": {
      "op": "SWAP1"
    },
    "10518": {
      "op": "SWAP4"
    },
    "10519": {
      "op": "ADD"
    },
    "10520": {
      "op": "CALLDATALOAD"
    },
    "10521": {
      "op": "SWAP4"
    },
    "10522": {
      "op": "POP"
    },
    "10523": {
      "op": "POP"
    },
    "10524": {
      "op": "POP"
    },
    "10525": {
      "jump": "o",
      "op": "JUMP"
    },
    "10526": {
      "op": "JUMPDEST"
    },
    "10527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10529": {
      "op": "DUP1"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10532": {
      "op": "DUP4"
    },
    "10533": {
      "op": "DUP6"
    },
    "10534": {
      "op": "SUB"
    },
    "10535": {
      "op": "SLT"
    },
    "10536": {
      "op": "ISZERO"
    },
    "10537": {
      "op": "PUSH2",
      "value": "0x2931"
    },
    "10540": {
      "op": "JUMPI"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10543": {
      "op": "DUP1"
    },
    "10544": {
      "op": "REVERT"
    },
    "10545": {
      "op": "JUMPDEST"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "DUP1"
    },
    "10549": {
      "op": "CALLDATALOAD"
    },
    "10550": {
      "op": "SWAP3"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10553": {
      "op": "SWAP1"
    },
    "10554": {
      "op": "SWAP2"
    },
    "10555": {
      "op": "ADD"
    },
    "10556": {
      "op": "CALLDATALOAD"
    },
    "10557": {
      "op": "SWAP2"
    },
    "10558": {
      "op": "POP"
    },
    "10559": {
      "jump": "o",
      "op": "JUMP"
    },
    "10560": {
      "op": "JUMPDEST"
    },
    "10561": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10568": {
      "op": "SHL"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10571": {
      "op": "MSTORE"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10574": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10576": {
      "op": "MSTORE"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10581": {
      "op": "REVERT"
    },
    "10582": {
      "op": "JUMPDEST"
    },
    "10583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10585": {
      "op": "MLOAD"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10588": {
      "op": "DUP3"
    },
    "10589": {
      "op": "ADD"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10592": {
      "op": "NOT"
    },
    "10593": {
      "op": "AND"
    },
    "10594": {
      "op": "DUP2"
    },
    "10595": {
      "op": "ADD"
    },
    "10596": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10605": {
      "op": "DUP2"
    },
    "10606": {
      "op": "GT"
    },
    "10607": {
      "op": "DUP3"
    },
    "10608": {
      "op": "DUP3"
    },
    "10609": {
      "op": "LT"
    },
    "10610": {
      "op": "OR"
    },
    "10611": {
      "op": "ISZERO"
    },
    "10612": {
      "op": "PUSH2",
      "value": "0x297F"
    },
    "10615": {
      "op": "JUMPI"
    },
    "10616": {
      "op": "PUSH2",
      "value": "0x297F"
    },
    "10619": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10622": {
      "jump": "i",
      "op": "JUMP"
    },
    "10623": {
      "op": "JUMPDEST"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10626": {
      "op": "MSTORE"
    },
    "10627": {
      "op": "SWAP2"
    },
    "10628": {
      "op": "SWAP1"
    },
    "10629": {
      "op": "POP"
    },
    "10630": {
      "jump": "o",
      "op": "JUMP"
    },
    "10631": {
      "op": "JUMPDEST"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "DUP3"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10637": {
      "op": "DUP4"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "SLT"
    },
    "10640": {
      "op": "PUSH2",
      "value": "0x2998"
    },
    "10643": {
      "op": "JUMPI"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10646": {
      "op": "DUP1"
    },
    "10647": {
      "op": "REVERT"
    },
    "10648": {
      "op": "JUMPDEST"
    },
    "10649": {
      "op": "DUP2"
    },
    "10650": {
      "op": "CALLDATALOAD"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10653": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10662": {
      "op": "DUP3"
    },
    "10663": {
      "op": "GT"
    },
    "10664": {
      "op": "ISZERO"
    },
    "10665": {
      "op": "PUSH2",
      "value": "0x29B4"
    },
    "10668": {
      "op": "JUMPI"
    },
    "10669": {
      "op": "PUSH2",
      "value": "0x29B4"
    },
    "10672": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10675": {
      "jump": "i",
      "op": "JUMP"
    },
    "10676": {
      "op": "JUMPDEST"
    },
    "10677": {
      "op": "DUP2"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10680": {
      "op": "SHL"
    },
    "10681": {
      "op": "PUSH2",
      "value": "0x29C3"
    },
    "10684": {
      "op": "DUP3"
    },
    "10685": {
      "op": "DUP3"
    },
    "10686": {
      "op": "ADD"
    },
    "10687": {
      "op": "PUSH2",
      "value": "0x2956"
    },
    "10690": {
      "jump": "i",
      "op": "JUMP"
    },
    "10691": {
      "op": "JUMPDEST"
    },
    "10692": {
      "op": "SWAP3"
    },
    "10693": {
      "op": "DUP4"
    },
    "10694": {
      "op": "MSTORE"
    },
    "10695": {
      "op": "DUP5"
    },
    "10696": {
      "op": "DUP2"
    },
    "10697": {
      "op": "ADD"
    },
    "10698": {
      "op": "DUP3"
    },
    "10699": {
      "op": "ADD"
    },
    "10700": {
      "op": "SWAP3"
    },
    "10701": {
      "op": "DUP3"
    },
    "10702": {
      "op": "DUP2"
    },
    "10703": {
      "op": "ADD"
    },
    "10704": {
      "op": "SWAP1"
    },
    "10705": {
      "op": "DUP8"
    },
    "10706": {
      "op": "DUP6"
    },
    "10707": {
      "op": "GT"
    },
    "10708": {
      "op": "ISZERO"
    },
    "10709": {
      "op": "PUSH2",
      "value": "0x29DD"
    },
    "10712": {
      "op": "JUMPI"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10715": {
      "op": "DUP1"
    },
    "10716": {
      "op": "REVERT"
    },
    "10717": {
      "op": "JUMPDEST"
    },
    "10718": {
      "op": "DUP4"
    },
    "10719": {
      "op": "DUP8"
    },
    "10720": {
      "op": "ADD"
    },
    "10721": {
      "op": "SWAP3"
    },
    "10722": {
      "op": "POP"
    },
    "10723": {
      "op": "JUMPDEST"
    },
    "10724": {
      "op": "DUP5"
    },
    "10725": {
      "op": "DUP4"
    },
    "10726": {
      "op": "LT"
    },
    "10727": {
      "op": "ISZERO"
    },
    "10728": {
      "op": "PUSH2",
      "value": "0x2A03"
    },
    "10731": {
      "op": "JUMPI"
    },
    "10732": {
      "op": "PUSH2",
      "value": "0x29F4"
    },
    "10735": {
      "op": "DUP4"
    },
    "10736": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10739": {
      "jump": "i",
      "op": "JUMP"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "DUP3"
    },
    "10742": {
      "op": "MSTORE"
    },
    "10743": {
      "op": "SWAP2"
    },
    "10744": {
      "op": "DUP4"
    },
    "10745": {
      "op": "ADD"
    },
    "10746": {
      "op": "SWAP2"
    },
    "10747": {
      "op": "SWAP1"
    },
    "10748": {
      "op": "DUP4"
    },
    "10749": {
      "op": "ADD"
    },
    "10750": {
      "op": "SWAP1"
    },
    "10751": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10754": {
      "op": "JUMP"
    },
    "10755": {
      "op": "JUMPDEST"
    },
    "10756": {
      "op": "SWAP8"
    },
    "10757": {
      "op": "SWAP7"
    },
    "10758": {
      "op": "POP"
    },
    "10759": {
      "op": "POP"
    },
    "10760": {
      "op": "POP"
    },
    "10761": {
      "op": "POP"
    },
    "10762": {
      "op": "POP"
    },
    "10763": {
      "op": "POP"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "jump": "o",
      "op": "JUMP"
    },
    "10766": {
      "op": "JUMPDEST"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10769": {
      "op": "DUP1"
    },
    "10770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10772": {
      "op": "DUP1"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10775": {
      "op": "DUP6"
    },
    "10776": {
      "op": "DUP8"
    },
    "10777": {
      "op": "SUB"
    },
    "10778": {
      "op": "SLT"
    },
    "10779": {
      "op": "ISZERO"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x2A24"
    },
    "10783": {
      "op": "JUMPI"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10786": {
      "op": "DUP1"
    },
    "10787": {
      "op": "REVERT"
    },
    "10788": {
      "op": "JUMPDEST"
    },
    "10789": {
      "op": "DUP5"
    },
    "10790": {
      "op": "CALLDATALOAD"
    },
    "10791": {
      "op": "SWAP4"
    },
    "10792": {
      "op": "POP"
    },
    "10793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10795": {
      "op": "DUP6"
    },
    "10796": {
      "op": "ADD"
    },
    "10797": {
      "op": "CALLDATALOAD"
    },
    "10798": {
      "op": "SWAP3"
    },
    "10799": {
      "op": "POP"
    },
    "10800": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10802": {
      "op": "DUP6"
    },
    "10803": {
      "op": "ADD"
    },
    "10804": {
      "op": "CALLDATALOAD"
    },
    "10805": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10814": {
      "op": "DUP2"
    },
    "10815": {
      "op": "GT"
    },
    "10816": {
      "op": "ISZERO"
    },
    "10817": {
      "op": "PUSH2",
      "value": "0x2A49"
    },
    "10820": {
      "op": "JUMPI"
    },
    "10821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10823": {
      "op": "DUP1"
    },
    "10824": {
      "op": "REVERT"
    },
    "10825": {
      "op": "JUMPDEST"
    },
    "10826": {
      "op": "PUSH2",
      "value": "0x2A55"
    },
    "10829": {
      "op": "DUP8"
    },
    "10830": {
      "op": "DUP3"
    },
    "10831": {
      "op": "DUP9"
    },
    "10832": {
      "op": "ADD"
    },
    "10833": {
      "op": "PUSH2",
      "value": "0x2987"
    },
    "10836": {
      "jump": "i",
      "op": "JUMP"
    },
    "10837": {
      "op": "JUMPDEST"
    },
    "10838": {
      "op": "SWAP3"
    },
    "10839": {
      "op": "POP"
    },
    "10840": {
      "op": "POP"
    },
    "10841": {
      "op": "PUSH2",
      "value": "0x2A64"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10846": {
      "op": "DUP7"
    },
    "10847": {
      "op": "ADD"
    },
    "10848": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10851": {
      "jump": "i",
      "op": "JUMP"
    },
    "10852": {
      "op": "JUMPDEST"
    },
    "10853": {
      "op": "SWAP1"
    },
    "10854": {
      "op": "POP"
    },
    "10855": {
      "op": "SWAP3"
    },
    "10856": {
      "op": "SWAP6"
    },
    "10857": {
      "op": "SWAP2"
    },
    "10858": {
      "op": "SWAP5"
    },
    "10859": {
      "op": "POP"
    },
    "10860": {
      "op": "SWAP3"
    },
    "10861": {
      "op": "POP"
    },
    "10862": {
      "jump": "o",
      "op": "JUMP"
    },
    "10863": {
      "op": "JUMPDEST"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10866": {
      "op": "DUP1"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10871": {
      "op": "DUP5"
    },
    "10872": {
      "op": "DUP7"
    },
    "10873": {
      "op": "SUB"
    },
    "10874": {
      "op": "SLT"
    },
    "10875": {
      "op": "ISZERO"
    },
    "10876": {
      "op": "PUSH2",
      "value": "0x2A84"
    },
    "10879": {
      "op": "JUMPI"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10882": {
      "op": "DUP1"
    },
    "10883": {
      "op": "REVERT"
    },
    "10884": {
      "op": "JUMPDEST"
    },
    "10885": {
      "op": "PUSH2",
      "value": "0x2A8D"
    },
    "10888": {
      "op": "DUP5"
    },
    "10889": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10892": {
      "jump": "i",
      "op": "JUMP"
    },
    "10893": {
      "op": "JUMPDEST"
    },
    "10894": {
      "op": "SWAP3"
    },
    "10895": {
      "op": "POP"
    },
    "10896": {
      "op": "PUSH2",
      "value": "0x2A9B"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10901": {
      "op": "DUP6"
    },
    "10902": {
      "op": "ADD"
    },
    "10903": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10906": {
      "jump": "i",
      "op": "JUMP"
    },
    "10907": {
      "op": "JUMPDEST"
    },
    "10908": {
      "op": "SWAP2"
    },
    "10909": {
      "op": "POP"
    },
    "10910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10912": {
      "op": "DUP5"
    },
    "10913": {
      "op": "ADD"
    },
    "10914": {
      "op": "CALLDATALOAD"
    },
    "10915": {
      "op": "SWAP1"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "op": "SWAP3"
    },
    "10918": {
      "op": "POP"
    },
    "10919": {
      "op": "SWAP3"
    },
    "10920": {
      "op": "POP"
    },
    "10921": {
      "op": "SWAP3"
    },
    "10922": {
      "jump": "o",
      "op": "JUMP"
    },
    "10923": {
      "op": "JUMPDEST"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10926": {
      "op": "DUP1"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10931": {
      "op": "DUP5"
    },
    "10932": {
      "op": "DUP7"
    },
    "10933": {
      "op": "SUB"
    },
    "10934": {
      "op": "SLT"
    },
    "10935": {
      "op": "ISZERO"
    },
    "10936": {
      "op": "PUSH2",
      "value": "0x2AC0"
    },
    "10939": {
      "op": "JUMPI"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10942": {
      "op": "DUP1"
    },
    "10943": {
      "op": "REVERT"
    },
    "10944": {
      "op": "JUMPDEST"
    },
    "10945": {
      "op": "PUSH2",
      "value": "0x2AC9"
    },
    "10948": {
      "op": "DUP5"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10952": {
      "jump": "i",
      "op": "JUMP"
    },
    "10953": {
      "op": "JUMPDEST"
    },
    "10954": {
      "op": "SWAP3"
    },
    "10955": {
      "op": "POP"
    },
    "10956": {
      "op": "PUSH2",
      "value": "0x2AD7"
    },
    "10959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10961": {
      "op": "DUP6"
    },
    "10962": {
      "op": "ADD"
    },
    "10963": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10966": {
      "jump": "i",
      "op": "JUMP"
    },
    "10967": {
      "op": "JUMPDEST"
    },
    "10968": {
      "op": "SWAP2"
    },
    "10969": {
      "op": "POP"
    },
    "10970": {
      "op": "PUSH2",
      "value": "0x2AE5"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10975": {
      "op": "DUP6"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "10980": {
      "jump": "i",
      "op": "JUMP"
    },
    "10981": {
      "op": "JUMPDEST"
    },
    "10982": {
      "op": "SWAP1"
    },
    "10983": {
      "op": "POP"
    },
    "10984": {
      "op": "SWAP3"
    },
    "10985": {
      "op": "POP"
    },
    "10986": {
      "op": "SWAP3"
    },
    "10987": {
      "op": "POP"
    },
    "10988": {
      "op": "SWAP3"
    },
    "10989": {
      "jump": "o",
      "op": "JUMP"
    },
    "10990": {
      "op": "JUMPDEST"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10995": {
      "op": "DUP3"
    },
    "10996": {
      "op": "DUP5"
    },
    "10997": {
      "op": "SUB"
    },
    "10998": {
      "op": "SLT"
    },
    "10999": {
      "op": "ISZERO"
    },
    "11000": {
      "op": "PUSH2",
      "value": "0x2B00"
    },
    "11003": {
      "op": "JUMPI"
    },
    "11004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11006": {
      "op": "DUP1"
    },
    "11007": {
      "op": "REVERT"
    },
    "11008": {
      "op": "JUMPDEST"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "11012": {
      "op": "DUP3"
    },
    "11013": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11016": {
      "jump": "i",
      "op": "JUMP"
    },
    "11017": {
      "op": "JUMPDEST"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11020": {
      "op": "DUP1"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11023": {
      "op": "DUP1"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11026": {
      "op": "DUP6"
    },
    "11027": {
      "op": "DUP8"
    },
    "11028": {
      "op": "SUB"
    },
    "11029": {
      "op": "SLT"
    },
    "11030": {
      "op": "ISZERO"
    },
    "11031": {
      "op": "PUSH2",
      "value": "0x2B1F"
    },
    "11034": {
      "op": "JUMPI"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11037": {
      "op": "DUP1"
    },
    "11038": {
      "op": "REVERT"
    },
    "11039": {
      "op": "JUMPDEST"
    },
    "11040": {
      "op": "POP"
    },
    "11041": {
      "op": "POP"
    },
    "11042": {
      "op": "DUP3"
    },
    "11043": {
      "op": "CALLDATALOAD"
    },
    "11044": {
      "op": "SWAP5"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11047": {
      "op": "DUP5"
    },
    "11048": {
      "op": "ADD"
    },
    "11049": {
      "op": "CALLDATALOAD"
    },
    "11050": {
      "op": "SWAP5"
    },
    "11051": {
      "op": "POP"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11054": {
      "op": "DUP5"
    },
    "11055": {
      "op": "ADD"
    },
    "11056": {
      "op": "CALLDATALOAD"
    },
    "11057": {
      "op": "SWAP4"
    },
    "11058": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11060": {
      "op": "ADD"
    },
    "11061": {
      "op": "CALLDATALOAD"
    },
    "11062": {
      "op": "SWAP3"
    },
    "11063": {
      "op": "POP"
    },
    "11064": {
      "op": "SWAP1"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "jump": "o",
      "op": "JUMP"
    },
    "11067": {
      "op": "JUMPDEST"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11070": {
      "op": "DUP1"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11073": {
      "op": "DUP1"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11076": {
      "op": "DUP6"
    },
    "11077": {
      "op": "DUP8"
    },
    "11078": {
      "op": "SUB"
    },
    "11079": {
      "op": "SLT"
    },
    "11080": {
      "op": "ISZERO"
    },
    "11081": {
      "op": "PUSH2",
      "value": "0x2B51"
    },
    "11084": {
      "op": "JUMPI"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11087": {
      "op": "DUP1"
    },
    "11088": {
      "op": "REVERT"
    },
    "11089": {
      "op": "JUMPDEST"
    },
    "11090": {
      "op": "PUSH2",
      "value": "0x2B5A"
    },
    "11093": {
      "op": "DUP6"
    },
    "11094": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11097": {
      "jump": "i",
      "op": "JUMP"
    },
    "11098": {
      "op": "JUMPDEST"
    },
    "11099": {
      "op": "SWAP4"
    },
    "11100": {
      "op": "POP"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11103": {
      "op": "DUP1"
    },
    "11104": {
      "op": "DUP7"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "CALLDATALOAD"
    },
    "11107": {
      "op": "SWAP4"
    },
    "11108": {
      "op": "POP"
    },
    "11109": {
      "op": "PUSH2",
      "value": "0x2B70"
    },
    "11112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11114": {
      "op": "DUP8"
    },
    "11115": {
      "op": "ADD"
    },
    "11116": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11119": {
      "jump": "i",
      "op": "JUMP"
    },
    "11120": {
      "op": "JUMPDEST"
    },
    "11121": {
      "op": "SWAP3"
    },
    "11122": {
      "op": "POP"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11125": {
      "op": "DUP7"
    },
    "11126": {
      "op": "ADD"
    },
    "11127": {
      "op": "CALLDATALOAD"
    },
    "11128": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11137": {
      "op": "DUP1"
    },
    "11138": {
      "op": "DUP3"
    },
    "11139": {
      "op": "GT"
    },
    "11140": {
      "op": "ISZERO"
    },
    "11141": {
      "op": "PUSH2",
      "value": "0x2B8D"
    },
    "11144": {
      "op": "JUMPI"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11147": {
      "op": "DUP1"
    },
    "11148": {
      "op": "REVERT"
    },
    "11149": {
      "op": "JUMPDEST"
    },
    "11150": {
      "op": "DUP2"
    },
    "11151": {
      "op": "DUP9"
    },
    "11152": {
      "op": "ADD"
    },
    "11153": {
      "op": "SWAP2"
    },
    "11154": {
      "op": "POP"
    },
    "11155": {
      "op": "DUP9"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11158": {
      "op": "DUP4"
    },
    "11159": {
      "op": "ADD"
    },
    "11160": {
      "op": "SLT"
    },
    "11161": {
      "op": "PUSH2",
      "value": "0x2BA1"
    },
    "11164": {
      "op": "JUMPI"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11167": {
      "op": "DUP1"
    },
    "11168": {
      "op": "REVERT"
    },
    "11169": {
      "op": "JUMPDEST"
    },
    "11170": {
      "op": "DUP2"
    },
    "11171": {
      "op": "CALLDATALOAD"
    },
    "11172": {
      "op": "DUP2"
    },
    "11173": {
      "op": "DUP2"
    },
    "11174": {
      "op": "GT"
    },
    "11175": {
      "op": "ISZERO"
    },
    "11176": {
      "op": "PUSH2",
      "value": "0x2BB3"
    },
    "11179": {
      "op": "JUMPI"
    },
    "11180": {
      "op": "PUSH2",
      "value": "0x2BB3"
    },
    "11183": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "11186": {
      "jump": "i",
      "op": "JUMP"
    },
    "11187": {
      "op": "JUMPDEST"
    },
    "11188": {
      "op": "PUSH2",
      "value": "0x2BC5"
    },
    "11191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11193": {
      "op": "DUP3"
    },
    "11194": {
      "op": "ADD"
    },
    "11195": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11197": {
      "op": "NOT"
    },
    "11198": {
      "op": "AND"
    },
    "11199": {
      "op": "DUP6"
    },
    "11200": {
      "op": "ADD"
    },
    "11201": {
      "op": "PUSH2",
      "value": "0x2956"
    },
    "11204": {
      "jump": "i",
      "op": "JUMP"
    },
    "11205": {
      "op": "JUMPDEST"
    },
    "11206": {
      "op": "SWAP2"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "op": "DUP1"
    },
    "11209": {
      "op": "DUP3"
    },
    "11210": {
      "op": "MSTORE"
    },
    "11211": {
      "op": "DUP10"
    },
    "11212": {
      "op": "DUP5"
    },
    "11213": {
      "op": "DUP3"
    },
    "11214": {
      "op": "DUP6"
    },
    "11215": {
      "op": "ADD"
    },
    "11216": {
      "op": "ADD"
    },
    "11217": {
      "op": "GT"
    },
    "11218": {
      "op": "ISZERO"
    },
    "11219": {
      "op": "PUSH2",
      "value": "0x2BDB"
    },
    "11222": {
      "op": "JUMPI"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11225": {
      "op": "DUP1"
    },
    "11226": {
      "op": "REVERT"
    },
    "11227": {
      "op": "JUMPDEST"
    },
    "11228": {
      "op": "DUP1"
    },
    "11229": {
      "op": "DUP5"
    },
    "11230": {
      "op": "DUP5"
    },
    "11231": {
      "op": "ADD"
    },
    "11232": {
      "op": "DUP6"
    },
    "11233": {
      "op": "DUP5"
    },
    "11234": {
      "op": "ADD"
    },
    "11235": {
      "op": "CALLDATACOPY"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11238": {
      "op": "DUP5"
    },
    "11239": {
      "op": "DUP3"
    },
    "11240": {
      "op": "DUP5"
    },
    "11241": {
      "op": "ADD"
    },
    "11242": {
      "op": "ADD"
    },
    "11243": {
      "op": "MSTORE"
    },
    "11244": {
      "op": "POP"
    },
    "11245": {
      "op": "DUP1"
    },
    "11246": {
      "op": "SWAP4"
    },
    "11247": {
      "op": "POP"
    },
    "11248": {
      "op": "POP"
    },
    "11249": {
      "op": "POP"
    },
    "11250": {
      "op": "POP"
    },
    "11251": {
      "op": "SWAP3"
    },
    "11252": {
      "op": "SWAP6"
    },
    "11253": {
      "op": "SWAP2"
    },
    "11254": {
      "op": "SWAP5"
    },
    "11255": {
      "op": "POP"
    },
    "11256": {
      "op": "SWAP3"
    },
    "11257": {
      "op": "POP"
    },
    "11258": {
      "jump": "o",
      "op": "JUMP"
    },
    "11259": {
      "op": "JUMPDEST"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11262": {
      "op": "DUP1"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11265": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11267": {
      "op": "DUP5"
    },
    "11268": {
      "op": "DUP7"
    },
    "11269": {
      "op": "SUB"
    },
    "11270": {
      "op": "SLT"
    },
    "11271": {
      "op": "ISZERO"
    },
    "11272": {
      "op": "PUSH2",
      "value": "0x2C10"
    },
    "11275": {
      "op": "JUMPI"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11278": {
      "op": "DUP1"
    },
    "11279": {
      "op": "REVERT"
    },
    "11280": {
      "op": "JUMPDEST"
    },
    "11281": {
      "op": "POP"
    },
    "11282": {
      "op": "POP"
    },
    "11283": {
      "op": "DUP2"
    },
    "11284": {
      "op": "CALLDATALOAD"
    },
    "11285": {
      "op": "SWAP4"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11288": {
      "op": "DUP4"
    },
    "11289": {
      "op": "ADD"
    },
    "11290": {
      "op": "CALLDATALOAD"
    },
    "11291": {
      "op": "SWAP4"
    },
    "11292": {
      "op": "POP"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11295": {
      "op": "SWAP1"
    },
    "11296": {
      "op": "SWAP3"
    },
    "11297": {
      "op": "ADD"
    },
    "11298": {
      "op": "CALLDATALOAD"
    },
    "11299": {
      "op": "SWAP2"
    },
    "11300": {
      "op": "SWAP1"
    },
    "11301": {
      "op": "POP"
    },
    "11302": {
      "jump": "o",
      "op": "JUMP"
    },
    "11303": {
      "op": "JUMPDEST"
    },
    "11304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11306": {
      "op": "DUP1"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11309": {
      "op": "DUP1"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11312": {
      "op": "DUP6"
    },
    "11313": {
      "op": "DUP8"
    },
    "11314": {
      "op": "SUB"
    },
    "11315": {
      "op": "SLT"
    },
    "11316": {
      "op": "ISZERO"
    },
    "11317": {
      "op": "PUSH2",
      "value": "0x2C3D"
    },
    "11320": {
      "op": "JUMPI"
    },
    "11321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11323": {
      "op": "DUP1"
    },
    "11324": {
      "op": "REVERT"
    },
    "11325": {
      "op": "JUMPDEST"
    },
    "11326": {
      "op": "DUP5"
    },
    "11327": {
      "op": "CALLDATALOAD"
    },
    "11328": {
      "op": "SWAP4"
    },
    "11329": {
      "op": "POP"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11332": {
      "op": "DUP6"
    },
    "11333": {
      "op": "ADD"
    },
    "11334": {
      "op": "CALLDATALOAD"
    },
    "11335": {
      "op": "SWAP3"
    },
    "11336": {
      "op": "POP"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11339": {
      "op": "DUP6"
    },
    "11340": {
      "op": "ADD"
    },
    "11341": {
      "op": "CALLDATALOAD"
    },
    "11342": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11351": {
      "op": "DUP1"
    },
    "11352": {
      "op": "DUP3"
    },
    "11353": {
      "op": "GT"
    },
    "11354": {
      "op": "ISZERO"
    },
    "11355": {
      "op": "PUSH2",
      "value": "0x2C63"
    },
    "11358": {
      "op": "JUMPI"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11361": {
      "op": "DUP1"
    },
    "11362": {
      "op": "REVERT"
    },
    "11363": {
      "op": "JUMPDEST"
    },
    "11364": {
      "op": "PUSH2",
      "value": "0x2C6F"
    },
    "11367": {
      "op": "DUP9"
    },
    "11368": {
      "op": "DUP4"
    },
    "11369": {
      "op": "DUP10"
    },
    "11370": {
      "op": "ADD"
    },
    "11371": {
      "op": "PUSH2",
      "value": "0x2987"
    },
    "11374": {
      "jump": "i",
      "op": "JUMP"
    },
    "11375": {
      "op": "JUMPDEST"
    },
    "11376": {
      "op": "SWAP4"
    },
    "11377": {
      "op": "POP"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11380": {
      "op": "DUP8"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "CALLDATALOAD"
    },
    "11383": {
      "op": "SWAP2"
    },
    "11384": {
      "op": "POP"
    },
    "11385": {
      "op": "DUP1"
    },
    "11386": {
      "op": "DUP3"
    },
    "11387": {
      "op": "GT"
    },
    "11388": {
      "op": "ISZERO"
    },
    "11389": {
      "op": "PUSH2",
      "value": "0x2C85"
    },
    "11392": {
      "op": "JUMPI"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11395": {
      "op": "DUP1"
    },
    "11396": {
      "op": "REVERT"
    },
    "11397": {
      "op": "JUMPDEST"
    },
    "11398": {
      "op": "POP"
    },
    "11399": {
      "op": "PUSH2",
      "value": "0x2C92"
    },
    "11402": {
      "op": "DUP8"
    },
    "11403": {
      "op": "DUP3"
    },
    "11404": {
      "op": "DUP9"
    },
    "11405": {
      "op": "ADD"
    },
    "11406": {
      "op": "PUSH2",
      "value": "0x2987"
    },
    "11409": {
      "jump": "i",
      "op": "JUMP"
    },
    "11410": {
      "op": "JUMPDEST"
    },
    "11411": {
      "op": "SWAP2"
    },
    "11412": {
      "op": "POP"
    },
    "11413": {
      "op": "POP"
    },
    "11414": {
      "op": "SWAP3"
    },
    "11415": {
      "op": "SWAP6"
    },
    "11416": {
      "op": "SWAP2"
    },
    "11417": {
      "op": "SWAP5"
    },
    "11418": {
      "op": "POP"
    },
    "11419": {
      "op": "SWAP3"
    },
    "11420": {
      "op": "POP"
    },
    "11421": {
      "jump": "o",
      "op": "JUMP"
    },
    "11422": {
      "op": "JUMPDEST"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11425": {
      "op": "DUP1"
    },
    "11426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11428": {
      "op": "DUP4"
    },
    "11429": {
      "op": "DUP6"
    },
    "11430": {
      "op": "SUB"
    },
    "11431": {
      "op": "SLT"
    },
    "11432": {
      "op": "ISZERO"
    },
    "11433": {
      "op": "PUSH2",
      "value": "0x2CB1"
    },
    "11436": {
      "op": "JUMPI"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11439": {
      "op": "DUP1"
    },
    "11440": {
      "op": "REVERT"
    },
    "11441": {
      "op": "JUMPDEST"
    },
    "11442": {
      "op": "PUSH2",
      "value": "0x2CBA"
    },
    "11445": {
      "op": "DUP4"
    },
    "11446": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11449": {
      "jump": "i",
      "op": "JUMP"
    },
    "11450": {
      "op": "JUMPDEST"
    },
    "11451": {
      "op": "SWAP2"
    },
    "11452": {
      "op": "POP"
    },
    "11453": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11458": {
      "op": "DUP5"
    },
    "11459": {
      "op": "ADD"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11463": {
      "jump": "i",
      "op": "JUMP"
    },
    "11464": {
      "op": "JUMPDEST"
    },
    "11465": {
      "op": "SWAP1"
    },
    "11466": {
      "op": "POP"
    },
    "11467": {
      "op": "SWAP3"
    },
    "11468": {
      "op": "POP"
    },
    "11469": {
      "op": "SWAP3"
    },
    "11470": {
      "op": "SWAP1"
    },
    "11471": {
      "op": "POP"
    },
    "11472": {
      "jump": "o",
      "op": "JUMP"
    },
    "11473": {
      "op": "JUMPDEST"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11476": {
      "op": "DUP1"
    },
    "11477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11479": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11481": {
      "op": "DUP5"
    },
    "11482": {
      "op": "DUP7"
    },
    "11483": {
      "op": "SUB"
    },
    "11484": {
      "op": "SLT"
    },
    "11485": {
      "op": "ISZERO"
    },
    "11486": {
      "op": "PUSH2",
      "value": "0x2CE6"
    },
    "11489": {
      "op": "JUMPI"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11492": {
      "op": "DUP1"
    },
    "11493": {
      "op": "REVERT"
    },
    "11494": {
      "op": "JUMPDEST"
    },
    "11495": {
      "op": "DUP4"
    },
    "11496": {
      "op": "CALLDATALOAD"
    },
    "11497": {
      "op": "SWAP3"
    },
    "11498": {
      "op": "POP"
    },
    "11499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11501": {
      "op": "DUP5"
    },
    "11502": {
      "op": "ADD"
    },
    "11503": {
      "op": "CALLDATALOAD"
    },
    "11504": {
      "op": "SWAP2"
    },
    "11505": {
      "op": "POP"
    },
    "11506": {
      "op": "PUSH2",
      "value": "0x2AE5"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11511": {
      "op": "DUP6"
    },
    "11512": {
      "op": "ADD"
    },
    "11513": {
      "op": "PUSH2",
      "value": "0x28D8"
    },
    "11516": {
      "jump": "i",
      "op": "JUMP"
    },
    "11517": {
      "op": "JUMPDEST"
    },
    "11518": {
      "op": "DUP1"
    },
    "11519": {
      "op": "ISZERO"
    },
    "11520": {
      "op": "ISZERO"
    },
    "11521": {
      "op": "DUP2"
    },
    "11522": {
      "op": "EQ"
    },
    "11523": {
      "op": "PUSH2",
      "value": "0x2D0B"
    },
    "11526": {
      "op": "JUMPI"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11529": {
      "op": "DUP1"
    },
    "11530": {
      "op": "REVERT"
    },
    "11531": {
      "op": "JUMPDEST"
    },
    "11532": {
      "op": "POP"
    },
    "11533": {
      "jump": "o",
      "op": "JUMP"
    },
    "11534": {
      "op": "JUMPDEST"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11537": {
      "op": "DUP1"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11540": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11542": {
      "op": "DUP5"
    },
    "11543": {
      "op": "DUP7"
    },
    "11544": {
      "op": "SUB"
    },
    "11545": {
      "op": "SLT"
    },
    "11546": {
      "op": "ISZERO"
    },
    "11547": {
      "op": "PUSH2",
      "value": "0x2D23"
    },
    "11550": {
      "op": "JUMPI"
    },
    "11551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11553": {
      "op": "DUP1"
    },
    "11554": {
      "op": "REVERT"
    },
    "11555": {
      "op": "JUMPDEST"
    },
    "11556": {
      "op": "DUP4"
    },
    "11557": {
      "op": "CALLDATALOAD"
    },
    "11558": {
      "op": "PUSH2",
      "value": "0x2D2E"
    },
    "11561": {
      "op": "DUP2"
    },
    "11562": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11565": {
      "jump": "i",
      "op": "JUMP"
    },
    "11566": {
      "op": "JUMPDEST"
    },
    "11567": {
      "op": "SWAP3"
    },
    "11568": {
      "op": "POP"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11571": {
      "op": "DUP5"
    },
    "11572": {
      "op": "ADD"
    },
    "11573": {
      "op": "CALLDATALOAD"
    },
    "11574": {
      "op": "PUSH2",
      "value": "0x2AD7"
    },
    "11577": {
      "op": "DUP2"
    },
    "11578": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11581": {
      "jump": "i",
      "op": "JUMP"
    },
    "11582": {
      "op": "JUMPDEST"
    },
    "11583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11585": {
      "op": "DUP2"
    },
    "11586": {
      "op": "DUP2"
    },
    "11587": {
      "op": "SHR"
    },
    "11588": {
      "op": "SWAP1"
    },
    "11589": {
      "op": "DUP3"
    },
    "11590": {
      "op": "AND"
    },
    "11591": {
      "op": "DUP1"
    },
    "11592": {
      "op": "PUSH2",
      "value": "0x2D52"
    },
    "11595": {
      "op": "JUMPI"
    },
    "11596": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11598": {
      "op": "DUP3"
    },
    "11599": {
      "op": "AND"
    },
    "11600": {
      "op": "SWAP2"
    },
    "11601": {
      "op": "POP"
    },
    "11602": {
      "op": "JUMPDEST"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11605": {
      "op": "DUP3"
    },
    "11606": {
      "op": "LT"
    },
    "11607": {
      "op": "DUP2"
    },
    "11608": {
      "op": "EQ"
    },
    "11609": {
      "op": "ISZERO"
    },
    "11610": {
      "op": "PUSH2",
      "value": "0x2D73"
    },
    "11613": {
      "op": "JUMPI"
    },
    "11614": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11621": {
      "op": "SHL"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11624": {
      "op": "MSTORE"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11629": {
      "op": "MSTORE"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11634": {
      "op": "REVERT"
    },
    "11635": {
      "op": "JUMPDEST"
    },
    "11636": {
      "op": "POP"
    },
    "11637": {
      "op": "SWAP2"
    },
    "11638": {
      "op": "SWAP1"
    },
    "11639": {
      "op": "POP"
    },
    "11640": {
      "jump": "o",
      "op": "JUMP"
    },
    "11641": {
      "op": "JUMPDEST"
    },
    "11642": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11649": {
      "op": "SHL"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11652": {
      "op": "MSTORE"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11657": {
      "op": "MSTORE"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11662": {
      "op": "REVERT"
    },
    "11663": {
      "op": "JUMPDEST"
    },
    "11664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11666": {
      "op": "DUP3"
    },
    "11667": {
      "op": "NOT"
    },
    "11668": {
      "op": "DUP3"
    },
    "11669": {
      "op": "GT"
    },
    "11670": {
      "op": "ISZERO"
    },
    "11671": {
      "op": "PUSH2",
      "value": "0x2DA2"
    },
    "11674": {
      "op": "JUMPI"
    },
    "11675": {
      "op": "PUSH2",
      "value": "0x2DA2"
    },
    "11678": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "11681": {
      "jump": "i",
      "op": "JUMP"
    },
    "11682": {
      "op": "JUMPDEST"
    },
    "11683": {
      "op": "POP"
    },
    "11684": {
      "op": "ADD"
    },
    "11685": {
      "op": "SWAP1"
    },
    "11686": {
      "jump": "o",
      "op": "JUMP"
    },
    "11687": {
      "op": "JUMPDEST"
    },
    "11688": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11695": {
      "op": "SHL"
    },
    "11696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11698": {
      "op": "MSTORE"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11701": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11703": {
      "op": "MSTORE"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11708": {
      "op": "REVERT"
    },
    "11709": {
      "op": "JUMPDEST"
    },
    "11710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11714": {
      "op": "NOT"
    },
    "11715": {
      "op": "DUP3"
    },
    "11716": {
      "op": "EQ"
    },
    "11717": {
      "op": "ISZERO"
    },
    "11718": {
      "op": "PUSH2",
      "value": "0x2DD1"
    },
    "11721": {
      "op": "JUMPI"
    },
    "11722": {
      "op": "PUSH2",
      "value": "0x2DD1"
    },
    "11725": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "11728": {
      "jump": "i",
      "op": "JUMP"
    },
    "11729": {
      "op": "JUMPDEST"
    },
    "11730": {
      "op": "POP"
    },
    "11731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11733": {
      "op": "ADD"
    },
    "11734": {
      "op": "SWAP1"
    },
    "11735": {
      "jump": "o",
      "op": "JUMP"
    },
    "11736": {
      "op": "JUMPDEST"
    },
    "11737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11739": {
      "op": "DUP2"
    },
    "11740": {
      "op": "DUP2"
    },
    "11741": {
      "op": "JUMPDEST"
    },
    "11742": {
      "op": "DUP1"
    },
    "11743": {
      "op": "DUP6"
    },
    "11744": {
      "op": "GT"
    },
    "11745": {
      "op": "ISZERO"
    },
    "11746": {
      "op": "PUSH2",
      "value": "0x2E13"
    },
    "11749": {
      "op": "JUMPI"
    },
    "11750": {
      "op": "DUP2"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11753": {
      "op": "NOT"
    },
    "11754": {
      "op": "DIV"
    },
    "11755": {
      "op": "DUP3"
    },
    "11756": {
      "op": "GT"
    },
    "11757": {
      "op": "ISZERO"
    },
    "11758": {
      "op": "PUSH2",
      "value": "0x2DF9"
    },
    "11761": {
      "op": "JUMPI"
    },
    "11762": {
      "op": "PUSH2",
      "value": "0x2DF9"
    },
    "11765": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "11768": {
      "jump": "i",
      "op": "JUMP"
    },
    "11769": {
      "op": "JUMPDEST"
    },
    "11770": {
      "op": "DUP1"
    },
    "11771": {
      "op": "DUP6"
    },
    "11772": {
      "op": "AND"
    },
    "11773": {
      "op": "ISZERO"
    },
    "11774": {
      "op": "PUSH2",
      "value": "0x2E06"
    },
    "11777": {
      "op": "JUMPI"
    },
    "11778": {
      "op": "SWAP2"
    },
    "11779": {
      "op": "DUP2"
    },
    "11780": {
      "op": "MUL"
    },
    "11781": {
      "op": "SWAP2"
    },
    "11782": {
      "op": "JUMPDEST"
    },
    "11783": {
      "op": "SWAP4"
    },
    "11784": {
      "op": "DUP5"
    },
    "11785": {
      "op": "SHR"
    },
    "11786": {
      "op": "SWAP4"
    },
    "11787": {
      "op": "SWAP1"
    },
    "11788": {
      "op": "DUP1"
    },
    "11789": {
      "op": "MUL"
    },
    "11790": {
      "op": "SWAP1"
    },
    "11791": {
      "op": "PUSH2",
      "value": "0x2DDD"
    },
    "11794": {
      "op": "JUMP"
    },
    "11795": {
      "op": "JUMPDEST"
    },
    "11796": {
      "op": "POP"
    },
    "11797": {
      "op": "SWAP3"
    },
    "11798": {
      "op": "POP"
    },
    "11799": {
      "op": "SWAP3"
    },
    "11800": {
      "op": "SWAP1"
    },
    "11801": {
      "op": "POP"
    },
    "11802": {
      "jump": "o",
      "op": "JUMP"
    },
    "11803": {
      "op": "JUMPDEST"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11806": {
      "op": "DUP3"
    },
    "11807": {
      "op": "PUSH2",
      "value": "0x2E2A"
    },
    "11810": {
      "op": "JUMPI"
    },
    "11811": {
      "op": "POP"
    },
    "11812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11814": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "11817": {
      "op": "JUMP"
    },
    "11818": {
      "op": "JUMPDEST"
    },
    "11819": {
      "op": "DUP2"
    },
    "11820": {
      "op": "PUSH2",
      "value": "0x2E37"
    },
    "11823": {
      "op": "JUMPI"
    },
    "11824": {
      "op": "POP"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11827": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "11830": {
      "op": "JUMP"
    },
    "11831": {
      "op": "JUMPDEST"
    },
    "11832": {
      "op": "DUP2"
    },
    "11833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11835": {
      "op": "DUP2"
    },
    "11836": {
      "op": "EQ"
    },
    "11837": {
      "op": "PUSH2",
      "value": "0x2E4D"
    },
    "11840": {
      "op": "JUMPI"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11843": {
      "op": "DUP2"
    },
    "11844": {
      "op": "EQ"
    },
    "11845": {
      "op": "PUSH2",
      "value": "0x2E57"
    },
    "11848": {
      "op": "JUMPI"
    },
    "11849": {
      "op": "PUSH2",
      "value": "0x2E73"
    },
    "11852": {
      "op": "JUMP"
    },
    "11853": {
      "op": "JUMPDEST"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11856": {
      "op": "SWAP2"
    },
    "11857": {
      "op": "POP"
    },
    "11858": {
      "op": "POP"
    },
    "11859": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "11862": {
      "op": "JUMP"
    },
    "11863": {
      "op": "JUMPDEST"
    },
    "11864": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11866": {
      "op": "DUP5"
    },
    "11867": {
      "op": "GT"
    },
    "11868": {
      "op": "ISZERO"
    },
    "11869": {
      "op": "PUSH2",
      "value": "0x2E68"
    },
    "11872": {
      "op": "JUMPI"
    },
    "11873": {
      "op": "PUSH2",
      "value": "0x2E68"
    },
    "11876": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "11879": {
      "jump": "i",
      "op": "JUMP"
    },
    "11880": {
      "op": "JUMPDEST"
    },
    "11881": {
      "op": "POP"
    },
    "11882": {
      "op": "POP"
    },
    "11883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11885": {
      "op": "DUP3"
    },
    "11886": {
      "op": "SHL"
    },
    "11887": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "11890": {
      "op": "JUMP"
    },
    "11891": {
      "op": "JUMPDEST"
    },
    "11892": {
      "op": "POP"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11895": {
      "op": "DUP4"
    },
    "11896": {
      "op": "LT"
    },
    "11897": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "11900": {
      "op": "DUP4"
    },
    "11901": {
      "op": "LT"
    },
    "11902": {
      "op": "AND"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "11905": {
      "op": "DUP5"
    },
    "11906": {
      "op": "LT"
    },
    "11907": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "11909": {
      "op": "DUP5"
    },
    "11910": {
      "op": "LT"
    },
    "11911": {
      "op": "AND"
    },
    "11912": {
      "op": "OR"
    },
    "11913": {
      "op": "ISZERO"
    },
    "11914": {
      "op": "PUSH2",
      "value": "0x2E96"
    },
    "11917": {
      "op": "JUMPI"
    },
    "11918": {
      "op": "POP"
    },
    "11919": {
      "op": "DUP2"
    },
    "11920": {
      "op": "DUP2"
    },
    "11921": {
      "op": "EXP"
    },
    "11922": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "11925": {
      "op": "JUMP"
    },
    "11926": {
      "op": "JUMPDEST"
    },
    "11927": {
      "op": "PUSH2",
      "value": "0x2EA0"
    },
    "11930": {
      "op": "DUP4"
    },
    "11931": {
      "op": "DUP4"
    },
    "11932": {
      "op": "PUSH2",
      "value": "0x2DD8"
    },
    "11935": {
      "jump": "i",
      "op": "JUMP"
    },
    "11936": {
      "op": "JUMPDEST"
    },
    "11937": {
      "op": "DUP1"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11940": {
      "op": "NOT"
    },
    "11941": {
      "op": "DIV"
    },
    "11942": {
      "op": "DUP3"
    },
    "11943": {
      "op": "GT"
    },
    "11944": {
      "op": "ISZERO"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EB4"
    },
    "11948": {
      "op": "JUMPI"
    },
    "11949": {
      "op": "PUSH2",
      "value": "0x2EB4"
    },
    "11952": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "11955": {
      "jump": "i",
      "op": "JUMP"
    },
    "11956": {
      "op": "JUMPDEST"
    },
    "11957": {
      "op": "MUL"
    },
    "11958": {
      "op": "SWAP4"
    },
    "11959": {
      "op": "SWAP3"
    },
    "11960": {
      "op": "POP"
    },
    "11961": {
      "op": "POP"
    },
    "11962": {
      "op": "POP"
    },
    "11963": {
      "jump": "o",
      "op": "JUMP"
    },
    "11964": {
      "op": "JUMPDEST"
    },
    "11965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11967": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "11970": {
      "op": "DUP4"
    },
    "11971": {
      "op": "DUP4"
    },
    "11972": {
      "op": "PUSH2",
      "value": "0x2E1B"
    },
    "11975": {
      "jump": "i",
      "op": "JUMP"
    },
    "11976": {
      "op": "JUMPDEST"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11979": {
      "op": "DUP2"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11982": {
      "op": "NOT"
    },
    "11983": {
      "op": "DIV"
    },
    "11984": {
      "op": "DUP4"
    },
    "11985": {
      "op": "GT"
    },
    "11986": {
      "op": "DUP3"
    },
    "11987": {
      "op": "ISZERO"
    },
    "11988": {
      "op": "ISZERO"
    },
    "11989": {
      "op": "AND"
    },
    "11990": {
      "op": "ISZERO"
    },
    "11991": {
      "op": "PUSH2",
      "value": "0x2EE2"
    },
    "11994": {
      "op": "JUMPI"
    },
    "11995": {
      "op": "PUSH2",
      "value": "0x2EE2"
    },
    "11998": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "12001": {
      "jump": "i",
      "op": "JUMP"
    },
    "12002": {
      "op": "JUMPDEST"
    },
    "12003": {
      "op": "POP"
    },
    "12004": {
      "op": "MUL"
    },
    "12005": {
      "op": "SWAP1"
    },
    "12006": {
      "jump": "o",
      "op": "JUMP"
    },
    "12007": {
      "op": "JUMPDEST"
    },
    "12008": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12015": {
      "op": "SHL"
    },
    "12016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12018": {
      "op": "MSTORE"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12021": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12023": {
      "op": "MSTORE"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12028": {
      "op": "REVERT"
    },
    "12029": {
      "op": "JUMPDEST"
    },
    "12030": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12037": {
      "op": "SHL"
    },
    "12038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12040": {
      "op": "MSTORE"
    },
    "12041": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12043": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12045": {
      "op": "MSTORE"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12050": {
      "op": "REVERT"
    },
    "12051": {
      "op": "JUMPDEST"
    },
    "12052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12054": {
      "op": "DUP3"
    },
    "12055": {
      "op": "PUSH2",
      "value": "0x2F22"
    },
    "12058": {
      "op": "JUMPI"
    },
    "12059": {
      "op": "PUSH2",
      "value": "0x2F22"
    },
    "12062": {
      "op": "PUSH2",
      "value": "0x2EFD"
    },
    "12065": {
      "jump": "i",
      "op": "JUMP"
    },
    "12066": {
      "op": "JUMPDEST"
    },
    "12067": {
      "op": "POP"
    },
    "12068": {
      "op": "DIV"
    },
    "12069": {
      "op": "SWAP1"
    },
    "12070": {
      "jump": "o",
      "op": "JUMP"
    },
    "12071": {
      "op": "JUMPDEST"
    },
    "12072": {
      "op": "SWAP3"
    },
    "12073": {
      "op": "DUP4"
    },
    "12074": {
      "op": "MSTORE"
    },
    "12075": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12077": {
      "op": "SWAP2"
    },
    "12078": {
      "op": "SWAP1"
    },
    "12079": {
      "op": "SWAP2"
    },
    "12080": {
      "op": "SHL"
    },
    "12081": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12094": {
      "op": "NOT"
    },
    "12095": {
      "op": "AND"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12098": {
      "op": "DUP4"
    },
    "12099": {
      "op": "ADD"
    },
    "12100": {
      "op": "MSTORE"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "12103": {
      "op": "DUP3"
    },
    "12104": {
      "op": "ADD"
    },
    "12105": {
      "op": "MSTORE"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "12108": {
      "op": "ADD"
    },
    "12109": {
      "op": "SWAP1"
    },
    "12110": {
      "jump": "o",
      "op": "JUMP"
    },
    "12111": {
      "op": "JUMPDEST"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12116": {
      "op": "DUP3"
    },
    "12117": {
      "op": "DUP5"
    },
    "12118": {
      "op": "SUB"
    },
    "12119": {
      "op": "SLT"
    },
    "12120": {
      "op": "ISZERO"
    },
    "12121": {
      "op": "PUSH2",
      "value": "0x2F61"
    },
    "12124": {
      "op": "JUMPI"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12127": {
      "op": "DUP1"
    },
    "12128": {
      "op": "REVERT"
    },
    "12129": {
      "op": "JUMPDEST"
    },
    "12130": {
      "op": "DUP2"
    },
    "12131": {
      "op": "MLOAD"
    },
    "12132": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "12135": {
      "op": "DUP2"
    },
    "12136": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "12139": {
      "jump": "i",
      "op": "JUMP"
    },
    "12140": {
      "op": "JUMPDEST"
    },
    "12141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12143": {
      "op": "DUP3"
    },
    "12144": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12147": {
      "op": "JUMPI"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12151": {
      "op": "PUSH2",
      "value": "0x2EFD"
    },
    "12154": {
      "jump": "i",
      "op": "JUMP"
    },
    "12155": {
      "op": "JUMPDEST"
    },
    "12156": {
      "op": "POP"
    },
    "12157": {
      "op": "MOD"
    },
    "12158": {
      "op": "SWAP1"
    },
    "12159": {
      "jump": "o",
      "op": "JUMP"
    },
    "12160": {
      "op": "JUMPDEST"
    },
    "12161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12165": {
      "op": "DUP3"
    },
    "12166": {
      "op": "DUP5"
    },
    "12167": {
      "op": "SUB"
    },
    "12168": {
      "op": "SLT"
    },
    "12169": {
      "op": "ISZERO"
    },
    "12170": {
      "op": "PUSH2",
      "value": "0x2F92"
    },
    "12173": {
      "op": "JUMPI"
    },
    "12174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12176": {
      "op": "DUP1"
    },
    "12177": {
      "op": "REVERT"
    },
    "12178": {
      "op": "JUMPDEST"
    },
    "12179": {
      "op": "POP"
    },
    "12180": {
      "op": "MLOAD"
    },
    "12181": {
      "op": "SWAP2"
    },
    "12182": {
      "op": "SWAP1"
    },
    "12183": {
      "op": "POP"
    },
    "12184": {
      "jump": "o",
      "op": "JUMP"
    },
    "12185": {
      "op": "JUMPDEST"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12188": {
      "op": "DUP3"
    },
    "12189": {
      "op": "DUP3"
    },
    "12190": {
      "op": "LT"
    },
    "12191": {
      "op": "ISZERO"
    },
    "12192": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12195": {
      "op": "JUMPI"
    },
    "12196": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2D79"
    },
    "12202": {
      "jump": "i",
      "op": "JUMP"
    },
    "12203": {
      "op": "JUMPDEST"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "op": "SUB"
    },
    "12206": {
      "op": "SWAP1"
    },
    "12207": {
      "jump": "o",
      "op": "JUMP"
    },
    "12208": {
      "op": "JUMPDEST"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12211": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12216": {
      "op": "DUP5"
    },
    "12217": {
      "op": "AND"
    },
    "12218": {
      "op": "DUP4"
    },
    "12219": {
      "op": "PUSH2",
      "value": "0x2E1B"
    },
    "12222": {
      "jump": "i",
      "op": "JUMP"
    },
    "12223": {
      "op": "JUMPDEST"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12226": {
      "op": "DUP1"
    },
    "12227": {
      "op": "DUP3"
    },
    "12228": {
      "op": "MSTORE"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "12231": {
      "op": "SWAP1"
    },
    "12232": {
      "op": "DUP3"
    },
    "12233": {
      "op": "ADD"
    },
    "12234": {
      "op": "MSTORE"
    },
    "12235": {
      "op": "PUSH32",
      "value": "0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368"
    },
    "12268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12270": {
      "op": "DUP3"
    },
    "12271": {
      "op": "ADD"
    },
    "12272": {
      "op": "MSTORE"
    },
    "12273": {
      "op": "PUSH14",
      "value": "0x185B1B195B99D957D91A59D95CDD"
    },
    "12288": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "12290": {
      "op": "SHL"
    },
    "12291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12293": {
      "op": "DUP3"
    },
    "12294": {
      "op": "ADD"
    },
    "12295": {
      "op": "MSTORE"
    },
    "12296": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12298": {
      "op": "ADD"
    },
    "12299": {
      "op": "SWAP1"
    },
    "12300": {
      "jump": "o",
      "op": "JUMP"
    },
    "12301": {
      "op": "JUMPDEST"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12304": {
      "op": "DUP1"
    },
    "12305": {
      "op": "DUP3"
    },
    "12306": {
      "op": "MSTORE"
    },
    "12307": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "12309": {
      "op": "SWAP1"
    },
    "12310": {
      "op": "DUP3"
    },
    "12311": {
      "op": "ADD"
    },
    "12312": {
      "op": "MSTORE"
    },
    "12313": {
      "op": "PUSH32",
      "value": "0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69"
    },
    "12346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12348": {
      "op": "DUP3"
    },
    "12349": {
      "op": "ADD"
    },
    "12350": {
      "op": "MSTORE"
    },
    "12351": {
      "op": "PUSH8",
      "value": "0x1B99D5185C99D95D"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "12362": {
      "op": "SHL"
    },
    "12363": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12365": {
      "op": "DUP3"
    },
    "12366": {
      "op": "ADD"
    },
    "12367": {
      "op": "MSTORE"
    },
    "12368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12370": {
      "op": "ADD"
    },
    "12371": {
      "op": "SWAP1"
    },
    "12372": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7c73648caa0ac471c890aa4eb4f84980cfa7e202",
  "source": "/**\n *Submitted for verification at polygonscan.com on 2022-02-12\n*/\n\n// Forge - Contract\n//\n// Distrubtion of Forge Token is as follows:\n// 25% of Forge Token is Auctioned in the ForgeAuctions Contract which distributes tokens to users who use 0xBitcoin to buy tokens in fair price. Each auction lasts ~3 days. Using the Auctions contract\n// +\n// 25% of Forge Token is distributed as Liquidiy Pool rewards in the ForgeRewards Contract which distributes tokens to users who deposit the SpiritSwap Liquidity Pool tokens into the LPRewards contract.\n// +\n// 50% of Forge Token is distributed using Forge Contract(this Contract) which distributes tokens to users by using Proof of work. Computers solve a complicated problem to gain tokens!\n//\n// = 100% Of the Token is distributed to the users! No dev fee or premine!\n//\n// All distributions happen fairly using Bitcoins model of distribution using reward halvings and difficulty adjustments.  Distribution happens over 100 years!  \n// 100%  on-chain, decentralized, trustless, ownerless contracts*!\n//   The harder it is mined the less tokens that are awarded.\n// Network: Polygon Chain \n// ChainID = 89\n//\n//\n// Name: Forge\n// Symbol: Fge\n// Decimals: 18 \n//\n// Total supply: 42,000,001.000000000000000000\n//   =\n// 21,000,000 Mined over 100+ years using Bitcoins Distrubtion halvings every 4 years. Uses Proof-oF-Work to distribute the tokens. Public Miner is available.  Uses this contract.\n//   +\n// 10,500,000 Auctioned over 100+ years into 4 day auctions split fairly among all buyers. ALL 0xBitcoin proceeds go into THIS contract which it fairly distributes to miners.  Uses the ForgeAuctions contract\n//   +\n// 10,500,000 tokens goes to Liquidity Providers of the token over 100+ year using Bitcoins distribution!  Helps prevent LP losses!  Uses the ForgeRewards Contract\n//\n//  =\n//\n// 42,000,001 Tokens is the max Supply\n//      \n// 66% of the 0xBitcoin Token from this contract goes to the Miner to pay for the transaction cost and if the token grows enough earn 0xBitcoin per mint!!\n// 33% of the 0xBitcoin TOken from this contract goes to the Liquidity Providers via ForgeRewards Contract.  Helps prevent Impermant Loss! Larger Liquidity!\n//\n// No premine, dev cut, or advantage taken at launch. Public miner available at launch.  100% of the token is given away fairly over 100+ years using Bitcoins model!\n//\n// Send this contract any ERC20 token and it will become instantly mineable and able to distribute using proof-of-work for 1 year!!!!\n//\n//Viva la Mineables!!! Send this contract any ERC20 complient token (Wrapped NFTs incoming!) and we will fairly to miners and Holders(\n//  Each Mint prints (1/10000) of any ERC20.\n//pThirdDifficulty allows for the difficulty to be cut in a third.  So difficulty 10,000 becomes 3,333.  Costs 333 Fantom  Makes mining 3x easier\n//* 1 tokens in LP are burned to create the LP pool.\n//\n// Credits: 0xBitcoin, Vether, Synethix\n//* Except for Staking Rewards additional cryptocurrencies\n\n\npragma solidity ^0.8.11;\n\ncontract Ownable {\n    address public owner;\n\n    event TransferOwnership(address _from, address _to);\n\n    constructor() public {\n        owner = msg.sender;\n        emit TransferOwnership(address(0), msg.sender);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner\");\n        _;\n    }\n\n    function setOwner(address _owner) internal onlyOwner {\n        emit TransferOwnership(owner, _owner);\n        owner = _owner;\n    }\n}\n\n\n\n\nlibrary IsContract {\n    function isContract(address _addr) internal view returns (bool) {\n        bytes32 codehash;\n        /* solium-disable-next-line */\n        assembly { codehash := extcodehash(_addr) }\n        return codehash != bytes32(0) && codehash != bytes32(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470);\n    }\n}\n\n// File: contracts/utils/SafeMath.sol\n\nlibrary SafeMath2 {\n    function add(uint256 x, uint256 y) internal pure returns (uint256) {\n        uint256 z = x + y;\n        require(z >= x, \"Add overflow\");\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(x >= y, \"Sub underflow\");\n        return x - y;\n    }\n\n    function mult(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (x == 0) {\n            return 0;\n        }\n\n        uint256 z = x * y;\n        require(z / x == y, \"Mult overflow\");\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        return x / y;\n    }\n\n    function divRound(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        uint256 r = x / y;\n        if (x % y != 0) {\n            r = r + 1;\n        }\n\n        return r;\n    }\n}\n\n// File: contracts/utils/Math.sol\n\nlibrary ExtendedMath2 {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// File: contracts/interfaces/IERC20.sol\n\ninterface IERC20 {\n\tfunction totalSupply() external view returns (uint256);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function transfer(address _to, uint _value) external returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n    function approve(address _spender, uint256 _value) external returns (bool success);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n    \n}\n\n\n// File: contracts/commons/AddressMinHeap.sol\n\n\n\nabstract contract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\n}\n\n\n//Main contract\n\ncontract ForgeTest is Ownable, IERC20, ApproveAndCallFallBack {\n\tuint constant public targetTime = 60 * 48;\n    uint public multipler = 0;\n// SUPPORTING CONTRACTS\n    address public AddressAuction;\n    address public AddressLPReward;\n    address public AddressZeroXBTC;\n//Events\n    using SafeMath2 for uint256;\n    using ExtendedMath2 for uint;\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n    event MegaMint(address indexed from, uint epochCount, bytes32 newChallengeNumber, uint NumberOfTokensMinted, uint256 TokenMultipler);\n\n// Managment events\n    uint256 override public totalSupply = 42000001000000000000000000;\n    bytes32 private constant BALANCE_KEY = keccak256(\"balance\");\n\n    //BITCOIN INITALIZE Start\n\t\n    uint _totalSupply = 21000000000000000000000000;\n    uint public latestDifficultyPeriodStarted2 = block.timestamp;\n    uint public epochCount = 0;//number of 'blocks' mined\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n    \n    uint public  _MAXIMUM_TARGET = 2**234;\n    uint public miningTarget = _MAXIMUM_TARGET.div(200000000000*25);  //1000 million difficulty to start until i enable mining\n    \n    bytes32 public challengeNumber = blockhash(block.number - 1);   //generate a new one when a new reward is minted\n    uint public rewardEra = 0;\n    uint public maxSupplyForEra = (_totalSupply - _totalSupply.div( 2**(rewardEra + 1)));\n    uint public reward_amount = 0;\n    \n    //Stuff for Functions\n    uint oldecount = 0;\n    uint public previousBlockTime  =  block.timestamp;\n    uint oneEthUnit =    1000000000000000000;\n    uint one8unit   =              100000000;\n    uint public Token2Per=           1000000;\n    uint Token2Min=                       88;\n    uint public tokensMinted;\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    uint give0xBTC = 0;\n    uint give = 1;\n    // metadata\n    string public name = \"Forge\";\n    string public constant symbol = \"Fge\";\n    uint8 public constant decimals = 18;\n\n    uint256 lastrun = block.timestamp;\n    uint public latestDifficultyPeriodStarted = block.number;\n    bool initeds = false;\n    \n    // mint 1 token to setup LPs\n\t    constructor() public {\n    balances[msg.sender] = 1000000000000000000;\n    emit Transfer(address(0), msg.sender, 1000000000000000000);\n\t}\n\n    function zinit(address AuctionAddress2, address LPGuild2, address _ZeroXBTCAddress) public onlyOwner{\n        uint x = 21000000000000000000000000; \n        // Only init once\n        assert(!initeds);\n        initeds = true;\n\t    previousBlockTime = block.timestamp;\n\t    reward_amount = (100 * 10**uint(decimals) ).div( 2**rewardEra );\n    \trewardEra = 0;\n\t    tokensMinted = 0;\n\t    epochCount = 0;\n    \tminingTarget = _MAXIMUM_TARGET.div(1); //5000000 = 31gh/s @ 7 min for FPGA mining\n        latestDifficultyPeriodStarted2 = block.timestamp;\n    \t_startNewMiningEpoch();\n        // Init contract variables and mint\n        balances[AuctionAddress2] = x/2;\n\t\n        emit Transfer(address(0), AuctionAddress2, x/2);\n\t\n    \tAddressAuction = AuctionAddress2;\n        AddressLPReward = payable(LPGuild2);\n        AddressZeroXBTC = _ZeroXBTCAddress;\n\t\n        oldecount = epochCount;\n\t\n\t\tsetOwner(address(0));\n     \n    }\n\n\n\tfunction mintFREE(bool nonce, bool challenge_digest,  address mintTo) public returns (uint256 owed) {\n\n\t\t_startNewMiningEpoch();\n\n\t\t//uint diff = block.timestamp - previousBlockTime;\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (350000000);\n\t\t} \n\n\n\t\tbalances[mintTo] = balances[mintTo].add((reward_amount * totalOwed).div(100000000));\n\t\tbalances[AddressLPReward] = balances[AddressLPReward].add((reward_amount * totalOwed).div(100000000 * 2));\n\t\t\t\t\n\t\ttokensMinted = tokensMinted.add((reward_amount * totalOwed).div(100000000));\n\t\tpreviousBlockTime = block.timestamp;\n\n\t\tif(give0xBTC > 0){\n\t\t\tif(ratio < 200){\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (totalOwed * Token2Per * give0xBTC).div(100000000));\n\t\t\t}else{\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (34 * Token2Per * give0xBTC).div(10));\n\t\t\t}\n\t\t}\n\n\t\temit Mint(msg.sender, (reward_amount * totalOwed).div(100000000), epochCount, challengeNumber );\n\n\t\treturn totalOwed;\n\n\t}\n\n\n\t///\n\t// Managment\n\t///\n\t\n\tfunction ARewardSender() public {\n\t\t//runs every _BLOCKS_PER_READJUSTMENT / 4\n\n\t\tuint256 runs = block.timestamp - lastrun;\n\n\t\tuint256 epochsPast = epochCount - oldecount; //actually epoch\n\t\tuint256 runsperepoch = runs / epochsPast;\n\n\t\treward_amount = (100 * 10**uint(decimals)).div( 2**rewardEra );\n\t\tuint256 x = (runsperepoch * 888).divRound(targetTime);\n\t\tuint256 ratio = x * 100 / 888;\n\t\tuint256 totalOwed;\n\t\t\n\t\t if(ratio < 200){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888**2) + (40861500 * x).div(888) ;\n\t\t }else {\n\t\t\ttotalOwed = (340000000);\n\t\t} \n\n\t\tif(IERC20(AddressZeroXBTC).balanceOf(address(this)) > (30 * 2 * (Token2Per * _BLOCKS_PER_READJUSTMENT)/4)){  // at least enough blocks to rerun this function for both LPRewards and Users\n\t\t\tIERC20(AddressZeroXBTC).transfer(AddressLPReward, ((epochsPast) * totalOwed * Token2Per * give0xBTC).div(2 * 100000000));\n\t\t\tgive0xBTC = 1 * give;\n\t\t}else{\n\t\t\tgive0xBTC = 0;\n\t\t}\n\t\toldecount = epochCount; //actually epoch\n\n\t\tlastrun = block.timestamp;\n\t}\n\n\n\t//comability function\n\tfunction mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\t\tmintTo(nonce, challenge_digest, msg.sender);\n\t}\n\n\n\tfunction mintTo(uint256 nonce, bytes32 challenge_digest,  address mintTo) public returns (uint256 owed) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\n\t\t//uint diff = block.timestamp - previousBlockTime;\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (350000000);\n\t\t} \n\n\n\t\tbalances[mintTo] = balances[mintTo].add((reward_amount * totalOwed).div(100000000));\n\t\tbalances[AddressLPReward] = balances[AddressLPReward].add((reward_amount * totalOwed).div(100000000 * 2));\n\t\t\t\t\n\t\ttokensMinted = tokensMinted.add((reward_amount * totalOwed).div(100000000));\n\t\tpreviousBlockTime = block.timestamp;\n\n\t\tif(give0xBTC > 0){\n\t\t\tif(ratio < 200){\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (totalOwed * Token2Per * give0xBTC).div(100000000));\n\t\t\t}else{\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (34 * Token2Per * give0xBTC).div(10));\n\t\t\t}\n\t\t}\n\n\t\temit Mint(msg.sender, (reward_amount * totalOwed).div(100000000), epochCount, challengeNumber );\n\n\t\treturn totalOwed;\n\n\t}\n\n\n\tfunction mintTokensArrayTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\t\tuint256 totalOd = mintTo(nonce,challenge_digest, MintTo[0]);\n\t\trequire(totalOd > 0, \"mint issue\");\n\n\t\trequire(MintTo.length == ExtraFunds.length + 1,\"MintTo has to have an extra address compared to ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tuint256 totalOwed = 0;\n\t\tuint256 TotalOwned = 0;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).div(100000000 * 2500 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x+1], totalOwed);\n\t\t\t}\n        }\n        \t\n\t\temit MegaMint(msg.sender, epochCount, challengeNumber, xy, totalOd );\n\n\t\treturn totalOd;\n\n    }\n\n\n\tfunction mintTokensSameAddress(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address MintTo) public returns (bool success) {\n\t\taddress[] memory dd = new address[](ExtraFunds.length + 1); \n\n\t\tfor(uint x=0; x< (ExtraFunds.length + 1); x++)\n\t\t{\n\t\t\tdd[x] = MintTo;\n\t\t}\n\t\t\n\t\tmintTokensArrayTo(nonce, challenge_digest, ExtraFunds, dd);\n\n\t\treturn true;\n\t}\n\n\n\tfunction empty_mintTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\t\trequire(MintTo.length == ExtraFunds.length,\"MintTo has to have same number of addressses as ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalIN = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalIN = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalIN = (x * 100000000).div(888) + (350000000);\n\t\t} \n\t\trequire(totalIN > 0, \"mint issue\");\n\t\tuint256 totalOwed;\n\t\tuint256 TotalOwned;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).div(100000000 * 2500 );\n\t\t\t\t    }\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x], totalOwed);\n\t\t\t    }\n            }\n        }\n\n\t\tpreviousBlockTime = block.timestamp;\n\t\treturn totalIN;   \n\t}\n\n\n\n\tfunction _startNewMiningEpoch() internal {\n\n\n\t\t//if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\t\t//59 is the final reward era, almost all tokens minted\n\t\tif( tokensMinted.add(reward_amount) > maxSupplyForEra && rewardEra < 60)\n\t\t{\n\t\t\trewardEra = rewardEra + 1;\n\t\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\t\t}\n\n\t\t//set the next minted supply at which the era will change\n\t\t// total supply of MINED tokens is 21000000000000000000000000  because of 16 decimal places\n\n\t\tepochCount = epochCount.add(1);\n\n\t\t//every so often, readjust difficulty. Dont readjust when deploying\n\t\tif((epochCount) % (_BLOCKS_PER_READJUSTMENT / 4) == 0)\n\t\t{\n\t\t\tARewardSender();\n\t\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n\t\t\tif((epochCount % _BLOCKS_PER_READJUSTMENT== 0))\n\t\t\t{\n\t\t\t\tmultipler = (IERC20(AddressZeroXBTC).balanceOf(address(this)) / (2000 * 10 ** 8));\n\t\t\t\tif(( IERC20(AddressZeroXBTC).balanceOf(address(this)) / Token2Per) <= (10000 + 10000*(multipler))) //chosen to give keep 250 days payouts in reserve at current payout\n\t\t\t\t{\n\t\t\t\t\tif(Token2Per.div(2) > Token2Min)\n\t\t\t\t\t{\n\t\t\t\t\t\tToken2Per = Token2Per.div(2);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tToken2Per = Token2Per.mult(3);\n\t\t\t\t}\n\t\t\t\t_reAdjustDifficulty();\n\t\t\t}\n\t\t}\n\n\t\tchallengeNumber = blockhash(block.number - 1);\n\t}\n\n\n\tfunction _reAdjustDifficulty() internal {\n\t\tuint256 blktimestamp = block.timestamp;\n\t\tuint TimeSinceLastDifficultyPeriod2 = blktimestamp - latestDifficultyPeriodStarted2;\n\n\t\tuint adjusDiffTargetTime = targetTime *  _BLOCKS_PER_READJUSTMENT; //36 min per block 60 sec * 12\n\n\t\t//if there were less eth blocks passed in time than expected\n\t\tif( TimeSinceLastDifficultyPeriod2 < adjusDiffTargetTime )\n\t\t{\n\t\t\tuint excess_block_pct = (adjusDiffTargetTime.mult(100)).div( TimeSinceLastDifficultyPeriod2 );\n\t\t\tgive = 1;\n\t\t\tuint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n\t\t\t//make it harder \n\t\t\tminingTarget = miningTarget.sub(miningTarget.div(2000).mult(excess_block_pct_extra));   //by up to 50 %\n\t\t}else{\n\t\t\tuint shortage_block_pct = (TimeSinceLastDifficultyPeriod2.mult(100)).div( adjusDiffTargetTime );\n\t\t\tgive = 2;\n\t\t\tuint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n\t\t\t//make it easier\n\t\t\tminingTarget = miningTarget.add(miningTarget.div(500).mult(shortage_block_pct_extra));   //by up to 200 %\n\t\t}\n\n\t\tlatestDifficultyPeriodStarted2 = blktimestamp;\n\t\tlatestDifficultyPeriodStarted = block.number;\n\t\tif(miningTarget < _MINIMUM_TARGET) //very difficult\n\t\t{\n\t\t\tminingTarget = _MINIMUM_TARGET;\n\t\t}\n\t\tif(miningTarget > _MAXIMUM_TARGET) //very easy\n\t\t{\n\t\t\tminingTarget = _MAXIMUM_TARGET;\n\t\t}\n\t\t\n\t}\n\n\n\t\t//42 m coins total\n\t\t// = \n\t\t//21 million proof of work\n\t\t// + \n\t\t//10.5 million proof of burn\n\t\t// +\n\t\t//10.5 million rewards for Liquidity Providers\n\n\n\t//help debug mining software\n\tfunction checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\t\tbytes32 digest = bytes32(keccak256(abi.encodePacked(challenge_number,msg.sender,nonce)));\n\t\tif(uint256(digest) > testTarget) revert();\n\n\t\treturn (digest == challenge_digest);\n\t}\n\n\n\t//this is a recent ethereum block hash, used to prevent pre-mining future blocks\n\tfunction getChallengeNumber() public view returns (bytes32) {\n\n\t\treturn challengeNumber;\n\n\t}\n\n\n\t//the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n\tfunction getMiningDifficulty() public view returns (uint) {\n\n\t\treturn _MAXIMUM_TARGET.div(miningTarget);\n\t}\n\n\n\tfunction getMiningTarget() public view returns (uint) {\n\n\t\treturn miningTarget;\n\n\t}\n\n\n\tfunction getMiningMinted() public view returns (uint) {\n\n\t\treturn tokensMinted;\n\n\t}\n\n\n\t//21m coins total\n\t//reward begins at 150 and is cut in half every reward era (as tokens are mined)\n\tfunction getMiningReward() public view returns (uint) {\n\t\t//once we get half way thru the coins, only get 25 per block\n\t\t//every reward era, the reward amount halves.\n\n\t\treturn (100 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n\t\t}\n\n\n\tfunction getEpoch() public view returns (uint) {\n\n\t\treturn epochCount ;\n\n\t}\n\n\n\t//help debug mining software\n\tfunction getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\treturn digest;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Get the token balance for account `tokenOwner`\n\n\t\t// ------------------------------------------------------------------------\n\n\tfunction balanceOf(address tokenOwner) public override view returns (uint balance) {\n\n\t\treturn balances[tokenOwner];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer the balance from token owner's account to `to` account\n\n\t\t// - Owner's account must have sufficient balance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transfer(address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(msg.sender, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account\n\n\t\t//\n\n\t\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n\t\t// recommends that there are no checks for the approval double-spend attack\n\n\t\t// as this should be implemented in user interfaces\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction approve(address spender, uint tokens) public override returns (bool success) {\n\n\t\tallowed[msg.sender][spender] = tokens;\n\n\t\temit Approval(msg.sender, spender, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer `tokens` from the `from` account to the `to` account\n\n\t\t//\n\n\t\t// The calling account must already have sufficient tokens approve(...)-d\n\n\t\t// for spending from the `from` account and\n\n\t\t// - From account must have sufficient balance to transfer\n\n\t\t// - Spender must have sufficient allowance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transferFrom(address from, address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[from] = balances[from].sub(tokens);\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(from, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Returns the amount of tokens approved by the owner that can be\n\n\t\t// transferred to the spender's account\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\n\n\t\treturn allowed[tokenOwner][spender];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account. The `spender` contract function\n\n\t\t// `receiveApproval(...)` is then executed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes memory data) public override{\n\n\t\trequire(token == address(this));\n\t\tIERC20(address(this)).transfer(from, tokens);  \n\t}\n\n\n\t  //Do not allow ETH to enter\n\treceive() external payable {\n\n\t\trevert();\n\t}\n\n\n\tfallback() external payable {\n\n\t\trevert();\n\t}\n}\n\n/*\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2022 Forge\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.   \n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/",
  "sourceMap": "6011:19517:3:-:0;;;6147:1;6123:25;;6661:26;6623:64;;6811:26;6791:46;;6888:15;6843:60;;6934:1;6909:26;;7007:3;6968:42;;7070:5;7039:36;;-1:-1:-1;;;7086:37:3;;7156:36;7176:15;7156;;:19;;;;;;:36;;;;:::i;:::-;7129:63;;7304:16;7319:1;7304:12;:16;:::i;:::-;7294:27;7261:60;;7402:1;7378:25;;7455:37;7477:9;;7489:1;7477:13;;;;:::i;:::-;7473:18;;:1;:18;:::i;:::-;7455:12;;:16;;;;;;:37;;;;:::i;:::-;7440:12;;:52;;;;:::i;:::-;7409:84;;7527:1;7499:29;;;;7565:18;;;;7623:15;7589:49;;7665:19;7644:40;;7721:9;7690:40;;7769:7;7736:40;;7820:2;7782:40;;7955:18;;7991:1;7979:13;;8014:28;;;;;;;;;;;;;-1:-1:-1;;;8014:28:3;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8151:15:3;8133:33;;8216:12;8172:56;;8234:20;;;-1:-1:-1;;8234:20:3;;;8299:137;;;;;;;;;-1:-1:-1;3158:5:3;:18;;-1:-1:-1;;;;;;3158:18:3;3166:10;3158:18;;;;;3191:41;;;1995:34:5;;;2060:2;2045:18;;2038:43;;;;3191:41:3;;1930:18:5;3191:41:3;;;;;;;8335:10;8326:20;;;;:8;:20;;;;;;;;8349:19;8326:42;;;;8379:53;;2264:25:5;;;8379:53:3;;2237:18:5;8379:53:3;;;;;;;6011:19517;;4427:136;4485:7;4512:6;4504:30;;;;-1:-1:-1;;;4504:30:3;;2502:2:5;4504:30:3;;;2484:21:5;2541:2;2521:18;;;2514:30;-1:-1:-1;;;2560:18:5;;;2553:41;2611:18;;4504:30:3;;;;;;;;4551:5;4555:1;4551;:5;:::i;:::-;4544:12;;4427:136;;;;;:::o;6011:19517::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6011:19517:3;;;-1:-1:-1;6011:19517:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;186:4;214:1;211;208:8;205:34;;;219:18;;:::i;:::-;-1:-1:-1;256:9:5;;146:125::o;276:128::-;316:3;347:1;343:6;340:1;337:13;334:39;;;353:18;;:::i;:::-;-1:-1:-1;389:9:5;;276:128::o;409:422::-;498:1;541:5;498:1;555:270;576:7;566:8;563:21;555:270;;;635:4;631:1;627:6;623:17;617:4;614:27;611:53;;;644:18;;:::i;:::-;694:7;684:8;680:22;677:55;;;714:16;;;;677:55;793:22;;;;753:15;;;;555:270;;;559:3;409:422;;;;;:::o;836:806::-;885:5;915:8;905:80;;-1:-1:-1;956:1:5;970:5;;905:80;1004:4;994:76;;-1:-1:-1;1041:1:5;1055:5;;994:76;1086:4;1104:1;1099:59;;;;1172:1;1167:130;;;;1079:218;;1099:59;1129:1;1120:10;;1143:5;;;1167:130;1204:3;1194:8;1191:17;1188:43;;;1211:18;;:::i;:::-;-1:-1:-1;;1267:1:5;1253:16;;1282:5;;1079:218;;1381:2;1371:8;1368:16;1362:3;1356:4;1353:13;1349:36;1343:2;1333:8;1330:16;1325:2;1319:4;1316:12;1312:35;1309:77;1306:159;;;-1:-1:-1;1418:19:5;;;1450:5;;1306:159;1497:34;1522:8;1516:4;1497:34;:::i;:::-;1567:6;1563:1;1559:6;1555:19;1546:7;1543:32;1540:58;;;1578:18;;:::i;:::-;1616:20;;836:806;-1:-1:-1;;;836:806:5:o;1647:131::-;1707:5;1736:36;1763:8;1757:4;1736:36;:::i;2640:217::-;2680:1;2706;2696:132;;2750:10;2745:3;2741:20;2738:1;2731:31;2785:4;2782:1;2775:15;2813:4;2810:1;2803:15;2696:132;-1:-1:-1;2842:9:5;;2640:217::o;2862:380::-;2941:1;2937:12;;;;2984;;;3005:61;;3059:4;3051:6;3047:17;3037:27;;3005:61;3112:2;3104:6;3101:14;3081:18;3078:38;3075:161;;;3158:10;3153:3;3149:20;3146:1;3139:31;3193:4;3190:1;3183:15;3221:4;3218:1;3211:15;3075:161;;2862:380;;;:::o;:::-;6011:19517:3;;;;;;",
  "sourcePath": "contracts/forge.sol",
  "type": "contract"
}