{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NumberOfTokensMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "TokenMultipler",
          "type": "uint256"
        }
      ],
      "name": "MegaMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "ARewardSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressLPReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressZeroXBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Token2Per",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BLOCKS_PER_READJUSTMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAXIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MINIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "testTarget",
          "type": "uint256"
        }
      ],
      "name": "checkMintSolution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "empty_mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChallengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        }
      ],
      "name": "getMintDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "digesttest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupplyForEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "mintTokensArrayTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "MintTo",
          "type": "address"
        }
      ],
      "name": "mintTokensSameAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multipler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AuctionAddress2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LPGuild2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ZeroXBTCAddress",
          "type": "address"
        }
      ],
      "name": "zinit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ForgeToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/ForgeToken.sol",
    "exportedSymbols": {
      "ApproveAndCallFallBack": [
        322
      ],
      "ExtendedMath2": [
        243
      ],
      "Forge": [
        2285
      ],
      "IERC20": [
        310
      ],
      "IsContract": [
        84
      ],
      "Ownable": [
        57
      ],
      "SafeMath2": [
        224
      ]
    },
    "id": 2286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "2993:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57
        ],
        "name": "Ownable",
        "nameLocation": "3028:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "3057:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "3042:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3042:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 9,
            "name": "TransferOwnership",
            "nameLocation": "3075:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3101:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "3093:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3116:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "3108:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:28:0"
            },
            "src": "3069:52:0"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "3148:91:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3158:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3166:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3166:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3158:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3217:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3209:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3209:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3209:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3221:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3221:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3191:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "EmitStatement",
                  "src": "3186:46:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3138:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3148:0:0"
            },
            "scope": 57,
            "src": "3127:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "3266:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 30,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3284:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3284:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3298:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3284:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3305:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        },
                        "value": "only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3276:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:42:0"
                },
                {
                  "id": 37,
                  "nodeType": "PlaceholderStatement",
                  "src": "3328:1:0"
                }
              ]
            },
            "id": 39,
            "name": "onlyOwner",
            "nameLocation": "3254:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:2:0"
            },
            "src": "3245:91:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "3395:78:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "3428:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3435:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3410:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "EmitStatement",
                  "src": "3405:37:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3452:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3460:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3452:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:14:0"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "3385:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:9:0"
              }
            ],
            "name": "setOwner",
            "nameLocation": "3351:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3368:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "3360:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3359:16:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3395:0:0"
            },
            "scope": 57,
            "src": "3342:131:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2286,
        "src": "3019:456:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IsContract",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84
        ],
        "name": "IsContract",
        "nameLocation": "3488:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "3569:254:0",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "3587:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "3579:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3579:16:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3653:34:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3655:30:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "3679:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "3667:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3667:18:0"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "3655:8:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 59,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3679:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 65,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3655:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 67,
                  "nodeType": "InlineAssembly",
                  "src": "3644:43:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 68,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3703:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3723:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3715:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3715:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3715:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3703:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3729:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3749:66:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            },
                            "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            }
                          ],
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3741:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 75,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3741:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3741:75:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3729:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3703:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "3696:120:0"
                }
              ]
            },
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "3514:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "3533:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "3525:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3524:15:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "3563:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:6:0"
            },
            "scope": 84,
            "src": "3505:318:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2286,
        "src": "3480:345:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 224,
        "linearizedBaseContracts": [
          224
        ],
        "name": "SafeMath2",
        "nameLocation": "3874:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "3957:93:0",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "3975:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "3967:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3967:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 95,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3979:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 96,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3983:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3979:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3967:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "4002:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 101,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "4007:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464206f766572666c6f77",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        },
                        "value": "Add overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:31:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "4042:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "4035:8:0"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "3899:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3911:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3903:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3922:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3914:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:22:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3948:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:9:0"
            },
            "scope": 224,
            "src": "3890:160:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "4123:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 119,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "4141:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 120,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "4146:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4141:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756220756e646572666c6f77",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4149:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        },
                        "value": "Sub underflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4133:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:32:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 125,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "4182:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 126,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "4186:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4182:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 128,
                  "nodeType": "Return",
                  "src": "4175:12:0"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "4065:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4077:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "4069:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4069:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4088:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "4080:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4068:22:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "4114:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4113:9:0"
            },
            "scope": 224,
            "src": "4056:138:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "4268:153:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4282:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4287:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145,
                  "nodeType": "IfStatement",
                  "src": "4278:45:0",
                  "trueBody": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "4290:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4311:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 138,
                        "id": 143,
                        "nodeType": "Return",
                        "src": "4304:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "4341:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "4333:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4333:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4345:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 149,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4349:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4345:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4333:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 153,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "4368:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 154,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "4372:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4368:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 156,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "4377:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4368:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74206f766572666c6f77",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4380:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        },
                        "value": "Mult overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4360:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:36:0"
                },
                {
                  "expression": {
                    "id": 161,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "4413:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "4406:8:0"
                }
              ]
            },
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mult",
            "nameLocation": "4209:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4222:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4214:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4233:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4225:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4213:22:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4259:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:9:0"
            },
            "scope": 224,
            "src": "4200:221:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "4494:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 174,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "4512:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4517:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4512:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4520:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:30:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 180,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4551:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 181,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "4555:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4551:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "4544:12:0"
                }
              ]
            },
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "4436:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4448:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4440:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4459:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4451:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:22:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4485:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:9:0"
            },
            "scope": 224,
            "src": "4427:136:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4641:152:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "4659:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4664:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4659:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4667:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4651:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4651:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "4651:30:0"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4699:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 222,
                      "src": "4691:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 203,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "4703:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 204,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "4707:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4703:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4691:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 207,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4722:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 208,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4726:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4722:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4731:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4722:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "4718:50:0",
                  "trueBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4734:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 212,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4748:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 213,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4752:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4756:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4752:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4748:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "4748:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 220,
                    "name": "r",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "4785:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4778:8:0"
                }
              ]
            },
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divRound",
            "nameLocation": "4578:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4595:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4587:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4606:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4598:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:22:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4632:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4632:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4631:9:0"
            },
            "scope": 224,
            "src": "4569:224:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2286,
        "src": "3866:929:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtendedMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243
        ],
        "name": "ExtendedMath2",
        "nameLocation": "4840:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "4984:56:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 233,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "4998:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 234,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5002:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4998:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "IfStatement",
                  "src": "4995:18:0",
                  "trueBody": {
                    "expression": {
                      "id": 236,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5012:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 232,
                    "id": 237,
                    "nodeType": "Return",
                    "src": "5005:8:0"
                  }
                },
                {
                  "expression": {
                    "id": 239,
                    "name": "a",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "5031:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 232,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "5024:8:0"
                }
              ]
            },
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "limitLessThan",
            "nameLocation": "4923:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "4942:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4937:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4937:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "4950:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4945:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4936:16:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "4981:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4976:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:8:0"
            },
            "scope": 243,
            "src": "4914:126:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2286,
        "src": "4832:210:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 310,
        "linearizedBaseContracts": [
          310
        ],
        "name": "IERC20",
        "nameLocation": "5096:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 248,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "5115:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5126:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5152:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5152:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5151:9:0"
            },
            "scope": 310,
            "src": "5106:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 256,
            "name": "Transfer",
            "nameLocation": "5172:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5197:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5181:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5181:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5220:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5204:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5204:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5233:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5225:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5180:60:0"
            },
            "src": "5166:75:0"
          },
          {
            "anonymous": false,
            "id": 264,
            "name": "Approval",
            "nameLocation": "5252:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5277:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5261:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5301:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5285:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5285:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5319:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5311:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:66:0"
            },
            "src": "5246:81:0"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 273,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5341:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5358:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5350:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5368:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5363:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:26:0"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5399:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5394:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:14:0"
            },
            "scope": 310,
            "src": "5332:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 284,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5422:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5443:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5435:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5435:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5458:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5450:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5471:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5463:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5434:44:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5502:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5497:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5496:14:0"
            },
            "scope": 310,
            "src": "5413:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 293,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5525:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5543:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5535:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5559:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5551:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5551:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5534:34:0"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "5600:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5592:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5592:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5591:19:0"
            },
            "scope": 310,
            "src": "5516:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 302,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5625:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5641:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5633:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5659:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5651:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5651:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5632:34:0"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5690:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5685:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5684:14:0"
            },
            "scope": 310,
            "src": "5616:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 309,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5713:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5731:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5723:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5722:16:0"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5770:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5762:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5762:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5761:17:0"
            },
            "scope": 310,
            "src": "5704:75:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2286,
        "src": "5086:700:0",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "ApproveAndCallFallBack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 322,
        "linearizedBaseContracts": [
          322
        ],
        "name": "ApproveAndCallFallBack",
        "nameLocation": "5856:22:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8f4ffcb1",
            "id": 321,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "5894:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5918:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5910:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5910:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5932:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5924:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5948:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5940:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5940:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5968:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5955:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5909:64:0"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5988:0:0"
            },
            "scope": 322,
            "src": "5885:104:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2286,
        "src": "5838:153:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 323,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57,
              "src": "6029:7:0"
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "6029:7:0"
          },
          {
            "baseName": {
              "id": 325,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 310,
              "src": "6038:6:0"
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "6038:6:0"
          },
          {
            "baseName": {
              "id": 327,
              "name": "ApproveAndCallFallBack",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 322,
              "src": "6046:22:0"
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "6046:22:0"
          }
        ],
        "canonicalName": "Forge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2285,
        "linearizedBaseContracts": [
          2285,
          322,
          310,
          57
        ],
        "name": "Forge",
        "nameLocation": "6020:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "45d8a232",
            "id": 333,
            "mutability": "constant",
            "name": "targetTime",
            "nameLocation": "6093:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6072:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 329,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6072:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              },
              "id": 332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3630",
                "id": 330,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6106:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3438",
                "id": 331,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6111:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "src": "6106:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "99f584b3",
            "id": 336,
            "mutability": "mutable",
            "name": "multipler",
            "nameLocation": "6131:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6119:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 334,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6119:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6143:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94b939ef",
            "id": 338,
            "mutability": "mutable",
            "name": "AddressAuction",
            "nameLocation": "6189:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6174:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 337,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6174:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f104e0c",
            "id": 340,
            "mutability": "mutable",
            "name": "AddressLPReward",
            "nameLocation": "6224:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6209:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 339,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6209:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "510de094",
            "id": 342,
            "mutability": "mutable",
            "name": "AddressZeroXBTC",
            "nameLocation": "6260:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6245:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6245:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 345,
            "libraryName": {
              "id": 343,
              "name": "SafeMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 224,
              "src": "6296:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "6290:28:0",
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6310:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 348,
            "libraryName": {
              "id": 346,
              "name": "ExtendedMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 243,
              "src": "6329:13:0"
            },
            "nodeType": "UsingForDirective",
            "src": "6323:29:0",
            "typeName": {
              "id": 347,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6347:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 358,
            "name": "Mint",
            "nameLocation": "6363:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6384:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "6368:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6368:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward_amount",
                  "nameLocation": "6395:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "6390:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6415:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "6410:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6410:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6435:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "6427:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6427:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6367:87:0"
            },
            "src": "6357:98:0"
          },
          {
            "anonymous": false,
            "id": 370,
            "name": "MegaMint",
            "nameLocation": "6466:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6491:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "6475:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6502:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "6497:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6497:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6522:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "6514:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6514:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NumberOfTokensMinted",
                  "nameLocation": "6547:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "6542:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6542:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TokenMultipler",
                  "nameLocation": "6577:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "6569:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6569:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6474:118:0"
            },
            "src": "6460:133:0"
          },
          {
            "baseFunctions": [
              248
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 374,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "6643:11:0",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6627:8:0"
            },
            "scope": 2285,
            "src": "6619:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 371,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6619:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3432303030303031303030303030303030303030303030303030",
              "id": 373,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6657:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_42000001000000000000000000_by_1",
                "typeString": "int_const 42000001000000000000000000"
              },
              "value": "42000001000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 379,
            "mutability": "constant",
            "name": "BALANCE_KEY",
            "nameLocation": "6714:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6689:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 375,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6689:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "62616c616e6365",
                  "id": 377,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6738:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  },
                  "value": "balance"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  }
                ],
                "id": 376,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6728:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 378,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6728:20:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 382,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "6792:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6787:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 380,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6787:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231303030303030303030303030303030303030303030303030",
              "id": 381,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6807:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e932012b",
            "id": 386,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted2",
            "nameLocation": "6851:30:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6839:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 383,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6839:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 384,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "6884:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 385,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "6884:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "829965cc",
            "id": 389,
            "mutability": "mutable",
            "name": "epochCount",
            "nameLocation": "6917:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6905:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 387,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6905:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6930:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5ade81b",
            "id": 392,
            "mutability": "mutable",
            "name": "_BLOCKS_PER_READJUSTMENT",
            "nameLocation": "6976:24:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "6964:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 390,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6964:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536",
              "id": 391,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7003:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e9cf9",
            "id": 397,
            "mutability": "mutable",
            "name": "_MINIMUM_TARGET",
            "nameLocation": "7048:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7035:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 393,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7035:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              },
              "id": 396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 394,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7066:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3136",
                "id": 395,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7069:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16_by_1",
                  "typeString": "int_const 16"
                },
                "value": "16"
              },
              "src": "7066:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87a2a9d6",
            "id": 402,
            "mutability": "mutable",
            "name": "_MAXIMUM_TARGET",
            "nameLocation": "7095:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7082:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 398,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7082:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              },
              "id": 401,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 399,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7113:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "323334",
                "id": 400,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7116:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_234_by_1",
                  "typeString": "int_const 234"
                },
                "value": "234"
              },
              "src": "7113:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a769d35",
            "id": 410,
            "mutability": "mutable",
            "name": "miningTarget",
            "nameLocation": "7137:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7125:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 403,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7125:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  },
                  "id": 408,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "323030303030303030303030",
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7172:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000_by_1",
                      "typeString": "int_const 200000000000"
                    },
                    "value": "200000000000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3235",
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7185:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "src": "7172:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                ],
                "expression": {
                  "id": 404,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 402,
                  "src": "7152:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 405,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 185,
                "src": "7152:19:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 409,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7152:36:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ae0368b",
            "id": 418,
            "mutability": "mutable",
            "name": "challengeNumber",
            "nameLocation": "7272:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7257:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 411,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "7257:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 416,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "expression": {
                      "id": 413,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "7300:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "src": "7300:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7315:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "7300:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 412,
                "name": "blockhash",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -5,
                "src": "7290:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                  "typeString": "function (uint256) view returns (bytes32)"
                }
              },
              "id": 417,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7290:27:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d38bf7a",
            "id": 421,
            "mutability": "mutable",
            "name": "rewardEra",
            "nameLocation": "7386:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7374:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 419,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7374:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7398:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fa972e1",
            "id": 435,
            "mutability": "mutable",
            "name": "maxSupplyForEra",
            "nameLocation": "7417:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7405:84:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 422,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7405:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 433,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 423,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 382,
                    "src": "7436:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7469:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 427,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "7473:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7485:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7473:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 430,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7472:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7469:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 424,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "7451:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "7451:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7451:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7436:52:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 434,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "7435:54:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2381a60e",
            "id": 438,
            "mutability": "mutable",
            "name": "reward_amount",
            "nameLocation": "7507:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7495:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 436,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7495:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 437,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7523:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 441,
            "mutability": "mutable",
            "name": "oldecount",
            "nameLocation": "7566:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7561:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 439,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7561:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 440,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7578:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "10294317",
            "id": 445,
            "mutability": "mutable",
            "name": "previousBlockTime",
            "nameLocation": "7597:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7585:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 442,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7585:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 443,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "7619:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 444,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "7619:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 448,
            "mutability": "mutable",
            "name": "oneEthUnit",
            "nameLocation": "7645:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7640:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 446,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7640:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7661:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 451,
            "mutability": "mutable",
            "name": "one8unit",
            "nameLocation": "7691:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7686:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 449,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7686:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7717:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a68eb88e",
            "id": 454,
            "mutability": "mutable",
            "name": "Token2Per",
            "nameLocation": "7744:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7732:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 452,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7732:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 453,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7765:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 457,
            "mutability": "mutable",
            "name": "Token2Min",
            "nameLocation": "7783:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7778:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 455,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7778:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3838",
              "id": 456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7816:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_88_by_1",
                "typeString": "int_const 88"
              },
              "value": "88"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de9f32b",
            "id": 459,
            "mutability": "mutable",
            "name": "tokensMinted",
            "nameLocation": "7836:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7824:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 458,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7824:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 463,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "7879:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7854:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 462,
              "keyType": {
                "id": 460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7862:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7854:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 461,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7873:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 469,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "7938:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7893:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 468,
              "keyType": {
                "id": 464,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7901:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7893:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 467,
                "keyType": {
                  "id": 465,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7920:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7912:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 466,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7931:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 472,
            "mutability": "mutable",
            "name": "give0xBTC",
            "nameLocation": "7956:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7951:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 470,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7951:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 471,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7968:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 475,
            "mutability": "mutable",
            "name": "give",
            "nameLocation": "7980:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "7975:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 473,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7975:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7987:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 478,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "8024:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8010:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 476,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8010:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466f726765",
              "id": 477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8031:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_77767363ea794e1f1e9d0ebf67829596c5727d1b2aaffa7d888f58bfc8506a01",
                "typeString": "literal_string \"Forge\""
              },
              "value": "Forge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 481,
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "8067:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8044:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 479,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8044:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466765",
              "id": 480,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8076:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_72bec6dc7612e67bf7079e1aafff1c2a41926b63891e6f06ea7f150ceb5d4b49",
                "typeString": "literal_string \"Fge\""
              },
              "value": "Fge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 484,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "8109:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8087:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 482,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "8087:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 483,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8120:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 488,
            "mutability": "mutable",
            "name": "lastrun",
            "nameLocation": "8137:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8129:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 485,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8129:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 486,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8147:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 487,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "8147:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "cb9ae707",
            "id": 492,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted",
            "nameLocation": "8180:29:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8168:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 489,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8168:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 490,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8212:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 491,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "number",
              "nodeType": "MemberAccess",
              "src": "8212:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 495,
            "mutability": "mutable",
            "name": "initeds",
            "nameLocation": "8235:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2285,
            "src": "8230:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 493,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8230:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8245:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "8316:116:0",
              "statements": [
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 498,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "8322:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 501,
                      "indexExpression": {
                        "expression": {
                          "id": 499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8331:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8331:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8322:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8345:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "8322:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "8322:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8392:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8384:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8384:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8384:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 510,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8396:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8396:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8408:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 505,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "8375:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8375:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "EmitStatement",
                  "src": "8370:58:0"
                }
              ]
            },
            "id": 516,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8306:2:0"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8316:0:0"
            },
            "scope": 2285,
            "src": "8295:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 634,
              "nodeType": "Block",
              "src": "8538:819:0",
              "statements": [
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "8553:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 634,
                      "src": "8548:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8548:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "hexValue": "3231303030303030303030303030303030303030303030303030",
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8557:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                      "typeString": "int_const 21000000000000000000000000"
                    },
                    "value": "21000000000000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8548:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8627:8:0",
                        "subExpression": {
                          "id": 532,
                          "name": "initeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 495,
                          "src": "8628:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 531,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "8620:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8620:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "8620:16:0"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 536,
                      "name": "initeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "8646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8656:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8646:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "8646:14:0"
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 540,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "8667:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 541,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8687:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8687:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8667:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "8667:35:0"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 545,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "8709:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8758:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 557,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "8761:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8758:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030",
                                "id": 546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8726:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8732:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 550,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 484,
                                      "src": "8741:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8736:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 548,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8736:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8736:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8732:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8726:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 554,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8725:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "8725:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8725:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8709:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "8709:63:0"
                },
                {
                  "expression": {
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 562,
                      "name": "rewardEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "8779:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8791:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8779:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "8779:13:0"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "8799:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8814:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8799:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:16:0"
                },
                {
                  "expression": {
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 570,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "8822:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8835:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8822:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "8822:14:0"
                },
                {
                  "expression": {
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 574,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "8843:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8878:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 575,
                          "name": "_MAXIMUM_TARGET",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "8858:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "8858:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8858:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8843:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "8843:37:0"
                },
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 581,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "8933:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 582,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8966:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8966:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8933:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "8933:48:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 586,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1810,
                      "src": "8988:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "8988:22:0"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 589,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "9064:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 591,
                      "indexExpression": {
                        "id": 590,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "9073:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9064:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 592,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "9092:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9094:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "9092:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9064:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "9064:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9129:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9121:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9121:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9121:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 602,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "9133:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 603,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "9150:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9152:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9150:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 597,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "9112:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9112:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "EmitStatement",
                  "src": "9107:47:0"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "AddressAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "9163:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "AuctionAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "9180:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9163:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:32:0"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 612,
                      "name": "AddressLPReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "9205:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 615,
                          "name": "LPGuild2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "9231:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9223:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9223:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9223:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9205:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:35:0"
                },
                {
                  "expression": {
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 619,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "9250:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 620,
                      "name": "_ZeroXBTCAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "9268:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9250:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "9250:34:0"
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 623,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "9296:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 624,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "9308:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9296:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "9296:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9341:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9333:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 628,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9333:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9333:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 627,
                      "name": "setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "9324:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9324:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "9324:20:0"
                }
              ]
            },
            "functionSelector": "64e46726",
            "id": 635,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "8529:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8529:9:0"
              }
            ],
            "name": "zinit",
            "nameLocation": "8447:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "AuctionAddress2",
                  "nameLocation": "8461:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "8453:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "LPGuild2",
                  "nameLocation": "8486:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "8478:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_ZeroXBTCAddress",
                  "nameLocation": "8504:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "8496:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8452:69:0"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8538:0:0"
            },
            "scope": 2285,
            "src": "8438:919:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "9419:969:0",
              "statements": [
                {
                  "assignments": [
                    639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "runs",
                      "nameLocation": "9476:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9468:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9468:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 644,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 640,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9483:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9483:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 642,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "9501:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9483:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9468:40:0"
                },
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "mutability": "mutable",
                      "name": "epochsPast",
                      "nameLocation": "9521:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9513:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9513:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 650,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 647,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "9534:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 648,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "9547:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9534:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9513:43:0"
                },
                {
                  "assignments": [
                    652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 652,
                      "mutability": "mutable",
                      "name": "runsperepoch",
                      "nameLocation": "9585:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9577:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 651,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9577:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 653,
                      "name": "runs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "9600:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 654,
                      "name": "epochsPast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "9607:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9600:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9577:40:0"
                },
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 657,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "9622:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9670:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 669,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "9673:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9670:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030",
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9639:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9645:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 662,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 484,
                                      "src": "9654:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9649:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 660,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9649:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9649:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9645:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9639:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 666,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9638:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "9638:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9638:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9622:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "9622:62:0"
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "9696:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9688:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9688:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 683,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "targetTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "9730:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 676,
                              "name": "runsperepoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "9701:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "383838",
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9716:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_888_by_1",
                                "typeString": "int_const 888"
                              },
                              "value": "888"
                            },
                            "src": "9701:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 679,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9700:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "9700:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9700:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9688:53:0"
                },
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "9753:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9745:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9745:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 686,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "9761:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9765:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "9761:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9771:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "9761:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9745:29:0"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "9786:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "9778:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9778:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 694,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9778:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 695,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "9806:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9814:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "9806:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "9907:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 722,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9912:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "hexValue": "333430303030303030",
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9925:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_340000000_by_1",
                                  "typeString": "int_const 340000000"
                                },
                                "value": "340000000"
                              }
                            ],
                            "id": 724,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9924:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_340000000_by_1",
                              "typeString": "int_const 340000000"
                            }
                          },
                          "src": "9912:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 726,
                        "nodeType": "ExpressionStatement",
                        "src": "9912:23:0"
                      }
                    ]
                  },
                  "id": 728,
                  "nodeType": "IfStatement",
                  "src": "9803:137:0",
                  "trueBody": {
                    "id": 721,
                    "nodeType": "Block",
                    "src": "9818:84:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 698,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9823:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9862:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9867:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9862:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 704,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 699,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9836:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 702,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 700,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 675,
                                              "src": "9848:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 701,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9853:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "9848:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 703,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9847:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9836:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 705,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9835:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "9835:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9835:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9891:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 713,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9873:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 712,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 675,
                                        "src": "9884:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9873:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 714,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9872:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "9872:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9872:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9835:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9823:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 720,
                        "nodeType": "ExpressionStatement",
                        "src": "9823:72:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 735,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9990:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Forge_$2285",
                                "typeString": "contract Forge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Forge_$2285",
                                "typeString": "contract Forge"
                              }
                            ],
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9982:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 733,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9982:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9982:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 730,
                              "name": "AddressZeroXBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 342,
                              "src": "9955:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 729,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "9948:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9948:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$310",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 309,
                        "src": "9948:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9948:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3330",
                                "id": 738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10000:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10005:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "10000:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 741,
                                    "name": "Token2Per",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 454,
                                    "src": "10010:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 742,
                                    "name": "_BLOCKS_PER_READJUSTMENT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 392,
                                    "src": "10022:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10010:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 744,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10009:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10000:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10048:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "10000:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 748,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9999:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9948:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "10289:23:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 778,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "10294:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10306:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10294:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "10294:13:0"
                      }
                    ]
                  },
                  "id": 783,
                  "nodeType": "IfStatement",
                  "src": "9945:367:0",
                  "trueBody": {
                    "id": 777,
                    "nodeType": "Block",
                    "src": "10051:234:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "AddressLPReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "10168:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  },
                                  "id": 767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10240:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030303030303030",
                                    "id": 766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10244:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000_by_1",
                                      "typeString": "int_const 100000000"
                                    },
                                    "value": "100000000"
                                  },
                                  "src": "10240:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 760,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 758,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "id": 755,
                                                "name": "epochsPast",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 646,
                                                "src": "10187:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 756,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "10186:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 757,
                                            "name": "totalOwed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 693,
                                            "src": "10201:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10186:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 759,
                                          "name": "Token2Per",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 454,
                                          "src": "10213:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10186:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 761,
                                        "name": "give0xBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 472,
                                        "src": "10225:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10186:48:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 763,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10185:50:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "10185:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10185:69:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 751,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "10142:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 750,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "10135:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10135:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$310",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 273,
                            "src": "10135:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10135:120:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "10135:120:0"
                      },
                      {
                        "expression": {
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 771,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "10260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10272:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 773,
                              "name": "give",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "10276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10272:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10260:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 776,
                        "nodeType": "ExpressionStatement",
                        "src": "10260:20:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 784,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "10315:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "10327:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10315:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "10315:22:0"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 788,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "10359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 789,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10369:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10369:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10359:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "10359:25:0"
                }
              ]
            },
            "functionSelector": "d0856d16",
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ARewardSender",
            "nameLocation": "9396:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9409:2:0"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9419:0:0"
            },
            "scope": 2285,
            "src": "9387:1001:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 810,
              "nodeType": "Block",
              "src": "10500:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 804,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "10511:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 805,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "10518:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 806,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10536:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10536:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 803,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "10504:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10504:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "10504:43:0"
                }
              ]
            },
            "functionSelector": "1801fbe5",
            "id": 811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "10424:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "10437:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "10429:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "10452:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "10444:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10428:41:0"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "10491:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 811,
                  "src": "10486:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10486:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10485:14:0"
            },
            "scope": 2285,
            "src": "10415:136:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1042,
              "nodeType": "Block",
              "src": "10659:1497:0",
              "statements": [
                {
                  "assignments": [
                    823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 823,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "10672:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1042,
                      "src": "10664:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 822,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10664:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 827,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "10709:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 828,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10726:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10726:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 830,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "10738:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 825,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10692:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10692:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10692:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 824,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10682:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10682:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10664:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 835,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "10807:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 836,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "10817:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10807:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10835:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10799:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10799:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "10799:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 844,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 823,
                              "src": "10952:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10944:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 842,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10944:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10944:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 846,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "10962:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10944:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10936:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10936:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "10936:83:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 851,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1810,
                      "src": "11023:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "11023:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 855,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11058:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11058:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 857,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "11076:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11058:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11095:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11050:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11050:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "11050:69:0"
                },
                {
                  "assignments": [
                    863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 863,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "11185:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1042,
                      "src": "11177:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11177:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 864,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11191:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "11191:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 866,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 445,
                                  "src": "11209:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11191:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 868,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11190:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11230:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "11190:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 871,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11189:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 872,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "11237:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11189:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11177:70:0"
                },
                {
                  "assignments": [
                    876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 876,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "11256:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1042,
                      "src": "11251:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 875,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11251:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 882,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 877,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "11264:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11268:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "11264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11274:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "11264:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11251:26:0"
                },
                {
                  "assignments": [
                    884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 884,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "11286:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1042,
                      "src": "11281:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 883,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11281:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 886,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11298:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11281:18:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 887,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "11306:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11314:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "11306:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 927,
                    "nodeType": "Block",
                    "src": "11406:60:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 914,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "11411:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11443:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 917,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 915,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 863,
                                        "src": "11424:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 916,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11428:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "11424:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 918,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11423:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11423:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11423:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11451:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 923,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11450:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "11423:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11411:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 926,
                        "nodeType": "ExpressionStatement",
                        "src": "11411:50:0"
                      }
                    ]
                  },
                  "id": 928,
                  "nodeType": "IfStatement",
                  "src": "11303:163:0",
                  "trueBody": {
                    "id": 913,
                    "nodeType": "Block",
                    "src": "11318:83:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 890,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "11323:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 901,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11362:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 900,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11369:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "11362:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 896,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 891,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11336:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 894,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 892,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 863,
                                              "src": "11348:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 893,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11353:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "11348:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 895,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11347:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11336:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 897,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11335:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11335:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11335:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11392:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 903,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11374:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 904,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 863,
                                        "src": "11385:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11374:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 906,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11373:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11373:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11373:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11335:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11323:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 912,
                        "nodeType": "ExpressionStatement",
                        "src": "11323:73:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 929,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "11472:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 931,
                      "indexExpression": {
                        "id": 930,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "11481:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11472:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11544:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 936,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 438,
                                    "src": "11513:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 937,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11529:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11513:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 939,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11512:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "11512:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11512:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 932,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "11491:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 934,
                          "indexExpression": {
                            "id": 933,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "11500:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11491:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "11491:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11491:64:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11472:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "11472:83:0"
                },
                {
                  "expression": {
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 946,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "11559:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 948,
                      "indexExpression": {
                        "id": 947,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "11568:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11559:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11649:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11661:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "11649:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 953,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 438,
                                    "src": "11618:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 954,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11634:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11618:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11617:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "11617:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11617:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 949,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "11587:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 951,
                          "indexExpression": {
                            "id": 950,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "11596:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11587:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "11587:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11587:77:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11559:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "11559:105:0"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 965,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "11673:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11737:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 970,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 968,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 438,
                                    "src": "11706:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 969,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11722:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11706:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 971,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11705:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "11705:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11705:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 966,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "11688:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "11688:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11688:60:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11673:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "11673:75:0"
                },
                {
                  "expression": {
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 978,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "11752:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 979,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11772:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11772:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11752:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "11752:35:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 983,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "11795:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11807:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11795:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1025,
                  "nodeType": "IfStatement",
                  "src": "11792:239:0",
                  "trueBody": {
                    "id": 1024,
                    "nodeType": "Block",
                    "src": "11809:222:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 986,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "11817:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11825:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "11817:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1022,
                          "nodeType": "Block",
                          "src": "11937:90:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1010,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 817,
                                    "src": "11976:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 1018,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12017:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1013,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3334",
                                                "id": 1011,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11985:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_34_by_1",
                                                  "typeString": "int_const 34"
                                                },
                                                "value": "34"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1012,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 454,
                                                "src": "11990:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "11985:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1014,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 472,
                                              "src": "12002:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11985:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1016,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11984:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1017,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "11984:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1019,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11984:36:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1007,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 342,
                                        "src": "11950:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1006,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "11943:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11943:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "11943:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11943:78:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1021,
                              "nodeType": "ExpressionStatement",
                              "src": "11943:78:0"
                            }
                          ]
                        },
                        "id": 1023,
                        "nodeType": "IfStatement",
                        "src": "11814:213:0",
                        "trueBody": {
                          "id": 1005,
                          "nodeType": "Block",
                          "src": "11829:104:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 993,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 817,
                                    "src": "11868:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "313030303030303030",
                                        "id": 1001,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11916:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 998,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 996,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 994,
                                                "name": "totalOwed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 884,
                                                "src": "11877:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 995,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 454,
                                                "src": "11889:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "11877:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 997,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 472,
                                              "src": "11901:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11877:33:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 999,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11876:35:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1000,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "11876:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11876:50:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 990,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 342,
                                        "src": "11842:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 989,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "11835:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11835:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "11835:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11835:92:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1004,
                              "nodeType": "ExpressionStatement",
                              "src": "11835:92:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12045:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12045:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030303030",
                            "id": 1034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12089:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1029,
                                  "name": "reward_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "12058:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1030,
                                  "name": "totalOwed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "12074:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12058:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1032,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12057:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 185,
                          "src": "12057:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12057:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1036,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "12101:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "12113:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1026,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "12040:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12040:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "EmitStatement",
                  "src": "12035:95:0"
                },
                {
                  "expression": {
                    "id": 1040,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 884,
                    "src": "12142:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 821,
                  "id": 1041,
                  "nodeType": "Return",
                  "src": "12135:16:0"
                }
              ]
            },
            "functionSelector": "ddfbd8dd",
            "id": 1043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "10564:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "10579:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "10571:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10571:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "10594:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "10586:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "10621:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "10613:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10613:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10570:58:0"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "10653:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "10645:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10645:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10644:14:0"
            },
            "scope": 2285,
            "src": "10555:1601:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "12312:1417:0",
              "statements": [
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "totalOd",
                      "nameLocation": "12324:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1274,
                      "src": "12316:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12316:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1061,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "12341:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1062,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "12347:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1063,
                          "name": "MintTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "12365:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1065,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12365:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1060,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "12334:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12334:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12316:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1069,
                          "name": "totalOd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "12387:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12397:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12387:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12400:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 1068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12379:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "12379:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1076,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "12426:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12426:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1078,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "12443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12443:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12463:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12443:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12426:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74546f2068617320746f206861766520616e206578747261206164647265737320636f6d706172656420746f20457874726146756e6473",
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12465:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ee008cdd80772a1739ee99b25c65a8008c6483de40670684235d79df023581e",
                          "typeString": "literal_string \"MintTo has to have an extra address compared to ExtraFunds\""
                        },
                        "value": "MintTo has to have an extra address compared to ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ee008cdd80772a1739ee99b25c65a8008c6483de40670684235d79df023581e",
                          "typeString": "literal_string \"MintTo has to have an extra address compared to ExtraFunds\""
                        }
                      ],
                      "id": 1075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12418:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12418:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "12418:108:0"
                },
                {
                  "assignments": [
                    1087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1087,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "12535:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1274,
                      "src": "12530:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1086,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12530:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12538:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12530:9:0"
                },
                {
                  "body": {
                    "id": 1159,
                    "nodeType": "Block",
                    "src": "12586:301:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1101,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "12594:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12608:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1103,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1087,
                                          "src": "12612:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1104,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12615:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "12612:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1106,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12611:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12608:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1108,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12607:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12594:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12622:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12594:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1114,
                        "nodeType": "IfStatement",
                        "src": "12591:50:0",
                        "trueBody": {
                          "id": 1113,
                          "nodeType": "Block",
                          "src": "12624:17:0",
                          "statements": [
                            {
                              "id": 1112,
                              "nodeType": "Break",
                              "src": "12630:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1116,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "12653:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1118,
                                  "indexExpression": {
                                    "id": 1117,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1087,
                                    "src": "12664:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12653:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1121,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "12679:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Forge_$2285",
                                        "typeString": "contract Forge"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Forge_$2285",
                                        "typeString": "contract Forge"
                                      }
                                    ],
                                    "id": 1120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12671:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1119,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12671:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12671:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12653:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1124,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "12688:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1126,
                                  "indexExpression": {
                                    "id": 1125,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1087,
                                    "src": "12699:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12688:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 1127,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "12706:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12688:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "12653:68:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12723:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 1115,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12645:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12645:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "12645:107:0"
                      },
                      {
                        "body": {
                          "id": 1157,
                          "nodeType": "Block",
                          "src": "12800:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1153,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1147,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1050,
                                        "src": "12814:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1149,
                                      "indexExpression": {
                                        "id": 1148,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1134,
                                        "src": "12825:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12814:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 1150,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1050,
                                        "src": "12831:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1152,
                                      "indexExpression": {
                                        "id": 1151,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1087,
                                        "src": "12842:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12831:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "12814:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 1154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12847:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 1146,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "12806:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12806:71:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1156,
                              "nodeType": "ExpressionStatement",
                              "src": "12806:71:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1139,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "12774:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1140,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "12777:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12777:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12774:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1158,
                        "initializationExpression": {
                          "assignments": [
                            1134
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1134,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "12766:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1158,
                              "src": "12761:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1133,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "12761:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1138,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1135,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "12768:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12771:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12768:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12761:11:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12796:3:0",
                            "subExpression": {
                              "id": 1143,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "12796:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1145,
                          "nodeType": "ExpressionStatement",
                          "src": "12796:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "12757:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1094,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "12555:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1095,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "12559:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12559:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12555:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1160,
                  "initializationExpression": {
                    "expression": {
                      "id": 1092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1090,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "12547:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12552:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12547:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1093,
                    "nodeType": "ExpressionStatement",
                    "src": "12547:6:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12578:4:0",
                      "subExpression": {
                        "id": 1098,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "12578:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1100,
                    "nodeType": "ExpressionStatement",
                    "src": "12578:4:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "12543:344:0"
                },
                {
                  "assignments": [
                    1162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1162,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "12901:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1274,
                      "src": "12893:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12893:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1164,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12913:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12893:21:0"
                },
                {
                  "assignments": [
                    1166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1166,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "12926:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1274,
                      "src": "12918:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12918:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1168,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12939:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12918:22:0"
                },
                {
                  "body": {
                    "id": 1261,
                    "nodeType": "Block",
                    "src": "12971:650:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1179,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "13232:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13246:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1181,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1170,
                                          "src": "13250:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1182,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13252:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "13250:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1184,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "13249:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13246:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1186,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13245:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13232:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13259:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13232:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1260,
                        "nodeType": "IfStatement",
                        "src": "13229:382:0",
                        "trueBody": {
                          "id": 1259,
                          "nodeType": "Block",
                          "src": "13261:350:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1190,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "13267:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1199,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "13320:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Forge_$2285",
                                            "typeString": "contract Forge"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Forge_$2285",
                                            "typeString": "contract Forge"
                                          }
                                        ],
                                        "id": 1198,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13312:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1197,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13312:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1200,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13312:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1192,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1050,
                                            "src": "13287:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1194,
                                          "indexExpression": {
                                            "id": 1193,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1170,
                                            "src": "13298:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13287:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1191,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 310,
                                        "src": "13280:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13280:21:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$310",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 309,
                                    "src": "13280:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13280:46:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13267:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1203,
                              "nodeType": "ExpressionStatement",
                              "src": "13267:59:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1204,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "13335:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13349:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13335:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1244,
                              "nodeType": "IfStatement",
                              "src": "13332:211:0",
                              "trueBody": {
                                "id": 1243,
                                "nodeType": "Block",
                                "src": "13351:192:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1211,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1209,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1207,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1170,
                                            "src": "13362:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 1208,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13366:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "13362:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1210,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13371:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "13362:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1212,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1170,
                                          "src": "13376:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1213,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13381:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "13376:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "13362:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 1241,
                                      "nodeType": "Block",
                                      "src": "13464:73:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1239,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1229,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1162,
                                              "src": "13472:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1237,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1235,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13511:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1236,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13523:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "13511:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1232,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1230,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1166,
                                                        "src": "13485:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1231,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1059,
                                                        "src": "13498:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "13485:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1233,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "13484:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1234,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "13484:26:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1238,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "13484:45:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13472:57:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1240,
                                          "nodeType": "ExpressionStatement",
                                          "src": "13472:57:0"
                                        }
                                      ]
                                    },
                                    "id": 1242,
                                    "nodeType": "IfStatement",
                                    "src": "13358:179:0",
                                    "trueBody": {
                                      "id": 1228,
                                      "nodeType": "Block",
                                      "src": "13383:77:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1226,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1216,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1162,
                                              "src": "13391:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1224,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1222,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13435:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1223,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13447:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "13435:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1219,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1217,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1166,
                                                        "src": "13404:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1218,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1059,
                                                        "src": "13417:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "13404:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1220,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "13403:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1221,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 223,
                                                "src": "13403:31:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1225,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "13403:49:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13391:61:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1227,
                                          "nodeType": "ExpressionStatement",
                                          "src": "13391:61:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1251,
                                      "name": "MintTo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1053,
                                      "src": "13582:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1255,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1252,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1170,
                                        "src": "13589:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13591:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "13589:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13582:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1256,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "13595:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1246,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1050,
                                          "src": "13558:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1248,
                                        "indexExpression": {
                                          "id": 1247,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1170,
                                          "src": "13569:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13558:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1245,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "13551:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1249,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13551:21:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "13551:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13551:54:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "13551:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1173,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "12958:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1174,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "12960:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12958:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1262,
                  "initializationExpression": {
                    "assignments": [
                      1170
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "12953:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "12948:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12948:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1172,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12955:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12948:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12964:3:0",
                      "subExpression": {
                        "id": 1176,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "12964:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1178,
                    "nodeType": "ExpressionStatement",
                    "src": "12964:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "12944:677:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13648:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13648:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1266,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "13660:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1267,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "13672:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "13689:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "totalOd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "13693:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1263,
                      "name": "MegaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "13639:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256,uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13639:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "EmitStatement",
                  "src": "13634:68:0"
                },
                {
                  "expression": {
                    "id": 1272,
                    "name": "totalOd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1059,
                    "src": "13714:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1057,
                  "id": 1273,
                  "nodeType": "Return",
                  "src": "13707:14:0"
                }
              ]
            },
            "functionSelector": "c8a1465c",
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensArrayTo",
            "nameLocation": "12169:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "12195:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "12187:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "12210:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "12202:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12202:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "12245:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "12228:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1048,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12228:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1049,
                    "nodeType": "ArrayTypeName",
                    "src": "12228:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "12274:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "12257:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1051,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12257:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1052,
                    "nodeType": "ArrayTypeName",
                    "src": "12257:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12186:95:0"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "12306:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "12298:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12297:14:0"
            },
            "scope": 2285,
            "src": "12160:1569:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "13880:225:0",
              "statements": [
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "dd",
                      "nameLocation": "13901:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1334,
                      "src": "13884:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13884:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1292,
                        "nodeType": "ArrayTypeName",
                        "src": "13884:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1302,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1297,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "13920:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13920:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13940:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13920:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13906:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13910:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ArrayTypeName",
                        "src": "13910:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13906:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13884:58:0"
                },
                {
                  "body": {
                    "id": 1323,
                    "nodeType": "Block",
                    "src": "13997:24:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1317,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "14002:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1319,
                            "indexExpression": {
                              "id": 1318,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "14005:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14002:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1320,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "14010:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14002:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1322,
                        "nodeType": "ExpressionStatement",
                        "src": "14002:14:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1307,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "13962:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1308,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "13966:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13966:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13986:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13966:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1312,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13965:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13962:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1324,
                  "initializationExpression": {
                    "assignments": [
                      1304
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "13957:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1324,
                        "src": "13952:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13952:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1306,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13959:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13952:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13990:3:0",
                      "subExpression": {
                        "id": 1314,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "13990:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ExpressionStatement",
                    "src": "13990:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13948:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1326,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "14045:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1327,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "14052:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1328,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "14070:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 1329,
                        "name": "dd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "14082:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 1325,
                      "name": "mintTokensArrayTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "14027:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address[] memory,address[] memory) returns (uint256)"
                      }
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14027:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "14027:58:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14097:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1288,
                  "id": 1333,
                  "nodeType": "Return",
                  "src": "14090:11:0"
                }
              ]
            },
            "functionSelector": "1fccb33c",
            "id": 1335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensSameAddress",
            "nameLocation": "13742:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "13772:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "13764:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13764:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "13787:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "13779:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13779:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "13822:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "13805:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1280,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13805:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1281,
                    "nodeType": "ArrayTypeName",
                    "src": "13805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1284,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "13842:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "13834:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13763:86:0"
            },
            "returnParameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "13871:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "13866:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13866:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13865:14:0"
            },
            "scope": 2285,
            "src": "13733:372:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "14256:2054:0",
              "statements": [
                {
                  "assignments": [
                    1351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1351,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "14268:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "14260:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1350,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14260:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1361,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1355,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "14305:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1356,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14322:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14322:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1358,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "14334:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1353,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14288:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14288:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14288:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1352,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14278:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14278:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14260:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1363,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "14403:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1364,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1339,
                          "src": "14413:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14403:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14431:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 1362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14395:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14395:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1368,
                  "nodeType": "ExpressionStatement",
                  "src": "14395:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1372,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "14548:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14540:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1370,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14540:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14540:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1374,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "14558:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14540:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14572:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 1369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14532:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14532:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "14532:83:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1379,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1810,
                      "src": "14619:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14619:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "14619:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1383,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14654:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14654:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1385,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "14672:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14654:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14691:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 1382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14646:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "14646:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1391,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "14727:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14727:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1393,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "14744:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14744:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14727:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74546f2068617320746f20686176652073616d65206e756d626572206f66206164647265737373657320617320457874726146756e6473",
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14762:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eb71923dbb444c9a84deb86604f762f8b2bba32c8aa383d9af390df4915cc74",
                          "typeString": "literal_string \"MintTo has to have same number of addressses as ExtraFunds\""
                        },
                        "value": "MintTo has to have same number of addressses as ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eb71923dbb444c9a84deb86604f762f8b2bba32c8aa383d9af390df4915cc74",
                          "typeString": "literal_string \"MintTo has to have same number of addressses as ExtraFunds\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14719:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14719:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "14719:104:0"
                },
                {
                  "assignments": [
                    1400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "14832:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "14827:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14827:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1402,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14835:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14827:9:0"
                },
                {
                  "body": {
                    "id": 1472,
                    "nodeType": "Block",
                    "src": "14883:301:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1414,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "14891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14905:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1416,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1400,
                                          "src": "14909:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14912:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "14909:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1419,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14908:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14905:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1421,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14904:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14891:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14919:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14891:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1427,
                        "nodeType": "IfStatement",
                        "src": "14888:50:0",
                        "trueBody": {
                          "id": 1426,
                          "nodeType": "Block",
                          "src": "14921:17:0",
                          "statements": [
                            {
                              "id": 1425,
                              "nodeType": "Break",
                              "src": "14927:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1429,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1342,
                                    "src": "14950:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1431,
                                  "indexExpression": {
                                    "id": 1430,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1400,
                                    "src": "14961:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14950:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1434,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "14976:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Forge_$2285",
                                        "typeString": "contract Forge"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Forge_$2285",
                                        "typeString": "contract Forge"
                                      }
                                    ],
                                    "id": 1433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14968:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1432,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14968:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14968:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14950:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1437,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1342,
                                    "src": "14985:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1439,
                                  "indexExpression": {
                                    "id": 1438,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1400,
                                    "src": "14996:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14985:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 1440,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "15003:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14985:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14950:68:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15020:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 1428,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14942:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14942:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1445,
                        "nodeType": "ExpressionStatement",
                        "src": "14942:107:0"
                      },
                      {
                        "body": {
                          "id": 1470,
                          "nodeType": "Block",
                          "src": "15097:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1466,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1460,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1342,
                                        "src": "15111:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1462,
                                      "indexExpression": {
                                        "id": 1461,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1447,
                                        "src": "15122:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15111:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 1463,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1342,
                                        "src": "15128:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1465,
                                      "indexExpression": {
                                        "id": 1464,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1400,
                                        "src": "15139:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15128:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "15111:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 1467,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15144:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 1459,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15103:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15103:71:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1469,
                              "nodeType": "ExpressionStatement",
                              "src": "15103:71:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1452,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "15071:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1453,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "15074:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15074:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15071:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1471,
                        "initializationExpression": {
                          "assignments": [
                            1447
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1447,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "15063:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1471,
                              "src": "15058:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1446,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15058:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1451,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1448,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1400,
                              "src": "15065:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15068:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "15065:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15058:11:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15093:3:0",
                            "subExpression": {
                              "id": 1456,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "15093:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1458,
                          "nodeType": "ExpressionStatement",
                          "src": "15093:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "15054:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1407,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "14852:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1408,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "14856:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14856:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14852:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1473,
                  "initializationExpression": {
                    "expression": {
                      "id": 1405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1403,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "14844:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14849:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14844:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1406,
                    "nodeType": "ExpressionStatement",
                    "src": "14844:6:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14875:4:0",
                      "subExpression": {
                        "id": 1411,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "14875:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1413,
                    "nodeType": "ExpressionStatement",
                    "src": "14875:4:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14840:344:0"
                },
                {
                  "assignments": [
                    1475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1475,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "15196:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "15188:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1474,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15188:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1486,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1476,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15202:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15202:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1478,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 445,
                                  "src": "15220:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15202:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1480,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15201:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15241:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "15201:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1483,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15200:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1484,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "15248:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15200:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15188:70:0"
                },
                {
                  "assignments": [
                    1488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1488,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "15267:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "15262:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1487,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15262:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1494,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1489,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "15275:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15279:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "15275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15285:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "15275:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15262:26:0"
                },
                {
                  "assignments": [
                    1496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1496,
                      "mutability": "mutable",
                      "name": "totalIN",
                      "nameLocation": "15297:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "15292:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1495,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15292:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1498,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15307:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15292:16:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1499,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "15315:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 1500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15323:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "15315:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1539,
                    "nodeType": "Block",
                    "src": "15413:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1526,
                            "name": "totalIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "15418:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15448:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1529,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1527,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1475,
                                        "src": "15429:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 1528,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15433:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "15429:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1530,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15428:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "15428:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15428:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 1534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15456:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 1535,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15455:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "15428:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15418:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1538,
                        "nodeType": "ExpressionStatement",
                        "src": "15418:48:0"
                      }
                    ]
                  },
                  "id": 1540,
                  "nodeType": "IfStatement",
                  "src": "15312:159:0",
                  "trueBody": {
                    "id": 1525,
                    "nodeType": "Block",
                    "src": "15327:81:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1502,
                            "name": "totalIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "15332:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 1513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 1511,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15369:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 1512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15376:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "15369:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1508,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 1503,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15343:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1506,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1504,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1475,
                                              "src": "15355:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 1505,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15360:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "15355:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1507,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "15354:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15343:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1509,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15342:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "15342:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15342:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15399:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1517,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 1515,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15381:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1516,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1475,
                                        "src": "15392:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15381:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1518,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15380:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "15380:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15380:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15342:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15332:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1524,
                        "nodeType": "ExpressionStatement",
                        "src": "15332:71:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1542,
                          "name": "totalIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "15483:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15493:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15483:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15496:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 1541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15475:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "15475:34:0"
                },
                {
                  "assignments": [
                    1549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1549,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "15521:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "15513:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15513:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1550,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15513:17:0"
                },
                {
                  "assignments": [
                    1552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1552,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "15542:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "15534:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1551,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15534:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1553,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15534:18:0"
                },
                {
                  "body": {
                    "id": 1644,
                    "nodeType": "Block",
                    "src": "15583:663:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1564,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "15844:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15858:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1568,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1566,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1555,
                                          "src": "15862:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1567,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15864:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "15862:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1569,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "15861:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15858:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1571,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15857:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15844:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15871:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15844:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1643,
                        "nodeType": "IfStatement",
                        "src": "15841:395:0",
                        "trueBody": {
                          "id": 1642,
                          "nodeType": "Block",
                          "src": "15873:363:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1575,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "15879:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1584,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "15932:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Forge_$2285",
                                            "typeString": "contract Forge"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Forge_$2285",
                                            "typeString": "contract Forge"
                                          }
                                        ],
                                        "id": 1583,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15924:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1582,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15924:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1585,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15924:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1577,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1342,
                                            "src": "15899:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1579,
                                          "indexExpression": {
                                            "id": 1578,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1555,
                                            "src": "15910:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15899:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1576,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 310,
                                        "src": "15892:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1580,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15892:21:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$310",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1581,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 309,
                                    "src": "15892:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15892:46:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15879:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1588,
                              "nodeType": "ExpressionStatement",
                              "src": "15879:59:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1589,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "15947:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15961:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15947:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1641,
                              "nodeType": "IfStatement",
                              "src": "15944:278:0",
                              "trueBody": {
                                "id": 1640,
                                "nodeType": "Block",
                                "src": "15963:259:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1600,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1594,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1592,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1555,
                                            "src": "15974:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 1593,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15978:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "15974:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1595,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15983:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15974:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1597,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1555,
                                          "src": "15988:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1598,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15993:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15988:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "15974:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 1626,
                                      "nodeType": "Block",
                                      "src": "16076:76:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1624,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1614,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1549,
                                              "src": "16084:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1622,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1620,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16123:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1621,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16135:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "16123:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1617,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1615,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1552,
                                                        "src": "16097:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1616,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1496,
                                                        "src": "16110:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "16097:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1618,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "16096:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1619,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "16096:26:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1623,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "16096:45:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "16084:57:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1625,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16084:57:0"
                                        }
                                      ]
                                    },
                                    "id": 1627,
                                    "nodeType": "IfStatement",
                                    "src": "15970:182:0",
                                    "trueBody": {
                                      "id": 1613,
                                      "nodeType": "Block",
                                      "src": "15995:77:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1611,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1601,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1549,
                                              "src": "16003:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1609,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1607,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16047:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1608,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16059:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "16047:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1604,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1602,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1552,
                                                        "src": "16016:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1603,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1496,
                                                        "src": "16029:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "16016:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1605,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "16015:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1606,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 223,
                                                "src": "16015:31:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1610,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "16015:49:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "16003:61:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1612,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16003:61:0"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1634,
                                            "name": "MintTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1345,
                                            "src": "16191:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1636,
                                          "indexExpression": {
                                            "id": 1635,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1555,
                                            "src": "16198:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16191:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1637,
                                          "name": "totalOwed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1549,
                                          "src": "16202:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1629,
                                                "name": "ExtraFunds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1342,
                                                "src": "16167:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                }
                                              },
                                              "id": 1631,
                                              "indexExpression": {
                                                "id": 1630,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1555,
                                                "src": "16178:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "16167:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1628,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 310,
                                            "src": "16160:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 1632,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "16160:21:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$310",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1633,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 273,
                                        "src": "16160:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 1638,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16160:52:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1639,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16160:52:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1558,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "15570:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1559,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "15572:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15570:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1645,
                  "initializationExpression": {
                    "assignments": [
                      1555
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "15565:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1645,
                        "src": "15560:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15560:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1557,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15567:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15560:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15576:3:0",
                      "subExpression": {
                        "id": 1561,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "15576:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1563,
                    "nodeType": "ExpressionStatement",
                    "src": "15576:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "15556:690:0"
                },
                {
                  "expression": {
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1646,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "16250:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1647,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "16270:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "16270:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16250:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "16250:35:0"
                },
                {
                  "expression": {
                    "id": 1651,
                    "name": "totalIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1496,
                    "src": "16296:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1349,
                  "id": 1652,
                  "nodeType": "Return",
                  "src": "16289:14:0"
                }
              ]
            },
            "functionSelector": "f7a5f155",
            "id": 1654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "empty_mintTo",
            "nameLocation": "14118:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "14139:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "14131:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14131:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "14154:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "14146:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14146:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "14189:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "14172:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1340,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14172:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1341,
                    "nodeType": "ArrayTypeName",
                    "src": "14172:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "14218:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "14201:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1343,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14201:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1344,
                    "nodeType": "ArrayTypeName",
                    "src": "14201:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14130:95:0"
            },
            "returnParameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1348,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "14250:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "14242:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14242:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14241:14:0"
            },
            "scope": 2285,
            "src": "14109:2201:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "16356:1324:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1659,
                            "name": "reward_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "16548:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1657,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "16531:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 109,
                          "src": "16531:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16531:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 1661,
                        "name": "maxSupplyForEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "16565:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16531:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1663,
                        "name": "rewardEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "16584:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16596:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "16584:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16531:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1688,
                  "nodeType": "IfStatement",
                  "src": "16527:185:0",
                  "trueBody": {
                    "id": 1687,
                    "nodeType": "Block",
                    "src": "16602:110:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1667,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "16607:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1668,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "16619:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16631:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16619:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16607:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1672,
                        "nodeType": "ExpressionStatement",
                        "src": "16607:25:0"
                      },
                      {
                        "expression": {
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1673,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "16637:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1674,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "16655:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16688:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1680,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1678,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 421,
                                          "src": "16692:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1679,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16704:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16692:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1681,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16691:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16688:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1675,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 382,
                                  "src": "16670:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "16670:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16670:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16655:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16637:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1686,
                        "nodeType": "ExpressionStatement",
                        "src": "16637:70:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1689,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "16871:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16899:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 1690,
                          "name": "epochCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "16884:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "16884:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16884:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16871:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1695,
                  "nodeType": "ExpressionStatement",
                  "src": "16871:30:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "id": 1696,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "16980:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1697,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16979:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1698,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 392,
                              "src": "16995:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 1699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17022:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "16995:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1701,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16994:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16979:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17028:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16979:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1799,
                  "nodeType": "IfStatement",
                  "src": "16976:651:0",
                  "trueBody": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "17033:594:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1705,
                            "name": "ARewardSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "17038:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17038:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1707,
                        "nodeType": "ExpressionStatement",
                        "src": "17038:15:0"
                      },
                      {
                        "expression": {
                          "id": 1720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1708,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "17058:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1709,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "17076:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17109:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1713,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 421,
                                          "src": "17113:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1714,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17125:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "17113:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1716,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "17112:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17109:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1710,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 382,
                                  "src": "17091:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "17091:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17091:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17076:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17058:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1721,
                        "nodeType": "ExpressionStatement",
                        "src": "17058:70:0"
                      },
                      {
                        "condition": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1722,
                                  "name": "epochCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 389,
                                  "src": "17138:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 1723,
                                  "name": "_BLOCKS_PER_READJUSTMENT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 392,
                                  "src": "17151:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17138:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17178:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "17138:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1727,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17137:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1797,
                        "nodeType": "IfStatement",
                        "src": "17134:489:0",
                        "trueBody": {
                          "id": 1796,
                          "nodeType": "Block",
                          "src": "17185:438:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1728,
                                  "name": "multipler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "17191:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1744,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 1735,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "17246:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                                  "typeString": "contract Forge"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                                  "typeString": "contract Forge"
                                                }
                                              ],
                                              "id": 1734,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "17238:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1733,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "17238:7:0",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1736,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17238:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1730,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 342,
                                                "src": "17211:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1729,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 310,
                                              "src": "17204:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 1731,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17204:23:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$310",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 1732,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 309,
                                          "src": "17204:33:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 1737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17204:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_200000000000_by_1",
                                              "typeString": "int_const 200000000000"
                                            },
                                            "id": 1742,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "32303030",
                                              "id": 1738,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "17256:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2000_by_1",
                                                "typeString": "int_const 2000"
                                              },
                                              "value": "2000"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_100000000_by_1",
                                                "typeString": "int_const 100000000"
                                              },
                                              "id": 1741,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3130",
                                                "id": 1739,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "17263:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "**",
                                              "rightExpression": {
                                                "hexValue": "38",
                                                "id": 1740,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "17269:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_8_by_1",
                                                  "typeString": "int_const 8"
                                                },
                                                "value": "8"
                                              },
                                              "src": "17263:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100000000_by_1",
                                                "typeString": "int_const 100000000"
                                              }
                                            },
                                            "src": "17256:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_200000000000_by_1",
                                              "typeString": "int_const 200000000000"
                                            }
                                          }
                                        ],
                                        "id": 1743,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "17255:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_200000000000_by_1",
                                          "typeString": "int_const 200000000000"
                                        }
                                      },
                                      "src": "17204:67:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1745,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17203:69:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17191:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1747,
                              "nodeType": "ExpressionStatement",
                              "src": "17191:81:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 1754,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "17325:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                                  "typeString": "contract Forge"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                                  "typeString": "contract Forge"
                                                }
                                              ],
                                              "id": 1753,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "17317:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1752,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "17317:7:0",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1755,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17317:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1749,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 342,
                                                "src": "17290:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1748,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 310,
                                              "src": "17283:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 1750,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17283:23:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$310",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 1751,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 309,
                                          "src": "17283:33:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 1756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17283:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1757,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 454,
                                        "src": "17334:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17283:60:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1759,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17281:63:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1765,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130303030",
                                        "id": 1760,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17349:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10000_by_1",
                                          "typeString": "int_const 10000"
                                        },
                                        "value": "10000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1764,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130303030",
                                          "id": 1761,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17357:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "id": 1762,
                                              "name": "multipler",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 336,
                                              "src": "17364:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1763,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "17363:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "17357:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17349:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1766,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "17348:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17281:94:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1791,
                                "nodeType": "Block",
                                "src": "17548:43:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1789,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1784,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 454,
                                        "src": "17555:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "33",
                                            "id": 1787,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17582:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1785,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 454,
                                            "src": "17567:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mult",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 164,
                                          "src": "17567:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1788,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17567:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17555:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1790,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17555:29:0"
                                  }
                                ]
                              },
                              "id": 1792,
                              "nodeType": "IfStatement",
                              "src": "17278:313:0",
                              "trueBody": {
                                "id": 1783,
                                "nodeType": "Block",
                                "src": "17449:95:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1773,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "32",
                                            "id": 1770,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17473:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1768,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 454,
                                            "src": "17459:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1769,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 185,
                                          "src": "17459:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17459:16:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 1772,
                                        "name": "Token2Min",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 457,
                                        "src": "17478:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17459:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1782,
                                    "nodeType": "IfStatement",
                                    "src": "17456:82:0",
                                    "trueBody": {
                                      "id": 1781,
                                      "nodeType": "Block",
                                      "src": "17494:44:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1779,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1774,
                                              "name": "Token2Per",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 454,
                                              "src": "17502:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "32",
                                                  "id": 1777,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "17528:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 1775,
                                                  "name": "Token2Per",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 454,
                                                  "src": "17514:9:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1776,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "17514:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1778,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17514:16:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17502:28:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1780,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17502:28:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1793,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1940,
                                  "src": "17596:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17596:21:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1795,
                              "nodeType": "ExpressionStatement",
                              "src": "17596:21:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1800,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "17631:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1802,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "17659:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "17659:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17674:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17659:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1801,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "17649:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 1806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17649:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "17631:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "17631:45:0"
                }
              ]
            },
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startNewMiningEpoch",
            "nameLocation": "16324:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16344:2:0"
            },
            "returnParameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16356:0:0"
            },
            "scope": 2285,
            "src": "16315:1365:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1939,
              "nodeType": "Block",
              "src": "17724:1339:0",
              "statements": [
                {
                  "assignments": [
                    1814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1814,
                      "mutability": "mutable",
                      "name": "blktimestamp",
                      "nameLocation": "17736:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1939,
                      "src": "17728:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1813,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17728:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1817,
                  "initialValue": {
                    "expression": {
                      "id": 1815,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "17751:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "17751:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17728:38:0"
                },
                {
                  "assignments": [
                    1819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1819,
                      "mutability": "mutable",
                      "name": "TimeSinceLastDifficultyPeriod2",
                      "nameLocation": "17775:30:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1939,
                      "src": "17770:35:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1818,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17770:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1823,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1820,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "17808:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1821,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "17823:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17808:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17770:83:0"
                },
                {
                  "assignments": [
                    1825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1825,
                      "mutability": "mutable",
                      "name": "adjusDiffTargetTime",
                      "nameLocation": "17863:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1939,
                      "src": "17858:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1824,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17858:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1829,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1826,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "17885:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1827,
                      "name": "_BLOCKS_PER_READJUSTMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "17899:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17885:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17858:65:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1830,
                      "name": "TimeSinceLastDifficultyPeriod2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "18026:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1831,
                      "name": "adjusDiffTargetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "18059:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18026:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1910,
                    "nodeType": "Block",
                    "src": "18411:359:0",
                    "statements": [
                      {
                        "assignments": [
                          1873
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1873,
                            "mutability": "mutable",
                            "name": "shortage_block_pct",
                            "nameLocation": "18421:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1910,
                            "src": "18416:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1872,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18416:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1882,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1880,
                              "name": "adjusDiffTargetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1825,
                              "src": "18490:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 1876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18479:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1874,
                                      "name": "TimeSinceLastDifficultyPeriod2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1819,
                                      "src": "18443:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1875,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 164,
                                    "src": "18443:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18443:40:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1878,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18442:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "18442:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18442:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18416:95:0"
                      },
                      {
                        "expression": {
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1883,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "18516:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18523:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18516:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1886,
                        "nodeType": "ExpressionStatement",
                        "src": "18516:8:0"
                      },
                      {
                        "assignments": [
                          1888
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1888,
                            "mutability": "mutable",
                            "name": "shortage_block_pct_extra",
                            "nameLocation": "18534:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1910,
                            "src": "18529:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1887,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18529:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1896,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18603:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 1891,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18584:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 1889,
                                  "name": "shortage_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1873,
                                  "src": "18561:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 130,
                                "src": "18561:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18561:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 242,
                            "src": "18561:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18561:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18529:79:0"
                      },
                      {
                        "expression": {
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1897,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "18661:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1905,
                                    "name": "shortage_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1888,
                                    "src": "18720:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "353030",
                                        "id": 1902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18710:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_500_by_1",
                                          "typeString": "int_const 500"
                                        },
                                        "value": "500"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_500_by_1",
                                          "typeString": "int_const 500"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1900,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 410,
                                        "src": "18693:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1901,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "18693:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18693:21:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 164,
                                  "src": "18693:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18693:52:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1898,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "18676:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 109,
                              "src": "18676:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18676:70:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18661:85:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1909,
                        "nodeType": "ExpressionStatement",
                        "src": "18661:85:0"
                      }
                    ]
                  },
                  "id": 1911,
                  "nodeType": "IfStatement",
                  "src": "18022:748:0",
                  "trueBody": {
                    "id": 1871,
                    "nodeType": "Block",
                    "src": "18083:324:0",
                    "statements": [
                      {
                        "assignments": [
                          1834
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1834,
                            "mutability": "mutable",
                            "name": "excess_block_pct",
                            "nameLocation": "18093:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1871,
                            "src": "18088:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1833,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18088:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1843,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1841,
                              "name": "TimeSinceLastDifficultyPeriod2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1819,
                              "src": "18149:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 1837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18138:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1835,
                                      "name": "adjusDiffTargetTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1825,
                                      "src": "18113:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 164,
                                    "src": "18113:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18113:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1839,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18112:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "18112:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18112:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18088:93:0"
                      },
                      {
                        "expression": {
                          "id": 1846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1844,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "18186:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18193:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "18186:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1847,
                        "nodeType": "ExpressionStatement",
                        "src": "18186:8:0"
                      },
                      {
                        "assignments": [
                          1849
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1849,
                            "mutability": "mutable",
                            "name": "excess_block_pct_extra",
                            "nameLocation": "18204:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1871,
                            "src": "18199:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1848,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18199:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1857,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18269:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 1852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18250:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 1850,
                                  "name": "excess_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1834,
                                  "src": "18229:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 130,
                                "src": "18229:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18229:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 242,
                            "src": "18229:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18229:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18199:75:0"
                      },
                      {
                        "expression": {
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1858,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "18300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1866,
                                    "name": "excess_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1849,
                                    "src": "18360:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32303030",
                                        "id": 1863,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18349:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        },
                                        "value": "2000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1861,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 410,
                                        "src": "18332:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1862,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "18332:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18332:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 164,
                                  "src": "18332:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18332:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1859,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "18315:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 130,
                              "src": "18315:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18315:69:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18300:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1870,
                        "nodeType": "ExpressionStatement",
                        "src": "18300:84:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1912,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "18774:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1913,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "18807:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18774:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1915,
                  "nodeType": "ExpressionStatement",
                  "src": "18774:45:0"
                },
                {
                  "expression": {
                    "id": 1919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1916,
                      "name": "latestDifficultyPeriodStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "18823:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1917,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "18855:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "18855:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18823:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1920,
                  "nodeType": "ExpressionStatement",
                  "src": "18823:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1921,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "18874:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1922,
                      "name": "_MINIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "18889:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18874:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1929,
                  "nodeType": "IfStatement",
                  "src": "18871:94:0",
                  "trueBody": {
                    "id": 1928,
                    "nodeType": "Block",
                    "src": "18925:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1924,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "18930:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1925,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "18945:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18930:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1927,
                        "nodeType": "ExpressionStatement",
                        "src": "18930:30:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1930,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "18971:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1931,
                      "name": "_MAXIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "18986:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18971:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1938,
                  "nodeType": "IfStatement",
                  "src": "18968:89:0",
                  "trueBody": {
                    "id": 1937,
                    "nodeType": "Block",
                    "src": "19017:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1933,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "19022:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1934,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "19037:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19022:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1936,
                        "nodeType": "ExpressionStatement",
                        "src": "19022:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reAdjustDifficulty",
            "nameLocation": "17693:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17712:2:0"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17724:0:0"
            },
            "scope": 2285,
            "src": "17684:1379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1983,
              "nodeType": "Block",
              "src": "19398:181:0",
              "statements": [
                {
                  "assignments": [
                    1954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1954,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "19410:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1983,
                      "src": "19402:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1953,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19402:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1967,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1960,
                                "name": "challenge_number",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1946,
                                "src": "19454:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1961,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "19471:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "19471:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1963,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1942,
                                "src": "19482:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1958,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "19437:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "19437:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19437:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1957,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "19427:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19427:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "19419:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19419:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19419:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19402:88:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1970,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "19505:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19497:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19497:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19497:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1972,
                      "name": "testTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "19515:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19497:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1977,
                  "nodeType": "IfStatement",
                  "src": "19494:41:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1974,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "19527:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19527:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1976,
                    "nodeType": "ExpressionStatement",
                    "src": "19527:8:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1978,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "19548:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1979,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "19558:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "19548:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1981,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19547:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1952,
                  "id": 1982,
                  "nodeType": "Return",
                  "src": "19540:35:0"
                }
              ]
            },
            "functionSelector": "81269a56",
            "id": 1984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkMintSolution",
            "nameLocation": "19261:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "19287:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "19279:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19279:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "19302:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "19294:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "19328:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "19320:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19320:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "testTarget",
                  "nameLocation": "19351:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "19346:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19346:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19278:84:0"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "19389:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "19384:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19383:14:0"
            },
            "scope": 2285,
            "src": "19252:327:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "19725:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 1989,
                    "name": "challengeNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 418,
                    "src": "19737:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1988,
                  "id": 1990,
                  "nodeType": "Return",
                  "src": "19730:22:0"
                }
              ]
            },
            "functionSelector": "4ef37628",
            "id": 1992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeNumber",
            "nameLocation": "19674:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19692:2:0"
            },
            "returnParameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "19716:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19716:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19715:9:0"
            },
            "scope": 2285,
            "src": "19665:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "19898:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1999,
                        "name": "miningTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "19930:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1997,
                        "name": "_MAXIMUM_TARGET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "19910:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "19910:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19910:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1996,
                  "id": 2001,
                  "nodeType": "Return",
                  "src": "19903:40:0"
                }
              ]
            },
            "functionSelector": "17da485f",
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningDifficulty",
            "nameLocation": "19849:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19868:2:0"
            },
            "returnParameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "19892:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19892:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19891:6:0"
            },
            "scope": 2285,
            "src": "19840:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2010,
              "nodeType": "Block",
              "src": "20005:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 2008,
                    "name": "miningTarget",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 410,
                    "src": "20017:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2007,
                  "id": 2009,
                  "nodeType": "Return",
                  "src": "20010:19:0"
                }
              ]
            },
            "functionSelector": "32e99708",
            "id": 2011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningTarget",
            "nameLocation": "19960:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19975:2:0"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "19999:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19999:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19998:6:0"
            },
            "scope": 2285,
            "src": "19951:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2018,
              "nodeType": "Block",
              "src": "20092:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 2016,
                    "name": "tokensMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "20104:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2015,
                  "id": 2017,
                  "nodeType": "Return",
                  "src": "20097:19:0"
                }
              ]
            },
            "functionSelector": "c0abebe0",
            "id": 2019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningMinted",
            "nameLocation": "20047:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20062:2:0"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "20086:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20086:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20085:6:0"
            },
            "scope": 2285,
            "src": "20038:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2039,
              "nodeType": "Block",
              "src": "20280:177:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20436:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 2035,
                          "name": "rewardEra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "20439:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20436:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 2024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20404:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 2025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20410:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2028,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 484,
                                    "src": "20419:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 2027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20414:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2026,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20414:4:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20414:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20410:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20404:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2032,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "20403:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "20403:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20403:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2023,
                  "id": 2038,
                  "nodeType": "Return",
                  "src": "20396:54:0"
                }
              ]
            },
            "functionSelector": "490203a7",
            "id": 2040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "20235:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20250:2:0"
            },
            "returnParameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2040,
                  "src": "20274:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20274:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20273:6:0"
            },
            "scope": 2285,
            "src": "20226:231:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2047,
              "nodeType": "Block",
              "src": "20508:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 2045,
                    "name": "epochCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 389,
                    "src": "20520:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2044,
                  "id": 2046,
                  "nodeType": "Return",
                  "src": "20513:17:0"
                }
              ]
            },
            "functionSelector": "757991a8",
            "id": 2048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpoch",
            "nameLocation": "20470:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20478:2:0"
            },
            "returnParameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2048,
                  "src": "20502:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20502:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20501:6:0"
            },
            "scope": 2285,
            "src": "20461:75:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2073,
              "nodeType": "Block",
              "src": "20701:109:0",
              "statements": [
                {
                  "assignments": [
                    2060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2060,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "20714:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2073,
                      "src": "20706:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2059,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20706:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2070,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2064,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "20751:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2065,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20768:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20768:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2067,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "20780:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2062,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20734:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "20734:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20734:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2061,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "20724:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20724:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20706:81:0"
                },
                {
                  "expression": {
                    "id": 2071,
                    "name": "digest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2060,
                    "src": "20799:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2058,
                  "id": 2072,
                  "nodeType": "Return",
                  "src": "20792:13:0"
                }
              ]
            },
            "functionSelector": "97566aa0",
            "id": 2074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintDigest",
            "nameLocation": "20579:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "20601:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "20593:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20593:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "20616:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "20608:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20608:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "20642:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "20634:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20634:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20592:67:0"
            },
            "returnParameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "digesttest",
                  "nameLocation": "20689:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "20681:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20681:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20680:20:0"
            },
            "scope": 2285,
            "src": "20570:240:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              309
            ],
            "body": {
              "id": 2086,
              "nodeType": "Block",
              "src": "21108:37:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2082,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "21120:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2084,
                    "indexExpression": {
                      "id": 2083,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2076,
                      "src": "21129:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21120:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2081,
                  "id": 2085,
                  "nodeType": "Return",
                  "src": "21113:27:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 2087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "21034:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21071:8:0"
            },
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "21052:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2087,
                  "src": "21044:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21044:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21043:20:0"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "21099:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2087,
                  "src": "21094:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21094:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21093:14:0"
            },
            "scope": 2285,
            "src": "21025:120:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              273
            ],
            "body": {
              "id": 2130,
              "nodeType": "Block",
              "src": "21563:166:0",
              "statements": [
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2097,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "21568:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2100,
                      "indexExpression": {
                        "expression": {
                          "id": 2098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21577:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21577:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21568:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2106,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2091,
                          "src": "21616:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2101,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "21591:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2104,
                          "indexExpression": {
                            "expression": {
                              "id": 2102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21600:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "21600:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21591:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "21591:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21591:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21568:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "21568:55:0"
                },
                {
                  "expression": {
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2110,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "21627:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2112,
                      "indexExpression": {
                        "id": 2111,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2089,
                        "src": "21636:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21627:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2117,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2091,
                          "src": "21659:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2113,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "21642:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2115,
                          "indexExpression": {
                            "id": 2114,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2089,
                            "src": "21651:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21642:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "21642:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21642:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21627:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "21627:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21685:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21685:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2089,
                        "src": "21697:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2125,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2091,
                        "src": "21701:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2121,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "21676:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21676:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "EmitStatement",
                  "src": "21671:37:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2096,
                  "id": 2129,
                  "nodeType": "Return",
                  "src": "21713:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 2131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "21490:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21531:8:0"
            },
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "21507:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2131,
                  "src": "21499:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21499:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "21516:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2131,
                  "src": "21511:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21511:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21498:25:0"
            },
            "returnParameters": {
              "id": 2096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "21554:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2131,
                  "src": "21549:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21549:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21548:14:0"
            },
            "scope": 2285,
            "src": "21481:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              302
            ],
            "body": {
              "id": 2159,
              "nodeType": "Block",
              "src": "22310:110:0",
              "statements": [
                {
                  "expression": {
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2141,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "22315:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2145,
                        "indexExpression": {
                          "expression": {
                            "id": 2142,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22323:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "22323:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22315:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2146,
                      "indexExpression": {
                        "id": 2144,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "22335:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22315:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2147,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "22346:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22315:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "22315:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22371:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22371:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2153,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "22383:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2154,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2135,
                        "src": "22392:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2150,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "22362:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22362:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "EmitStatement",
                  "src": "22357:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22411:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2140,
                  "id": 2158,
                  "nodeType": "Return",
                  "src": "22404:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 2160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "22233:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22278:8:0"
            },
            "parameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "22249:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "22241:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22241:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "22263:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "22258:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22240:30:0"
            },
            "returnParameters": {
              "id": 2140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2139,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "22301:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "22296:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22296:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22295:14:0"
            },
            "scope": 2285,
            "src": "22224:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              284
            ],
            "body": {
              "id": 2219,
              "nodeType": "Block",
              "src": "23040:217:0",
              "statements": [
                {
                  "expression": {
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2172,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "23045:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2174,
                      "indexExpression": {
                        "id": 2173,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2162,
                        "src": "23054:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23045:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2179,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2166,
                          "src": "23081:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2175,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "23062:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2177,
                          "indexExpression": {
                            "id": 2176,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2162,
                            "src": "23071:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23062:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "23062:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23062:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23045:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2182,
                  "nodeType": "ExpressionStatement",
                  "src": "23045:43:0"
                },
                {
                  "expression": {
                    "id": 2198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2183,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "23092:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2187,
                        "indexExpression": {
                          "id": 2184,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2162,
                          "src": "23100:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23092:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2188,
                      "indexExpression": {
                        "expression": {
                          "id": 2185,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23106:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23106:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23092:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2196,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2166,
                          "src": "23150:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2189,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "23120:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2191,
                            "indexExpression": {
                              "id": 2190,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2162,
                              "src": "23128:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23120:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2194,
                          "indexExpression": {
                            "expression": {
                              "id": 2192,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "23134:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "23134:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23120:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "23120:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23120:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23092:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2199,
                  "nodeType": "ExpressionStatement",
                  "src": "23092:65:0"
                },
                {
                  "expression": {
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2200,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "23161:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2202,
                      "indexExpression": {
                        "id": 2201,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "23170:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23161:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2207,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2166,
                          "src": "23193:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2203,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "23176:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2205,
                          "indexExpression": {
                            "id": 2204,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2164,
                            "src": "23185:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23176:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "23176:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23176:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23161:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2210,
                  "nodeType": "ExpressionStatement",
                  "src": "23161:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2212,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2162,
                        "src": "23219:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2213,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "23225:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2214,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "23229:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2211,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "23210:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23210:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2216,
                  "nodeType": "EmitStatement",
                  "src": "23205:31:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23248:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2171,
                  "id": 2218,
                  "nodeType": "Return",
                  "src": "23241:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 2220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "22949:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2168,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23008:8:0"
            },
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2162,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "22970:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "22962:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22962:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2164,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "22984:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "22976:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22976:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "22993:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "22988:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22988:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22961:39:0"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "23031:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "23026:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23026:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23025:14:0"
            },
            "scope": 2285,
            "src": "22940:317:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              293
            ],
            "body": {
              "id": 2236,
              "nodeType": "Block",
              "src": "23634:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2230,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "23646:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2232,
                      "indexExpression": {
                        "id": 2231,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "23654:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "23646:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2234,
                    "indexExpression": {
                      "id": 2233,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2224,
                      "src": "23666:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23646:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2229,
                  "id": 2235,
                  "nodeType": "Return",
                  "src": "23639:35:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 2237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "23541:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2226,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23595:8:0"
            },
            "parameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2222,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "23559:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2237,
                  "src": "23551:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23551:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2224,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "23579:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2237,
                  "src": "23571:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23571:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23550:37:0"
            },
            "returnParameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2228,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "23623:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2237,
                  "src": "23618:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23618:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23617:16:0"
            },
            "scope": 2285,
            "src": "23532:147:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              321
            ],
            "body": {
              "id": 2269,
              "nodeType": "Block",
              "src": "24136:90:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2250,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2243,
                          "src": "24149:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2253,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "24166:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Forge_$2285",
                                "typeString": "contract Forge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Forge_$2285",
                                "typeString": "contract Forge"
                              }
                            ],
                            "id": 2252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24158:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24158:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24158:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24149:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24141:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24141:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "24141:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2265,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "24207:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2266,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "24213:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2261,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "24191:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                  "typeString": "contract Forge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Forge_$2285",
                                  "typeString": "contract Forge"
                                }
                              ],
                              "id": 2260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24183:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2259,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24183:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24183:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2258,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "24176:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24176:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$310",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "24176:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24176:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2268,
                  "nodeType": "ExpressionStatement",
                  "src": "24176:44:0"
                }
              ]
            },
            "functionSelector": "8f4ffcb1",
            "id": 2270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "24041:15:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24128:8:0"
            },
            "parameters": {
              "id": 2246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2239,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "24065:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "24057:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "24079:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "24071:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24071:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "24095:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "24087:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24087:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "24115:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "24102:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24102:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24056:64:0"
            },
            "returnParameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24136:0:0"
            },
            "scope": 2285,
            "src": "24032:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "24288:17:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2273,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "24293:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24293:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "24293:8:0"
                }
              ]
            },
            "id": 2277,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24268:2:0"
            },
            "returnParameters": {
              "id": 2272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24288:0:0"
            },
            "scope": 2285,
            "src": "24261:44:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2283,
              "nodeType": "Block",
              "src": "24337:17:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2280,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "24342:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24342:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "24342:8:0"
                }
              ]
            },
            "id": 2284,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24317:2:0"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24337:0:0"
            },
            "scope": 2285,
            "src": "24309:45:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2286,
        "src": "6011:18345:0",
        "usedErrors": []
      }
    ],
    "src": "2993:22478:0"
  },
  "bytecode": "608060405260006001556a22bdd89dce55b0116400006005556a115eec47f6cf7e3500000060065542600755600060085561010060095562010000600a55600160ea1b600b556200006765048c27395000600b54620001f560201b62001f321790919060201c565b600c556200007760014362000308565b40600d556000600e55620000b9600e54600162000095919062000322565b620000a29060026200043a565b600654620001f560201b62001f321790919060201c565b600654620000c8919062000308565b600f5560006010819055601181905542601255670de0b6b3a76400006013556305f5e100601455620f42406015556058601655601a556001601b5560408051808201909152600580825264466f72676560d81b60209092019182526200013191601c916200024c565b5042601d5543601e55601f805460ff191690553480156200015157600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1336000818152601860209081526040808320670de0b6b3a76400009081905590519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620004a8565b600081620002375760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b604482015260640160405180910390fd5b62000243828462000448565b90505b92915050565b8280546200025a906200046b565b90600052602060002090601f0160209004810192826200027e5760008555620002c9565b82601f106200029957805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c9578251825591602001919060010190620002ac565b50620002d7929150620002db565b5090565b5b80821115620002d75760008155600101620002dc565b634e487b7160e01b600052601160045260246000fd5b6000828210156200031d576200031d620002f2565b500390565b60008219821115620003385762000338620002f2565b500190565b600181815b808511156200037e578160001904821115620003625762000362620002f2565b808516156200037057918102915b93841c939080029062000342565b509250929050565b600082620003975750600162000246565b81620003a65750600062000246565b8160018114620003bf5760028114620003ca57620003ea565b600191505062000246565b60ff841115620003de57620003de620002f2565b50506001821b62000246565b5060208310610133831016604e8410600b84101617156200040f575081810a62000246565b6200041b83836200033d565b8060001904821115620004325762000432620002f2565b029392505050565b600062000243838362000386565b6000826200046657634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200048057607f821691505b60208210811415620004a257634e487b7160e01b600052602260045260246000fd5b50919050565b612cfa80620004b86000396000f3fe6080604052600436106102765760003560e01c806381269a561161014f578063a68eb88e116100c1578063d0856d161161007a578063d0856d16146106fc578063dc6e9cf914610711578063dd62ed3e14610727578063ddfbd8dd1461076d578063e932012b1461078d578063f7a5f155146107a357600080fd5b8063a68eb88e14610665578063a9059cbb1461067b578063b5ade81b1461069b578063c0abebe0146106b1578063c8a1465c146106c6578063cb9ae707146106e657600080fd5b80638da5cb5b116101135780638da5cb5b146105a05780638f4ffcb1146105c057806394b939ef146105e057806395d89b411461060057806397566aa01461062f57806399f584b31461064f57600080fd5b806381269a5614610528578063829965cc1461054857806387a2a9d61461055e5780638a769d35146105745780638ae0368b1461058a57600080fd5b8063313ce567116101e85780634fa972e1116101ac5780634fa972e11461046f578063510de0941461048557806364e46726146104a55780636de9f32b146104c757806370a08231146104dd578063757991a81461051357600080fd5b8063313ce567146103f357806332e997081461041a57806345d8a2321461042f578063490203a7146104455780634ef376281461045a57600080fd5b806318160ddd1161023a57806318160ddd146103395780631fccb33c1461034f5780632381a60e1461036f57806323b872dd146103855780632d38bf7a146103a55780632f104e0c146103bb57600080fd5b806306fdde0314610285578063095ea7b3146102b057806310294317146102e057806317da485f146103045780631801fbe51461031957600080fd5b3661028057600080fd5b600080fd5b34801561029157600080fd5b5061029a6107c3565b6040516102a7919061252e565b60405180910390f35b3480156102bc57600080fd5b506102d06102cb36600461259f565b610851565b60405190151581526020016102a7565b3480156102ec57600080fd5b506102f660125481565b6040519081526020016102a7565b34801561031057600080fd5b506102f66108be565b34801561032557600080fd5b506102d06103343660046125c9565b6108dc565b34801561034557600080fd5b506102f660055481565b34801561035b57600080fd5b506102d061036a3660046126b9565b6108f0565b34801561037b57600080fd5b506102f660105481565b34801561039157600080fd5b506102d06103a036600461271a565b6109b3565b3480156103b157600080fd5b506102f6600e5481565b3480156103c757600080fd5b506003546103db906001600160a01b031681565b6040516001600160a01b0390911681526020016102a7565b3480156103ff57600080fd5b50610408601281565b60405160ff90911681526020016102a7565b34801561042657600080fd5b50600c546102f6565b34801561043b57600080fd5b506102f6610b4081565b34801561045157600080fd5b506102f6610ab1565b34801561046657600080fd5b50600d546102f6565b34801561047b57600080fd5b506102f6600f5481565b34801561049157600080fd5b506004546103db906001600160a01b031681565b3480156104b157600080fd5b506104c56104c0366004612756565b610ae2565b005b3480156104d357600080fd5b506102f660175481565b3480156104e957600080fd5b506102f66104f8366004612799565b6001600160a01b031660009081526018602052604090205490565b34801561051f57600080fd5b506008546102f6565b34801561053457600080fd5b506102d06105433660046127b4565b610c58565b34801561055457600080fd5b506102f660085481565b34801561056a57600080fd5b506102f6600b5481565b34801561058057600080fd5b506102f6600c5481565b34801561059657600080fd5b506102f6600d5481565b3480156105ac57600080fd5b506000546103db906001600160a01b031681565b3480156105cc57600080fd5b506104c56105db3660046127e6565b610ca3565b3480156105ec57600080fd5b506002546103db906001600160a01b031681565b34801561060c57600080fd5b5061029a6040518060400160405280600381526020016246676560e81b81525081565b34801561063b57600080fd5b506102f661064a3660046128a6565b610d30565b34801561065b57600080fd5b506102f660015481565b34801561067157600080fd5b506102f660155481565b34801561068757600080fd5b506102d061069636600461259f565b610d6b565b3480156106a757600080fd5b506102f660095481565b3480156106bd57600080fd5b506017546102f6565b3480156106d257600080fd5b506102f66106e13660046128d2565b610e02565b3480156106f257600080fd5b506102f6601e5481565b34801561070857600080fd5b506104c56112f9565b34801561071d57600080fd5b506102f6600a5481565b34801561073357600080fd5b506102f6610742366004612949565b6001600160a01b03918216600090815260196020908152604080832093909416825291909152205490565b34801561077957600080fd5b506102f661078836600461297c565b61154c565b34801561079957600080fd5b506102f660075481565b3480156107af57600080fd5b506102f66107be3660046128d2565b61195a565b601c80546107d0906129a8565b80601f01602080910402602001604051908101604052809291908181526020018280546107fc906129a8565b80156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b505050505081565b3360008181526019602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108ac9086815260200190565b60405180910390a35060015b92915050565b60006108d7600c54600b54611f3290919063ffffffff16565b905090565b60006108e983833361154c565b5092915050565b6000808351600161090191906129f9565b67ffffffffffffffff811115610919576109196125eb565b604051908082528060200260200182016040528015610942578160200160208202803683370190505b50905060005b84516109559060016129f9565b811015610999578382828151811061096f5761096f612a11565b6001600160a01b03909216602092830291909101909101528061099181612a27565b915050610948565b506109a686868684610e02565b5060019695505050505050565b6001600160a01b0383166000908152601860205260408120546109d69083611f80565b6001600160a01b0385166000908152601860209081526040808320939093556019815282822033835290522054610a0d9083611f80565b6001600160a01b038086166000908152601960209081526040808320338452825280832094909455918616815260189091522054610a4b9083611fcc565b6001600160a01b0380851660008181526018602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a9f9086815260200190565b60405180910390a35060019392505050565b60006108d7600e546002610ac59190612b26565b610ad16012600a612b26565b610adc906064612b32565b90611f32565b6000546001600160a01b03163314610b2e5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b601f546a115eec47f6cf7e350000009060ff1615610b4e57610b4e612b51565b601f805460ff1916600117905542601255600e54610b7190610ac5906002612b26565b6010556000600e8190556017819055600855600b54610b91906001611f32565b600c5542600755610ba061201a565b610bab600282612b7d565b6001600160a01b038516600081815260186020526040812092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610bf4600285612b7d565b60405190815260200160405180910390a3600280546001600160a01b038087166001600160a01b031992831617909255600380548684169083161790556004805492851692909116919091179055600854601155610c52600061226b565b50505050565b600080833387604051602001610c7093929190612b91565b604051602081830303815290604052805190602001209050828160001c1115610c9857600080fd5b909314949350505050565b6001600160a01b0382163014610cb857600080fd5b60405163a9059cbb60e01b81526001600160a01b038516600482015260248101849052309063a9059cbb906044016020604051808303816000875af1158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d299190612bb9565b5050505050565b600080600d543386604051602001610d4a93929190612b91565b60408051808303601f19018152919052805160209091012095945050505050565b33600090815260186020526040812054610d859083611f80565b33600090815260186020526040808220929092556001600160a01b03851681522054610db19083611fcc565b6001600160a01b0384166000818152601860205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108ac9086815260200190565b600080610e2a868685600081518110610e1d57610e1d612a11565b602002602001015161154c565b905060008111610e695760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610b25565b8351610e769060016129f9565b835114610eeb5760405162461bcd60e51b815260206004820152603a60248201527f4d696e74546f2068617320746f206861766520616e206578747261206164647260448201527f65737320636f6d706172656420746f20457874726146756e64730000000000006064820152608401610b25565b60005b84518110156110af57610f028160016129f9565b610f0d906002612b26565b600854610f1a9190612bdb565b15610f24576110af565b306001600160a01b0316858281518110610f4057610f40612a11565b60200260200101516001600160a01b031614158015610f91575060045485516001600160a01b0390911690869083908110610f7d57610f7d612a11565b60200260200101516001600160a01b031614155b610fdd5760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610b25565b6000610fea8260016129f9565b90505b855181101561109c5785828151811061100857611008612a11565b60200260200101516001600160a01b031686828151811061102b5761102b612a11565b60200260200101516001600160a01b0316141561108a5760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610b25565b8061109481612a27565b915050610fed565b50806110a781612a27565b915050610eee565b60008060005b8381101561129b576110c88160016129f9565b6110d3906002612b26565b6008546110e09190612bdb565b611289578781815181106110f6576110f6612a11565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190612bef565b915081156111c45761117d600382612bdb565b15801561118957508015155b156111ae576111a7643a352944006111a18785612b32565b9061231b565b92506111c4565b6111c1643a35294400610adc8785612b32565b92505b8781815181106111d6576111d6612a11565b60200260200101516001600160a01b031663a9059cbb888360016111fa91906129f9565b8151811061120a5761120a612a11565b6020026020010151856040518363ffffffff1660e01b81526004016112449291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190612bb9565b505b8061129381612a27565b9150506110b5565b50600854600d5460408051928352602083019190915281018490526060810185905233907f87e5a7775b8ac2ead741e32752431bffeff76ec5f347cc202a6bad454653930b9060800160405180910390a25091979650505050505050565b6000601d54426113099190612c08565b9050600060115460085461131d9190612c08565b9050600061132b8284612b7d565b905061133f600e546002610ac59190612b26565b6010556000611356610b406111a184610378612b32565b90506000610378611368836064612b32565b6113729190612b7d565b9050600060c88210156113c457611393610378610adc8563026f7f3c612b32565b6113b3620c08406113a5600287612c1f565b610adc906303a2cdf0612b32565b6113bd91906129f9565b90506113cb565b50631443fd005b60046009546015546113dd9190612b32565b6113e890603c612b32565b6113f29190612b7d565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa15801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f9190612bef565b111561153457600454600354601a546015546001600160a01b039384169363a9059cbb9316916114ae91630bebc200919061149a888d612b32565b6114a49190612b32565b610adc9190612b32565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151d9190612bb9565b50601b5461152c906001612b32565b601a5561153a565b6000601a555b5050600854601155505042601d555050565b600080600d54338660405160200161156693929190612b91565b60405160208183030381529060405280519060200120905083811461159d5760405162461bcd60e51b8152600401610b2590612c2e565b600c5481106115be5760405162461bcd60e51b8152600401610b2590612c7c565b6115c661201a565b601254421161160f5760405162461bcd60e51b81526020600482015260156024820152744e6f2073616d65207365636f6e6420736f6c76657360581b6044820152606401610b25565b6000610b40601254426116229190612c08565b61162e90610378612b32565b6116389190612b7d565b9050600061037861164a836064612b32565b6116549190612b7d565b9050600061013a82101561169957611676610378610adc8563026f7f3c612b32565b611688620c08406113a5600287612c1f565b61169291906129f9565b90506116be565b6116ad610378610adc856305f5e100612b32565b6116bb906314dc93806129f9565b90505b6116f66116d76305f5e10083601054610adc9190612b32565b6001600160a01b03881660009081526018602052604090205490611fcc565b6001600160a01b03871660009081526018602052604090205560105461174c9061172b90630bebc20090610adc908590612b32565b6003546001600160a01b031660009081526018602052604090205490611fcc565b6003546001600160a01b031660009081526018602052604090205560105461178c90611783906305f5e10090610adc908590612b32565b60175490611fcc565b60175542601255601a54156118ea5760c882101561184a57600454601a546015546001600160a01b039092169163a9059cbb9189916117d5916305f5e100916114a49088612b32565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118449190612bb9565b506118ea565b600454601a546015546001600160a01b039092169163a9059cbb91899161187991600a916114a4906022612b32565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156118c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e89190612bb9565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d61192b6305f5e10084601054610adc9190612b32565b600854600d546040805193845260208401929092529082015260600160405180910390a2979650505050505050565b600080600d54338760405160200161197493929190612b91565b6040516020818303038152906040528051906020012090508481146119ab5760405162461bcd60e51b8152600401610b2590612c2e565b600c5481106119cc5760405162461bcd60e51b8152600401610b2590612c7c565b6119d461201a565b6012544211611a1d5760405162461bcd60e51b81526020600482015260156024820152744e6f2073616d65207365636f6e6420736f6c76657360581b6044820152606401610b25565b8351835114611a945760405162461bcd60e51b815260206004820152603a60248201527f4d696e74546f2068617320746f20686176652073616d65206e756d626572206f60448201527f66206164647265737373657320617320457874726146756e64730000000000006064820152608401610b25565b60005b8451811015611c5857611aab8160016129f9565b611ab6906002612b26565b600854611ac39190612bdb565b15611acd57611c58565b306001600160a01b0316858281518110611ae957611ae9612a11565b60200260200101516001600160a01b031614158015611b3a575060045485516001600160a01b0390911690869083908110611b2657611b26612a11565b60200260200101516001600160a01b031614155b611b865760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610b25565b6000611b938260016129f9565b90505b8551811015611c4557858281518110611bb157611bb1612a11565b60200260200101516001600160a01b0316868281518110611bd457611bd4612a11565b60200260200101516001600160a01b03161415611c335760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610b25565b80611c3d81612a27565b915050611b96565b5080611c5081612a27565b915050611a97565b6000610b4060125442611c6b9190612c08565b611c7790610378612b32565b611c819190612b7d565b90506000610378611c93836064612b32565b611c9d9190612b7d565b9050600061013a821015611ce257611cbf610378610adc8563026f7f3c612b32565b611cd1620c08406113a5600287612c1f565b611cdb91906129f9565b9050611d07565b611cf6610378610adc856305f5e100612b32565b611d04906314dc93806129f9565b90505b60008111611d445760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610b25565b60008060005b86811015611f1e57611d5d8160016129f9565b611d68906002612b26565b600854611d759190612bdb565b611f0c578a8181518110611d8b57611d8b612a11565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dff9190612bef565b91508115611f0c57611e12600382612bdb565b158015611e1e57508015155b15611e3d57611e36643a352944006111a18685612b32565b9250611e53565b611e50643a35294400610adc8685612b32565b92505b8a8181518110611e6557611e65612a11565b60200260200101516001600160a01b031663a9059cbb8b8381518110611e8d57611e8d612a11565b6020026020010151856040518363ffffffff1660e01b8152600401611ec79291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a9190612bb9565b505b80611f1681612a27565b915050611d4a565b505042601255509998505050505050505050565b600081611f6f5760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610b25565b611f798284612b7d565b9392505050565b600081831015611fc25760405162461bcd60e51b815260206004820152600d60248201526c53756220756e646572666c6f7760981b6044820152606401610b25565b611f798284612c08565b600080611fd983856129f9565b905083811015611f795760405162461bcd60e51b815260206004820152600c60248201526b416464206f766572666c6f7760a01b6044820152606401610b25565b600f5460105460175461202c91611fcc565b11801561203b5750603c600e54105b1561208757600e5461204e9060016129f9565b600e819055612076906120629060016129f9565b61206d906002612b26565b60065490611f32565b6006546120839190612c08565b600f555b600854612095906001611fcc565b6008556009546120a790600490612b7d565b6008546120b49190612bdb565b61225a576120c06112f9565b6120d2600e54600161206291906129f9565b6006546120df9190612c08565b600f556009546008546120f29190612bdb565b61225a57600480546040516370a0823160e01b81523092810192909252642e90edd000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015612148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061216c9190612bef565b6121769190612b7d565b600181905561218790612710612b32565b612193906127106129f9565b601554600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa1580156121df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122039190612bef565b61220d9190612b7d565b1161224057601654601554612223906002611f32565b111561223b57601554612237906002611f32565b6015555b612252565b60155461224e906003612388565b6015555b61225a6123ed565b612265600143612c08565b40600d55565b6000546001600160a01b031633146122b25760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610b25565b600054604080516001600160a01b03928316815291831660208301527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000816123585760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610b25565b60006123648385612b7d565b90506123708385612bdb565b15611f79576123808160016129f9565b949350505050565b600082612397575060006108b8565b60006123a38385612b32565b9050826123b08583612b7d565b14611f795760405162461bcd60e51b815260206004820152600d60248201526c4d756c74206f766572666c6f7760981b6044820152606401610b25565b60075442906000906123ff9083612c08565b90506000600954610b406124139190612b32565b90508082101561248857600061242e83610adc846064612388565b6001601b559050600061244e6103e8612448846064611f80565b90612516565b905061247d6124748261246e6107d0600c54611f3290919063ffffffff16565b90612388565b600c5490611f80565b600c55506124e29050565b600061249982610adc856064612388565b6002601b55905060006124b36103e8612448846064611f80565b90506124dc6124d38261246e6101f4600c54611f3290919063ffffffff16565b600c5490611fcc565b600c5550505b600783905543601e55600a54600c5410156124fe57600a54600c555b600b54600c54111561251157600b54600c555b505050565b6000818311156125275750806108b8565b5090919050565b600060208083528351808285015260005b8181101561255b5785810183015185820160400152820161253f565b8181111561256d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461259a57600080fd5b919050565b600080604083850312156125b257600080fd5b6125bb83612583565b946020939093013593505050565b600080604083850312156125dc57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561262a5761262a6125eb565b604052919050565b600082601f83011261264357600080fd5b8135602067ffffffffffffffff82111561265f5761265f6125eb565b8160051b61266e828201612601565b928352848101820192828101908785111561268857600080fd5b83870192505b848310156126ae5761269f83612583565b8252918301919083019061268e565b979650505050505050565b600080600080608085870312156126cf57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156126f457600080fd5b61270087828801612632565b92505061270f60608601612583565b905092959194509250565b60008060006060848603121561272f57600080fd5b61273884612583565b925061274660208501612583565b9150604084013590509250925092565b60008060006060848603121561276b57600080fd5b61277484612583565b925061278260208501612583565b915061279060408501612583565b90509250925092565b6000602082840312156127ab57600080fd5b611f7982612583565b600080600080608085870312156127ca57600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080608085870312156127fc57600080fd5b61280585612583565b9350602080860135935061281b60408701612583565b9250606086013567ffffffffffffffff8082111561283857600080fd5b818801915088601f83011261284c57600080fd5b81358181111561285e5761285e6125eb565b612870601f8201601f19168501612601565b9150808252898482850101111561288657600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806000606084860312156128bb57600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156128e857600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561290e57600080fd5b61291a88838901612632565b9350606087013591508082111561293057600080fd5b5061293d87828801612632565b91505092959194509250565b6000806040838503121561295c57600080fd5b61296583612583565b915061297360208401612583565b90509250929050565b60008060006060848603121561299157600080fd5b833592506020840135915061279060408501612583565b600181811c908216806129bc57607f821691505b602082108114156129dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a0c57612a0c6129e3565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a3b57612a3b6129e3565b5060010190565b600181815b80851115612a7d578160001904821115612a6357612a636129e3565b80851615612a7057918102915b93841c9390800290612a47565b509250929050565b600082612a94575060016108b8565b81612aa1575060006108b8565b8160018114612ab75760028114612ac157612add565b60019150506108b8565b60ff841115612ad257612ad26129e3565b50506001821b6108b8565b5060208310610133831016604e8410600b8410161715612b00575081810a6108b8565b612b0a8383612a42565b8060001904821115612b1e57612b1e6129e3565b029392505050565b6000611f798383612a85565b6000816000190483118215151615612b4c57612b4c6129e3565b500290565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082612b8c57612b8c612b67565b500490565b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b600060208284031215612bcb57600080fd5b81518015158114611f7957600080fd5b600082612bea57612bea612b67565b500690565b600060208284031215612c0157600080fd5b5051919050565b600082821015612c1a57612c1a6129e3565b500390565b6000611f7960ff841683612a85565b6020808252602e908201527f4f6c64206368616c6c656e67655f646967657374206f722077726f6e6720636860408201526d185b1b195b99d957d91a59d95cdd60921b606082015260800190565b60208082526028908201527f446967657374206d75737420626520736d616c6c6572207468616e206d696e696040820152671b99d5185c99d95d60c21b60608201526080019056fea2646970667358221220b202ed8424ee7ce6290a8007713b955aa16298f43ee27eaf26384943ad33ad5364736f6c634300080b0033",
  "bytecodeSha1": "641013a4461989c50c22187d686c334e52b66392",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Forge",
  "coverageMap": {
    "branches": {
      "0": {
        "ExtendedMath2.limitLessThan": {
          "180": [
            4998,
            5003,
            false
          ]
        },
        "Forge.ARewardSender": {
          "145": [
            9806,
            9817,
            false
          ],
          "146": [
            9948,
            10050,
            false
          ]
        },
        "Forge._reAdjustDifficulty": {
          "177": [
            18026,
            18078,
            false
          ],
          "178": [
            18874,
            18904,
            false
          ],
          "179": [
            18971,
            19001,
            false
          ]
        },
        "Forge._startNewMiningEpoch": {
          "169": [
            16531,
            16580,
            false
          ],
          "170": [
            16584,
            16598,
            false
          ],
          "171": [
            17281,
            17375,
            false
          ],
          "172": [
            17459,
            17487,
            false
          ]
        },
        "Forge.checkMintSolution": {
          "134": [
            19497,
            19525,
            false
          ]
        },
        "Forge.empty_mintTo": {
          "153": [
            14403,
            14429,
            true
          ],
          "154": [
            14540,
            14570,
            true
          ],
          "155": [
            14654,
            14689,
            true
          ],
          "156": [
            14727,
            14761,
            true
          ],
          "157": [
            14891,
            14920,
            false
          ],
          "158": [
            14950,
            14981,
            false
          ],
          "159": [
            14985,
            15018,
            true
          ],
          "160": [
            15111,
            15142,
            true
          ],
          "161": [
            15315,
            15326,
            false
          ],
          "162": [
            15483,
            15494,
            true
          ],
          "163": [
            15947,
            15962,
            false
          ],
          "164": [
            15974,
            15984,
            false
          ],
          "165": [
            15988,
            15994,
            false
          ]
        },
        "Forge.mintTo": {
          "147": [
            10807,
            10833,
            true
          ],
          "148": [
            10944,
            10974,
            true
          ],
          "149": [
            11058,
            11093,
            true
          ],
          "150": [
            11306,
            11317,
            false
          ],
          "151": [
            11795,
            11808,
            false
          ],
          "152": [
            11817,
            11828,
            false
          ]
        },
        "Forge.mintTokensArrayTo": {
          "136": [
            12387,
            12398,
            true
          ],
          "137": [
            12426,
            12464,
            true
          ],
          "138": [
            12594,
            12623,
            false
          ],
          "139": [
            12653,
            12684,
            false
          ],
          "140": [
            12688,
            12721,
            true
          ],
          "141": [
            12814,
            12845,
            true
          ],
          "142": [
            13335,
            13350,
            false
          ],
          "143": [
            13362,
            13372,
            false
          ],
          "144": [
            13376,
            13382,
            false
          ]
        },
        "Forge.receiveApproval": {
          "135": [
            24149,
            24171,
            true
          ]
        },
        "SafeMath2.add": {
          "168": [
            4002,
            4008,
            true
          ]
        },
        "SafeMath2.div": {
          "166": [
            4512,
            4518,
            true
          ]
        },
        "SafeMath2.divRound": {
          "173": [
            4659,
            4665,
            true
          ],
          "174": [
            4722,
            4732,
            false
          ]
        },
        "SafeMath2.mult": {
          "175": [
            4282,
            4288,
            false
          ],
          "176": [
            4368,
            4378,
            true
          ]
        },
        "SafeMath2.sub": {
          "167": [
            4141,
            4147,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ExtendedMath2.limitLessThan": {
          "132": [
            5005,
            5013
          ],
          "133": [
            5024,
            5032
          ]
        },
        "Forge.<fallback>": {
          "0": [
            24342,
            24350
          ]
        },
        "Forge.<receive>": {
          "1": [
            24293,
            24301
          ]
        },
        "Forge.ARewardSender": {
          "61": [
            9622,
            9684
          ],
          "62": [
            9823,
            9895
          ],
          "63": [
            9912,
            9935
          ],
          "64": [
            10135,
            10255
          ],
          "65": [
            10260,
            10280
          ],
          "66": [
            10294,
            10307
          ],
          "67": [
            10315,
            10337
          ],
          "68": [
            10359,
            10384
          ]
        },
        "Forge._reAdjustDifficulty": {
          "124": [
            18186,
            18194
          ],
          "125": [
            18300,
            18384
          ],
          "126": [
            18516,
            18524
          ],
          "127": [
            18661,
            18746
          ],
          "128": [
            18774,
            18819
          ],
          "129": [
            18823,
            18867
          ],
          "130": [
            18930,
            18960
          ],
          "131": [
            19022,
            19052
          ]
        },
        "Forge._startNewMiningEpoch": {
          "108": [
            16607,
            16632
          ],
          "109": [
            16637,
            16707
          ],
          "110": [
            16871,
            16901
          ],
          "111": [
            17038,
            17053
          ],
          "112": [
            17058,
            17128
          ],
          "113": [
            17191,
            17272
          ],
          "114": [
            17502,
            17530
          ],
          "115": [
            17555,
            17584
          ],
          "116": [
            17596,
            17617
          ],
          "117": [
            17631,
            17676
          ]
        },
        "Forge.allowance": {
          "7": [
            23639,
            23674
          ]
        },
        "Forge.approve": {
          "8": [
            22315,
            22352
          ],
          "9": [
            22357,
            22399
          ],
          "10": [
            22404,
            22415
          ]
        },
        "Forge.balanceOf": {
          "4": [
            21113,
            21140
          ]
        },
        "Forge.checkMintSolution": {
          "40": [
            19527,
            19535
          ],
          "41": [
            19540,
            19575
          ]
        },
        "Forge.empty_mintTo": {
          "83": [
            14395,
            14480
          ],
          "84": [
            14532,
            14615
          ],
          "85": [
            14619,
            14641
          ],
          "86": [
            14646,
            14715
          ],
          "87": [
            14719,
            14823
          ],
          "88": [
            14927,
            14932
          ],
          "89": [
            14942,
            15049
          ],
          "90": [
            15103,
            15174
          ],
          "91": [
            15093,
            15096
          ],
          "92": [
            14875,
            14879
          ],
          "93": [
            15332,
            15403
          ],
          "94": [
            15418,
            15466
          ],
          "95": [
            15475,
            15509
          ],
          "96": [
            15879,
            15938
          ],
          "97": [
            16003,
            16064
          ],
          "98": [
            16084,
            16141
          ],
          "99": [
            16160,
            16212
          ],
          "100": [
            15576,
            15579
          ],
          "101": [
            16250,
            16285
          ],
          "102": [
            16289,
            16303
          ]
        },
        "Forge.getChallengeNumber": {
          "3": [
            19730,
            19752
          ]
        },
        "Forge.getEpoch": {
          "5": [
            20513,
            20530
          ]
        },
        "Forge.getMiningDifficulty": {
          "11": [
            19903,
            19943
          ]
        },
        "Forge.getMiningMinted": {
          "6": [
            20097,
            20116
          ]
        },
        "Forge.getMiningReward": {
          "22": [
            20396,
            20450
          ]
        },
        "Forge.getMiningTarget": {
          "2": [
            20010,
            20029
          ]
        },
        "Forge.mint": {
          "12": [
            10504,
            10547
          ]
        },
        "Forge.mintTo": {
          "69": [
            10799,
            10884
          ],
          "70": [
            10936,
            11019
          ],
          "71": [
            11023,
            11045
          ],
          "72": [
            11050,
            11119
          ],
          "73": [
            11323,
            11396
          ],
          "74": [
            11411,
            11461
          ],
          "75": [
            11472,
            11555
          ],
          "76": [
            11559,
            11664
          ],
          "77": [
            11673,
            11748
          ],
          "78": [
            11752,
            11787
          ],
          "79": [
            11835,
            11927
          ],
          "80": [
            11943,
            12021
          ],
          "81": [
            12035,
            12130
          ],
          "82": [
            12135,
            12151
          ]
        },
        "Forge.mintTokensArrayTo": {
          "47": [
            12379,
            12413
          ],
          "48": [
            12418,
            12526
          ],
          "49": [
            12630,
            12635
          ],
          "50": [
            12645,
            12752
          ],
          "51": [
            12806,
            12877
          ],
          "52": [
            12796,
            12799
          ],
          "53": [
            12578,
            12582
          ],
          "54": [
            13267,
            13326
          ],
          "55": [
            13391,
            13452
          ],
          "56": [
            13472,
            13529
          ],
          "57": [
            13551,
            13605
          ],
          "58": [
            12964,
            12967
          ],
          "59": [
            13634,
            13702
          ],
          "60": [
            13707,
            13721
          ]
        },
        "Forge.mintTokensSameAddress": {
          "13": [
            14002,
            14016
          ],
          "14": [
            13990,
            13993
          ],
          "15": [
            14027,
            14085
          ],
          "16": [
            14090,
            14101
          ]
        },
        "Forge.receiveApproval": {
          "42": [
            24141,
            24172
          ],
          "43": [
            24176,
            24220
          ]
        },
        "Forge.transfer": {
          "44": [
            21568,
            21623
          ],
          "45": [
            21627,
            21666
          ],
          "46": [
            21671,
            21708
          ]
        },
        "Forge.transferFrom": {
          "17": [
            23045,
            23088
          ],
          "18": [
            23092,
            23157
          ],
          "19": [
            23161,
            23200
          ],
          "20": [
            23205,
            23236
          ],
          "21": [
            23241,
            23252
          ]
        },
        "Forge.zinit": {
          "23": [
            8620,
            8636
          ],
          "24": [
            8646,
            8660
          ],
          "25": [
            8667,
            8702
          ],
          "26": [
            8709,
            8772
          ],
          "27": [
            8779,
            8792
          ],
          "28": [
            8799,
            8815
          ],
          "29": [
            8822,
            8836
          ],
          "30": [
            8843,
            8880
          ],
          "31": [
            8933,
            8981
          ],
          "32": [
            8988,
            9010
          ],
          "33": [
            9064,
            9095
          ],
          "34": [
            9107,
            9154
          ],
          "35": [
            9163,
            9195
          ],
          "36": [
            9205,
            9240
          ],
          "37": [
            9250,
            9284
          ],
          "38": [
            9296,
            9318
          ],
          "39": [
            9324,
            9344
          ]
        },
        "Ownable.setOwner": {
          "118": [
            3405,
            3442
          ],
          "119": [
            3452,
            3466
          ]
        },
        "SafeMath2.add": {
          "107": [
            3994,
            4025
          ]
        },
        "SafeMath2.div": {
          "103": [
            4504,
            4534
          ],
          "104": [
            4544,
            4556
          ]
        },
        "SafeMath2.divRound": {
          "120": [
            4651,
            4681
          ],
          "121": [
            4748,
            4757
          ]
        },
        "SafeMath2.mult": {
          "122": [
            4304,
            4312
          ],
          "123": [
            4360,
            4396
          ]
        },
        "SafeMath2.sub": {
          "105": [
            4133,
            4165
          ],
          "106": [
            4175,
            4187
          ]
        }
      }
    }
  },
  "dependencies": [
    "ApproveAndCallFallBack",
    "ExtendedMath2",
    "IERC20",
    "Ownable",
    "SafeMath2"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "6011:18345:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;;;;;;;;;;;;;;;;;;;;;;;24342:8;;;6011:18345;;;;24293:8;;;6011:18345;24342:8;;;8010:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22224:196;;;;;;;;;;-1:-1:-1;22224:196:0;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;22224:196:0;1053:187:1;7585:49:0;;;;;;;;;;;;;;;;;;;1391:25:1;;;1379:2;1364:18;7585:49:0;1245:177:1;19840:107:0;;;;;;;;;;;;;:::i;10415:136::-;;;;;;;;;;-1:-1:-1;10415:136:0;;;;;:::i;:::-;;:::i;6619:64::-;;;;;;;;;;;;;;;;13733:372;;;;;;;;;;-1:-1:-1;13733:372:0;;;;;:::i;:::-;;:::i;7495:29::-;;;;;;;;;;;;;;;;22940:317;;;;;;;;;;-1:-1:-1;22940:317:0;;;;;:::i;:::-;;:::i;7374:25::-;;;;;;;;;;;;;;;;6209:30;;;;;;;;;;-1:-1:-1;6209:30:0;;;;-1:-1:-1;;;;;6209:30:0;;;;;;-1:-1:-1;;;;;3876:32:1;;;3858:51;;3846:2;3831:18;6209:30:0;3712:203:1;8087:35:0;;;;;;;;;;;;8120:2;8087:35;;;;;4092:4:1;4080:17;;;4062:36;;4050:2;4035:18;8087:35:0;3920:184:1;19951:83:0;;;;;;;;;;-1:-1:-1;20017:12:0;;19951:83;;6072:41;;;;;;;;;;;;6106:7;6072:41;;20226:231;;;;;;;;;;;;;:::i;19665:92::-;;;;;;;;;;-1:-1:-1;19737:15:0;;19665:92;;7405:84;;;;;;;;;;;;;;;;6245:30;;;;;;;;;;-1:-1:-1;6245:30:0;;;;-1:-1:-1;;;;;6245:30:0;;;8438:919;;;;;;;;;;-1:-1:-1;8438:919:0;;;;;:::i;:::-;;:::i;:::-;;7824:24;;;;;;;;;;;;;;;;21025:120;;;;;;;;;;-1:-1:-1;21025:120:0;;;;;:::i;:::-;-1:-1:-1;;;;;21120:20:0;21094:12;21120:20;;;:8;:20;;;;;;;21025:120;20461:75;;;;;;;;;;-1:-1:-1;20520:10:0;;20461:75;;19252:327;;;;;;;;;;-1:-1:-1;19252:327:0;;;;;:::i;:::-;;:::i;6905:26::-;;;;;;;;;;;;;;;;7082:37;;;;;;;;;;;;;;;;7125:63;;;;;;;;;;;;;;;;7257:60;;;;;;;;;;;;;;;;3042:20;;;;;;;;;;-1:-1:-1;3042:20:0;;;;-1:-1:-1;;;;;3042:20:0;;;24032:194;;;;;;;;;;-1:-1:-1;24032:194:0;;;;;:::i;:::-;;:::i;6174:29::-;;;;;;;;;;-1:-1:-1;6174:29:0;;;;-1:-1:-1;;;;;6174:29:0;;;8044:37;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8044:37:0;;;;;20570:240;;;;;;;;;;-1:-1:-1;20570:240:0;;;;;:::i;:::-;;:::i;6119:25::-;;;;;;;;;;;;;;;;7732:40;;;;;;;;;;;;;;;;21481:248;;;;;;;;;;-1:-1:-1;21481:248:0;;;;;:::i;:::-;;:::i;6964:42::-;;;;;;;;;;;;;;;;20038:83;;;;;;;;;;-1:-1:-1;20104:12:0;;20038:83;;12160:1569;;;;;;;;;;-1:-1:-1;12160:1569:0;;;;;:::i;:::-;;:::i;8168:56::-;;;;;;;;;;;;;;;;9387:1001;;;;;;;;;;;;;:::i;7035:36::-;;;;;;;;;;;;;;;;23532:147;;;;;;;;;;-1:-1:-1;23532:147:0;;;;;:::i;:::-;-1:-1:-1;;;;;23646:19:0;;;23618:14;23646:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;23532:147;10555:1601;;;;;;;;;;-1:-1:-1;10555:1601:0;;;;;:::i;:::-;;:::i;6839:60::-;;;;;;;;;;;;;;;;14109:2201;;;;;;;;;;-1:-1:-1;14109:2201:0;;;;;:::i;:::-;;:::i;8010:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22224:196::-;22323:10;22296:12;22315:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;22315:28:0;;;;;;;;;;:37;;;22362;22296:12;;22315:28;;22362:37;;;;22346:6;1391:25:1;;1379:2;1364:18;;1245:177;22362:37:0;;;;;;;;-1:-1:-1;22411:4:0;22224:196;;;;;:::o;19840:107::-;19892:4;19910:33;19930:12;;19910:15;;:19;;:33;;;;:::i;:::-;19903:40;;19840:107;:::o;10415:136::-;10486:12;10504:43;10511:5;10518:16;10536:10;10504:6;:43::i;:::-;;10415:136;;;;:::o;13733:372::-;13866:12;13884:19;13920:10;:17;13940:1;13920:21;;;;:::i;:::-;13906:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13906:36:0;;13884:58;;13952:6;13948:73;13966:17;;:21;;13986:1;13966:21;:::i;:::-;13962:1;:26;13948:73;;;14010:6;14002:2;14005:1;14002:5;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14002:14:0;;;:5;;;;;;;;;;;:14;13990:3;;;;:::i;:::-;;;;13948:73;;;;14027:58;14045:5;14052:16;14070:10;14082:2;14027:17;:58::i;:::-;-1:-1:-1;14097:4:0;;13733:372;-1:-1:-1;;;;;;13733:372:0:o;22940:317::-;-1:-1:-1;;;;;23062:14:0;;23026:12;23062:14;;;:8;:14;;;;;;:26;;23081:6;23062:18;:26::i;:::-;-1:-1:-1;;;;;23045:14:0;;;;;;:8;:14;;;;;;;;:43;;;;23120:7;:13;;;;;23134:10;23120:25;;;;;;:37;;23150:6;23120:29;:37::i;:::-;-1:-1:-1;;;;;23092:13:0;;;;;;;:7;:13;;;;;;;;23106:10;23092:25;;;;;;;:65;;;;23176:12;;;;;:8;:12;;;;;:24;;23193:6;23176:16;:24::i;:::-;-1:-1:-1;;;;;23161:12:0;;;;;;;:8;:12;;;;;;;:39;;;;23210:26;;;;;;;;;;23229:6;1391:25:1;;1379:2;1364:18;;1245:177;23210:26:0;;;;;;;;-1:-1:-1;23248:4:0;22940:317;;;;;:::o;20226:231::-;20274:4;20403:47;20439:9;;20436:1;:12;;;;:::i;:::-;20410:18;8120:2;20410;:18;:::i;:::-;20404:24;;:3;:24;:::i;:::-;20403:31;;:47::i;8438:919::-;3298:5;;-1:-1:-1;;;;;3298:5:0;3284:10;:19;3276:42;;;;-1:-1:-1;;;3276:42:0;;10517:2:1;3276:42:0;;;10499:21:1;10556:2;10536:18;;;10529:30;-1:-1:-1;;;10575:18:1;;;10568:40;10625:18;;3276:42:0;;;;;;;;;8628:7:::1;::::0;8557:26:::1;::::0;8628:7:::1;;8627:8;8620:16;;;;:::i;:::-;8646:7;:14:::0;;-1:-1:-1;;8646:14:0::1;8656:4;8646:14;::::0;;8687:15:::1;8667:17;:35:::0;8761:9:::1;::::0;8725:47:::1;::::0;8758:12:::1;::::0;:1:::1;:12;:::i;8725:47::-;8709:13;:63:::0;8791:1:::1;8779:9;:13:::0;;;8799:12:::1;:16:::0;;;8822:10:::1;:14:::0;8858:15:::1;::::0;:22:::1;::::0;8878:1:::1;8858:19;:22::i;:::-;8843:12;:37:::0;8966:15:::1;8933:30;:48:::0;8988:22:::1;:20;:22::i;:::-;9092:3;9094:1;9092::::0;:3:::1;:::i;:::-;-1:-1:-1::0;;;;;9064:25:0;::::1;;::::0;;;:8:::1;:25;::::0;;;;:31;;;;:25;9112:42:::1;9150:3;9152:1;9150::::0;:3:::1;:::i;:::-;9112:42;::::0;1391:25:1;;;1379:2;1364:18;9112:42:0::1;;;;;;;9163:14;:32:::0;;-1:-1:-1;;;;;9163:32:0;;::::1;-1:-1:-1::0;;;;;;9163:32:0;;::::1;;::::0;;;9205:15:::1;:35:::0;;;;::::1;::::0;;::::1;;::::0;;9250:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;9308:10:::1;::::0;9296:9:::1;:22:::0;9324:20:::1;9163:14;9324:8;:20::i;:::-;8538:819;8438:919:::0;;;:::o;19252:327::-;19384:12;19402:14;19454:16;19471:10;19482:5;19437:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19427:62;;;;;;19402:88;;19515:10;19505:6;19497:15;;:28;19494:41;;;19527:8;;;19494:41;19548:26;;;;19252:327;-1:-1:-1;;;;19252:327:0:o;24032:194::-;-1:-1:-1;;;;;24149:22:0;;24166:4;24149:22;24141:31;;;;;;24176:44;;-1:-1:-1;;;24176:44:0;;-1:-1:-1;;;;;11599:32:1;;24176:44:0;;;11581:51:1;11648:18;;;11641:34;;;24191:4:0;;24176:30;;11554:18:1;;24176:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24032:194;;;;:::o;20570:240::-;20681:18;20706:14;20751:15;;20768:10;20780:5;20734:52;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20734:52:0;;;;;;20724:63;;20734:52;20724:63;;;;;20570:240;-1:-1:-1;;;;;20570:240:0:o;21481:248::-;21600:10;21549:12;21591:20;;;:8;:20;;;;;;:32;;21616:6;21591:24;:32::i;:::-;21577:10;21568:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;21642:12:0;;;;;;:24;;21659:6;21642:16;:24::i;:::-;-1:-1:-1;;;;;21627:12:0;;;;;;:8;:12;;;;;;;:39;;;;21676:32;;21685:10;;21676:32;;;;21701:6;1391:25:1;;1379:2;1364:18;;1245:177;12160:1569:0;12298:12;12316:15;12334:41;12341:5;12347:16;12365:6;12372:1;12365:9;;;;;;;;:::i;:::-;;;;;;;12334:6;:41::i;:::-;12316:59;;12397:1;12387:7;:11;12379:34;;;;-1:-1:-1;;;12379:34:0;;12170:2:1;12379:34:0;;;12152:21:1;12209:2;12189:18;;;12182:30;-1:-1:-1;;;12228:18:1;;;12221:40;12278:18;;12379:34:0;11968:334:1;12379:34:0;12443:17;;:21;;12463:1;12443:21;:::i;:::-;12426:6;:13;:38;12418:108;;;;-1:-1:-1;;;12418:108:0;;12509:2:1;12418:108:0;;;12491:21:1;12548:2;12528:18;;;12521:30;12587:34;12567:18;;;12560:62;12658:28;12638:18;;;12631:56;12704:19;;12418:108:0;12307:422:1;12418:108:0;12530:7;12543:344;12559:10;:17;12555:2;:21;12543:344;;;12612:4;:2;12615:1;12612:4;:::i;:::-;12608:9;;:1;:9;:::i;:::-;12594:10;;:24;;;;:::i;:::-;:29;12591:50;;12630:5;;12591:50;12679:4;-1:-1:-1;;;;;12653:31:0;:10;12664:2;12653:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12653:31:0;;;:68;;;;-1:-1:-1;12706:15:0;;12688:14;;-1:-1:-1;;;;;12706:15:0;;;;12688:10;;12699:2;;12688:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12688:33:0;;;12653:68;12645:107;;;;-1:-1:-1;;;12645:107:0;;13053:2:1;12645:107:0;;;13035:21:1;13092:2;13072:18;;;13065:30;13131:28;13111:18;;;13104:56;13177:18;;12645:107:0;12851:350:1;12645:107:0;12761:6;12768:4;:2;12771:1;12768:4;:::i;:::-;12761:11;;12757:126;12777:10;:17;12774:1;:20;12757:126;;;12831:10;12842:2;12831:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12814:31:0;:10;12825:1;12814:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12814:31:0;;;12806:71;;;;-1:-1:-1;;;12806:71:0;;13408:2:1;12806:71:0;;;13390:21:1;13447:2;13427:18;;;13420:30;13486:29;13466:18;;;13459:57;13533:18;;12806:71:0;13206:351:1;12806:71:0;12796:3;;;;:::i;:::-;;;;12757:126;;;-1:-1:-1;12578:4:0;;;;:::i;:::-;;;;12543:344;;;12893:17;12918:18;12948:6;12944:677;12960:2;12958:1;:4;12944:677;;;13250:3;:1;13252;13250:3;:::i;:::-;13246:8;;:1;:8;:::i;:::-;13232:10;;:23;;;;:::i;:::-;13229:382;;13287:10;13298:1;13287:13;;;;;;;;:::i;:::-;;;;;;;;;;;13280:46;;-1:-1:-1;;;13280:46:0;;13320:4;13280:46;;;3858:51:1;-1:-1:-1;;;;;13280:31:0;;;;;;3831:18:1;;13280:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13267:59;-1:-1:-1;13335:15:0;;13332:211;;13362:5;13366:1;13362;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;13376:6:0;;;13362:20;13358:179;;;13403:49;13435:16;13404:20;13417:7;13404:10;:20;:::i;:::-;13403:31;;:49::i;:::-;13391:61;;13358:179;;;13484:45;13511:16;13485:20;13498:7;13485:10;:20;:::i;13484:45::-;13472:57;;13358:179;13558:10;13569:1;13558:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13551:30:0;;13582:6;13589:1;13591;13589:3;;;;:::i;:::-;13582:11;;;;;;;;:::i;:::-;;;;;;;13595:9;13551:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;11599:32:1;;;;11581:51;;11663:2;11648:18;;11641:34;11569:2;11554:18;;11407:274;13551:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13229:382;12964:3;;;;:::i;:::-;;;;12944:677;;;-1:-1:-1;13660:10:0;;13672:15;;13639:63;;;13982:25:1;;;14038:2;14023:18;;14016:34;;;;14066:18;;14059:34;;;14124:2;14109:18;;14102:34;;;13648:10:0;;13639:63;;13969:3:1;13954:19;13639:63:0;;;;;;;-1:-1:-1;13714:7:0;;12160:1569;-1:-1:-1;;;;;;;12160:1569:0:o;9387:1001::-;9468:12;9501:7;;9483:15;:25;;;;:::i;:::-;9468:40;;9513:18;9547:9;;9534:10;;:22;;;;:::i;:::-;9513:43;-1:-1:-1;9577:20:0;9600:17;9513:43;9600:4;:17;:::i;:::-;9577:40;;9638:46;9673:9;;9670:1;:12;;;;:::i;9638:46::-;9622:13;:62;9688:9;9700:41;6106:7;9701:18;:12;9716:3;9701:18;:::i;9700:41::-;9688:53;-1:-1:-1;9745:13:0;9771:3;9761:7;9688:53;9765:3;9761:7;:::i;:::-;:13;;;;:::i;:::-;9745:29;;9778:17;9814:3;9806:5;:11;9803:137;;;9872:23;9891:3;9873:12;9884:1;9873:8;:12;:::i;9872:23::-;9835:34;9862:6;9848;9853:1;9848;:6;:::i;:::-;9836:20;;:8;:20;:::i;9835:34::-;:60;;;;:::i;:::-;9823:72;;9803:137;;;-1:-1:-1;9925:9:0;9803:137;10048:1;10022:24;;10010:9;;:36;;;;:::i;:::-;10000:47;;:6;:47;:::i;:::-;:49;;;;:::i;:::-;9955:15;;;9948:48;;-1:-1:-1;;;9948:48:0;;9990:4;9948:48;;;3858:51:1;;;;-1:-1:-1;;;;;9955:15:0;;9948:33;;3831:18:1;;9948:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:102;9945:367;;;10142:15;;10168;;10225:9;;10213;;-1:-1:-1;;;;;10142:15:0;;;;10135:32;;10168:15;;10185:69;;10240:13;;10225:9;10186:24;10201:9;10187:10;10186:24;:::i;:::-;:36;;;;:::i;:::-;:48;;;;:::i;10185:69::-;10135:120;;-1:-1:-1;;;;;;10135:120:0;;;;;;;-1:-1:-1;;;;;11599:32:1;;;10135:120:0;;;11581:51:1;11648:18;;;11641:34;11554:18;;10135:120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10276:4:0;;10272:8;;:1;:8;:::i;:::-;10260:9;:20;9945:367;;;10306:1;10294:9;:13;9945:367;-1:-1:-1;;10327:10:0;;10315:9;:22;-1:-1:-1;;10369:15:0;10359:7;:25;-1:-1:-1;;9387:1001:0:o;10555:1601::-;10645:12;10664:14;10709:15;;10726:10;10738:5;10692:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10682:63;;;;;;10664:81;;10817:16;10807:6;:26;10799:85;;;;-1:-1:-1;;;10799:85:0;;;;;;;:::i;:::-;10962:12;;10944:30;;10936:83;;;;-1:-1:-1;;;10936:83:0;;;;;;;:::i;:::-;11023:22;:20;:22::i;:::-;11076:17;;11058:15;:35;11050:69;;;;-1:-1:-1;;;11050:69:0;;15448:2:1;11050:69:0;;;15430:21:1;15487:2;15467:18;;;15460:30;-1:-1:-1;;;15506:18:1;;;15499:51;15567:18;;11050:69:0;15246:345:1;11050:69:0;11177:9;6106:7;11209:17;;11191:15;:35;;;;:::i;:::-;11190:43;;11230:3;11190:43;:::i;:::-;11189:58;;;;:::i;:::-;11177:70;-1:-1:-1;11251:10:0;11274:3;11264:7;11177:70;11268:3;11264:7;:::i;:::-;:13;;;;:::i;:::-;11251:26;;11281:14;11314:3;11306:5;:11;11303:163;;;11373:23;11392:3;11374:12;11385:1;11374:8;:12;:::i;11373:23::-;11335:36;11362:8;11348:6;11353:1;11348;:6;:::i;11335:36::-;:61;;;;:::i;:::-;11323:73;;11303:163;;;11423:24;11443:3;11424:13;:1;11428:9;11424:13;:::i;11423:24::-;:38;;11451:9;11423:38;:::i;:::-;11411:50;;11303:163;11491:64;11512:42;11544:9;11529;11513:13;;:25;;;;:::i;11512:42::-;-1:-1:-1;;;;;11491:16:0;;;;;;:8;:16;;;;;;;:20;:64::i;:::-;-1:-1:-1;;;;;11472:16:0;;;;;;:8;:16;;;;;:83;11618:13;;11587:77;;11617:46;;11649:13;;11618:25;;11634:9;;11618:25;:::i;11617:46::-;11596:15;;-1:-1:-1;;;;;11596:15:0;11587:25;;;;:8;:25;;;;;;;:29;:77::i;:::-;11568:15;;-1:-1:-1;;;;;11568:15:0;11559:25;;;;:8;:25;;;;;:105;11706:13;;11688:60;;11705:42;;11737:9;;11706:25;;11722:9;;11706:25;:::i;11705:42::-;11688:12;;;:16;:60::i;:::-;11673:12;:75;11772:15;11752:17;:35;11795:9;;:13;11792:239;;11825:3;11817:5;:11;11814:213;;;11842:15;;11901:9;;11889;;-1:-1:-1;;;;;11842:15:0;;;;11835:32;;11868:6;;11876:50;;11916:9;;11877:21;;:9;:21;:::i;11876:50::-;11835:92;;-1:-1:-1;;;;;;11835:92:0;;;;;;;-1:-1:-1;;;;;11599:32:1;;;11835:92:0;;;11581:51:1;11648:18;;;11641:34;11554:18;;11835:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11814:213;;;11950:15;;12002:9;;11990;;-1:-1:-1;;;;;11950:15:0;;;;11943:32;;11976:6;;11984:36;;12017:2;;11985:14;;:2;:14;:::i;11984:36::-;11943:78;;-1:-1:-1;;;;;;11943:78:0;;;;;;;-1:-1:-1;;;;;11599:32:1;;;11943:78:0;;;11581:51:1;11648:18;;;11641:34;11554:18;;11943:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11814:213;12045:10;-1:-1:-1;;;;;12040:90:0;;12057:42;12089:9;12074;12058:13;;:25;;;;:::i;12057:42::-;12101:10;;12113:15;;12040:90;;;15798:25:1;;;15854:2;15839:18;;15832:34;;;;15882:18;;;15875:34;15786:2;15771:18;12040:90:0;;;;;;;12142:9;10555:1601;-1:-1:-1;;;;;;;10555:1601:0:o;14109:2201::-;14242:12;14260:14;14305:15;;14322:10;14334:5;14288:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14278:63;;;;;;14260:81;;14413:16;14403:6;:26;14395:85;;;;-1:-1:-1;;;14395:85:0;;;;;;;:::i;:::-;14558:12;;14540:30;;14532:83;;;;-1:-1:-1;;;14532:83:0;;;;;;;:::i;:::-;14619:22;:20;:22::i;:::-;14672:17;;14654:15;:35;14646:69;;;;-1:-1:-1;;;14646:69:0;;15448:2:1;14646:69:0;;;15430:21:1;15487:2;15467:18;;;15460:30;-1:-1:-1;;;15506:18:1;;;15499:51;15567:18;;14646:69:0;15246:345:1;14646:69:0;14744:10;:17;14727:6;:13;:34;14719:104;;;;-1:-1:-1;;;14719:104:0;;16122:2:1;14719:104:0;;;16104:21:1;16161:2;16141:18;;;16134:30;16200:34;16180:18;;;16173:62;16271:28;16251:18;;;16244:56;16317:19;;14719:104:0;15920:422:1;14719:104:0;14827:7;14840:344;14856:10;:17;14852:2;:21;14840:344;;;14909:4;:2;14912:1;14909:4;:::i;:::-;14905:9;;:1;:9;:::i;:::-;14891:10;;:24;;;;:::i;:::-;:29;14888:50;;14927:5;;14888:50;14976:4;-1:-1:-1;;;;;14950:31:0;:10;14961:2;14950:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14950:31:0;;;:68;;;;-1:-1:-1;15003:15:0;;14985:14;;-1:-1:-1;;;;;15003:15:0;;;;14985:10;;14996:2;;14985:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14985:33:0;;;14950:68;14942:107;;;;-1:-1:-1;;;14942:107:0;;13053:2:1;14942:107:0;;;13035:21:1;13092:2;13072:18;;;13065:30;13131:28;13111:18;;;13104:56;13177:18;;14942:107:0;12851:350:1;14942:107:0;15058:6;15065:4;:2;15068:1;15065:4;:::i;:::-;15058:11;;15054:126;15074:10;:17;15071:1;:20;15054:126;;;15128:10;15139:2;15128:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15111:31:0;:10;15122:1;15111:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15111:31:0;;;15103:71;;;;-1:-1:-1;;;15103:71:0;;13408:2:1;15103:71:0;;;13390:21:1;13447:2;13427:18;;;13420:30;13486:29;13466:18;;;13459:57;13533:18;;15103:71:0;13206:351:1;15103:71:0;15093:3;;;;:::i;:::-;;;;15054:126;;;-1:-1:-1;14875:4:0;;;;:::i;:::-;;;;14840:344;;;15188:9;6106:7;15220:17;;15202:15;:35;;;;:::i;:::-;15201:43;;15241:3;15201:43;:::i;:::-;15200:58;;;;:::i;:::-;15188:70;-1:-1:-1;15262:10:0;15285:3;15275:7;15188:70;15279:3;15275:7;:::i;:::-;:13;;;;:::i;:::-;15262:26;;15292:12;15323:3;15315:5;:11;15312:159;;;15380:23;15399:3;15381:12;15392:1;15381:8;:12;:::i;15380:23::-;15342:36;15369:8;15355:6;15360:1;15355;:6;:::i;15342:36::-;:61;;;;:::i;:::-;15332:71;;15312:159;;;15428:24;15448:3;15429:13;:1;15433:9;15429:13;:::i;15428:24::-;:38;;15456:9;15428:38;:::i;:::-;15418:48;;15312:159;15493:1;15483:7;:11;15475:34;;;;-1:-1:-1;;;15475:34:0;;12170:2:1;15475:34:0;;;12152:21:1;12209:2;12189:18;;;12182:30;-1:-1:-1;;;12228:18:1;;;12221:40;12278:18;;15475:34:0;11968:334:1;15475:34:0;15513:17;15534:18;15560:6;15556:690;15572:2;15570:1;:4;15556:690;;;15862:3;:1;15864;15862:3;:::i;:::-;15858:8;;:1;:8;:::i;:::-;15844:10;;:23;;;;:::i;:::-;15841:395;;15899:10;15910:1;15899:13;;;;;;;;:::i;:::-;;;;;;;;;;;15892:46;;-1:-1:-1;;;15892:46:0;;15932:4;15892:46;;;3858:51:1;-1:-1:-1;;;;;15892:31:0;;;;;;3831:18:1;;15892:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15879:59;-1:-1:-1;15947:15:0;;15944:278;;15974:5;15978:1;15974;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;15988:6:0;;;15974:20;15970:182;;;16015:49;16047:16;16016:20;16029:7;16016:10;:20;:::i;16015:49::-;16003:61;;15970:182;;;16096:45;16123:16;16097:20;16110:7;16097:10;:20;:::i;16096:45::-;16084:57;;15970:182;16167:10;16178:1;16167:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16160:30:0;;16191:6;16198:1;16191:9;;;;;;;;:::i;:::-;;;;;;;16202;16160:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;11599:32:1;;;;11581:51;;11663:2;11648:18;;11641:34;11569:2;11554:18;;11407:274;16160:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15944:278;15576:3;;;;:::i;:::-;;;;15556:690;;;-1:-1:-1;;16270:15:0;16250:17;:35;-1:-1:-1;16296:7:0;14109:2201;-1:-1:-1;;;;;;;;;14109:2201:0:o;4427:136::-;4485:7;4512:6;4504:30;;;;-1:-1:-1;;;4504:30:0;;16549:2:1;4504:30:0;;;16531:21:1;16588:2;16568:18;;;16561:30;-1:-1:-1;;;16607:18:1;;;16600:41;16658:18;;4504:30:0;16347:335:1;4504:30:0;4551:5;4555:1;4551;:5;:::i;:::-;4544:12;4427:136;-1:-1:-1;;;4427:136:0:o;4056:138::-;4114:7;4146:1;4141;:6;;4133:32;;;;-1:-1:-1;;;4133:32:0;;16889:2:1;4133:32:0;;;16871:21:1;16928:2;16908:18;;;16901:30;-1:-1:-1;;;16947:18:1;;;16940:43;17000:18;;4133:32:0;16687:337:1;4133:32:0;4182:5;4186:1;4182;:5;:::i;3890:160::-;3948:7;;3979:5;3983:1;3979;:5;:::i;:::-;3967:17;;4007:1;4002;:6;;3994:31;;;;-1:-1:-1;;;3994:31:0;;17231:2:1;3994:31:0;;;17213:21:1;17270:2;17250:18;;;17243:30;-1:-1:-1;;;17289:18:1;;;17282:42;17341:18;;3994:31:0;17029:336:1;16315:1365:0;16565:15;;16548:13;;16531:12;;:31;;:16;:31::i;:::-;:49;:67;;;;;16596:2;16584:9;;:14;16531:67;16527:185;;;16619:9;;:13;;16631:1;16619:13;:::i;:::-;16607:9;:25;;;16670:37;;16692:13;;16704:1;16692:13;:::i;:::-;16688:18;;:1;:18;:::i;:::-;16670:12;;;:16;:37::i;:::-;16655:12;;:52;;;;:::i;:::-;16637:15;:70;16527:185;16884:10;;:17;;16899:1;16884:14;:17::i;:::-;16871:10;:30;16995:24;;:28;;17022:1;;16995:28;:::i;:::-;16980:10;;16979:45;;;;:::i;:::-;16976:651;;17038:15;:13;:15::i;:::-;17091:37;17113:9;;17125:1;17113:13;;;;:::i;17091:37::-;17076:12;;:52;;;;:::i;:::-;17058:15;:70;17151:24;;17138:10;;:37;;17151:24;17138:37;:::i;:::-;17134:489;;17211:15;;;17204:48;;-1:-1:-1;;;17204:48:0;;17246:4;17204:48;;;3858:51:1;;;;17256:14:0;;-1:-1:-1;;;;;17211:15:0;;;;17204:33;;3831:18:1;;17204:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;:::-;17191:9;:81;;;17357:17;;:5;:17;:::i;:::-;17349:25;;:5;:25;:::i;:::-;17334:9;;17290:15;;;17283:48;;-1:-1:-1;;;17283:48:0;;17325:4;17283:48;;;3858:51:1;;;;-1:-1:-1;;;;;17290:15:0;;17283:33;;3831:18:1;;17283:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;;;:::i;:::-;17281:94;17278:313;;17478:9;;17459;;:16;;17473:1;17459:13;:16::i;:::-;:28;17456:82;;;17514:9;;:16;;17528:1;17514:13;:16::i;:::-;17502:9;:28;17456:82;17278:313;;;17567:9;;:17;;17582:1;17567:14;:17::i;:::-;17555:9;:29;17278:313;17596:21;:19;:21::i;:::-;17659:16;17674:1;17659:12;:16;:::i;:::-;17649:27;17631:15;:45;16315:1365::o;3342:131::-;3298:5;;-1:-1:-1;;;;;3298:5:0;3284:10;:19;3276:42;;;;-1:-1:-1;;;3276:42:0;;10517:2:1;3276:42:0;;;10499:21:1;10556:2;10536:18;;;10529:30;-1:-1:-1;;;10575:18:1;;;10568:40;10625:18;;3276:42:0;10315:334:1;3276:42:0;3428:5:::1;::::0;3410:32:::1;::::0;;-1:-1:-1;;;;;3428:5:0;;::::1;17582:34:1::0;;17652:15;;;17647:2;17632:18;;17625:43;3410:32:0::1;::::0;17517:18:1;3410:32:0::1;;;;;;;3452:5;:14:::0;;-1:-1:-1;;;;;;3452:14:0::1;-1:-1:-1::0;;;;;3452:14:0;;;::::1;::::0;;;::::1;::::0;;3342:131::o;4569:224::-;4632:7;4659:6;4651:30;;;;-1:-1:-1;;;4651:30:0;;16549:2:1;4651:30:0;;;16531:21:1;16588:2;16568:18;;;16561:30;-1:-1:-1;;;16607:18:1;;;16600:41;16658:18;;4651:30:0;16347:335:1;4651:30:0;4691:9;4703:5;4707:1;4703;:5;:::i;:::-;4691:17;-1:-1:-1;4722:5:0;4726:1;4722;:5;:::i;:::-;:10;4718:50;;4752:5;:1;4756;4752:5;:::i;:::-;4748:9;4569:224;-1:-1:-1;;;;4569:224:0:o;4200:221::-;4259:7;4282:6;4278:45;;-1:-1:-1;4311:1:0;4304:8;;4278:45;4333:9;4345:5;4349:1;4345;:5;:::i;:::-;4333:17;-1:-1:-1;4377:1:0;4368:5;4372:1;4333:17;4368:5;:::i;:::-;:10;4360:36;;;;-1:-1:-1;;;4360:36:0;;17881:2:1;4360:36:0;;;17863:21:1;17920:2;17900:18;;;17893:30;-1:-1:-1;;;17939:18:1;;;17932:43;17992:18;;4360:36:0;17679:337:1;17684:1379:0;17823:30;;17751:15;;17728:20;;17808:45;;17751:15;17808:45;:::i;:::-;17770:83;;17858:24;17899;;6106:7;17885:38;;;;:::i;:::-;17858:65;;18059:19;18026:30;:52;18022:748;;;18088:21;18112:69;18149:30;18113:29;:19;18138:3;18113:24;:29::i;18112:69::-;18193:1;18186:4;:8;18088:93;-1:-1:-1;18199:27:0;18229:45;18269:4;18229:25;18088:93;18250:3;18229:20;:25::i;:::-;:39;;:45::i;:::-;18199:75;;18315:69;18332:51;18360:22;18332;18349:4;18332:12;;:16;;:22;;;;:::i;:::-;:27;;:51::i;:::-;18315:12;;;:16;:69::i;:::-;18300:12;:84;-1:-1:-1;18022:748:0;;-1:-1:-1;18022:748:0;;18416:23;18442:69;18490:19;18443:40;:30;18479:3;18443:35;:40::i;18442:69::-;18523:1;18516:4;:8;18416:95;-1:-1:-1;18529:29:0;18561:47;18603:4;18561:27;18416:95;18584:3;18561:22;:27::i;:47::-;18529:79;;18676:70;18693:52;18720:24;18693:21;18710:3;18693:12;;:16;;:21;;;;:::i;:52::-;18676:12;;;:16;:70::i;:::-;18661:12;:85;-1:-1:-1;;18022:748:0;18774:30;:45;;;18855:12;18823:29;:44;18889:15;;18874:12;;:30;18871:94;;;18945:15;;18930:12;:30;18871:94;18986:15;;18971:12;;:30;18968:89;;;19037:15;;19022:12;:30;18968:89;17724:1339;;;17684:1379::o;4914:126::-;4976:6;5002:1;4998;:5;4995:18;;;-1:-1:-1;5012:1:0;5005:8;;4995:18;-1:-1:-1;5031:1:0;;4914:126;-1:-1:-1;4914:126:0:o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:248::-;1495:6;1503;1556:2;1544:9;1535:7;1531:23;1527:32;1524:52;;;1572:1;1569;1562:12;1524:52;-1:-1:-1;;1595:23:1;;;1665:2;1650:18;;;1637:32;;-1:-1:-1;1427:248:1:o;1680:127::-;1741:10;1736:3;1732:20;1729:1;1722:31;1772:4;1769:1;1762:15;1796:4;1793:1;1786:15;1812:275;1883:2;1877:9;1948:2;1929:13;;-1:-1:-1;;1925:27:1;1913:40;;1983:18;1968:34;;2004:22;;;1965:62;1962:88;;;2030:18;;:::i;:::-;2066:2;2059:22;1812:275;;-1:-1:-1;1812:275:1:o;2092:718::-;2146:5;2199:3;2192:4;2184:6;2180:17;2176:27;2166:55;;2217:1;2214;2207:12;2166:55;2253:6;2240:20;2279:4;2302:18;2298:2;2295:26;2292:52;;;2324:18;;:::i;:::-;2370:2;2367:1;2363:10;2393:28;2417:2;2413;2409:11;2393:28;:::i;:::-;2455:15;;;2525;;;2521:24;;;2486:12;;;;2557:15;;;2554:35;;;2585:1;2582;2575:12;2554:35;2621:2;2613:6;2609:15;2598:26;;2633:148;2649:6;2644:3;2641:15;2633:148;;;2715:23;2734:3;2715:23;:::i;:::-;2703:36;;2666:12;;;;2759;;;;2633:148;;;2799:5;2092:718;-1:-1:-1;;;;;;;2092:718:1:o;2815:559::-;2926:6;2934;2942;2950;3003:3;2991:9;2982:7;2978:23;2974:33;2971:53;;;3020:1;3017;3010:12;2971:53;3056:9;3043:23;3033:33;;3113:2;3102:9;3098:18;3085:32;3075:42;;3168:2;3157:9;3153:18;3140:32;3195:18;3187:6;3184:30;3181:50;;;3227:1;3224;3217:12;3181:50;3250:61;3303:7;3294:6;3283:9;3279:22;3250:61;:::i;:::-;3240:71;;;3330:38;3364:2;3353:9;3349:18;3330:38;:::i;:::-;3320:48;;2815:559;;;;;;;:::o;3379:328::-;3456:6;3464;3472;3525:2;3513:9;3504:7;3500:23;3496:32;3493:52;;;3541:1;3538;3531:12;3493:52;3564:29;3583:9;3564:29;:::i;:::-;3554:39;;3612:38;3646:2;3635:9;3631:18;3612:38;:::i;:::-;3602:48;;3697:2;3686:9;3682:18;3669:32;3659:42;;3379:328;;;;;:::o;4291:334::-;4368:6;4376;4384;4437:2;4425:9;4416:7;4412:23;4408:32;4405:52;;;4453:1;4450;4443:12;4405:52;4476:29;4495:9;4476:29;:::i;:::-;4466:39;;4524:38;4558:2;4547:9;4543:18;4524:38;:::i;:::-;4514:48;;4581:38;4615:2;4604:9;4600:18;4581:38;:::i;:::-;4571:48;;4291:334;;;;;:::o;4630:186::-;4689:6;4742:2;4730:9;4721:7;4717:23;4713:32;4710:52;;;4758:1;4755;4748:12;4710:52;4781:29;4800:9;4781:29;:::i;4821:385::-;4907:6;4915;4923;4931;4984:3;4972:9;4963:7;4959:23;4955:33;4952:53;;;5001:1;4998;4991:12;4952:53;-1:-1:-1;;5024:23:1;;;5094:2;5079:18;;5066:32;;-1:-1:-1;5145:2:1;5130:18;;5117:32;;5196:2;5181:18;5168:32;;-1:-1:-1;4821:385:1;-1:-1:-1;4821:385:1:o;5211:980::-;5306:6;5314;5322;5330;5383:3;5371:9;5362:7;5358:23;5354:33;5351:53;;;5400:1;5397;5390:12;5351:53;5423:29;5442:9;5423:29;:::i;:::-;5413:39;;5471:2;5520;5509:9;5505:18;5492:32;5482:42;;5543:38;5577:2;5566:9;5562:18;5543:38;:::i;:::-;5533:48;;5632:2;5621:9;5617:18;5604:32;5655:18;5696:2;5688:6;5685:14;5682:34;;;5712:1;5709;5702:12;5682:34;5750:6;5739:9;5735:22;5725:32;;5795:7;5788:4;5784:2;5780:13;5776:27;5766:55;;5817:1;5814;5807:12;5766:55;5853:2;5840:16;5875:2;5871;5868:10;5865:36;;;5881:18;;:::i;:::-;5923:53;5966:2;5947:13;;-1:-1:-1;;5943:27:1;5939:36;;5923:53;:::i;:::-;5910:66;;5999:2;5992:5;5985:17;6039:7;6034:2;6029;6025;6021:11;6017:20;6014:33;6011:53;;;6060:1;6057;6050:12;6011:53;6115:2;6110;6106;6102:11;6097:2;6090:5;6086:14;6073:45;6159:1;6154:2;6149;6142:5;6138:14;6134:23;6127:34;;6180:5;6170:15;;;;;5211:980;;;;;;;:::o;6196:316::-;6273:6;6281;6289;6342:2;6330:9;6321:7;6317:23;6313:32;6310:52;;;6358:1;6355;6348:12;6310:52;-1:-1:-1;;6381:23:1;;;6451:2;6436:18;;6423:32;;-1:-1:-1;6502:2:1;6487:18;;;6474:32;;6196:316;-1:-1:-1;6196:316:1:o;6517:732::-;6653:6;6661;6669;6677;6730:3;6718:9;6709:7;6705:23;6701:33;6698:53;;;6747:1;6744;6737:12;6698:53;6783:9;6770:23;6760:33;;6840:2;6829:9;6825:18;6812:32;6802:42;;6895:2;6884:9;6880:18;6867:32;6918:18;6959:2;6951:6;6948:14;6945:34;;;6975:1;6972;6965:12;6945:34;6998:61;7051:7;7042:6;7031:9;7027:22;6998:61;:::i;:::-;6988:71;;7112:2;7101:9;7097:18;7084:32;7068:48;;7141:2;7131:8;7128:16;7125:36;;;7157:1;7154;7147:12;7125:36;;7180:63;7235:7;7224:8;7213:9;7209:24;7180:63;:::i;:::-;7170:73;;;6517:732;;;;;;;:::o;7254:260::-;7322:6;7330;7383:2;7371:9;7362:7;7358:23;7354:32;7351:52;;;7399:1;7396;7389:12;7351:52;7422:29;7441:9;7422:29;:::i;:::-;7412:39;;7470:38;7504:2;7493:9;7489:18;7470:38;:::i;:::-;7460:48;;7254:260;;;;;:::o;7519:322::-;7596:6;7604;7612;7665:2;7653:9;7644:7;7640:23;7636:32;7633:52;;;7681:1;7678;7671:12;7633:52;7717:9;7704:23;7694:33;;7774:2;7763:9;7759:18;7746:32;7736:42;;7797:38;7831:2;7820:9;7816:18;7797:38;:::i;7846:380::-;7925:1;7921:12;;;;7968;;;7989:61;;8043:4;8035:6;8031:17;8021:27;;7989:61;8096:2;8088:6;8085:14;8065:18;8062:38;8059:161;;;8142:10;8137:3;8133:20;8130:1;8123:31;8177:4;8174:1;8167:15;8205:4;8202:1;8195:15;8059:161;;7846:380;;;:::o;8231:127::-;8292:10;8287:3;8283:20;8280:1;8273:31;8323:4;8320:1;8313:15;8347:4;8344:1;8337:15;8363:128;8403:3;8434:1;8430:6;8427:1;8424:13;8421:39;;;8440:18;;:::i;:::-;-1:-1:-1;8476:9:1;;8363:128::o;8496:127::-;8557:10;8552:3;8548:20;8545:1;8538:31;8588:4;8585:1;8578:15;8612:4;8609:1;8602:15;8628:135;8667:3;-1:-1:-1;;8688:17:1;;8685:43;;;8708:18;;:::i;:::-;-1:-1:-1;8755:1:1;8744:13;;8628:135::o;8768:422::-;8857:1;8900:5;8857:1;8914:270;8935:7;8925:8;8922:21;8914:270;;;8994:4;8990:1;8986:6;8982:17;8976:4;8973:27;8970:53;;;9003:18;;:::i;:::-;9053:7;9043:8;9039:22;9036:55;;;9073:16;;;;9036:55;9152:22;;;;9112:15;;;;8914:270;;;8918:3;8768:422;;;;;:::o;9195:806::-;9244:5;9274:8;9264:80;;-1:-1:-1;9315:1:1;9329:5;;9264:80;9363:4;9353:76;;-1:-1:-1;9400:1:1;9414:5;;9353:76;9445:4;9463:1;9458:59;;;;9531:1;9526:130;;;;9438:218;;9458:59;9488:1;9479:10;;9502:5;;;9526:130;9563:3;9553:8;9550:17;9547:43;;;9570:18;;:::i;:::-;-1:-1:-1;;9626:1:1;9612:16;;9641:5;;9438:218;;9740:2;9730:8;9727:16;9721:3;9715:4;9712:13;9708:36;9702:2;9692:8;9689:16;9684:2;9678:4;9675:12;9671:35;9668:77;9665:159;;;-1:-1:-1;9777:19:1;;;9809:5;;9665:159;9856:34;9881:8;9875:4;9856:34;:::i;:::-;9926:6;9922:1;9918:6;9914:19;9905:7;9902:32;9899:58;;;9937:18;;:::i;:::-;9975:20;;9195:806;-1:-1:-1;;;9195:806:1:o;10006:131::-;10066:5;10095:36;10122:8;10116:4;10095:36;:::i;10142:168::-;10182:7;10248:1;10244;10240:6;10236:14;10233:1;10230:21;10225:1;10218:9;10211:17;10207:45;10204:71;;;10255:18;;:::i;:::-;-1:-1:-1;10295:9:1;;10142:168::o;10654:127::-;10715:10;10710:3;10706:20;10703:1;10696:31;10746:4;10743:1;10736:15;10770:4;10767:1;10760:15;10786:127;10847:10;10842:3;10838:20;10835:1;10828:31;10878:4;10875:1;10868:15;10902:4;10899:1;10892:15;10918:120;10958:1;10984;10974:35;;10989:18;;:::i;:::-;-1:-1:-1;11023:9:1;;10918:120::o;11043:359::-;11228:19;;;11285:2;11281:15;;;;-1:-1:-1;;11277:53:1;11272:2;11263:12;;11256:75;11356:2;11347:12;;11340:28;11393:2;11384:12;;11043:359::o;11686:277::-;11753:6;11806:2;11794:9;11785:7;11781:23;11777:32;11774:52;;;11822:1;11819;11812:12;11774:52;11854:9;11848:16;11907:5;11900:13;11893:21;11886:5;11883:32;11873:60;;11929:1;11926;11919:12;12734:112;12766:1;12792;12782:35;;12797:18;;:::i;:::-;-1:-1:-1;12831:9:1;;12734:112::o;13562:184::-;13632:6;13685:2;13673:9;13664:7;13660:23;13656:32;13653:52;;;13701:1;13698;13691:12;13653:52;-1:-1:-1;13724:16:1;;13562:184;-1:-1:-1;13562:184:1:o;14147:125::-;14187:4;14215:1;14212;14209:8;14206:34;;;14220:18;;:::i;:::-;-1:-1:-1;14257:9:1;;14147:125::o;14277:140::-;14335:5;14364:47;14405:4;14395:8;14391:19;14385:4;14364:47;:::i;14422:410::-;14624:2;14606:21;;;14663:2;14643:18;;;14636:30;14702:34;14697:2;14682:18;;14675:62;-1:-1:-1;;;14768:2:1;14753:18;;14746:44;14822:3;14807:19;;14422:410::o;14837:404::-;15039:2;15021:21;;;15078:2;15058:18;;;15051:30;15117:34;15112:2;15097:18;;15090:62;-1:-1:-1;;;15183:2:1;15168:18;;15161:38;15231:3;15216:19;;14837:404::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    6011,
    24356
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81269A56 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xA68EB88E GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD0856D16 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD0856D16 EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xDDFBD8DD EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xE932012B EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xF7A5F155 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA68EB88E EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xC0ABEBE0 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xC8A1465C EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x94B939EF EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x99F584B3 EQ PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81269A56 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4FA972E1 GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x510DE094 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x64E46726 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x757991A8 EQ PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x45D8A232 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x1FCCB33C EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x2381A60E EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x2F104E0C EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x10294317 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x259F JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x271A JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xB40 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0xAB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2756 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x543 CALLDATASIZE PUSH1 0x4 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x3DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH2 0x5DB CALLDATASIZE PUSH1 0x4 PUSH2 0x27E6 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x466765 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x259F JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x6E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH2 0x12F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x788 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x154C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0x195A JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x29A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FC SWAP1 PUSH2 0x29A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x8AC SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D7 PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH2 0x1F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E9 DUP4 DUP4 CALLER PUSH2 0x154C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x1 PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x919 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x942 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD PUSH2 0x955 SWAP1 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x999 JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x96F JUMPI PUSH2 0x96F PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x991 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x948 JUMP JUMPDEST POP PUSH2 0x9A6 DUP7 DUP7 DUP7 DUP5 PUSH2 0xE02 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x9D6 SWAP1 DUP4 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x19 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0xA0D SWAP1 DUP4 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x18 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xA4B SWAP1 DUP4 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xA9F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D7 PUSH1 0xE SLOAD PUSH1 0x2 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0xAD1 PUSH1 0x12 PUSH1 0xA PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0xADC SWAP1 PUSH1 0x64 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH11 0x115EEC47F6CF7E35000000 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB4E JUMPI PUSH2 0xB4E PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0xE SLOAD PUSH2 0xB71 SWAP1 PUSH2 0xAC5 SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0xB SLOAD PUSH2 0xB91 SWAP1 PUSH1 0x1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0xC SSTORE TIMESTAMP PUSH1 0x7 SSTORE PUSH2 0xBA0 PUSH2 0x201A JUMP JUMPDEST PUSH2 0xBAB PUSH1 0x2 DUP3 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0xBF4 PUSH1 0x2 DUP6 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x11 SSTORE PUSH2 0xC52 PUSH1 0x0 PUSH2 0x226B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC70 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 SHR GT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD4A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD85 SWAP1 DUP4 PUSH2 0x1F80 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDB1 SWAP1 DUP4 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x8AC SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE2A DUP7 DUP7 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x154C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST DUP4 MLOAD PUSH2 0xE76 SWAP1 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST DUP4 MLOAD EQ PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74546F2068617320746F206861766520616E2065787472612061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65737320636F6D706172656420746F20457874726146756E6473000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10AF JUMPI PUSH2 0xF02 DUP2 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0xF0D SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST ISZERO PUSH2 0xF24 JUMPI PUSH2 0x10AF JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI POP PUSH1 0x4 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xF7D JUMPI PUSH2 0xF7D PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEA DUP3 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x109C JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1008 JUMPI PUSH2 0x1008 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x102B JUMPI PUSH2 0x102B PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST DUP1 PUSH2 0x1094 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFED JUMP JUMPDEST POP DUP1 PUSH2 0x10A7 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x129B JUMPI PUSH2 0x10C8 DUP2 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x10D3 SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1289 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x10F6 JUMPI PUSH2 0x10F6 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1146 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x11C4 JUMPI PUSH2 0x117D PUSH1 0x3 DUP3 PUSH2 0x2BDB JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1189 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11AE JUMPI PUSH2 0x11A7 PUSH5 0x3A35294400 PUSH2 0x11A1 DUP8 DUP6 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 PUSH2 0x231B JUMP JUMPDEST SWAP3 POP PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0x11C1 PUSH5 0x3A35294400 PUSH2 0xADC DUP8 DUP6 PUSH2 0x2B32 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI PUSH2 0x11D6 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP4 PUSH1 0x1 PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x120A JUMPI PUSH2 0x120A PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1244 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1293 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B5 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x87E5A7775B8AC2EAD741E32752431BFFEFF76EC5F347CC202A6BAD454653930B SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1D SLOAD TIMESTAMP PUSH2 0x1309 SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x8 SLOAD PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x132B DUP3 DUP5 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH2 0x133F PUSH1 0xE SLOAD PUSH1 0x2 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x0 PUSH2 0x1356 PUSH2 0xB40 PUSH2 0x11A1 DUP5 PUSH2 0x378 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1368 DUP4 PUSH1 0x64 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1372 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x13C4 JUMPI PUSH2 0x1393 PUSH2 0x378 PUSH2 0xADC DUP6 PUSH4 0x26F7F3C PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x13B3 PUSH3 0xC0840 PUSH2 0x13A5 PUSH1 0x2 DUP8 PUSH2 0x2C1F JUMP JUMPDEST PUSH2 0xADC SWAP1 PUSH4 0x3A2CDF0 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x13BD SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x13CB JUMP JUMPDEST POP PUSH4 0x1443FD00 JUMPDEST PUSH1 0x4 PUSH1 0x9 SLOAD PUSH1 0x15 SLOAD PUSH2 0x13DD SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x13E8 SWAP1 PUSH1 0x3C PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145F SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST GT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH2 0x14AE SWAP2 PUSH4 0xBEBC200 SWAP2 SWAP1 PUSH2 0x149A DUP9 DUP14 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151D SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x152C SWAP1 PUSH1 0x1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x1A SSTORE PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1A SSTORE JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x11 SSTORE POP POP TIMESTAMP PUSH1 0x1D SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1566 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 EQ PUSH2 0x159D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT PUSH2 0x15BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2C7C JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2073616D65207365636F6E6420736F6C766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x12 SLOAD TIMESTAMP PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH2 0x162E SWAP1 PUSH2 0x378 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x164A DUP4 PUSH1 0x64 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x1699 JUMPI PUSH2 0x1676 PUSH2 0x378 PUSH2 0xADC DUP6 PUSH4 0x26F7F3C PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1688 PUSH3 0xC0840 PUSH2 0x13A5 PUSH1 0x2 DUP8 PUSH2 0x2C1F JUMP JUMPDEST PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16AD PUSH2 0x378 PUSH2 0xADC DUP6 PUSH4 0x5F5E100 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x16BB SWAP1 PUSH4 0x14DC9380 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x16F6 PUSH2 0x16D7 PUSH4 0x5F5E100 DUP4 PUSH1 0x10 SLOAD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x174C SWAP1 PUSH2 0x172B SWAP1 PUSH4 0xBEBC200 SWAP1 PUSH2 0xADC SWAP1 DUP6 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x10 SLOAD PUSH2 0x178C SWAP1 PUSH2 0x1783 SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0xADC SWAP1 DUP6 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x17 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0x1A SLOAD ISZERO PUSH2 0x18EA JUMPI PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x184A JUMPI PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x17D5 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0x14A4 SWAP1 DUP9 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1820 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1844 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP PUSH2 0x18EA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x1879 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x14A4 SWAP1 PUSH1 0x22 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E8 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D PUSH2 0x192B PUSH4 0x5F5E100 DUP5 PUSH1 0x10 SLOAD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP5 DUP2 EQ PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2C7C JUMP JUMPDEST PUSH2 0x19D4 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP GT PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2073616D65207365636F6E6420736F6C766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST DUP4 MLOAD DUP4 MLOAD EQ PUSH2 0x1A94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74546F2068617320746F20686176652073616D65206E756D626572206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x66206164647265737373657320617320457874726146756E6473000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1AAB DUP2 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1AB6 SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1AC3 SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1C58 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AE9 JUMPI PUSH2 0x1AE9 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B3A JUMPI POP PUSH1 0x4 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1B26 JUMPI PUSH2 0x1B26 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1B86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B93 DUP3 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1C45 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BB1 JUMPI PUSH2 0x1BB1 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BD4 JUMPI PUSH2 0x1BD4 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST DUP1 PUSH2 0x1C3D DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B96 JUMP JUMPDEST POP DUP1 PUSH2 0x1C50 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x12 SLOAD TIMESTAMP PUSH2 0x1C6B SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH2 0x1C77 SWAP1 PUSH2 0x378 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1C81 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1C93 DUP4 PUSH1 0x64 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1C9D SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CBF PUSH2 0x378 PUSH2 0xADC DUP6 PUSH4 0x26F7F3C PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1CD1 PUSH3 0xC0840 PUSH2 0x13A5 PUSH1 0x2 DUP8 PUSH2 0x2C1F JUMP JUMPDEST PUSH2 0x1CDB SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0x1CF6 PUSH2 0x378 PUSH2 0xADC DUP6 PUSH4 0x5F5E100 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1D04 SWAP1 PUSH4 0x14DC9380 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1F1E JUMPI PUSH2 0x1D5D DUP2 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x1D68 SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D75 SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1F0C JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1D8B JUMPI PUSH2 0x1D8B PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DFF SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x1F0C JUMPI PUSH2 0x1E12 PUSH1 0x3 DUP3 PUSH2 0x2BDB JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1E1E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E36 PUSH5 0x3A35294400 PUSH2 0x11A1 DUP7 DUP6 PUSH2 0x2B32 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x1E50 PUSH5 0x3A35294400 PUSH2 0xADC DUP7 DUP6 PUSH2 0x2B32 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP12 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E8D JUMPI PUSH2 0x1E8D PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC7 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F0A SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1F16 DUP2 PUSH2 0x2A27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D4A JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x12 SSTORE POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x1F79 DUP3 DUP5 PUSH2 0x2B7D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x1FC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x53756220756E646572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x1F79 DUP3 DUP5 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1FD9 DUP4 DUP6 PUSH2 0x29F9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1F79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x416464206F766572666C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x17 SLOAD PUSH2 0x202C SWAP2 PUSH2 0x1FCC JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x203B JUMPI POP PUSH1 0x3C PUSH1 0xE SLOAD LT JUMPDEST ISZERO PUSH2 0x2087 JUMPI PUSH1 0xE SLOAD PUSH2 0x204E SWAP1 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH2 0x2076 SWAP1 PUSH2 0x2062 SWAP1 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST PUSH2 0x206D SWAP1 PUSH1 0x2 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2083 SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0xF SSTORE JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2095 SWAP1 PUSH1 0x1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x20A7 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x20B4 SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x225A JUMPI PUSH2 0x20C0 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x20D2 PUSH1 0xE SLOAD PUSH1 0x1 PUSH2 0x2062 SWAP2 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x20F2 SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x225A JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH5 0x2E90EDD000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216C SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0x2176 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x2187 SWAP1 PUSH2 0x2710 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x2193 SWAP1 PUSH2 0x2710 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2203 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST GT PUSH2 0x2240 JUMPI PUSH1 0x16 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2223 SWAP1 PUSH1 0x2 PUSH2 0x1F32 JUMP JUMPDEST GT ISZERO PUSH2 0x223B JUMPI PUSH1 0x15 SLOAD PUSH2 0x2237 SWAP1 PUSH1 0x2 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x224E SWAP1 PUSH1 0x3 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST PUSH2 0x225A PUSH2 0x23ED JUMP JUMPDEST PUSH2 0x2265 PUSH1 0x1 NUMBER PUSH2 0x2C08 JUMP JUMPDEST BLOCKHASH PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2364 DUP4 DUP6 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP PUSH2 0x2370 DUP4 DUP6 PUSH2 0x2BDB JUMP JUMPDEST ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x2380 DUP2 PUSH1 0x1 PUSH2 0x29F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2397 JUMPI POP PUSH1 0x0 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A3 DUP4 DUP6 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x23B0 DUP6 DUP4 PUSH2 0x2B7D JUMP JUMPDEST EQ PUSH2 0x1F79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D756C74206F766572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x23FF SWAP1 DUP4 PUSH2 0x2C08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0xB40 PUSH2 0x2413 SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x2488 JUMPI PUSH1 0x0 PUSH2 0x242E DUP4 PUSH2 0xADC DUP5 PUSH1 0x64 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1B SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x244E PUSH2 0x3E8 PUSH2 0x2448 DUP5 PUSH1 0x64 PUSH2 0x1F80 JUMP JUMPDEST SWAP1 PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH2 0x247D PUSH2 0x2474 DUP3 PUSH2 0x246E PUSH2 0x7D0 PUSH1 0xC SLOAD PUSH2 0x1F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0xC SSTORE POP PUSH2 0x24E2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2499 DUP3 PUSH2 0xADC DUP6 PUSH1 0x64 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1B SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x24B3 PUSH2 0x3E8 PUSH2 0x2448 DUP5 PUSH1 0x64 PUSH2 0x1F80 JUMP JUMPDEST SWAP1 POP PUSH2 0x24DC PUSH2 0x24D3 DUP3 PUSH2 0x246E PUSH2 0x1F4 PUSH1 0xC SLOAD PUSH2 0x1F32 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0xC SSTORE POP POP JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE NUMBER PUSH1 0x1E SSTORE PUSH1 0xA SLOAD PUSH1 0xC SLOAD LT ISZERO PUSH2 0x24FE JUMPI PUSH1 0xA SLOAD PUSH1 0xC SSTORE JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD GT ISZERO PUSH2 0x2511 JUMPI PUSH1 0xB SLOAD PUSH1 0xC SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x2527 JUMPI POP DUP1 PUSH2 0x8B8 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x255B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x253F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x256D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x259A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25BB DUP4 PUSH2 0x2583 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x262A JUMPI PUSH2 0x262A PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x265F JUMPI PUSH2 0x265F PUSH2 0x25EB JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x266E DUP3 DUP3 ADD PUSH2 0x2601 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x2688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x26AE JUMPI PUSH2 0x269F DUP4 PUSH2 0x2583 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x268E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2700 DUP8 DUP3 DUP9 ADD PUSH2 0x2632 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x270F PUSH1 0x60 DUP7 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x272F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2738 DUP5 PUSH2 0x2583 JUMP JUMPDEST SWAP3 POP PUSH2 0x2746 PUSH1 0x20 DUP6 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x276B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2774 DUP5 PUSH2 0x2583 JUMP JUMPDEST SWAP3 POP PUSH2 0x2782 PUSH1 0x20 DUP6 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP2 POP PUSH2 0x2790 PUSH1 0x40 DUP6 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP3 PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2805 DUP6 PUSH2 0x2583 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP1 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x281B PUSH1 0x40 DUP8 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x284C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285E PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x2870 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x2601 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x290E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x291A DUP9 DUP4 DUP10 ADD PUSH2 0x2632 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293D DUP8 DUP3 DUP9 ADD PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x295C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2965 DUP4 PUSH2 0x2583 JUMP JUMPDEST SWAP2 POP PUSH2 0x2973 PUSH1 0x20 DUP5 ADD PUSH2 0x2583 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2790 PUSH1 0x40 DUP6 ADD PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x29BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x29DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0C PUSH2 0x29E3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3B PUSH2 0x29E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2A7D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2A63 JUMPI PUSH2 0x2A63 PUSH2 0x29E3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2A70 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2A47 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A94 JUMPI POP PUSH1 0x1 PUSH2 0x8B8 JUMP JUMPDEST DUP2 PUSH2 0x2AA1 JUMPI POP PUSH1 0x0 PUSH2 0x8B8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2AB7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2AC1 JUMPI PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2AD2 JUMPI PUSH2 0x2AD2 PUSH2 0x29E3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8B8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2B00 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x2B0A DUP4 DUP4 PUSH2 0x2A42 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2B1E JUMPI PUSH2 0x2B1E PUSH2 0x29E3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 DUP4 DUP4 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B4C JUMPI PUSH2 0x2B4C PUSH2 0x29E3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B8C JUMPI PUSH2 0x2B8C PUSH2 0x2B67 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BEA JUMPI PUSH2 0x2BEA PUSH2 0x2B67 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2C1A JUMPI PUSH2 0x2C1A PUSH2 0x29E3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x185B1B195B99D957D91A59D95CDD PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x1B99D5185C99D95D PUSH1 0xC2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 MUL 0xED DUP5 0x24 0xEE PUSH29 0xE6290A8007713B955AA16298F43EE27EAF26384943AD33AD5364736F6C PUSH4 0x4300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "12": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81269A56"
    },
    "25": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA68EB88E"
    },
    "36": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0856D16"
    },
    "47": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0856D16"
    },
    "58": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FC"
    },
    "62": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC6E9CF9"
    },
    "69": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "73": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "84": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDDFBD8DD"
    },
    "91": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76D"
    },
    "95": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE932012B"
    },
    "102": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78D"
    },
    "106": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF7A5F155"
    },
    "113": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A3"
    },
    "117": {
      "fn": null,
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "118": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "120": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "122": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA68EB88E"
    },
    "129": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x665"
    },
    "133": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "140": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67B"
    },
    "144": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB5ADE81B"
    },
    "151": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "155": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC0ABEBE0"
    },
    "162": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "166": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8A1465C"
    },
    "173": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "174": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C6"
    },
    "177": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCB9AE707"
    },
    "184": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "185": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E6"
    },
    "188": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "200": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "201": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "204": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "211": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "212": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A0"
    },
    "215": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "216": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F4FFCB1"
    },
    "222": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "223": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "226": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "227": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x94B939EF"
    },
    "233": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "234": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E0"
    },
    "237": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "244": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "245": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x600"
    },
    "248": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97566AA0"
    },
    "255": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "256": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "259": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "261": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x99F584B3"
    },
    "266": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "267": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64F"
    },
    "270": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81269A56"
    },
    "282": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "283": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x528"
    },
    "286": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x829965CC"
    },
    "293": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "294": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x548"
    },
    "297": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "298": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x87A2A9D6"
    },
    "304": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "305": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55E"
    },
    "308": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8A769D35"
    },
    "315": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "316": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x574"
    },
    "319": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8AE0368B"
    },
    "326": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "327": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58A"
    },
    "330": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "335": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "342": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "343": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8"
    },
    "346": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "347": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4FA972E1"
    },
    "353": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "354": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "357": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4FA972E1"
    },
    "364": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "365": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "368": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x510DE094"
    },
    "375": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x485"
    },
    "379": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x64E46726"
    },
    "386": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A5"
    },
    "390": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "391": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "392": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6DE9F32B"
    },
    "397": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "398": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C7"
    },
    "401": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "408": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "409": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "412": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x757991A8"
    },
    "419": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "420": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x513"
    },
    "423": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "424": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "427": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "428": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "435": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "436": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F3"
    },
    "439": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x32E99708"
    },
    "446": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "447": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "450": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x45D8A232"
    },
    "457": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "458": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F"
    },
    "461": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "462": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x490203A7"
    },
    "468": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "469": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "472": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "474": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4EF37628"
    },
    "479": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "480": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45A"
    },
    "483": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "484": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "486": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "487": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "488": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "489": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "490": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "495": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "GT",
      "path": "0"
    },
    "496": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "499": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "500": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "506": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "507": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "510": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FCCB33C"
    },
    "517": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "518": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "521": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "522": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2381A60E"
    },
    "528": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "529": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36F"
    },
    "532": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "533": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "539": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "540": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "543": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2D38BF7A"
    },
    "550": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "551": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A5"
    },
    "554": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F104E0C"
    },
    "561": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "562": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "565": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "568": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "569": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "570": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "572": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "577": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "578": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "581": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "582": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "588": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "589": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "592": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x10294317"
    },
    "599": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "600": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "603": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "604": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "605": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x17DA485F"
    },
    "610": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "611": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304"
    },
    "614": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "615": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1801FBE5"
    },
    "621": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "EQ",
      "path": "0"
    },
    "622": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "625": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "626": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "630": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "632": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "635": {
      "fn": "Forge.<fallback>",
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "636": {
      "fn": "Forge.<receive>",
      "offset": [
        24293,
        24301
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "638": {
      "fn": "Forge.<receive>",
      "offset": [
        24293,
        24301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "639": {
      "fn": "Forge.<receive>",
      "offset": [
        24293,
        24301
      ],
      "op": "REVERT",
      "path": "0"
    },
    "640": {
      "offset": [
        6011,
        24356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "Forge.<fallback>",
      "offset": [
        24342,
        24350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "645": {
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "647": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "648": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "649": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291"
    },
    "652": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "653": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "656": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "REVERT",
      "path": "0"
    },
    "657": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "658": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "659": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A"
    },
    "662": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "665": {
      "fn": "Forge.<fallback>",
      "jump": "i",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "666": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "667": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "669": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "670": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "673": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "674": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "675": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252E"
    },
    "678": {
      "fn": "Forge.<fallback>",
      "jump": "i",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "679": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "680": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "682": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "683": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "684": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "685": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "SUB",
      "path": "0"
    },
    "686": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "Forge.<fallback>",
      "offset": [
        8010,
        8038
      ],
      "op": "RETURN",
      "path": "0"
    },
    "688": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "690": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "691": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "695": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "696": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "REVERT",
      "path": "0"
    },
    "700": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "705": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CB"
    },
    "708": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "709": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "711": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x259F"
    },
    "714": {
      "fn": "Forge.approve",
      "jump": "i",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "715": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "716": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x851"
    },
    "719": {
      "fn": "Forge.approve",
      "jump": "i",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "720": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "721": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "723": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "724": {
      "op": "SWAP1"
    },
    "725": {
      "op": "ISZERO"
    },
    "726": {
      "op": "ISZERO"
    },
    "727": {
      "op": "DUP2"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "735": {
      "op": "JUMP"
    },
    "736": {
      "offset": [
        7585,
        7634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "738": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "739": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "740": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "743": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "744": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "746": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "747": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "REVERT",
      "path": "0"
    },
    "748": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "749": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "POP",
      "path": "0"
    },
    "750": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "753": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "755": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "756": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "757": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "JUMP",
      "path": "0"
    },
    "758": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "759": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "Forge.approve",
      "offset": [
        7585,
        7634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "op": "SWAP1"
    },
    "763": {
      "op": "DUP2"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "767": {
      "op": "ADD"
    },
    "768": {
      "offset": [
        7585,
        7634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "771": {
      "op": "JUMP"
    },
    "772": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "774": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "775": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "776": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "779": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "780": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "782": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "783": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "REVERT",
      "path": "0"
    },
    "784": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "POP",
      "path": "0"
    },
    "786": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "789": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BE"
    },
    "792": {
      "fn": "Forge.getMiningDifficulty",
      "jump": "i",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "793": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "795": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "796": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "797": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x325"
    },
    "800": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "801": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "803": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "804": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "REVERT",
      "path": "0"
    },
    "805": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "810": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x334"
    },
    "813": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "814": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "816": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C9"
    },
    "819": {
      "fn": "Forge.mint",
      "jump": "i",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "820": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "821": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DC"
    },
    "824": {
      "fn": "Forge.mint",
      "jump": "i",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "825": {
      "offset": [
        6619,
        6683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "826": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "827": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "828": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "829": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "832": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "833": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "835": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "836": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "REVERT",
      "path": "0"
    },
    "837": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "838": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "POP",
      "path": "0"
    },
    "839": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "842": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "844": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "845": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "846": {
      "fn": "Forge.mint",
      "offset": [
        6619,
        6683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "847": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "848": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "849": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "851": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B"
    },
    "854": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "855": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "857": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "858": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "REVERT",
      "path": "0"
    },
    "859": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "864": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "867": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "868": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "870": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B9"
    },
    "873": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "874": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F0"
    },
    "878": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "879": {
      "offset": [
        7495,
        7524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "880": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "881": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "882": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "883": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37B"
    },
    "886": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "887": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "889": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "890": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "REVERT",
      "path": "0"
    },
    "891": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "892": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "POP",
      "path": "0"
    },
    "893": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "896": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "898": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "899": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        7495,
        7524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "903": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "DUP1",
      "path": "0"
    },
    "904": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "905": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x391"
    },
    "908": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "909": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "911": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "DUP1",
      "path": "0"
    },
    "912": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "REVERT",
      "path": "0"
    },
    "913": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "918": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "921": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "922": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "924": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271A"
    },
    "927": {
      "fn": "Forge.transferFrom",
      "jump": "i",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "932": {
      "fn": "Forge.transferFrom",
      "jump": "i",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "933": {
      "offset": [
        7374,
        7399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "934": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "935": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "936": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "937": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "940": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "941": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "943": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "944": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "REVERT",
      "path": "0"
    },
    "945": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "POP",
      "path": "0"
    },
    "947": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "950": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "952": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "953": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "954": {
      "fn": "Forge.transferFrom",
      "offset": [
        7374,
        7399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "955": {
      "offset": [
        6209,
        6239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "956": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "957": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "958": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "959": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C7"
    },
    "962": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "965": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "966": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "REVERT",
      "path": "0"
    },
    "967": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "968": {
      "op": "POP"
    },
    "969": {
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "971": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "972": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "975": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "op": "SUB"
    },
    "984": {
      "offset": [
        6209,
        6239
      ],
      "op": "AND",
      "path": "0"
    },
    "985": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "986": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "987": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "988": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "990": {
      "fn": "Forge.transferFrom",
      "offset": [
        6209,
        6239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "SUB"
    },
    "999": {
      "op": "SWAP1"
    },
    "1000": {
      "op": "SWAP2"
    },
    "1001": {
      "op": "AND"
    },
    "1002": {
      "op": "DUP2"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "offset": [
        6209,
        6239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "1010": {
      "op": "JUMP"
    },
    "1011": {
      "offset": [
        8087,
        8122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1013": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1014": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1015": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1019": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1021": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1022": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1023": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1024": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "POP",
      "path": "0"
    },
    "1025": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1028": {
      "offset": [
        8120,
        8122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1030": {
      "offset": [
        8087,
        8122
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1031": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1032": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1033": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1035": {
      "fn": "Forge.transferFrom",
      "offset": [
        8087,
        8122
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1038": {
      "op": "SWAP1"
    },
    "1039": {
      "op": "SWAP2"
    },
    "1040": {
      "op": "AND"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "offset": [
        8087,
        8122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "1049": {
      "op": "JUMP"
    },
    "1050": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1051": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1052": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1053": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1054": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x426"
    },
    "1057": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1058": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1060": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1061": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1062": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        20017,
        20029
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xC"
    },
    "1066": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        20017,
        20029
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1067": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1070": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        19951,
        20034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1071": {
      "offset": [
        6072,
        6113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1072": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1073": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1074": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1075": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43B"
    },
    "1078": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1079": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1081": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1082": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1083": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1084": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "POP",
      "path": "0"
    },
    "1085": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1088": {
      "offset": [
        6106,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "1091": {
      "offset": [
        6072,
        6113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1092": {
      "fn": "Forge.getMiningTarget",
      "offset": [
        6072,
        6113
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1093": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1094": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1095": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1096": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1097": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x451"
    },
    "1100": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1101": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1103": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1104": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1105": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1106": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "POP",
      "path": "0"
    },
    "1107": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1110": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB1"
    },
    "1113": {
      "fn": "Forge.getMiningReward",
      "jump": "i",
      "offset": [
        20226,
        20457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1114": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1115": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1116": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1117": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1118": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x466"
    },
    "1121": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1122": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1124": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1125": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1126": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19737,
        19752
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0xD"
    },
    "1130": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19737,
        19752
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1131": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1134": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        19665,
        19757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1135": {
      "offset": [
        7405,
        7489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1136": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1137": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1138": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1139": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1142": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1143": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1145": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1146": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1147": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1148": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "POP",
      "path": "0"
    },
    "1149": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1152": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1154": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1155": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1156": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        7405,
        7489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1157": {
      "offset": [
        6245,
        6275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1158": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1159": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1160": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1161": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x491"
    },
    "1164": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1165": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1167": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1168": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1169": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "offset": [
        6245,
        6275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1173": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1174": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "1177": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "offset": [
        6245,
        6275
      ],
      "op": "AND",
      "path": "0"
    },
    "1187": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1188": {
      "fn": "Forge.getChallengeNumber",
      "offset": [
        6245,
        6275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1189": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1190": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1191": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1192": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1193": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1197": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1199": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1200": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1201": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "1206": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C0"
    },
    "1209": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1210": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1212": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2756"
    },
    "1215": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1216": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1217": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE2"
    },
    "1220": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1221": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1222": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "STOP",
      "path": "0"
    },
    "1223": {
      "offset": [
        7824,
        7848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1224": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1225": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1227": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D3"
    },
    "1230": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1231": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1233": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1234": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1235": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1236": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "POP",
      "path": "0"
    },
    "1237": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1240": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "1242": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1243": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1244": {
      "fn": "Forge.zinit",
      "offset": [
        7824,
        7848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1247": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1248": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1249": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E9"
    },
    "1252": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1253": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1255": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1256": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1257": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1262": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "1265": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1266": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1268": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2799"
    },
    "1271": {
      "fn": "Forge.balanceOf",
      "jump": "i",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1272": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "AND",
      "path": "0",
      "statement": 4
    },
    "1282": {
      "fn": "Forge.balanceOf",
      "offset": [
        21094,
        21106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1284": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1285": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1286": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1287": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1289": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1291": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1294": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1296": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1297": {
      "fn": "Forge.balanceOf",
      "offset": [
        21120,
        21140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1298": {
      "fn": "Forge.balanceOf",
      "offset": [
        21025,
        21145
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1299": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1300": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1301": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1302": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1303": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51F"
    },
    "1306": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1307": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1309": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1310": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1311": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "fn": "Forge.getEpoch",
      "offset": [
        20520,
        20530
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x8"
    },
    "1315": {
      "fn": "Forge.getEpoch",
      "offset": [
        20520,
        20530
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1316": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1319": {
      "fn": "Forge.getEpoch",
      "offset": [
        20461,
        20536
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1320": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1321": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1322": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1323": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1324": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x534"
    },
    "1327": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1328": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1330": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1331": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1332": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "1337": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "1340": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1341": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1343": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B4"
    },
    "1346": {
      "fn": "Forge.checkMintSolution",
      "jump": "i",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1347": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1348": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC58"
    },
    "1351": {
      "fn": "Forge.checkMintSolution",
      "jump": "i",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1352": {
      "offset": [
        6905,
        6931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1353": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1354": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1355": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1356": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x554"
    },
    "1359": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1360": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1362": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1363": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1364": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1365": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "POP",
      "path": "0"
    },
    "1366": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1369": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1371": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1372": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1373": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        6905,
        6931
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1374": {
      "offset": [
        7082,
        7119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1375": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1376": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1377": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1378": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1381": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1382": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1384": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1385": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1386": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1387": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "POP",
      "path": "0"
    },
    "1388": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1391": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1393": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1394": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1395": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7082,
        7119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1396": {
      "offset": [
        7125,
        7188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1397": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1398": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1400": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "1403": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1404": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1406": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1407": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1408": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1409": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "POP",
      "path": "0"
    },
    "1410": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1413": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1415": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1416": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7125,
        7188
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1418": {
      "offset": [
        7257,
        7317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1419": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1420": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1422": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1425": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1426": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1428": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1429": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1430": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "POP",
      "path": "0"
    },
    "1432": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1435": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1437": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1438": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1439": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        7257,
        7317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1440": {
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1441": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1442": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1443": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1444": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AC"
    },
    "1447": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1448": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1450": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1451": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1452": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1456": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1457": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "1460": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "offset": [
        3042,
        3062
      ],
      "op": "AND",
      "path": "0"
    },
    "1470": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1471": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        3042,
        3062
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1472": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1474": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1475": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1476": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CC"
    },
    "1479": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1480": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1482": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1484": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1485": {
      "op": "POP"
    },
    "1486": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "1489": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DB"
    },
    "1492": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1493": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1495": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E6"
    },
    "1498": {
      "fn": "Forge.receiveApproval",
      "jump": "i",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1499": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1500": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA3"
    },
    "1503": {
      "fn": "Forge.receiveApproval",
      "jump": "i",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1504": {
      "offset": [
        6174,
        6203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1505": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1506": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1507": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1508": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1512": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1514": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1515": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1516": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1517": {
      "op": "POP"
    },
    "1518": {
      "offset": [
        6174,
        6203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1520": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1521": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DB"
    },
    "1524": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        6174,
        6203
      ],
      "op": "AND",
      "path": "0"
    },
    "1534": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1535": {
      "fn": "Forge.receiveApproval",
      "offset": [
        6174,
        6203
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1536": {
      "offset": [
        8044,
        8081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1537": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1538": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1539": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1540": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1543": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1544": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1546": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1547": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1548": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1549": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "POP",
      "path": "0"
    },
    "1550": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A"
    },
    "1553": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1555": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1556": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1557": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1559": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1562": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1563": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1564": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1566": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1567": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1568": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1570": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "ADD",
      "path": "0"
    },
    "1571": {
      "op": "PUSH3",
      "value": "0x466765"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "offset": [
        8044,
        8081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1579": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1580": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "POP",
      "path": "0"
    },
    "1581": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1582": {
      "fn": "Forge.receiveApproval",
      "offset": [
        8044,
        8081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1583": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1584": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1585": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1586": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1587": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "1590": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1591": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1593": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1594": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1595": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1600": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1603": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1604": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1606": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A6"
    },
    "1609": {
      "fn": "Forge.getMintDigest",
      "jump": "i",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1610": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1611": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "1614": {
      "fn": "Forge.getMintDigest",
      "jump": "i",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1615": {
      "offset": [
        6119,
        6144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1616": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1617": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1618": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1619": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65B"
    },
    "1622": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1623": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1625": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1626": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1627": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1628": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "POP",
      "path": "0"
    },
    "1629": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1632": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1634": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1635": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1636": {
      "fn": "Forge.getMintDigest",
      "offset": [
        6119,
        6144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1637": {
      "offset": [
        7732,
        7772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1638": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1639": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1640": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1641": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x671"
    },
    "1644": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1645": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1647": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1648": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1649": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1650": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "POP",
      "path": "0"
    },
    "1651": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1654": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "1656": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1657": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1658": {
      "fn": "Forge.getMintDigest",
      "offset": [
        7732,
        7772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1659": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1660": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1661": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1662": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1663": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1666": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1667": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1669": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1670": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1671": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "1676": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x696"
    },
    "1679": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1680": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1682": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x259F"
    },
    "1685": {
      "fn": "Forge.transfer",
      "jump": "i",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1686": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1687": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6B"
    },
    "1690": {
      "fn": "Forge.transfer",
      "jump": "i",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1691": {
      "offset": [
        6964,
        7006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1693": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1694": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1695": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1698": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1699": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1701": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1702": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1703": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "POP",
      "path": "0"
    },
    "1705": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1708": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1710": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1711": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1712": {
      "fn": "Forge.transfer",
      "offset": [
        6964,
        7006
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1713": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1714": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1715": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1716": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1717": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1720": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1721": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1723": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1724": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1725": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20104,
        20116
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x17"
    },
    "1729": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20104,
        20116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1730": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1733": {
      "fn": "Forge.getMiningMinted",
      "offset": [
        20038,
        20121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1734": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1735": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1736": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1737": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1738": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D2"
    },
    "1741": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1742": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1744": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1745": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1746": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1751": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E1"
    },
    "1754": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1755": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1757": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D2"
    },
    "1760": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1761": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1762": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE02"
    },
    "1765": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1766": {
      "offset": [
        8168,
        8224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1767": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1768": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1769": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1770": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1774": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1776": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1777": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1778": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1779": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "POP",
      "path": "0"
    },
    "1780": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1783": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "1785": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1786": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1787": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        8168,
        8224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1788": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1789": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1790": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1791": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1792": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1795": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1796": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1798": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1799": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1800": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "POP",
      "path": "0"
    },
    "1802": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "1805": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F9"
    },
    "1808": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1809": {
      "offset": [
        7035,
        7071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1810": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1811": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1812": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1813": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71D"
    },
    "1816": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1817": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1819": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1820": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1821": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1822": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "POP",
      "path": "0"
    },
    "1823": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1826": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1828": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1829": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1830": {
      "fn": "Forge.ARewardSender",
      "offset": [
        7035,
        7071
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1831": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1833": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1834": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1835": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "1838": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1839": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1841": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1842": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1843": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1848": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x742"
    },
    "1851": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1852": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1854": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2949"
    },
    "1857": {
      "fn": "Forge.allowance",
      "jump": "i",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1858": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 7
    },
    "1868": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1869": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "AND",
      "path": "0"
    },
    "1870": {
      "fn": "Forge.allowance",
      "offset": [
        23618,
        23632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1872": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1873": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1874": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1875": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "1877": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1879": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1880": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1882": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1884": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1885": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1886": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23665
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1887": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1888": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1890": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "AND",
      "path": "0"
    },
    "1891": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1892": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1893": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1894": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1895": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1896": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1897": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1898": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1899": {
      "fn": "Forge.allowance",
      "offset": [
        23646,
        23674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1900": {
      "fn": "Forge.allowance",
      "offset": [
        23532,
        23679
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1901": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1902": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1903": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1904": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1905": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x779"
    },
    "1908": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1909": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1911": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1912": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1913": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1918": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1921": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1922": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1924": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297C"
    },
    "1927": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1928": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1929": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154C"
    },
    "1932": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1933": {
      "offset": [
        6839,
        6899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1934": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1935": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1936": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1937": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x799"
    },
    "1940": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1941": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1943": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1944": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1945": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "POP",
      "path": "0"
    },
    "1947": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1950": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1952": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1953": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1954": {
      "fn": "Forge.mintTo",
      "offset": [
        6839,
        6899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1955": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1956": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1957": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1958": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1959": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "1962": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1963": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1965": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1966": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1967": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1972": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1975": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1976": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1978": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D2"
    },
    "1981": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195A"
    },
    "1986": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1987": {
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1988": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "1990": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1991": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1992": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "1995": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1996": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A8"
    },
    "1999": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2000": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2001": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2002": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2004": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2005": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2007": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2008": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2009": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DIV",
      "path": "0"
    },
    "2010": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MUL",
      "path": "0"
    },
    "2011": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2013": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2014": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2016": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2017": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2018": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2019": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2020": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2022": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2023": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2024": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2025": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2026": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2027": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2028": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2029": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2030": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2032": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2033": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2034": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2035": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2036": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FC"
    },
    "2039": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A8"
    },
    "2043": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2044": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2045": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2046": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2047": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x849"
    },
    "2050": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2051": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2052": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2054": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "LT",
      "path": "0"
    },
    "2055": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81E"
    },
    "2058": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2059": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2062": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2064": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2065": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DIV",
      "path": "0"
    },
    "2066": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MUL",
      "path": "0"
    },
    "2067": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2068": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2069": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2070": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2072": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2073": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2074": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x849"
    },
    "2077": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2078": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2079": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2080": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2081": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2082": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2083": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2085": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2086": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2088": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2090": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2091": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2092": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2093": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2094": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2095": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2096": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2097": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2098": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2100": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2101": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2102": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2104": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2105": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2106": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2107": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "GT",
      "path": "0"
    },
    "2108": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "2111": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2112": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2113": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SUB",
      "path": "0"
    },
    "2115": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2117": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "AND",
      "path": "0"
    },
    "2118": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2119": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "2120": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2121": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2122": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "2123": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "2124": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "2125": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "2126": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "POP",
      "path": "0"
    },
    "2127": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        8010,
        8038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2128": {
      "fn": "Forge.empty_mintTo",
      "jump": "o",
      "offset": [
        8010,
        8038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2129": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2130": {
      "fn": "Forge.approve",
      "offset": [
        22323,
        22333
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "2131": {
      "fn": "Forge.approve",
      "offset": [
        22296,
        22308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2133": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2134": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2135": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2136": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "2138": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2140": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2141": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2142": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2143": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2145": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2146": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2147": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22334
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2157": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "AND",
      "path": "0"
    },
    "2158": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2159": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2160": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2161": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2162": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2164": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2165": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2166": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22352
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2167": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2168": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22352
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2169": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 9
    },
    "2170": {
      "fn": "Forge.approve",
      "offset": [
        22296,
        22308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2171": {
      "fn": "Forge.approve",
      "offset": [
        22296,
        22308
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2172": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2173": {
      "fn": "Forge.approve",
      "offset": [
        22315,
        22343
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2174": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2207": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2208": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2211": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2212": {
      "fn": "Forge.approve",
      "offset": [
        22346,
        22352
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2213": {
      "op": "DUP2"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "op": "SWAP1"
    },
    "2219": {
      "op": "JUMP"
    },
    "2220": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2221": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2223": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2224": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2225": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2226": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "SUB",
      "path": "0"
    },
    "2227": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2228": {
      "fn": "Forge.approve",
      "offset": [
        22362,
        22399
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "fn": "Forge.approve",
      "offset": [
        22411,
        22415
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "2232": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2233": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2234": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2235": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "POP",
      "path": "0"
    },
    "2236": {
      "fn": "Forge.approve",
      "offset": [
        22224,
        22420
      ],
      "op": "POP",
      "path": "0"
    },
    "2237": {
      "fn": "Forge.approve",
      "jump": "o",
      "offset": [
        22224,
        22420
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2238": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2239": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19892,
        19896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2241": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x8D7"
    },
    "2244": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19930,
        19942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2246": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19930,
        19942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2247": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2249": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19925
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2250": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "2253": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2254": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2255": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2256": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2261": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "AND",
      "path": "0"
    },
    "2262": {
      "fn": "Forge.getMiningDifficulty",
      "jump": "i",
      "offset": [
        19910,
        19943
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2263": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19910,
        19943
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2264": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19903,
        19943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2265": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19903,
        19943
      ],
      "op": "POP",
      "path": "0"
    },
    "2266": {
      "fn": "Forge.getMiningDifficulty",
      "offset": [
        19840,
        19947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2267": {
      "fn": "Forge.getMiningDifficulty",
      "jump": "o",
      "offset": [
        19840,
        19947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2268": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2269": {
      "fn": "Forge.mint",
      "offset": [
        10486,
        10498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2271": {
      "fn": "Forge.mint",
      "offset": [
        10504,
        10547
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x8E9"
    },
    "2274": {
      "fn": "Forge.mint",
      "offset": [
        10511,
        10516
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2275": {
      "fn": "Forge.mint",
      "offset": [
        10518,
        10534
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2276": {
      "fn": "Forge.mint",
      "offset": [
        10536,
        10546
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2277": {
      "fn": "Forge.mint",
      "offset": [
        10504,
        10510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154C"
    },
    "2280": {
      "fn": "Forge.mint",
      "jump": "i",
      "offset": [
        10504,
        10547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2281": {
      "fn": "Forge.mint",
      "offset": [
        10504,
        10547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2282": {
      "fn": "Forge.mint",
      "offset": [
        10504,
        10547
      ],
      "op": "POP",
      "path": "0"
    },
    "2283": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2284": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2285": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "POP",
      "path": "0"
    },
    "2286": {
      "fn": "Forge.mint",
      "offset": [
        10415,
        10551
      ],
      "op": "POP",
      "path": "0"
    },
    "2287": {
      "fn": "Forge.mint",
      "jump": "o",
      "offset": [
        10415,
        10551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2288": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2289": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13866,
        13878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2291": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13884,
        13903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2292": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13930
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2293": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13937
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2294": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13940,
        13941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2296": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x901"
    },
    "2299": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2300": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2301": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "2304": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13920,
        13941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2305": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13920,
        13941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2306": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2315": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2316": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "GT",
      "path": "0"
    },
    "2317": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2318": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x919"
    },
    "2321": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2322": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x919"
    },
    "2325": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25EB"
    },
    "2328": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13906,
        13942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2329": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2330": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2332": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2333": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2334": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2335": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2336": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2337": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2338": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2340": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "MUL",
      "path": "0"
    },
    "2341": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2343": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ADD",
      "path": "0"
    },
    "2344": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2345": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ADD",
      "path": "0"
    },
    "2346": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2348": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2349": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2350": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2351": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x942"
    },
    "2354": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2355": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2356": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2358": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ADD",
      "path": "0"
    },
    "2359": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2361": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2362": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "MUL",
      "path": "0"
    },
    "2363": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2364": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2365": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2366": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2367": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "ADD",
      "path": "0"
    },
    "2368": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2371": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13906,
        13942
      ],
      "op": "POP",
      "path": "0"
    },
    "2372": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13884,
        13942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2373": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13884,
        13942
      ],
      "op": "POP",
      "path": "0"
    },
    "2374": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13952,
        13958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2376": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2377": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13983
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2378": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2379": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2382": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13987
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2383": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13986,
        13987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2385": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "2388": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13966,
        13987
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2389": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13966,
        13987
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13962,
        13963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2391": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13962,
        13988
      ],
      "op": "LT",
      "path": "0"
    },
    "2392": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2393": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x999"
    },
    "2396": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2397": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14010,
        14016
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "2398": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2399": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14005,
        14006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2400": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2401": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2402": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2403": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "LT",
      "path": "0"
    },
    "2404": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96F"
    },
    "2407": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2408": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96F"
    },
    "2411": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "2414": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14002,
        14007
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2415": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2425": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14016
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2426": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14016
      ],
      "op": "AND",
      "path": "0"
    },
    "2427": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2429": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2430": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2431": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "MUL",
      "path": "0"
    },
    "2432": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2433": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2434": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2435": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "ADD",
      "path": "0"
    },
    "2436": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2437": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2438": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14007
      ],
      "op": "ADD",
      "path": "0"
    },
    "2439": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14002,
        14016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2440": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "2441": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x991"
    },
    "2444": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "2448": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        13990,
        13993
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2449": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2451": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "POP",
      "path": "0"
    },
    "2452": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13990,
        13993
      ],
      "op": "POP",
      "path": "0"
    },
    "2453": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x948"
    },
    "2456": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2457": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2458": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13948,
        14021
      ],
      "op": "POP",
      "path": "0"
    },
    "2459": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14027,
        14085
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x9A6"
    },
    "2462": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14045,
        14050
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2463": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14052,
        14068
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2464": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14070,
        14080
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2465": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14082,
        14084
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2466": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14027,
        14044
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE02"
    },
    "2469": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14027,
        14085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2470": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14027,
        14085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14097,
        14101
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "2474": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        14097,
        14101
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2475": {
      "fn": "Forge.mintTokensSameAddress",
      "offset": [
        13733,
        14105
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "fn": "Forge.mintTokensSameAddress",
      "jump": "o",
      "offset": [
        13733,
        14105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2483": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "SUB"
    },
    "2492": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 17
    },
    "2493": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "AND",
      "path": "0"
    },
    "2494": {
      "fn": "Forge.transferFrom",
      "offset": [
        23026,
        23038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2496": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2497": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2498": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2499": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2501": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2503": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2504": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2506": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2507": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2508": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23076
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2509": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D6"
    },
    "2512": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2513": {
      "fn": "Forge.transferFrom",
      "offset": [
        23081,
        23087
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2514": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "2517": {
      "fn": "Forge.transferFrom",
      "jump": "i",
      "offset": [
        23062,
        23088
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2518": {
      "fn": "Forge.transferFrom",
      "offset": [
        23062,
        23088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2525": {
      "op": "SHL"
    },
    "2526": {
      "op": "SUB"
    },
    "2527": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2528": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "AND",
      "path": "0"
    },
    "2529": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2531": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2532": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2533": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2534": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2536": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2538": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2539": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2540": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2541": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2543": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2544": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2545": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23059
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2546": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23088
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2547": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2548": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23088
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2549": {
      "fn": "Forge.transferFrom",
      "offset": [
        23045,
        23088
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2550": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23127
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x19"
    },
    "2552": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2553": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2554": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2555": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2556": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23133
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2557": {
      "fn": "Forge.transferFrom",
      "offset": [
        23134,
        23144
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2558": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2559": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2560": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2561": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2562": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2563": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23145
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2564": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0D"
    },
    "2567": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2568": {
      "fn": "Forge.transferFrom",
      "offset": [
        23150,
        23156
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2569": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "2572": {
      "fn": "Forge.transferFrom",
      "jump": "i",
      "offset": [
        23120,
        23157
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2573": {
      "fn": "Forge.transferFrom",
      "offset": [
        23120,
        23157
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2583": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2584": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "AND",
      "path": "0"
    },
    "2585": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2587": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2588": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2589": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2590": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "2592": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2594": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2595": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2596": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2597": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2599": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2600": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2601": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23105
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2602": {
      "fn": "Forge.transferFrom",
      "offset": [
        23106,
        23116
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2603": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2604": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2605": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2606": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2607": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2608": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2609": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23117
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2610": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23157
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2611": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23157
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2613": {
      "fn": "Forge.transferFrom",
      "offset": [
        23092,
        23157
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2614": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 19
    },
    "2615": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2616": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "AND",
      "path": "0"
    },
    "2617": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2618": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2619": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2621": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2622": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2623": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2624": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2625": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23188
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2626": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4B"
    },
    "2629": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2630": {
      "fn": "Forge.transferFrom",
      "offset": [
        23193,
        23199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2631": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "2634": {
      "fn": "Forge.transferFrom",
      "jump": "i",
      "offset": [
        23176,
        23200
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2635": {
      "fn": "Forge.transferFrom",
      "offset": [
        23176,
        23200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2645": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2646": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "AND",
      "path": "0"
    },
    "2647": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2649": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2650": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2651": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2652": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2654": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2656": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2657": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2659": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2660": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2661": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2662": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23173
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2663": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2664": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2665": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2666": {
      "fn": "Forge.transferFrom",
      "offset": [
        23161,
        23200
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2667": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 20
    },
    "2668": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2669": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2670": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2671": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "AND",
      "path": "0"
    },
    "2672": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2673": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2706": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "2710": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2711": {
      "fn": "Forge.transferFrom",
      "offset": [
        23229,
        23235
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2712": {
      "op": "DUP2"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "op": "SWAP1"
    },
    "2718": {
      "op": "JUMP"
    },
    "2719": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2720": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2722": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2723": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2724": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2725": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SUB",
      "path": "0"
    },
    "2726": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2727": {
      "fn": "Forge.transferFrom",
      "offset": [
        23210,
        23236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "fn": "Forge.transferFrom",
      "offset": [
        23248,
        23252
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "2731": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2732": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2733": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "POP",
      "path": "0"
    },
    "2734": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "POP",
      "path": "0"
    },
    "2735": {
      "fn": "Forge.transferFrom",
      "offset": [
        22940,
        23257
      ],
      "op": "POP",
      "path": "0"
    },
    "2736": {
      "fn": "Forge.transferFrom",
      "jump": "o",
      "offset": [
        22940,
        23257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2737": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20226,
        20457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2738": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20274,
        20278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2740": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20403,
        20450
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x8D7"
    },
    "2743": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20439,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2745": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20439,
        20448
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2746": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2748": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2751": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2752": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2753": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "2756": {
      "fn": "Forge.getMiningReward",
      "jump": "i",
      "offset": [
        20436,
        20448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2757": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20436,
        20448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2758": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20410,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD1"
    },
    "2761": {
      "offset": [
        8120,
        8122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2763": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20410,
        20412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2765": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20410,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "2768": {
      "fn": "Forge.getMiningReward",
      "jump": "i",
      "offset": [
        20410,
        20428
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2769": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20410,
        20428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2770": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20404,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "2773": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20404,
        20428
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2774": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20404,
        20407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2776": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20404,
        20428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "2779": {
      "fn": "Forge.getMiningReward",
      "jump": "i",
      "offset": [
        20404,
        20428
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2780": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20404,
        20428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2781": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20403,
        20434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2782": {
      "fn": "Forge.getMiningReward",
      "offset": [
        20403,
        20434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "2785": {
      "fn": "Forge.getMiningReward",
      "jump": "i",
      "offset": [
        20403,
        20450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2786": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2787": {
      "offset": [
        3298,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2789": {
      "fn": "Forge.zinit",
      "offset": [
        3298,
        3303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "op": "SUB"
    },
    "2798": {
      "offset": [
        3298,
        3303
      ],
      "op": "AND",
      "path": "0"
    },
    "2799": {
      "offset": [
        3284,
        3294
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2800": {
      "offset": [
        3284,
        3303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2801": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2804": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2805": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2807": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2814": {
      "op": "SHL"
    },
    "2815": {
      "offset": [
        3276,
        3318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2816": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2819": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2821": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2822": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "ADD",
      "path": "0"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2828": {
      "op": "DUP3"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2854": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2856": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2857": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2858": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2859": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SUB",
      "path": "0"
    },
    "2860": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2861": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2862": {
      "fn": "Forge.zinit",
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2863": {
      "fn": "Forge.zinit",
      "offset": [
        8628,
        8635
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x1F"
    },
    "2865": {
      "fn": "Forge.zinit",
      "offset": [
        8628,
        8635
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2866": {
      "fn": "Forge.zinit",
      "offset": [
        8557,
        8583
      ],
      "op": "PUSH11",
      "path": "0",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "2878": {
      "fn": "Forge.zinit",
      "offset": [
        8557,
        8583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2879": {
      "fn": "Forge.zinit",
      "offset": [
        8628,
        8635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2881": {
      "fn": "Forge.zinit",
      "offset": [
        8628,
        8635
      ],
      "op": "AND",
      "path": "0"
    },
    "2882": {
      "fn": "Forge.zinit",
      "offset": [
        8627,
        8635
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2883": {
      "fn": "Forge.zinit",
      "offset": [
        8620,
        8636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4E"
    },
    "2886": {
      "fn": "Forge.zinit",
      "offset": [
        8620,
        8636
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2887": {
      "fn": "Forge.zinit",
      "offset": [
        8620,
        8636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4E"
    },
    "2890": {
      "fn": "Forge.zinit",
      "offset": [
        8620,
        8636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B51"
    },
    "2893": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8620,
        8636
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2894": {
      "fn": "Forge.zinit",
      "offset": [
        8620,
        8636
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2895": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8653
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1F"
    },
    "2897": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2898": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2901": {
      "op": "NOT"
    },
    "2902": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "AND",
      "path": "0"
    },
    "2903": {
      "fn": "Forge.zinit",
      "offset": [
        8656,
        8660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2905": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "OR",
      "path": "0"
    },
    "2906": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2907": {
      "fn": "Forge.zinit",
      "offset": [
        8646,
        8660
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2908": {
      "fn": "Forge.zinit",
      "offset": [
        8687,
        8702
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 25
    },
    "2909": {
      "fn": "Forge.zinit",
      "offset": [
        8667,
        8684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2911": {
      "fn": "Forge.zinit",
      "offset": [
        8667,
        8702
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2912": {
      "fn": "Forge.zinit",
      "offset": [
        8761,
        8770
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0xE"
    },
    "2914": {
      "fn": "Forge.zinit",
      "offset": [
        8761,
        8770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2915": {
      "fn": "Forge.zinit",
      "offset": [
        8725,
        8772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB71"
    },
    "2918": {
      "fn": "Forge.zinit",
      "offset": [
        8725,
        8772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2919": {
      "fn": "Forge.zinit",
      "offset": [
        8758,
        8770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2922": {
      "fn": "Forge.zinit",
      "offset": [
        8758,
        8770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2923": {
      "fn": "Forge.zinit",
      "offset": [
        8758,
        8759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2925": {
      "fn": "Forge.zinit",
      "offset": [
        8758,
        8770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "2928": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8758,
        8770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2929": {
      "fn": "Forge.zinit",
      "offset": [
        8725,
        8772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2930": {
      "fn": "Forge.zinit",
      "offset": [
        8709,
        8722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2932": {
      "fn": "Forge.zinit",
      "offset": [
        8709,
        8772
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2933": {
      "fn": "Forge.zinit",
      "offset": [
        8791,
        8792
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x0"
    },
    "2935": {
      "fn": "Forge.zinit",
      "offset": [
        8779,
        8788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2937": {
      "fn": "Forge.zinit",
      "offset": [
        8779,
        8792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2938": {
      "fn": "Forge.zinit",
      "offset": [
        8779,
        8792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2939": {
      "fn": "Forge.zinit",
      "offset": [
        8779,
        8792
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2940": {
      "fn": "Forge.zinit",
      "offset": [
        8799,
        8811
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x17"
    },
    "2942": {
      "fn": "Forge.zinit",
      "offset": [
        8799,
        8815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2943": {
      "fn": "Forge.zinit",
      "offset": [
        8799,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2944": {
      "fn": "Forge.zinit",
      "offset": [
        8799,
        8815
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2945": {
      "fn": "Forge.zinit",
      "offset": [
        8822,
        8832
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x8"
    },
    "2947": {
      "fn": "Forge.zinit",
      "offset": [
        8822,
        8836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2948": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8873
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0xB"
    },
    "2950": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2951": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB91"
    },
    "2954": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2955": {
      "fn": "Forge.zinit",
      "offset": [
        8878,
        8879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2957": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "2960": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8858,
        8880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2961": {
      "fn": "Forge.zinit",
      "offset": [
        8858,
        8880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2962": {
      "fn": "Forge.zinit",
      "offset": [
        8843,
        8855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "2964": {
      "fn": "Forge.zinit",
      "offset": [
        8843,
        8880
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2965": {
      "fn": "Forge.zinit",
      "offset": [
        8966,
        8981
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 31
    },
    "2966": {
      "fn": "Forge.zinit",
      "offset": [
        8933,
        8963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2968": {
      "fn": "Forge.zinit",
      "offset": [
        8933,
        8981
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2969": {
      "fn": "Forge.zinit",
      "offset": [
        8988,
        9010
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xBA0"
    },
    "2972": {
      "fn": "Forge.zinit",
      "offset": [
        8988,
        9008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201A"
    },
    "2975": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        8988,
        9010
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2976": {
      "fn": "Forge.zinit",
      "offset": [
        8988,
        9010
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2977": {
      "fn": "Forge.zinit",
      "offset": [
        9092,
        9095
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0xBAB"
    },
    "2980": {
      "fn": "Forge.zinit",
      "offset": [
        9094,
        9095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2982": {
      "fn": "Forge.zinit",
      "offset": [
        9092,
        9093
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2983": {
      "fn": "Forge.zinit",
      "offset": [
        9092,
        9095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "2986": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        9092,
        9095
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2987": {
      "fn": "Forge.zinit",
      "offset": [
        9092,
        9095
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2994": {
      "op": "SHL"
    },
    "2995": {
      "op": "SUB"
    },
    "2996": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2997": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "AND",
      "path": "0"
    },
    "2998": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3000": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3001": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3002": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3003": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3005": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3007": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3008": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3010": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3011": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3012": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9095
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3013": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3014": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9095
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3015": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9095
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3016": {
      "fn": "Forge.zinit",
      "offset": [
        9064,
        9089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3017": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 34,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3050": {
      "fn": "Forge.zinit",
      "offset": [
        9150,
        9153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF4"
    },
    "3053": {
      "fn": "Forge.zinit",
      "offset": [
        9152,
        9153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3055": {
      "fn": "Forge.zinit",
      "offset": [
        9150,
        9151
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3056": {
      "fn": "Forge.zinit",
      "offset": [
        9150,
        9153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "3059": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        9150,
        9153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3060": {
      "fn": "Forge.zinit",
      "offset": [
        9150,
        9153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3061": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3063": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3064": {
      "op": "SWAP1"
    },
    "3065": {
      "op": "DUP2"
    },
    "3066": {
      "op": "MSTORE"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3069": {
      "op": "ADD"
    },
    "3070": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3072": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3073": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3074": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3075": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "SUB",
      "path": "0"
    },
    "3076": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3077": {
      "fn": "Forge.zinit",
      "offset": [
        9112,
        9154
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3078": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x2"
    },
    "3080": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3081": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3088": {
      "op": "SHL"
    },
    "3089": {
      "op": "SUB"
    },
    "3090": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3091": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3092": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "AND",
      "path": "0"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "op": "SUB"
    },
    "3101": {
      "op": "NOT"
    },
    "3102": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3103": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3104": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "AND",
      "path": "0"
    },
    "3105": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "OR",
      "path": "0"
    },
    "3106": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3107": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3108": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9195
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3109": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9220
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x3"
    },
    "3111": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3112": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3113": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3114": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3115": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "AND",
      "path": "0"
    },
    "3116": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3117": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3118": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "AND",
      "path": "0"
    },
    "3119": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "OR",
      "path": "0"
    },
    "3120": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3121": {
      "fn": "Forge.zinit",
      "offset": [
        9205,
        9240
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3122": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9265
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x4"
    },
    "3124": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3125": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3126": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3127": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3128": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "AND",
      "path": "0"
    },
    "3129": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3130": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3131": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3132": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "AND",
      "path": "0"
    },
    "3133": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3134": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3135": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3136": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "OR",
      "path": "0"
    },
    "3137": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3138": {
      "fn": "Forge.zinit",
      "offset": [
        9250,
        9284
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3139": {
      "fn": "Forge.zinit",
      "offset": [
        9308,
        9318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x8"
    },
    "3141": {
      "fn": "Forge.zinit",
      "offset": [
        9308,
        9318
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3142": {
      "fn": "Forge.zinit",
      "offset": [
        9296,
        9305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3144": {
      "fn": "Forge.zinit",
      "offset": [
        9296,
        9318
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3145": {
      "fn": "Forge.zinit",
      "offset": [
        9324,
        9344
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0xC52"
    },
    "3148": {
      "fn": "Forge.zinit",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3150": {
      "fn": "Forge.zinit",
      "offset": [
        9324,
        9332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x226B"
    },
    "3153": {
      "fn": "Forge.zinit",
      "jump": "i",
      "offset": [
        9324,
        9344
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3154": {
      "fn": "Forge.zinit",
      "offset": [
        9324,
        9344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3155": {
      "fn": "Forge.zinit",
      "offset": [
        8538,
        9357
      ],
      "op": "POP",
      "path": "0"
    },
    "3156": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "POP",
      "path": "0"
    },
    "3157": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "POP",
      "path": "0"
    },
    "3158": {
      "fn": "Forge.zinit",
      "offset": [
        8438,
        9357
      ],
      "op": "POP",
      "path": "0"
    },
    "3159": {
      "fn": "Forge.zinit",
      "jump": "o",
      "offset": [
        8438,
        9357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3160": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3161": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19384,
        19396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3163": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19402,
        19416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3164": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19454,
        19470
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3165": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19471,
        19481
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3166": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19482,
        19487
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3167": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3169": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3170": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3172": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "ADD",
      "path": "0"
    },
    "3173": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC70"
    },
    "3176": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3177": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3178": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3179": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3180": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B91"
    },
    "3183": {
      "fn": "Forge.checkMintSolution",
      "jump": "i",
      "offset": [
        19437,
        19488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3184": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3185": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3187": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3188": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3190": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3191": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3192": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SUB",
      "path": "0"
    },
    "3193": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SUB",
      "path": "0"
    },
    "3194": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3195": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3196": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3197": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3199": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19437,
        19488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3200": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3201": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3202": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3203": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3205": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "ADD",
      "path": "0"
    },
    "3206": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19427,
        19489
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3207": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19402,
        19490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3208": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19402,
        19490
      ],
      "op": "POP",
      "path": "0"
    },
    "3209": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19515,
        19525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3210": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19505,
        19511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3211": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19497,
        19512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3213": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19497,
        19512
      ],
      "op": "SHR",
      "path": "0"
    },
    "3214": {
      "branch": 134,
      "fn": "Forge.checkMintSolution",
      "offset": [
        19497,
        19525
      ],
      "op": "GT",
      "path": "0"
    },
    "3215": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19494,
        19535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3216": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19494,
        19535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC98"
    },
    "3219": {
      "branch": 134,
      "fn": "Forge.checkMintSolution",
      "offset": [
        19494,
        19535
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3220": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19527,
        19535
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "3222": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19527,
        19535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3223": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19527,
        19535
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3224": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19494,
        19535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3225": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19548,
        19574
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 41
    },
    "3226": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19548,
        19574
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3227": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19548,
        19574
      ],
      "op": "EQ",
      "path": "0"
    },
    "3228": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19548,
        19574
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3229": {
      "fn": "Forge.checkMintSolution",
      "offset": [
        19252,
        19579
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "op": "POP"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "op": "POP"
    },
    "3234": {
      "fn": "Forge.checkMintSolution",
      "jump": "o",
      "offset": [
        19252,
        19579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3235": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3242": {
      "op": "SHL"
    },
    "3243": {
      "op": "SUB"
    },
    "3244": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24149,
        24171
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 42
    },
    "3245": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24149,
        24171
      ],
      "op": "AND",
      "path": "0"
    },
    "3246": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24166,
        24170
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3247": {
      "branch": 135,
      "fn": "Forge.receiveApproval",
      "offset": [
        24149,
        24171
      ],
      "op": "EQ",
      "path": "0"
    },
    "3248": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB8"
    },
    "3251": {
      "branch": 135,
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3252": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3254": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3255": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3256": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24141,
        24172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3257": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x40"
    },
    "3259": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3260": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3267": {
      "op": "SHL"
    },
    "3268": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3269": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3276": {
      "op": "SHL"
    },
    "3277": {
      "op": "SUB"
    },
    "3278": {
      "op": "DUP6"
    },
    "3279": {
      "op": "AND"
    },
    "3280": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3282": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3283": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ADD",
      "path": "0"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3287": {
      "op": "DUP2"
    },
    "3288": {
      "op": "ADD"
    },
    "3289": {
      "op": "DUP5"
    },
    "3290": {
      "op": "SWAP1"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24191,
        24195
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3293": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24191,
        24195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3294": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24206
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3299": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3302": {
      "op": "ADD"
    },
    "3303": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3305": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3307": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3308": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3309": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3310": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "SUB",
      "path": "0"
    },
    "3311": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3312": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3314": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3315": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "GAS",
      "path": "0"
    },
    "3316": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "CALL",
      "path": "0"
    },
    "3317": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3318": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3319": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3320": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD05"
    },
    "3323": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3324": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3325": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3327": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3328": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3329": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3330": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3332": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3333": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3334": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3335": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3336": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3337": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3338": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3340": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3341": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3342": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3344": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "NOT",
      "path": "0"
    },
    "3345": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3347": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3348": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ADD",
      "path": "0"
    },
    "3349": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "AND",
      "path": "0"
    },
    "3350": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3351": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ADD",
      "path": "0"
    },
    "3352": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3353": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3355": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3356": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3357": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3358": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "ADD",
      "path": "0"
    },
    "3359": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3360": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD29"
    },
    "3363": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3364": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3365": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "3368": {
      "fn": "Forge.receiveApproval",
      "jump": "i",
      "offset": [
        24176,
        24220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3369": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3370": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24176,
        24220
      ],
      "op": "POP",
      "path": "0"
    },
    "3371": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "POP",
      "path": "0"
    },
    "3372": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "POP",
      "path": "0"
    },
    "3373": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "POP",
      "path": "0"
    },
    "3374": {
      "fn": "Forge.receiveApproval",
      "offset": [
        24032,
        24226
      ],
      "op": "POP",
      "path": "0"
    },
    "3375": {
      "fn": "Forge.receiveApproval",
      "jump": "o",
      "offset": [
        24032,
        24226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3376": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3377": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20681,
        20699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3379": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20706,
        20720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3380": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20751,
        20766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "3382": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20751,
        20766
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3383": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20768,
        20778
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3384": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20780,
        20785
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3385": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3387": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3388": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3390": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "ADD",
      "path": "0"
    },
    "3391": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4A"
    },
    "3394": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3395": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3396": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3397": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3398": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B91"
    },
    "3401": {
      "fn": "Forge.getMintDigest",
      "jump": "i",
      "offset": [
        20734,
        20786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3402": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3403": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3405": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3406": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3407": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3408": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3409": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SUB",
      "path": "0"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3412": {
      "op": "NOT"
    },
    "3413": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "ADD",
      "path": "0"
    },
    "3414": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3415": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3416": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3417": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3418": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3419": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3420": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3421": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20734,
        20786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3423": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3424": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3425": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "ADD",
      "path": "0"
    },
    "3426": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3427": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20724,
        20787
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "3428": {
      "fn": "Forge.getMintDigest",
      "offset": [
        20570,
        20810
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "fn": "Forge.getMintDigest",
      "jump": "o",
      "offset": [
        20570,
        20810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3435": {
      "fn": "Forge.transfer",
      "offset": [
        21481,
        21729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3436": {
      "fn": "Forge.transfer",
      "offset": [
        21600,
        21610
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 44
    },
    "3437": {
      "fn": "Forge.transfer",
      "offset": [
        21549,
        21561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3439": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3440": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3441": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3442": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3444": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3446": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3447": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3449": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3450": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3451": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3452": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD85"
    },
    "3455": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3456": {
      "fn": "Forge.transfer",
      "offset": [
        21616,
        21622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3457": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "3460": {
      "fn": "Forge.transfer",
      "jump": "i",
      "offset": [
        21591,
        21623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3461": {
      "fn": "Forge.transfer",
      "offset": [
        21591,
        21623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3462": {
      "fn": "Forge.transfer",
      "offset": [
        21577,
        21587
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3463": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3465": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3466": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3467": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3468": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3470": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3472": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3473": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3475": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3476": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3477": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21588
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3478": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21623
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3479": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3480": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21623
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3481": {
      "fn": "Forge.transfer",
      "offset": [
        21568,
        21623
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "op": "SUB"
    },
    "3490": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 45
    },
    "3491": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "AND",
      "path": "0"
    },
    "3492": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3493": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3494": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3495": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21654
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3496": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB1"
    },
    "3499": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3500": {
      "fn": "Forge.transfer",
      "offset": [
        21659,
        21665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3501": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "3504": {
      "fn": "Forge.transfer",
      "jump": "i",
      "offset": [
        21642,
        21666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3505": {
      "fn": "Forge.transfer",
      "offset": [
        21642,
        21666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "op": "SUB"
    },
    "3514": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3515": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "AND",
      "path": "0"
    },
    "3516": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3518": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3519": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3520": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3521": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3523": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3525": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3526": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3528": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3529": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3530": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3531": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21639
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3532": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21666
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3533": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3534": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21666
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3535": {
      "fn": "Forge.transfer",
      "offset": [
        21627,
        21666
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3536": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 46
    },
    "3537": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3538": {
      "fn": "Forge.transfer",
      "offset": [
        21685,
        21695
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3539": {
      "fn": "Forge.transfer",
      "offset": [
        21685,
        21695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3540": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3573": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3574": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3577": {
      "fn": "Forge.transfer",
      "offset": [
        21676,
        21708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3578": {
      "fn": "Forge.transfer",
      "offset": [
        21701,
        21707
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3579": {
      "op": "DUP2"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "SWAP1"
    },
    "3585": {
      "op": "JUMP"
    },
    "3586": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3587": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12298,
        12310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3589": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12316,
        12331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3590": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12334,
        12375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2A"
    },
    "3593": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12341,
        12346
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3594": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12347,
        12363
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3595": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12371
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3596": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12372,
        12373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3598": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3599": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3600": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3601": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "LT",
      "path": "0"
    },
    "3602": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1D"
    },
    "3605": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3606": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1D"
    },
    "3609": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "3612": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12365,
        12374
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3613": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3614": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3616": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "MUL",
      "path": "0"
    },
    "3617": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3619": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "ADD",
      "path": "0"
    },
    "3620": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "ADD",
      "path": "0"
    },
    "3621": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12365,
        12374
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3622": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12334,
        12340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154C"
    },
    "3625": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12334,
        12375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3626": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12334,
        12375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3627": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12316,
        12375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3628": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12316,
        12375
      ],
      "op": "POP",
      "path": "0"
    },
    "3629": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12397,
        12398
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x0"
    },
    "3631": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12387,
        12394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3632": {
      "branch": 136,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12387,
        12398
      ],
      "op": "GT",
      "path": "0"
    },
    "3633": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE69"
    },
    "3636": {
      "branch": 136,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3637": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3639": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3648": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3651": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3653": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3654": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "ADD",
      "path": "0"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3660": {
      "op": "DUP3"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "MSTORE"
    },
    "3663": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3676": {
      "op": "SHL"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "3688": {
      "op": "JUMP"
    },
    "3689": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12379,
        12413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3690": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12460
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 48
    },
    "3691": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3692": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE76"
    },
    "3695": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3696": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12463,
        12464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3698": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "3701": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12443,
        12464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3702": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12443,
        12464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3703": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12426,
        12432
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3704": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12426,
        12439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3705": {
      "branch": 137,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12426,
        12464
      ],
      "op": "EQ",
      "path": "0"
    },
    "3706": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEEB"
    },
    "3709": {
      "branch": 137,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3710": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3712": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3721": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3726": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3727": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "ADD",
      "path": "0"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3733": {
      "op": "DUP3"
    },
    "3734": {
      "op": "ADD"
    },
    "3735": {
      "op": "MSTORE"
    },
    "3736": {
      "op": "PUSH32",
      "value": "0x4D696E74546F2068617320746F206861766520616E2065787472612061646472"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH32",
      "value": "0x65737320636F6D706172656420746F20457874726146756E6473000000000000"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3809": {
      "op": "DUP3"
    },
    "3810": {
      "op": "ADD"
    },
    "3811": {
      "op": "MSTORE"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "3818": {
      "op": "JUMP"
    },
    "3819": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12418,
        12526
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3820": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12530,
        12537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3822": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3823": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12559,
        12569
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3824": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12559,
        12576
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3825": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12555,
        12557
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3826": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12555,
        12576
      ],
      "op": "LT",
      "path": "0"
    },
    "3827": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3828": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AF"
    },
    "3831": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3832": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12612,
        12616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF02"
    },
    "3835": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12612,
        12614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3836": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12615,
        12616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3838": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12612,
        12616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "3841": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12612,
        12616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3842": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12612,
        12616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3843": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12608,
        12617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0D"
    },
    "3846": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12608,
        12617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3847": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12608,
        12609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3849": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12608,
        12617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "3852": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12608,
        12617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3853": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12608,
        12617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3854": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3856": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12604
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3857": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1A"
    },
    "3860": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3861": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3862": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "3865": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12594,
        12618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3866": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3867": {
      "branch": 138,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12594,
        12623
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3868": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12591,
        12641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF24"
    },
    "3871": {
      "branch": 138,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12591,
        12641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3872": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12630,
        12635
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x10AF"
    },
    "3875": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12630,
        12635
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3876": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12591,
        12641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3877": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12679,
        12683
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 50
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12684
      ],
      "op": "AND",
      "path": "0"
    },
    "3887": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12663
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3888": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12664,
        12666
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3889": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3890": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3891": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3892": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "LT",
      "path": "0"
    },
    "3893": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF40"
    },
    "3896": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3897": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF40"
    },
    "3900": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "3903": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12653,
        12667
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3904": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3905": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3907": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "MUL",
      "path": "0"
    },
    "3908": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3910": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "ADD",
      "path": "0"
    },
    "3911": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "ADD",
      "path": "0"
    },
    "3912": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "op": "SUB"
    },
    "3921": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12684
      ],
      "op": "AND",
      "path": "0"
    },
    "3922": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12684
      ],
      "op": "EQ",
      "path": "0"
    },
    "3923": {
      "branch": 139,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3924": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3925": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12721
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3926": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF91"
    },
    "3929": {
      "branch": 139,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3930": {
      "op": "POP"
    },
    "3931": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3933": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3934": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3935": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "op": "SUB"
    },
    "3944": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3945": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3946": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "AND",
      "path": "0"
    },
    "3947": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12706,
        12721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3948": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12698
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3949": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3950": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12699,
        12701
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3951": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12699,
        12701
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3952": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3953": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "LT",
      "path": "0"
    },
    "3954": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7D"
    },
    "3957": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3958": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7D"
    },
    "3961": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "3964": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12688,
        12702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3965": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3966": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3968": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "MUL",
      "path": "0"
    },
    "3969": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3971": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "ADD",
      "path": "0"
    },
    "3972": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "ADD",
      "path": "0"
    },
    "3973": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "op": "SUB"
    },
    "3982": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12721
      ],
      "op": "AND",
      "path": "0"
    },
    "3983": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12721
      ],
      "op": "EQ",
      "path": "0"
    },
    "3984": {
      "branch": 140,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12688,
        12721
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3985": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12653,
        12721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3986": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "3989": {
      "branch": 140,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3990": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3992": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4001": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4004": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4006": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4007": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "ADD",
      "path": "0"
    },
    "4008": {
      "op": "MSTORE"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4013": {
      "op": "DUP3"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "MSTORE"
    },
    "4016": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4051": {
      "op": "DUP3"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "4060": {
      "op": "JUMP"
    },
    "4061": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12645,
        12752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4062": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12761,
        12767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4064": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12768,
        12772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "4067": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12768,
        12770
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4068": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12771,
        12772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4070": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12768,
        12772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "4073": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12768,
        12772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4074": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12768,
        12772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4075": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12761,
        12772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4076": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12761,
        12772
      ],
      "op": "POP",
      "path": "0"
    },
    "4077": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4078": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12777,
        12787
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4079": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12777,
        12794
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4080": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12774,
        12775
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4081": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12774,
        12794
      ],
      "op": "LT",
      "path": "0"
    },
    "4082": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4083": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x109C"
    },
    "4086": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4087": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12841
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 51
    },
    "4088": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12842,
        12844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4089": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4090": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4091": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4092": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "LT",
      "path": "0"
    },
    "4093": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1008"
    },
    "4096": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4097": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1008"
    },
    "4100": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "4103": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12831,
        12845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4104": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4105": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4107": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "MUL",
      "path": "0"
    },
    "4108": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4110": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "ADD",
      "path": "0"
    },
    "4111": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "ADD",
      "path": "0"
    },
    "4112": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12831,
        12845
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4119": {
      "op": "SHL"
    },
    "4120": {
      "op": "SUB"
    },
    "4121": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12845
      ],
      "op": "AND",
      "path": "0"
    },
    "4122": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12824
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4123": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12825,
        12826
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4124": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4125": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4126": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4127": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "LT",
      "path": "0"
    },
    "4128": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102B"
    },
    "4131": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4132": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102B"
    },
    "4135": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "4138": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12814,
        12827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4139": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4140": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4142": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "MUL",
      "path": "0"
    },
    "4143": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4145": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "ADD",
      "path": "0"
    },
    "4146": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "ADD",
      "path": "0"
    },
    "4147": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4154": {
      "op": "SHL"
    },
    "4155": {
      "op": "SUB"
    },
    "4156": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12845
      ],
      "op": "AND",
      "path": "0"
    },
    "4157": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12845
      ],
      "op": "EQ",
      "path": "0"
    },
    "4158": {
      "branch": 141,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12814,
        12845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4159": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108A"
    },
    "4162": {
      "branch": 141,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4163": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4165": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4172": {
      "op": "SHL"
    },
    "4173": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4174": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4177": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4179": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4180": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "ADD",
      "path": "0"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4186": {
      "op": "DUP3"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "MSTORE"
    },
    "4189": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "4233": {
      "op": "JUMP"
    },
    "4234": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12806,
        12877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4235": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 52
    },
    "4236": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1094"
    },
    "4239": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4240": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "4243": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12796,
        12799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4244": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4245": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4246": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "POP",
      "path": "0"
    },
    "4247": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12796,
        12799
      ],
      "op": "POP",
      "path": "0"
    },
    "4248": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFED"
    },
    "4251": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4252": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12757,
        12883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 53
    },
    "4255": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A7"
    },
    "4258": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4259": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "4262": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12578,
        12582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4263": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4264": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4265": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "POP",
      "path": "0"
    },
    "4266": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12578,
        12582
      ],
      "op": "POP",
      "path": "0"
    },
    "4267": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEEE"
    },
    "4270": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4271": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12543,
        12887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4272": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12893,
        12910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4274": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12918,
        12936
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4275": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12948,
        12954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4277": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4278": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12960,
        12962
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4279": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12958,
        12959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4280": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12958,
        12962
      ],
      "op": "LT",
      "path": "0"
    },
    "4281": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4282": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129B"
    },
    "4285": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4286": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13250,
        13253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C8"
    },
    "4289": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13250,
        13251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4290": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13252,
        13253
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4292": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13250,
        13253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "4295": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13250,
        13253
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4296": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13250,
        13253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4297": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13246,
        13254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D3"
    },
    "4300": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13246,
        13254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4301": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13246,
        13247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4303": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13246,
        13254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "4306": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13246,
        13254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4307": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13246,
        13254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4308": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4310": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13242
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4311": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E0"
    },
    "4314": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4315": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4316": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "4319": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13232,
        13255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4320": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13232,
        13255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4321": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13229,
        13611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1289"
    },
    "4324": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13229,
        13611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4325": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13297
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 54
    },
    "4326": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13298,
        13299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4327": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4328": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4329": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4330": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "LT",
      "path": "0"
    },
    "4331": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F6"
    },
    "4334": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4335": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F6"
    },
    "4338": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "4341": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13287,
        13300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4342": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4343": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4345": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4346": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4347": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "MUL",
      "path": "0"
    },
    "4348": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4349": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4350": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4351": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "ADD",
      "path": "0"
    },
    "4352": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "ADD",
      "path": "0"
    },
    "4353": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13287,
        13300
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4354": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4356": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4357": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4366": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4367": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13320,
        13324
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4368": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4370": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4371": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ADD",
      "path": "0"
    },
    "4372": {
      "op": "MSTORE"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4379": {
      "op": "SHL"
    },
    "4380": {
      "op": "SUB"
    },
    "4381": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4382": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4383": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "AND",
      "path": "0"
    },
    "4384": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4385": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4390": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4393": {
      "op": "ADD"
    },
    "4394": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4396": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4398": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4399": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4400": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4401": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "SUB",
      "path": "0"
    },
    "4402": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4403": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4404": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "GAS",
      "path": "0"
    },
    "4405": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4406": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4407": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4408": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4409": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1146"
    },
    "4412": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4413": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4414": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4416": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4417": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4418": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4419": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4421": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4422": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4423": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "POP",
      "path": "0"
    },
    "4424": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "POP",
      "path": "0"
    },
    "4425": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "POP",
      "path": "0"
    },
    "4426": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "POP",
      "path": "0"
    },
    "4427": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4429": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4430": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4431": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4433": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "NOT",
      "path": "0"
    },
    "4434": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4436": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4437": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ADD",
      "path": "0"
    },
    "4438": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "AND",
      "path": "0"
    },
    "4439": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4440": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ADD",
      "path": "0"
    },
    "4441": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4442": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4444": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4445": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "POP",
      "path": "0"
    },
    "4446": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4447": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "ADD",
      "path": "0"
    },
    "4448": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4449": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116A"
    },
    "4452": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4453": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4454": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BEF"
    },
    "4457": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13280,
        13326
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4458": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13280,
        13326
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4459": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13267,
        13326
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4460": {
      "op": "POP"
    },
    "4461": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13335,
        13350
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4462": {
      "branch": 142,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13335,
        13350
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4463": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13332,
        13543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C4"
    },
    "4466": {
      "branch": 142,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13332,
        13543
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4467": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117D"
    },
    "4470": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13366,
        13367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4472": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4473": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "4476": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13362,
        13367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4477": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4478": {
      "branch": 143,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13372
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4479": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4480": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4481": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1189"
    },
    "4484": {
      "branch": 143,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13382
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13376,
        13382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4487": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13376,
        13382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4488": {
      "branch": 144,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13376,
        13382
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4489": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13362,
        13382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4490": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4491": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11AE"
    },
    "4494": {
      "branch": 144,
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4495": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13403,
        13452
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x11A7"
    },
    "4498": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13435,
        13451
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "4504": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13404,
        13424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "4507": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13417,
        13424
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4508": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13404,
        13414
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4509": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13404,
        13424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "4512": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13404,
        13424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4513": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13404,
        13424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4514": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13403,
        13434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4515": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13403,
        13434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231B"
    },
    "4518": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13403,
        13452
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4519": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13403,
        13452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4520": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13391,
        13452
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4521": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13391,
        13452
      ],
      "op": "POP",
      "path": "0"
    },
    "4522": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C4"
    },
    "4525": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4526": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4527": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13484,
        13529
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 56,
      "value": "0x11C1"
    },
    "4530": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13511,
        13527
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "4536": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13485,
        13505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "4539": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13498,
        13505
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4540": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13485,
        13495
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4541": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13485,
        13505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "4544": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13485,
        13505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4545": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13484,
        13529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4546": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13472,
        13529
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4547": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13472,
        13529
      ],
      "op": "POP",
      "path": "0"
    },
    "4548": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13358,
        13537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4549": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13568
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 57
    },
    "4550": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13569,
        13570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4551": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4552": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4553": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4554": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "LT",
      "path": "0"
    },
    "4555": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D6"
    },
    "4558": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4559": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D6"
    },
    "4562": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "4565": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13558,
        13571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4566": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4567": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4569": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "MUL",
      "path": "0"
    },
    "4570": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4572": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "ADD",
      "path": "0"
    },
    "4573": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "ADD",
      "path": "0"
    },
    "4574": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13558,
        13571
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "op": "SUB"
    },
    "4583": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13581
      ],
      "op": "AND",
      "path": "0"
    },
    "4584": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13581
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "4589": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13588
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4590": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13590
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4591": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13591,
        13592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4593": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FA"
    },
    "4596": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4597": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4598": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "4601": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13589,
        13592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4602": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13589,
        13592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4603": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4604": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4605": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4606": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "LT",
      "path": "0"
    },
    "4607": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120A"
    },
    "4610": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4611": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120A"
    },
    "4614": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "4617": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13582,
        13593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4618": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4619": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4621": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "MUL",
      "path": "0"
    },
    "4622": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4624": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "ADD",
      "path": "0"
    },
    "4625": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "ADD",
      "path": "0"
    },
    "4626": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13582,
        13593
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4627": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13595,
        13604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4628": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4630": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4631": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4632": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4637": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "AND",
      "path": "0"
    },
    "4638": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4640": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SHL",
      "path": "0"
    },
    "4641": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4642": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4643": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4645": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ADD",
      "path": "0"
    },
    "4646": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1244"
    },
    "4649": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4650": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4651": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "op": "SUB"
    },
    "4660": {
      "op": "SWAP3"
    },
    "4661": {
      "op": "SWAP1"
    },
    "4662": {
      "op": "SWAP3"
    },
    "4663": {
      "op": "AND"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "MSTORE"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4668": {
      "op": "DUP3"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "op": "MSTORE"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "SWAP1"
    },
    "4675": {
      "op": "JUMP"
    },
    "4676": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4677": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4679": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4681": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4682": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4683": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4684": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SUB",
      "path": "0"
    },
    "4685": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4686": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4688": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4689": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "GAS",
      "path": "0"
    },
    "4690": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "CALL",
      "path": "0"
    },
    "4691": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4692": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4693": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4694": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1263"
    },
    "4697": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4698": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4699": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4701": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4702": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4703": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4704": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4706": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4707": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4708": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4709": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4710": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4711": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4712": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4714": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4715": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4716": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4718": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "NOT",
      "path": "0"
    },
    "4719": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4721": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4722": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ADD",
      "path": "0"
    },
    "4723": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "AND",
      "path": "0"
    },
    "4724": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4725": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ADD",
      "path": "0"
    },
    "4726": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4727": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4729": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4730": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4731": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4732": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "ADD",
      "path": "0"
    },
    "4733": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4734": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1287"
    },
    "4737": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4738": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4739": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "4742": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13551,
        13605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4743": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4744": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13551,
        13605
      ],
      "op": "POP",
      "path": "0"
    },
    "4745": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13229,
        13611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4746": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 58
    },
    "4747": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1293"
    },
    "4750": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4751": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "4754": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        12964,
        12967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4755": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4756": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4757": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "POP",
      "path": "0"
    },
    "4758": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12964,
        12967
      ],
      "op": "POP",
      "path": "0"
    },
    "4759": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B5"
    },
    "4762": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4763": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12944,
        13621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13660,
        13670
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x8"
    },
    "4767": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13660,
        13670
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4768": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13672,
        13687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "4770": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13672,
        13687
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4771": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4773": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4774": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4775": {
      "op": "SWAP3"
    },
    "4776": {
      "op": "DUP4"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4780": {
      "op": "DUP4"
    },
    "4781": {
      "op": "ADD"
    },
    "4782": {
      "op": "SWAP2"
    },
    "4783": {
      "op": "SWAP1"
    },
    "4784": {
      "op": "SWAP2"
    },
    "4785": {
      "op": "MSTORE"
    },
    "4786": {
      "op": "DUP2"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "DUP5"
    },
    "4789": {
      "op": "SWAP1"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4793": {
      "op": "DUP2"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "DUP6"
    },
    "4796": {
      "op": "SWAP1"
    },
    "4797": {
      "op": "MSTORE"
    },
    "4798": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13648,
        13658
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4799": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13648,
        13658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4800": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x87E5A7775B8AC2EAD741E32752431BFFEFF76EC5F347CC202A6BAD454653930B"
    },
    "4833": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4836": {
      "op": "ADD"
    },
    "4837": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4839": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4840": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4841": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4842": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "SUB",
      "path": "0"
    },
    "4843": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4844": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13639,
        13702
      ],
      "op": "LOG2",
      "path": "0"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13714,
        13721
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 60
    },
    "4847": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        13714,
        13721
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "4848": {
      "fn": "Forge.mintTokensArrayTo",
      "offset": [
        12160,
        13729
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "POP"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "POP"
    },
    "4854": {
      "op": "POP"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "fn": "Forge.mintTokensArrayTo",
      "jump": "o",
      "offset": [
        12160,
        13729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4857": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4858": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9468,
        9480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4860": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9501,
        9508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1D"
    },
    "4862": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9501,
        9508
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4863": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9498
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4864": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1309"
    },
    "4867": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9508
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4868": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4869": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "4872": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9483,
        9508
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4873": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9483,
        9508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4874": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9468,
        9508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4875": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9468,
        9508
      ],
      "op": "POP",
      "path": "0"
    },
    "4876": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9513,
        9531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4878": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9547,
        9556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4880": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9547,
        9556
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4881": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4883": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9544
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4884": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131D"
    },
    "4887": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9556
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4888": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4889": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "4892": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9534,
        9556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4893": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9534,
        9556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4894": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9513,
        9556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9577,
        9597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4898": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9600,
        9617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132B"
    },
    "4901": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9513,
        9556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4902": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9600,
        9604
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4903": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9600,
        9617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "4906": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9600,
        9617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4907": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9600,
        9617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4908": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9577,
        9617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4909": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9577,
        9617
      ],
      "op": "POP",
      "path": "0"
    },
    "4910": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9638,
        9684
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 61,
      "value": "0x133F"
    },
    "4913": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9673,
        9682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "4915": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9673,
        9682
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4916": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9670,
        9671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4918": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9670,
        9682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "4921": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9670,
        9682
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4922": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9670,
        9682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4923": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9670,
        9682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "4926": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9670,
        9682
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4927": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9638,
        9684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4928": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9622,
        9635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "4930": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9622,
        9684
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4931": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9688,
        9697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4933": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9700,
        9741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1356"
    },
    "4936": {
      "offset": [
        6106,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "4939": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9701,
        9719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "4942": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9701,
        9713
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4943": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9716,
        9719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "4946": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9701,
        9719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "4949": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9701,
        9719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4950": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9700,
        9741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4951": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9688,
        9741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9745,
        9758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4955": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9771,
        9774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "4958": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1368"
    },
    "4961": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9688,
        9741
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4962": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9765,
        9768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4964": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "4967": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9761,
        9768
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4968": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9768
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4969": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1372"
    },
    "4972": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9774
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4973": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4974": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "4977": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9761,
        9774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4978": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9761,
        9774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4979": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9745,
        9774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4980": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9745,
        9774
      ],
      "op": "POP",
      "path": "0"
    },
    "4981": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9778,
        9795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4983": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9814,
        9817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC8"
    },
    "4985": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9806,
        9811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4986": {
      "branch": 145,
      "fn": "Forge.ARewardSender",
      "offset": [
        9806,
        9817
      ],
      "op": "LT",
      "path": "0"
    },
    "4987": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4988": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C4"
    },
    "4991": {
      "branch": 145,
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4992": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9872,
        9895
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x1393"
    },
    "4995": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9891,
        9894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "4998": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9873,
        9885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5001": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9884,
        9885
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5002": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9873,
        9881
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "5007": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9873,
        9885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5010": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9873,
        9885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5011": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9872,
        9895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5012": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B3"
    },
    "5015": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9862,
        9868
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "5019": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9848,
        9854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A5"
    },
    "5022": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9853,
        9854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5024": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9848,
        9849
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5025": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9848,
        9854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1F"
    },
    "5028": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9848,
        9854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5029": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9848,
        9854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5030": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9836,
        9856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5033": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9836,
        9856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5034": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9836,
        9844
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3A2CDF0"
    },
    "5039": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9836,
        9856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5042": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9836,
        9856
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5043": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5044": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BD"
    },
    "5047": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5048": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5049": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "5052": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9835,
        9895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5053": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9835,
        9895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5054": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9823,
        9895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5055": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9823,
        9895
      ],
      "op": "POP",
      "path": "0"
    },
    "5056": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CB"
    },
    "5059": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5060": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9925,
        9934
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 63,
      "value": "0x1443FD00"
    },
    "5067": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9803,
        9940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5068": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10048,
        10049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5070": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10022,
        10046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5072": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10022,
        10046
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5073": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "5075": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5076": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DD"
    },
    "5079": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10046
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5080": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5081": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5084": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10010,
        10046
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5085": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10010,
        10046
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5086": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E8"
    },
    "5089": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5090": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3C"
    },
    "5092": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5095": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10000,
        10047
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5096": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5097": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F2"
    },
    "5100": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10049
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5101": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5102": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "5105": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10000,
        10049
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5106": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10000,
        10049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5107": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9955,
        9970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5109": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9955,
        9970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5110": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9955,
        9970
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5111": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5113": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5114": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5121": {
      "op": "SHL"
    },
    "5122": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5123": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5124": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9990,
        9994
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "5125": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5126": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5127": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ADD",
      "path": "0"
    },
    "5128": {
      "op": "SWAP3"
    },
    "5129": {
      "op": "SWAP1"
    },
    "5130": {
      "op": "SWAP3"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5138": {
      "op": "SHL"
    },
    "5139": {
      "op": "SUB"
    },
    "5140": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9955,
        9970
      ],
      "op": "AND",
      "path": "0"
    },
    "5141": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9955,
        9970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5142": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9981
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "5147": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5153": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5155": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5156": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5157": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5158": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "SUB",
      "path": "0"
    },
    "5159": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5160": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5161": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "GAS",
      "path": "0"
    },
    "5162": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5163": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5164": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5165": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5166": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143B"
    },
    "5169": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5170": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5171": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5173": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5174": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5175": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5176": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5178": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5179": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5180": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "POP",
      "path": "0"
    },
    "5181": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "POP",
      "path": "0"
    },
    "5182": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "POP",
      "path": "0"
    },
    "5183": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "POP",
      "path": "0"
    },
    "5184": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5186": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5187": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5188": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5190": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "NOT",
      "path": "0"
    },
    "5191": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5193": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5194": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ADD",
      "path": "0"
    },
    "5195": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "AND",
      "path": "0"
    },
    "5196": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5197": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ADD",
      "path": "0"
    },
    "5198": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5199": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5201": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5202": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "POP",
      "path": "0"
    },
    "5203": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5204": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "ADD",
      "path": "0"
    },
    "5205": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5206": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145F"
    },
    "5209": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5210": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5211": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BEF"
    },
    "5214": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        9948,
        9996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5215": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        9996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5216": {
      "branch": 146,
      "fn": "Forge.ARewardSender",
      "offset": [
        9948,
        10050
      ],
      "op": "GT",
      "path": "0"
    },
    "5217": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5218": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1534"
    },
    "5221": {
      "branch": 146,
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5222": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x4"
    },
    "5224": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5225": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10168,
        10183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5227": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10168,
        10183
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5228": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10225,
        10234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "5230": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10225,
        10234
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5231": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10213,
        10222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "5233": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10213,
        10222
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5240": {
      "op": "SHL"
    },
    "5241": {
      "op": "SUB"
    },
    "5242": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5243": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5244": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "AND",
      "path": "0"
    },
    "5245": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10142,
        10157
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5246": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10167
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "5251": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10167
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5252": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10168,
        10183
      ],
      "op": "AND",
      "path": "0"
    },
    "5253": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10168,
        10183
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5254": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10185,
        10254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AE"
    },
    "5257": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10185,
        10254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5258": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10240,
        10253
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "5263": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10240,
        10253
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5264": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10225,
        10234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5265": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149A"
    },
    "5268": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10201,
        10210
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5269": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10187,
        10197
      ],
      "op": "DUP14",
      "path": "0"
    },
    "5270": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5273": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10186,
        10210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5274": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5275": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A4"
    },
    "5278": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10222
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5279": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10222
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5280": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5283": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10186,
        10222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5284": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5285": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5288": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10234
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5289": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5290": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10186,
        10234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5293": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10186,
        10234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5294": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10185,
        10254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5295": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5297": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5304": {
      "op": "SHL"
    },
    "5305": {
      "op": "SUB"
    },
    "5306": {
      "op": "NOT"
    },
    "5307": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5309": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5310": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5311": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SHL",
      "path": "0"
    },
    "5312": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "AND",
      "path": "0"
    },
    "5313": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5314": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "SUB"
    },
    "5323": {
      "op": "SWAP1"
    },
    "5324": {
      "op": "SWAP3"
    },
    "5325": {
      "op": "AND"
    },
    "5326": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5328": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5329": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ADD",
      "path": "0"
    },
    "5330": {
      "op": "MSTORE"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5333": {
      "op": "DUP3"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "op": "MSTORE"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5341": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5343": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5344": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5345": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5346": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SUB",
      "path": "0"
    },
    "5347": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5348": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5350": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5351": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "GAS",
      "path": "0"
    },
    "5352": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "CALL",
      "path": "0"
    },
    "5353": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5354": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5355": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5356": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F9"
    },
    "5359": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5360": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5361": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5363": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5364": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5365": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5366": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5368": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5369": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5370": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "POP",
      "path": "0"
    },
    "5371": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "POP",
      "path": "0"
    },
    "5372": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "POP",
      "path": "0"
    },
    "5373": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "POP",
      "path": "0"
    },
    "5374": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5376": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5377": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5378": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5380": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "NOT",
      "path": "0"
    },
    "5381": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5383": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5384": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ADD",
      "path": "0"
    },
    "5385": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "AND",
      "path": "0"
    },
    "5386": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5387": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ADD",
      "path": "0"
    },
    "5388": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5389": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5391": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5392": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "POP",
      "path": "0"
    },
    "5393": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5394": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "ADD",
      "path": "0"
    },
    "5395": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5396": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151D"
    },
    "5399": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5400": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5401": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "5404": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10135,
        10255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5405": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10135,
        10255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5406": {
      "op": "POP"
    },
    "5407": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10276,
        10280
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x1B"
    },
    "5409": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10276,
        10280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5410": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10272,
        10280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152C"
    },
    "5413": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10272,
        10280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5414": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10272,
        10273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5416": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10272,
        10280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5419": {
      "fn": "Forge.ARewardSender",
      "jump": "i",
      "offset": [
        10272,
        10280
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5420": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10272,
        10280
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5421": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10260,
        10269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "5423": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10260,
        10280
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5424": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153A"
    },
    "5427": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5428": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5429": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10306,
        10307
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0x0"
    },
    "5431": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10294,
        10303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "5433": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10294,
        10307
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5434": {
      "fn": "Forge.ARewardSender",
      "offset": [
        9945,
        10312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10327,
        10337
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 67,
      "value": "0x8"
    },
    "5439": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10327,
        10337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5440": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10315,
        10324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "5442": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10315,
        10337
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5443": {
      "op": "POP"
    },
    "5444": {
      "op": "POP"
    },
    "5445": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10369,
        10384
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 68
    },
    "5446": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10359,
        10366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1D"
    },
    "5448": {
      "fn": "Forge.ARewardSender",
      "offset": [
        10359,
        10384
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "op": "POP"
    },
    "5451": {
      "fn": "Forge.ARewardSender",
      "jump": "o",
      "offset": [
        9387,
        10388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5452": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5453": {
      "fn": "Forge.mintTo",
      "offset": [
        10645,
        10657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5455": {
      "fn": "Forge.mintTo",
      "offset": [
        10664,
        10678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5456": {
      "fn": "Forge.mintTo",
      "offset": [
        10709,
        10724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "5458": {
      "fn": "Forge.mintTo",
      "offset": [
        10709,
        10724
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5459": {
      "fn": "Forge.mintTo",
      "offset": [
        10726,
        10736
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5460": {
      "fn": "Forge.mintTo",
      "offset": [
        10738,
        10743
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5461": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5463": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5464": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5466": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "ADD",
      "path": "0"
    },
    "5467": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1566"
    },
    "5470": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5471": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5472": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5473": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5474": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B91"
    },
    "5477": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        10692,
        10744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5478": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5479": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5481": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5482": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5484": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5485": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5486": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SUB",
      "path": "0"
    },
    "5487": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SUB",
      "path": "0"
    },
    "5488": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5489": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5490": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5491": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5493": {
      "fn": "Forge.mintTo",
      "offset": [
        10692,
        10744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5494": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5495": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5496": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5497": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5499": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "ADD",
      "path": "0"
    },
    "5500": {
      "fn": "Forge.mintTo",
      "offset": [
        10682,
        10745
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5501": {
      "fn": "Forge.mintTo",
      "offset": [
        10664,
        10745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5502": {
      "fn": "Forge.mintTo",
      "offset": [
        10664,
        10745
      ],
      "op": "POP",
      "path": "0"
    },
    "5503": {
      "fn": "Forge.mintTo",
      "offset": [
        10817,
        10833
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 69
    },
    "5504": {
      "fn": "Forge.mintTo",
      "offset": [
        10807,
        10813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5505": {
      "branch": 147,
      "fn": "Forge.mintTo",
      "offset": [
        10807,
        10833
      ],
      "op": "EQ",
      "path": "0"
    },
    "5506": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159D"
    },
    "5509": {
      "branch": 147,
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5510": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5512": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5519": {
      "op": "SHL"
    },
    "5520": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5521": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5522": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5524": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "ADD",
      "path": "0"
    },
    "5525": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "5528": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5529": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2E"
    },
    "5532": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        10799,
        10884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5533": {
      "fn": "Forge.mintTo",
      "offset": [
        10799,
        10884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5534": {
      "fn": "Forge.mintTo",
      "offset": [
        10962,
        10974
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 70,
      "value": "0xC"
    },
    "5536": {
      "fn": "Forge.mintTo",
      "offset": [
        10962,
        10974
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5537": {
      "fn": "Forge.mintTo",
      "offset": [
        10944,
        10974
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5538": {
      "branch": 148,
      "fn": "Forge.mintTo",
      "offset": [
        10944,
        10974
      ],
      "op": "LT",
      "path": "0"
    },
    "5539": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BE"
    },
    "5542": {
      "branch": 148,
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5543": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5545": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5552": {
      "op": "SHL"
    },
    "5553": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5554": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5555": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5557": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "ADD",
      "path": "0"
    },
    "5558": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "5561": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5562": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7C"
    },
    "5565": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        10936,
        11019
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5566": {
      "fn": "Forge.mintTo",
      "offset": [
        10936,
        11019
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5567": {
      "fn": "Forge.mintTo",
      "offset": [
        11023,
        11045
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 71,
      "value": "0x15C6"
    },
    "5570": {
      "fn": "Forge.mintTo",
      "offset": [
        11023,
        11043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201A"
    },
    "5573": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11023,
        11045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5574": {
      "fn": "Forge.mintTo",
      "offset": [
        11023,
        11045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5575": {
      "fn": "Forge.mintTo",
      "offset": [
        11076,
        11093
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x12"
    },
    "5577": {
      "fn": "Forge.mintTo",
      "offset": [
        11076,
        11093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5578": {
      "fn": "Forge.mintTo",
      "offset": [
        11058,
        11073
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5579": {
      "branch": 149,
      "fn": "Forge.mintTo",
      "offset": [
        11058,
        11093
      ],
      "op": "GT",
      "path": "0"
    },
    "5580": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160F"
    },
    "5583": {
      "branch": 149,
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5584": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5586": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5593": {
      "op": "SHL"
    },
    "5594": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5595": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5598": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5600": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5601": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "ADD",
      "path": "0"
    },
    "5602": {
      "op": "MSTORE"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5607": {
      "op": "DUP3"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "MSTORE"
    },
    "5610": {
      "op": "PUSH21",
      "value": "0x4E6F2073616D65207365636F6E6420736F6C766573"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "5634": {
      "op": "SHL"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5637": {
      "op": "DUP3"
    },
    "5638": {
      "op": "ADD"
    },
    "5639": {
      "op": "MSTORE"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5642": {
      "op": "ADD"
    },
    "5643": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "5646": {
      "op": "JUMP"
    },
    "5647": {
      "fn": "Forge.mintTo",
      "offset": [
        11050,
        11119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5648": {
      "fn": "Forge.mintTo",
      "offset": [
        11177,
        11186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5650": {
      "offset": [
        6106,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "5653": {
      "fn": "Forge.mintTo",
      "offset": [
        11209,
        11226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "5655": {
      "fn": "Forge.mintTo",
      "offset": [
        11209,
        11226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5656": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11206
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5657": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1622"
    },
    "5660": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5661": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5662": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "5665": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11191,
        11226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5666": {
      "fn": "Forge.mintTo",
      "offset": [
        11191,
        11226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5667": {
      "fn": "Forge.mintTo",
      "offset": [
        11190,
        11233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162E"
    },
    "5670": {
      "fn": "Forge.mintTo",
      "offset": [
        11190,
        11233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5671": {
      "fn": "Forge.mintTo",
      "offset": [
        11230,
        11233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5674": {
      "fn": "Forge.mintTo",
      "offset": [
        11190,
        11233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5677": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11190,
        11233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5678": {
      "fn": "Forge.mintTo",
      "offset": [
        11190,
        11233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5679": {
      "fn": "Forge.mintTo",
      "offset": [
        11189,
        11247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1638"
    },
    "5682": {
      "fn": "Forge.mintTo",
      "offset": [
        11189,
        11247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5683": {
      "fn": "Forge.mintTo",
      "offset": [
        11189,
        11247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5684": {
      "fn": "Forge.mintTo",
      "offset": [
        11189,
        11247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "5687": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11189,
        11247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5688": {
      "fn": "Forge.mintTo",
      "offset": [
        11189,
        11247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5689": {
      "fn": "Forge.mintTo",
      "offset": [
        11177,
        11247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "fn": "Forge.mintTo",
      "offset": [
        11251,
        11261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5693": {
      "fn": "Forge.mintTo",
      "offset": [
        11274,
        11277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5696": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164A"
    },
    "5699": {
      "fn": "Forge.mintTo",
      "offset": [
        11177,
        11247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5700": {
      "fn": "Forge.mintTo",
      "offset": [
        11268,
        11271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5702": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5705": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11264,
        11271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5706": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5707": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1654"
    },
    "5710": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11277
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5711": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5712": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "5715": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11264,
        11277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5716": {
      "fn": "Forge.mintTo",
      "offset": [
        11264,
        11277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5717": {
      "fn": "Forge.mintTo",
      "offset": [
        11251,
        11277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5718": {
      "fn": "Forge.mintTo",
      "offset": [
        11251,
        11277
      ],
      "op": "POP",
      "path": "0"
    },
    "5719": {
      "fn": "Forge.mintTo",
      "offset": [
        11281,
        11295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5721": {
      "fn": "Forge.mintTo",
      "offset": [
        11314,
        11317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "5724": {
      "fn": "Forge.mintTo",
      "offset": [
        11306,
        11311
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5725": {
      "branch": 150,
      "fn": "Forge.mintTo",
      "offset": [
        11306,
        11317
      ],
      "op": "LT",
      "path": "0"
    },
    "5726": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5727": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1699"
    },
    "5730": {
      "branch": 150,
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5731": {
      "fn": "Forge.mintTo",
      "offset": [
        11373,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 73,
      "value": "0x1676"
    },
    "5734": {
      "fn": "Forge.mintTo",
      "offset": [
        11392,
        11395
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5737": {
      "fn": "Forge.mintTo",
      "offset": [
        11374,
        11386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5740": {
      "fn": "Forge.mintTo",
      "offset": [
        11385,
        11386
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5741": {
      "fn": "Forge.mintTo",
      "offset": [
        11374,
        11382
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "5746": {
      "fn": "Forge.mintTo",
      "offset": [
        11374,
        11386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5749": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11374,
        11386
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5750": {
      "fn": "Forge.mintTo",
      "offset": [
        11373,
        11396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5751": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1688"
    },
    "5754": {
      "fn": "Forge.mintTo",
      "offset": [
        11362,
        11370
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "5758": {
      "fn": "Forge.mintTo",
      "offset": [
        11348,
        11354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A5"
    },
    "5761": {
      "fn": "Forge.mintTo",
      "offset": [
        11353,
        11354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5763": {
      "fn": "Forge.mintTo",
      "offset": [
        11348,
        11349
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5764": {
      "fn": "Forge.mintTo",
      "offset": [
        11348,
        11354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1F"
    },
    "5767": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11348,
        11354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5768": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5769": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1692"
    },
    "5772": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11396
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5773": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5774": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "5777": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11335,
        11396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5778": {
      "fn": "Forge.mintTo",
      "offset": [
        11335,
        11396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5779": {
      "fn": "Forge.mintTo",
      "offset": [
        11323,
        11396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5780": {
      "fn": "Forge.mintTo",
      "offset": [
        11323,
        11396
      ],
      "op": "POP",
      "path": "0"
    },
    "5781": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16BE"
    },
    "5784": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5785": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5786": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11447
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 74,
      "value": "0x16AD"
    },
    "5789": {
      "fn": "Forge.mintTo",
      "offset": [
        11443,
        11446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5792": {
      "fn": "Forge.mintTo",
      "offset": [
        11424,
        11437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5795": {
      "fn": "Forge.mintTo",
      "offset": [
        11424,
        11425
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5796": {
      "fn": "Forge.mintTo",
      "offset": [
        11428,
        11437
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "5801": {
      "fn": "Forge.mintTo",
      "offset": [
        11424,
        11437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5804": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11424,
        11437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5805": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5806": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16BB"
    },
    "5809": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5810": {
      "fn": "Forge.mintTo",
      "offset": [
        11451,
        11460
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x14DC9380"
    },
    "5815": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "5818": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11423,
        11461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5819": {
      "fn": "Forge.mintTo",
      "offset": [
        11423,
        11461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5820": {
      "fn": "Forge.mintTo",
      "offset": [
        11411,
        11461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5821": {
      "fn": "Forge.mintTo",
      "offset": [
        11411,
        11461
      ],
      "op": "POP",
      "path": "0"
    },
    "5822": {
      "fn": "Forge.mintTo",
      "offset": [
        11303,
        11466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5823": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11555
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 75,
      "value": "0x16F6"
    },
    "5826": {
      "fn": "Forge.mintTo",
      "offset": [
        11512,
        11554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D7"
    },
    "5829": {
      "fn": "Forge.mintTo",
      "offset": [
        11544,
        11553
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "5834": {
      "fn": "Forge.mintTo",
      "offset": [
        11529,
        11538
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5835": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "5837": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5838": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5841": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5842": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5843": {
      "fn": "Forge.mintTo",
      "offset": [
        11513,
        11538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5846": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11513,
        11538
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5847": {
      "fn": "Forge.mintTo",
      "offset": [
        11512,
        11554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5854": {
      "op": "SHL"
    },
    "5855": {
      "op": "SUB"
    },
    "5856": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5857": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "AND",
      "path": "0"
    },
    "5858": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5860": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5861": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5862": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5863": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "5865": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5867": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5868": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5870": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5871": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5872": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5873": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5874": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "5877": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11491,
        11555
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5878": {
      "fn": "Forge.mintTo",
      "offset": [
        11491,
        11555
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5885": {
      "op": "SHL"
    },
    "5886": {
      "op": "SUB"
    },
    "5887": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5888": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "AND",
      "path": "0"
    },
    "5889": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5891": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5892": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5893": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5894": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "5896": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5898": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5899": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5901": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5902": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11488
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5903": {
      "fn": "Forge.mintTo",
      "offset": [
        11472,
        11555
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5904": {
      "fn": "Forge.mintTo",
      "offset": [
        11618,
        11631
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x10"
    },
    "5906": {
      "fn": "Forge.mintTo",
      "offset": [
        11618,
        11631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5907": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174C"
    },
    "5910": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5911": {
      "fn": "Forge.mintTo",
      "offset": [
        11617,
        11663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172B"
    },
    "5914": {
      "fn": "Forge.mintTo",
      "offset": [
        11617,
        11663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5915": {
      "fn": "Forge.mintTo",
      "offset": [
        11649,
        11662
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "5920": {
      "fn": "Forge.mintTo",
      "offset": [
        11649,
        11662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5921": {
      "fn": "Forge.mintTo",
      "offset": [
        11618,
        11643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "5924": {
      "fn": "Forge.mintTo",
      "offset": [
        11618,
        11643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5925": {
      "fn": "Forge.mintTo",
      "offset": [
        11634,
        11643
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5926": {
      "fn": "Forge.mintTo",
      "offset": [
        11634,
        11643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5927": {
      "fn": "Forge.mintTo",
      "offset": [
        11618,
        11643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "5930": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11618,
        11643
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5931": {
      "fn": "Forge.mintTo",
      "offset": [
        11617,
        11663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5932": {
      "fn": "Forge.mintTo",
      "offset": [
        11596,
        11611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5934": {
      "fn": "Forge.mintTo",
      "offset": [
        11596,
        11611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5941": {
      "op": "SHL"
    },
    "5942": {
      "op": "SUB"
    },
    "5943": {
      "fn": "Forge.mintTo",
      "offset": [
        11596,
        11611
      ],
      "op": "AND",
      "path": "0"
    },
    "5944": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5946": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5947": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5948": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5949": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "5951": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5953": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5954": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5956": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5957": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5958": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5959": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5960": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "5963": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11587,
        11664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5964": {
      "fn": "Forge.mintTo",
      "offset": [
        11587,
        11664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5965": {
      "fn": "Forge.mintTo",
      "offset": [
        11568,
        11583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5967": {
      "fn": "Forge.mintTo",
      "offset": [
        11568,
        11583
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5974": {
      "op": "SHL"
    },
    "5975": {
      "op": "SUB"
    },
    "5976": {
      "fn": "Forge.mintTo",
      "offset": [
        11568,
        11583
      ],
      "op": "AND",
      "path": "0"
    },
    "5977": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5979": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5980": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5981": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5982": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "5984": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5986": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5987": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5989": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5990": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11584
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5991": {
      "fn": "Forge.mintTo",
      "offset": [
        11559,
        11664
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5992": {
      "fn": "Forge.mintTo",
      "offset": [
        11706,
        11719
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 77,
      "value": "0x10"
    },
    "5994": {
      "fn": "Forge.mintTo",
      "offset": [
        11706,
        11719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5995": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178C"
    },
    "5998": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5999": {
      "fn": "Forge.mintTo",
      "offset": [
        11705,
        11747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1783"
    },
    "6002": {
      "fn": "Forge.mintTo",
      "offset": [
        11705,
        11747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6003": {
      "fn": "Forge.mintTo",
      "offset": [
        11737,
        11746
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6008": {
      "fn": "Forge.mintTo",
      "offset": [
        11737,
        11746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6009": {
      "fn": "Forge.mintTo",
      "offset": [
        11706,
        11731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "6012": {
      "fn": "Forge.mintTo",
      "offset": [
        11706,
        11731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6013": {
      "fn": "Forge.mintTo",
      "offset": [
        11722,
        11731
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6014": {
      "fn": "Forge.mintTo",
      "offset": [
        11722,
        11731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6015": {
      "fn": "Forge.mintTo",
      "offset": [
        11706,
        11731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "6018": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11706,
        11731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6019": {
      "fn": "Forge.mintTo",
      "offset": [
        11705,
        11747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6020": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "6022": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6023": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6024": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "6027": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11688,
        11748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6028": {
      "fn": "Forge.mintTo",
      "offset": [
        11688,
        11748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6029": {
      "fn": "Forge.mintTo",
      "offset": [
        11673,
        11685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "6031": {
      "fn": "Forge.mintTo",
      "offset": [
        11673,
        11748
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6032": {
      "fn": "Forge.mintTo",
      "offset": [
        11772,
        11787
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 78
    },
    "6033": {
      "fn": "Forge.mintTo",
      "offset": [
        11752,
        11769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "6035": {
      "fn": "Forge.mintTo",
      "offset": [
        11752,
        11787
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6036": {
      "fn": "Forge.mintTo",
      "offset": [
        11795,
        11804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "6038": {
      "fn": "Forge.mintTo",
      "offset": [
        11795,
        11804
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6039": {
      "branch": 151,
      "fn": "Forge.mintTo",
      "offset": [
        11795,
        11808
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6040": {
      "fn": "Forge.mintTo",
      "offset": [
        11792,
        12031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18EA"
    },
    "6043": {
      "branch": 151,
      "fn": "Forge.mintTo",
      "offset": [
        11792,
        12031
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6044": {
      "fn": "Forge.mintTo",
      "offset": [
        11825,
        11828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC8"
    },
    "6046": {
      "fn": "Forge.mintTo",
      "offset": [
        11817,
        11822
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6047": {
      "branch": 152,
      "fn": "Forge.mintTo",
      "offset": [
        11817,
        11828
      ],
      "op": "LT",
      "path": "0"
    },
    "6048": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6049": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184A"
    },
    "6052": {
      "branch": 152,
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6053": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 79,
      "value": "0x4"
    },
    "6055": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6056": {
      "fn": "Forge.mintTo",
      "offset": [
        11901,
        11910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "6058": {
      "fn": "Forge.mintTo",
      "offset": [
        11901,
        11910
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6059": {
      "fn": "Forge.mintTo",
      "offset": [
        11889,
        11898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "6061": {
      "fn": "Forge.mintTo",
      "offset": [
        11889,
        11898
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6068": {
      "op": "SHL"
    },
    "6069": {
      "op": "SUB"
    },
    "6070": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6071": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6072": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "AND",
      "path": "0"
    },
    "6073": {
      "fn": "Forge.mintTo",
      "offset": [
        11842,
        11857
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6074": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11867
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "6079": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6080": {
      "fn": "Forge.mintTo",
      "offset": [
        11868,
        11874
      ],
      "op": "DUP10",
      "path": "0"
    },
    "6081": {
      "fn": "Forge.mintTo",
      "offset": [
        11868,
        11874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6082": {
      "fn": "Forge.mintTo",
      "offset": [
        11876,
        11926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D5"
    },
    "6085": {
      "fn": "Forge.mintTo",
      "offset": [
        11876,
        11926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6086": {
      "fn": "Forge.mintTo",
      "offset": [
        11916,
        11925
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6091": {
      "fn": "Forge.mintTo",
      "offset": [
        11916,
        11925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6092": {
      "fn": "Forge.mintTo",
      "offset": [
        11877,
        11898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A4"
    },
    "6095": {
      "fn": "Forge.mintTo",
      "offset": [
        11877,
        11898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6096": {
      "fn": "Forge.mintTo",
      "offset": [
        11877,
        11886
      ],
      "op": "DUP9",
      "path": "0"
    },
    "6097": {
      "fn": "Forge.mintTo",
      "offset": [
        11877,
        11898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "6100": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11877,
        11898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6101": {
      "fn": "Forge.mintTo",
      "offset": [
        11876,
        11926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6102": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6104": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "op": "SUB"
    },
    "6113": {
      "op": "NOT"
    },
    "6114": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6116": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6117": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6118": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SHL",
      "path": "0"
    },
    "6119": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "AND",
      "path": "0"
    },
    "6120": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6121": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "op": "SUB"
    },
    "6130": {
      "op": "SWAP1"
    },
    "6131": {
      "op": "SWAP3"
    },
    "6132": {
      "op": "AND"
    },
    "6133": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6135": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6136": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ADD",
      "path": "0"
    },
    "6137": {
      "op": "MSTORE"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6140": {
      "op": "DUP3"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "MSTORE"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6145": {
      "op": "ADD"
    },
    "6146": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6148": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6150": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6151": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6152": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6153": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SUB",
      "path": "0"
    },
    "6154": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6155": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6157": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6158": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "GAS",
      "path": "0"
    },
    "6159": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "CALL",
      "path": "0"
    },
    "6160": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6161": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6162": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6163": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1820"
    },
    "6166": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6167": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6168": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6170": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6171": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6172": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6173": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6175": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6176": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6177": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6178": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6179": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6180": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6181": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6183": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6184": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6185": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6187": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "NOT",
      "path": "0"
    },
    "6188": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6190": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6191": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ADD",
      "path": "0"
    },
    "6192": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "AND",
      "path": "0"
    },
    "6193": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6194": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ADD",
      "path": "0"
    },
    "6195": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6196": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6198": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6199": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6200": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6201": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "ADD",
      "path": "0"
    },
    "6202": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6203": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1844"
    },
    "6206": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6207": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6208": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "6211": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11835,
        11927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6212": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6213": {
      "fn": "Forge.mintTo",
      "offset": [
        11835,
        11927
      ],
      "op": "POP",
      "path": "0"
    },
    "6214": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18EA"
    },
    "6217": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6218": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6219": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x4"
    },
    "6221": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6222": {
      "fn": "Forge.mintTo",
      "offset": [
        12002,
        12011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "6224": {
      "fn": "Forge.mintTo",
      "offset": [
        12002,
        12011
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6225": {
      "fn": "Forge.mintTo",
      "offset": [
        11990,
        11999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "6227": {
      "fn": "Forge.mintTo",
      "offset": [
        11990,
        11999
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6234": {
      "op": "SHL"
    },
    "6235": {
      "op": "SUB"
    },
    "6236": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6237": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6238": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "AND",
      "path": "0"
    },
    "6239": {
      "fn": "Forge.mintTo",
      "offset": [
        11950,
        11965
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6240": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        11975
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "6245": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        11975
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6246": {
      "fn": "Forge.mintTo",
      "offset": [
        11976,
        11982
      ],
      "op": "DUP10",
      "path": "0"
    },
    "6247": {
      "fn": "Forge.mintTo",
      "offset": [
        11976,
        11982
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6248": {
      "fn": "Forge.mintTo",
      "offset": [
        11984,
        12020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1879"
    },
    "6251": {
      "fn": "Forge.mintTo",
      "offset": [
        11984,
        12020
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6252": {
      "fn": "Forge.mintTo",
      "offset": [
        12017,
        12019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6254": {
      "fn": "Forge.mintTo",
      "offset": [
        12017,
        12019
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6255": {
      "fn": "Forge.mintTo",
      "offset": [
        11985,
        11999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A4"
    },
    "6258": {
      "fn": "Forge.mintTo",
      "offset": [
        11985,
        11999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6259": {
      "fn": "Forge.mintTo",
      "offset": [
        11985,
        11987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "6261": {
      "fn": "Forge.mintTo",
      "offset": [
        11985,
        11999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "6264": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11985,
        11999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6265": {
      "fn": "Forge.mintTo",
      "offset": [
        11984,
        12020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6266": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6268": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6275": {
      "op": "SHL"
    },
    "6276": {
      "op": "SUB"
    },
    "6277": {
      "op": "NOT"
    },
    "6278": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6280": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6281": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6282": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SHL",
      "path": "0"
    },
    "6283": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "AND",
      "path": "0"
    },
    "6284": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6285": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6292": {
      "op": "SHL"
    },
    "6293": {
      "op": "SUB"
    },
    "6294": {
      "op": "SWAP1"
    },
    "6295": {
      "op": "SWAP3"
    },
    "6296": {
      "op": "AND"
    },
    "6297": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6299": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6300": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ADD",
      "path": "0"
    },
    "6301": {
      "op": "MSTORE"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6304": {
      "op": "DUP3"
    },
    "6305": {
      "op": "ADD"
    },
    "6306": {
      "op": "MSTORE"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6309": {
      "op": "ADD"
    },
    "6310": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6312": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6314": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6315": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6316": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6317": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SUB",
      "path": "0"
    },
    "6318": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6319": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6321": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6322": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "GAS",
      "path": "0"
    },
    "6323": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "CALL",
      "path": "0"
    },
    "6324": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6325": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6326": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6327": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C4"
    },
    "6330": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6331": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6332": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6334": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6335": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6336": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6337": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6339": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6340": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6341": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6342": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6343": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6344": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6345": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6347": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6348": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6349": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6351": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "NOT",
      "path": "0"
    },
    "6352": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6354": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6355": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ADD",
      "path": "0"
    },
    "6356": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "AND",
      "path": "0"
    },
    "6357": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6358": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ADD",
      "path": "0"
    },
    "6359": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6360": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6362": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6363": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6364": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6365": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "ADD",
      "path": "0"
    },
    "6366": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6367": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E8"
    },
    "6370": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6371": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6372": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "6375": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        11943,
        12021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6376": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6377": {
      "fn": "Forge.mintTo",
      "offset": [
        11943,
        12021
      ],
      "op": "POP",
      "path": "0"
    },
    "6378": {
      "fn": "Forge.mintTo",
      "offset": [
        11814,
        12027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6379": {
      "fn": "Forge.mintTo",
      "offset": [
        12045,
        12055
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 81
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "op": "SUB"
    },
    "6388": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "AND",
      "path": "0"
    },
    "6389": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "6422": {
      "fn": "Forge.mintTo",
      "offset": [
        12057,
        12099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192B"
    },
    "6425": {
      "fn": "Forge.mintTo",
      "offset": [
        12089,
        12098
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6430": {
      "fn": "Forge.mintTo",
      "offset": [
        12074,
        12083
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6431": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "6433": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6434": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "6437": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12083
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6438": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6439": {
      "fn": "Forge.mintTo",
      "offset": [
        12058,
        12083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "6442": {
      "fn": "Forge.mintTo",
      "jump": "i",
      "offset": [
        12058,
        12083
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6443": {
      "fn": "Forge.mintTo",
      "offset": [
        12057,
        12099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6444": {
      "fn": "Forge.mintTo",
      "offset": [
        12101,
        12111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "6446": {
      "fn": "Forge.mintTo",
      "offset": [
        12101,
        12111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6447": {
      "fn": "Forge.mintTo",
      "offset": [
        12113,
        12128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "6449": {
      "fn": "Forge.mintTo",
      "offset": [
        12113,
        12128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6450": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6452": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6453": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6454": {
      "op": "SWAP4"
    },
    "6455": {
      "op": "DUP5"
    },
    "6456": {
      "op": "MSTORE"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6459": {
      "op": "DUP5"
    },
    "6460": {
      "op": "ADD"
    },
    "6461": {
      "op": "SWAP3"
    },
    "6462": {
      "op": "SWAP1"
    },
    "6463": {
      "op": "SWAP3"
    },
    "6464": {
      "op": "MSTORE"
    },
    "6465": {
      "op": "SWAP1"
    },
    "6466": {
      "op": "DUP3"
    },
    "6467": {
      "op": "ADD"
    },
    "6468": {
      "op": "MSTORE"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6471": {
      "op": "ADD"
    },
    "6472": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6474": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6475": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6476": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6477": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "SUB",
      "path": "0"
    },
    "6478": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6479": {
      "fn": "Forge.mintTo",
      "offset": [
        12040,
        12130
      ],
      "op": "LOG2",
      "path": "0"
    },
    "6480": {
      "fn": "Forge.mintTo",
      "offset": [
        12142,
        12151
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 82
    },
    "6481": {
      "fn": "Forge.mintTo",
      "offset": [
        10555,
        12156
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "6482": {
      "op": "POP"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "op": "POP"
    },
    "6486": {
      "op": "POP"
    },
    "6487": {
      "op": "POP"
    },
    "6488": {
      "op": "POP"
    },
    "6489": {
      "fn": "Forge.mintTo",
      "jump": "o",
      "offset": [
        10555,
        12156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6490": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6491": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14242,
        14254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6493": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14260,
        14274
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6494": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14305,
        14320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "6496": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14305,
        14320
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6497": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14322,
        14332
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6498": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14334,
        14339
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6499": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6501": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6502": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6504": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "ADD",
      "path": "0"
    },
    "6505": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1974"
    },
    "6508": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6509": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6510": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6511": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6512": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B91"
    },
    "6515": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14288,
        14340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6516": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6517": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6519": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6520": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6522": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6523": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6524": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SUB",
      "path": "0"
    },
    "6525": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SUB",
      "path": "0"
    },
    "6526": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6527": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6528": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6529": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6531": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14288,
        14340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6532": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6533": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6534": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6535": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6537": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "ADD",
      "path": "0"
    },
    "6538": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14278,
        14341
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6539": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14260,
        14341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6540": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14260,
        14341
      ],
      "op": "POP",
      "path": "0"
    },
    "6541": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14413,
        14429
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 83
    },
    "6542": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14403,
        14409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6543": {
      "branch": 153,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14403,
        14429
      ],
      "op": "EQ",
      "path": "0"
    },
    "6544": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19AB"
    },
    "6547": {
      "branch": 153,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6548": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6550": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6557": {
      "op": "SHL"
    },
    "6558": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6559": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6560": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6562": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "ADD",
      "path": "0"
    },
    "6563": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "6566": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6567": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2E"
    },
    "6570": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14395,
        14480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6571": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14395,
        14480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6572": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14558,
        14570
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 84,
      "value": "0xC"
    },
    "6574": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14558,
        14570
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6575": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14540,
        14570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6576": {
      "branch": 154,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14540,
        14570
      ],
      "op": "LT",
      "path": "0"
    },
    "6577": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CC"
    },
    "6580": {
      "branch": 154,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6581": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6583": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6590": {
      "op": "SHL"
    },
    "6591": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6592": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6593": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6595": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "ADD",
      "path": "0"
    },
    "6596": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "6599": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6600": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7C"
    },
    "6603": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14532,
        14615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6604": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14532,
        14615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6605": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14619,
        14641
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 85,
      "value": "0x19D4"
    },
    "6608": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14619,
        14639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201A"
    },
    "6611": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14619,
        14641
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6612": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14619,
        14641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6613": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14672,
        14689
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x12"
    },
    "6615": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14672,
        14689
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6616": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14654,
        14669
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "6617": {
      "branch": 155,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14654,
        14689
      ],
      "op": "GT",
      "path": "0"
    },
    "6618": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1D"
    },
    "6621": {
      "branch": 155,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6622": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6624": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6633": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6636": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6638": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6639": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "ADD",
      "path": "0"
    },
    "6640": {
      "op": "MSTORE"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6645": {
      "op": "DUP3"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH21",
      "value": "0x4E6F2073616D65207365636F6E6420736F6C766573"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6672": {
      "op": "SHL"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "ADD"
    },
    "6677": {
      "op": "MSTORE"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6680": {
      "op": "ADD"
    },
    "6681": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "6684": {
      "op": "JUMP"
    },
    "6685": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14646,
        14715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6686": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14744,
        14754
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 87
    },
    "6687": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14744,
        14761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6688": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14727,
        14733
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6689": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14727,
        14740
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6690": {
      "branch": 156,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14727,
        14761
      ],
      "op": "EQ",
      "path": "0"
    },
    "6691": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A94"
    },
    "6694": {
      "branch": 156,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6695": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6697": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6706": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6709": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6711": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6712": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "ADD",
      "path": "0"
    },
    "6713": {
      "op": "MSTORE"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH32",
      "value": "0x4D696E74546F2068617320746F20686176652073616D65206E756D626572206F"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6756": {
      "op": "DUP3"
    },
    "6757": {
      "op": "ADD"
    },
    "6758": {
      "op": "MSTORE"
    },
    "6759": {
      "op": "PUSH32",
      "value": "0x66206164647265737373657320617320457874726146756E6473000000000000"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6794": {
      "op": "DUP3"
    },
    "6795": {
      "op": "ADD"
    },
    "6796": {
      "op": "MSTORE"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6799": {
      "op": "ADD"
    },
    "6800": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "6803": {
      "op": "JUMP"
    },
    "6804": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14719,
        14823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6805": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14827,
        14834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6807": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6808": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14856,
        14866
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6809": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14856,
        14873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6810": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14852,
        14854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6811": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14852,
        14873
      ],
      "op": "LT",
      "path": "0"
    },
    "6812": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6813": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C58"
    },
    "6816": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6817": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14909,
        14913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AAB"
    },
    "6820": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14909,
        14911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6821": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14912,
        14913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6823": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14909,
        14913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "6826": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14909,
        14913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6827": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14909,
        14913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6828": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14905,
        14914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB6"
    },
    "6831": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14905,
        14914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6832": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14905,
        14906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6834": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14905,
        14914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "6837": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14905,
        14914
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6838": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14905,
        14914
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6839": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "6841": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6842": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC3"
    },
    "6845": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6846": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6847": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "6850": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14891,
        14915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6851": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6852": {
      "branch": 157,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14891,
        14920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6853": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14888,
        14938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ACD"
    },
    "6856": {
      "branch": 157,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14888,
        14938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6857": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14927,
        14932
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 88,
      "value": "0x1C58"
    },
    "6860": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14927,
        14932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6861": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14888,
        14938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6862": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14976,
        14980
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 89
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6869": {
      "op": "SHL"
    },
    "6870": {
      "op": "SUB"
    },
    "6871": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14981
      ],
      "op": "AND",
      "path": "0"
    },
    "6872": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14960
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6873": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14961,
        14963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6874": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6875": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6876": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6877": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "LT",
      "path": "0"
    },
    "6878": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE9"
    },
    "6881": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6882": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE9"
    },
    "6885": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "6888": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14950,
        14964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6889": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6890": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6892": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "MUL",
      "path": "0"
    },
    "6893": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6895": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "ADD",
      "path": "0"
    },
    "6896": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "ADD",
      "path": "0"
    },
    "6897": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6904": {
      "op": "SHL"
    },
    "6905": {
      "op": "SUB"
    },
    "6906": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14981
      ],
      "op": "AND",
      "path": "0"
    },
    "6907": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14981
      ],
      "op": "EQ",
      "path": "0"
    },
    "6908": {
      "branch": 158,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        14981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6909": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        15018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6910": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        15018
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6911": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        15018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3A"
    },
    "6914": {
      "branch": 158,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        15018
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6915": {
      "op": "POP"
    },
    "6916": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6918": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6919": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6920": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "op": "SUB"
    },
    "6929": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6930": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6931": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "AND",
      "path": "0"
    },
    "6932": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15003,
        15018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6933": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14995
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6934": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6935": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14996,
        14998
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6936": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14996,
        14998
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6937": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6938": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "LT",
      "path": "0"
    },
    "6939": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B26"
    },
    "6942": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6943": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B26"
    },
    "6946": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "6949": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14985,
        14999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6950": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6951": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6953": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "MUL",
      "path": "0"
    },
    "6954": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6956": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "ADD",
      "path": "0"
    },
    "6957": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "ADD",
      "path": "0"
    },
    "6958": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        14999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6965": {
      "op": "SHL"
    },
    "6966": {
      "op": "SUB"
    },
    "6967": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        15018
      ],
      "op": "AND",
      "path": "0"
    },
    "6968": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        15018
      ],
      "op": "EQ",
      "path": "0"
    },
    "6969": {
      "branch": 159,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14985,
        15018
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6970": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14950,
        15018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6971": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B86"
    },
    "6974": {
      "branch": 159,
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6975": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6977": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6984": {
      "op": "SHL"
    },
    "6985": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6986": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6989": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6991": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6992": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "ADD",
      "path": "0"
    },
    "6993": {
      "op": "MSTORE"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6998": {
      "op": "DUP3"
    },
    "6999": {
      "op": "ADD"
    },
    "7000": {
      "op": "MSTORE"
    },
    "7001": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7036": {
      "op": "DUP3"
    },
    "7037": {
      "op": "ADD"
    },
    "7038": {
      "op": "MSTORE"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7041": {
      "op": "ADD"
    },
    "7042": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "7045": {
      "op": "JUMP"
    },
    "7046": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14942,
        15049
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7047": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15058,
        15064
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7049": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15065,
        15069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B93"
    },
    "7052": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15065,
        15067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7053": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15068,
        15069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7055": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15065,
        15069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "7058": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15065,
        15069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7059": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15065,
        15069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7060": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15058,
        15069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7061": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15058,
        15069
      ],
      "op": "POP",
      "path": "0"
    },
    "7062": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7063": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15074,
        15084
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7064": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15074,
        15091
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7065": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15071,
        15072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7066": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15071,
        15091
      ],
      "op": "LT",
      "path": "0"
    },
    "7067": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7068": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C45"
    },
    "7071": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7072": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15138
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 90
    },
    "7073": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15139,
        15141
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7074": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7075": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7076": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7077": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "LT",
      "path": "0"
    },
    "7078": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB1"
    },
    "7081": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7082": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB1"
    },
    "7085": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "7088": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15128,
        15142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7089": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7090": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7092": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "MUL",
      "path": "0"
    },
    "7093": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7095": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "ADD",
      "path": "0"
    },
    "7096": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "ADD",
      "path": "0"
    },
    "7097": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15128,
        15142
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7104": {
      "op": "SHL"
    },
    "7105": {
      "op": "SUB"
    },
    "7106": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15142
      ],
      "op": "AND",
      "path": "0"
    },
    "7107": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15121
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7108": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15122,
        15123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7109": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7110": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7111": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7112": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "LT",
      "path": "0"
    },
    "7113": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD4"
    },
    "7116": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7117": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD4"
    },
    "7120": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "7123": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15111,
        15124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7124": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7125": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7127": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "MUL",
      "path": "0"
    },
    "7128": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7130": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "ADD",
      "path": "0"
    },
    "7131": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "ADD",
      "path": "0"
    },
    "7132": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "op": "SUB"
    },
    "7141": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15142
      ],
      "op": "AND",
      "path": "0"
    },
    "7142": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15142
      ],
      "op": "EQ",
      "path": "0"
    },
    "7143": {
      "branch": 160,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15111,
        15142
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7144": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C33"
    },
    "7147": {
      "branch": 160,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7148": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7150": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7157": {
      "op": "SHL"
    },
    "7158": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7159": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7162": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7164": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7165": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "ADD",
      "path": "0"
    },
    "7166": {
      "op": "MSTORE"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7171": {
      "op": "DUP3"
    },
    "7172": {
      "op": "ADD"
    },
    "7173": {
      "op": "MSTORE"
    },
    "7174": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7209": {
      "op": "DUP3"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "op": "MSTORE"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7214": {
      "op": "ADD"
    },
    "7215": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "7218": {
      "op": "JUMP"
    },
    "7219": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15103,
        15174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7220": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 91
    },
    "7221": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3D"
    },
    "7224": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7225": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "7228": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15093,
        15096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7229": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7230": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7231": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "POP",
      "path": "0"
    },
    "7232": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15093,
        15096
      ],
      "op": "POP",
      "path": "0"
    },
    "7233": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B96"
    },
    "7236": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7237": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15054,
        15180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7238": {
      "op": "POP"
    },
    "7239": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 92
    },
    "7240": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C50"
    },
    "7243": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7244": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "7247": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        14875,
        14879
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7248": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7249": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7250": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "POP",
      "path": "0"
    },
    "7251": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14875,
        14879
      ],
      "op": "POP",
      "path": "0"
    },
    "7252": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A97"
    },
    "7255": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7256": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14840,
        15184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7257": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15188,
        15197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7259": {
      "offset": [
        6106,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "7262": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15220,
        15237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "7264": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15220,
        15237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7265": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15217
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "7266": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6B"
    },
    "7269": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7270": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7271": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "7274": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15202,
        15237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7275": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15202,
        15237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7276": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15201,
        15244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C77"
    },
    "7279": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15201,
        15244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7280": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15241,
        15244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7283": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15201,
        15244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7286": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15201,
        15244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7287": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15201,
        15244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7288": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15200,
        15258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C81"
    },
    "7291": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15200,
        15258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7292": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15200,
        15258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7293": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15200,
        15258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "7296": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15200,
        15258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7297": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15200,
        15258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7298": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15188,
        15258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7299": {
      "op": "POP"
    },
    "7300": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15262,
        15272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7302": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15285,
        15288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7305": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C93"
    },
    "7308": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15188,
        15258
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7309": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15279,
        15282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "7311": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7314": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15275,
        15282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7315": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7316": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9D"
    },
    "7319": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7320": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7321": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "7324": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15275,
        15288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7325": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15275,
        15288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7326": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15262,
        15288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7327": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15262,
        15288
      ],
      "op": "POP",
      "path": "0"
    },
    "7328": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15292,
        15304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7330": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15323,
        15326
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "7333": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15315,
        15320
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7334": {
      "branch": 161,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15315,
        15326
      ],
      "op": "LT",
      "path": "0"
    },
    "7335": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7336": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE2"
    },
    "7339": {
      "branch": 161,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7340": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15380,
        15403
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 93,
      "value": "0x1CBF"
    },
    "7343": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15399,
        15402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7346": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15381,
        15393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "7349": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15392,
        15393
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7350": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15381,
        15389
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "7355": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15381,
        15393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7358": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15381,
        15393
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7359": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15380,
        15403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7360": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CD1"
    },
    "7363": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15369,
        15377
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "7367": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15355,
        15361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A5"
    },
    "7370": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15360,
        15361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7372": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15355,
        15356
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7373": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15355,
        15361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1F"
    },
    "7376": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15355,
        15361
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7377": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7378": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CDB"
    },
    "7381": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15403
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7382": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7383": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "7386": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15342,
        15403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7387": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15342,
        15403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7388": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15332,
        15403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7389": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15332,
        15403
      ],
      "op": "POP",
      "path": "0"
    },
    "7390": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D07"
    },
    "7393": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7394": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7395": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15452
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 94,
      "value": "0x1CF6"
    },
    "7398": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15448,
        15451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7401": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15429,
        15442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "7404": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15429,
        15430
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7405": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15433,
        15442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "7410": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15429,
        15442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7413": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15429,
        15442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7414": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7415": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D04"
    },
    "7418": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7419": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15456,
        15465
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x14DC9380"
    },
    "7424": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "7427": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15428,
        15466
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7428": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15428,
        15466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7429": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15418,
        15466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7430": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15418,
        15466
      ],
      "op": "POP",
      "path": "0"
    },
    "7431": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15312,
        15471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7432": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15493,
        15494
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0x0"
    },
    "7434": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15483,
        15490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7435": {
      "branch": 162,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15483,
        15494
      ],
      "op": "GT",
      "path": "0"
    },
    "7436": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D44"
    },
    "7439": {
      "branch": 162,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7440": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7442": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7449": {
      "op": "SHL"
    },
    "7450": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7451": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7454": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7456": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7457": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "ADD",
      "path": "0"
    },
    "7458": {
      "op": "MSTORE"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7463": {
      "op": "DUP3"
    },
    "7464": {
      "op": "ADD"
    },
    "7465": {
      "op": "MSTORE"
    },
    "7466": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7479": {
      "op": "SHL"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7482": {
      "op": "DUP3"
    },
    "7483": {
      "op": "ADD"
    },
    "7484": {
      "op": "MSTORE"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7487": {
      "op": "ADD"
    },
    "7488": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "7491": {
      "op": "JUMP"
    },
    "7492": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15475,
        15509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7493": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15513,
        15530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7495": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15534,
        15552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7496": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15560,
        15566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7498": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7499": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15572,
        15574
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7500": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15570,
        15571
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7501": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15570,
        15574
      ],
      "op": "LT",
      "path": "0"
    },
    "7502": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7503": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1E"
    },
    "7506": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7507": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15862,
        15865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5D"
    },
    "7510": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15862,
        15863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7511": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15864,
        15865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7513": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15862,
        15865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "7516": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15862,
        15865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7517": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15862,
        15865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7518": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15858,
        15866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D68"
    },
    "7521": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15858,
        15866
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7522": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15858,
        15859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7524": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15858,
        15866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "7527": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15858,
        15866
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7528": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15858,
        15866
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7529": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "7531": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15854
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7532": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D75"
    },
    "7535": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7536": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7537": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "7540": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15844,
        15867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7541": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15844,
        15867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7542": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15841,
        16236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0C"
    },
    "7545": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15841,
        16236
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7546": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15909
      ],
      "op": "DUP11",
      "path": "0",
      "statement": 96
    },
    "7547": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15910,
        15911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7548": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7549": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7550": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7551": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "LT",
      "path": "0"
    },
    "7552": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8B"
    },
    "7555": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7556": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8B"
    },
    "7559": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "7562": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15899,
        15912
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7563": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7564": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7566": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7567": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7568": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "MUL",
      "path": "0"
    },
    "7569": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7570": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7571": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7572": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "ADD",
      "path": "0"
    },
    "7573": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "ADD",
      "path": "0"
    },
    "7574": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15899,
        15912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7575": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7577": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7578": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7585": {
      "op": "SHL"
    },
    "7586": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7587": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7588": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15932,
        15936
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "7589": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7591": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7592": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ADD",
      "path": "0"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7600": {
      "op": "SHL"
    },
    "7601": {
      "op": "SUB"
    },
    "7602": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7603": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7604": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "AND",
      "path": "0"
    },
    "7605": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7606": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "7611": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7614": {
      "op": "ADD"
    },
    "7615": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7617": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7619": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7620": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7621": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7622": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "SUB",
      "path": "0"
    },
    "7623": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7624": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7625": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "GAS",
      "path": "0"
    },
    "7626": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7627": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7628": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7629": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7630": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DDB"
    },
    "7633": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7634": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7635": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7637": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7638": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7639": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7640": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7642": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7643": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7644": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "POP",
      "path": "0"
    },
    "7645": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "POP",
      "path": "0"
    },
    "7646": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "POP",
      "path": "0"
    },
    "7647": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "POP",
      "path": "0"
    },
    "7648": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7650": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7651": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7652": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7654": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "NOT",
      "path": "0"
    },
    "7655": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7657": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7658": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ADD",
      "path": "0"
    },
    "7659": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "AND",
      "path": "0"
    },
    "7660": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7661": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ADD",
      "path": "0"
    },
    "7662": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7663": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7665": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7666": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "POP",
      "path": "0"
    },
    "7667": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7668": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "ADD",
      "path": "0"
    },
    "7669": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7670": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFF"
    },
    "7673": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7674": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7675": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BEF"
    },
    "7678": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15892,
        15938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7679": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15892,
        15938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7680": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15879,
        15938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7681": {
      "op": "POP"
    },
    "7682": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15947,
        15962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7683": {
      "branch": 163,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15947,
        15962
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7684": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15944,
        16222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0C"
    },
    "7687": {
      "branch": 163,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15944,
        16222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7688": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E12"
    },
    "7691": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15978,
        15979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7693": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15975
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7694": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "7697": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15974,
        15979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7698": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7699": {
      "branch": 164,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15984
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7700": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7701": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15994
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7702": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1E"
    },
    "7705": {
      "branch": 164,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15994
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7706": {
      "op": "POP"
    },
    "7707": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15988,
        15994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7708": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15988,
        15994
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7709": {
      "branch": 165,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15988,
        15994
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7710": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15974,
        15994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7711": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7712": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3D"
    },
    "7715": {
      "branch": 165,
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7716": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16015,
        16064
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 97,
      "value": "0x1E36"
    },
    "7719": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16047,
        16063
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "7725": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16016,
        16036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "7728": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16029,
        16036
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7729": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16016,
        16026
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7730": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16016,
        16036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7733": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        16016,
        16036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7734": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16015,
        16064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7735": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16003,
        16064
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7736": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16003,
        16064
      ],
      "op": "POP",
      "path": "0"
    },
    "7737": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E53"
    },
    "7740": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7741": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7742": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16096,
        16141
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 98,
      "value": "0x1E50"
    },
    "7745": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16123,
        16139
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "7751": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16097,
        16117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "7754": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16110,
        16117
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7755": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16097,
        16107
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7756": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16097,
        16117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "7759": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        16097,
        16117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7760": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16096,
        16141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7761": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16084,
        16141
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7762": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16084,
        16141
      ],
      "op": "POP",
      "path": "0"
    },
    "7763": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15970,
        16152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7764": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16177
      ],
      "op": "DUP11",
      "path": "0",
      "statement": 99
    },
    "7765": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16178,
        16179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7766": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7767": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7768": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7769": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "LT",
      "path": "0"
    },
    "7770": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E65"
    },
    "7773": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7774": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E65"
    },
    "7777": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "7780": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        16167,
        16180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7781": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7782": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7784": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "MUL",
      "path": "0"
    },
    "7785": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7787": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7788": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "ADD",
      "path": "0"
    },
    "7789": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16167,
        16180
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7796": {
      "op": "SHL"
    },
    "7797": {
      "op": "SUB"
    },
    "7798": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16190
      ],
      "op": "AND",
      "path": "0"
    },
    "7799": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16190
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "7804": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16197
      ],
      "op": "DUP12",
      "path": "0"
    },
    "7805": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16198,
        16199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7806": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7807": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7808": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7809": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "LT",
      "path": "0"
    },
    "7810": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8D"
    },
    "7813": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7814": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8D"
    },
    "7817": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A11"
    },
    "7820": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        16191,
        16200
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7821": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7822": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7824": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "MUL",
      "path": "0"
    },
    "7825": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7827": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "ADD",
      "path": "0"
    },
    "7828": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "ADD",
      "path": "0"
    },
    "7829": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16191,
        16200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7830": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16202,
        16211
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7831": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7833": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7834": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7835": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7840": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "AND",
      "path": "0"
    },
    "7841": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7843": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SHL",
      "path": "0"
    },
    "7844": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7845": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7846": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7848": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ADD",
      "path": "0"
    },
    "7849": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC7"
    },
    "7852": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7853": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7854": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7861": {
      "op": "SHL"
    },
    "7862": {
      "op": "SUB"
    },
    "7863": {
      "op": "SWAP3"
    },
    "7864": {
      "op": "SWAP1"
    },
    "7865": {
      "op": "SWAP3"
    },
    "7866": {
      "op": "AND"
    },
    "7867": {
      "op": "DUP3"
    },
    "7868": {
      "op": "MSTORE"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7871": {
      "op": "DUP3"
    },
    "7872": {
      "op": "ADD"
    },
    "7873": {
      "op": "MSTORE"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7876": {
      "op": "ADD"
    },
    "7877": {
      "op": "SWAP1"
    },
    "7878": {
      "op": "JUMP"
    },
    "7879": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7880": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7882": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7884": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7885": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7886": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7887": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SUB",
      "path": "0"
    },
    "7888": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7889": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7891": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7892": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "GAS",
      "path": "0"
    },
    "7893": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "CALL",
      "path": "0"
    },
    "7894": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7895": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7896": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7897": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE6"
    },
    "7900": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7901": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7902": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7904": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7905": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7906": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7907": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7909": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7910": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7911": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7912": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7913": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7914": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7915": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7917": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7918": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7919": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7921": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "NOT",
      "path": "0"
    },
    "7922": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7924": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7925": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ADD",
      "path": "0"
    },
    "7926": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "AND",
      "path": "0"
    },
    "7927": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7928": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ADD",
      "path": "0"
    },
    "7929": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7930": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7932": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7933": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7934": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7935": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "ADD",
      "path": "0"
    },
    "7936": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7937": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0A"
    },
    "7940": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7941": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7942": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB9"
    },
    "7945": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        16160,
        16212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7946": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7947": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16160,
        16212
      ],
      "op": "POP",
      "path": "0"
    },
    "7948": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15944,
        16222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7949": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 100
    },
    "7950": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F16"
    },
    "7953": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7954": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A27"
    },
    "7957": {
      "fn": "Forge.empty_mintTo",
      "jump": "i",
      "offset": [
        15576,
        15579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7958": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7959": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7960": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "POP",
      "path": "0"
    },
    "7961": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15576,
        15579
      ],
      "op": "POP",
      "path": "0"
    },
    "7962": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4A"
    },
    "7965": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7966": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        15556,
        16246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7967": {
      "op": "POP"
    },
    "7968": {
      "op": "POP"
    },
    "7969": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16270,
        16285
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 101
    },
    "7970": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16250,
        16267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "7972": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16250,
        16285
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7973": {
      "op": "POP"
    },
    "7974": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        16296,
        16303
      ],
      "op": "SWAP10",
      "path": "0",
      "statement": 102
    },
    "7975": {
      "fn": "Forge.empty_mintTo",
      "offset": [
        14109,
        16310
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "op": "POP"
    },
    "7979": {
      "op": "POP"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "op": "POP"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "fn": "Forge.empty_mintTo",
      "jump": "o",
      "offset": [
        14109,
        16310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7986": {
      "fn": "SafeMath2.div",
      "offset": [
        4427,
        4563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7987": {
      "fn": "SafeMath2.div",
      "offset": [
        4485,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7989": {
      "branch": 166,
      "fn": "SafeMath2.div",
      "offset": [
        4512,
        4518
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 103
    },
    "7990": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F6F"
    },
    "7993": {
      "branch": 166,
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7994": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7996": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8003": {
      "op": "SHL"
    },
    "8004": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8005": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8008": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8010": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8011": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "ADD",
      "path": "0"
    },
    "8012": {
      "op": "MSTORE"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8017": {
      "op": "DUP3"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "op": "MSTORE"
    },
    "8020": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8034": {
      "op": "SHL"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8037": {
      "op": "DUP3"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "MSTORE"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "8046": {
      "op": "JUMP"
    },
    "8047": {
      "fn": "SafeMath2.div",
      "offset": [
        4504,
        4534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8048": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 104,
      "value": "0x1F79"
    },
    "8051": {
      "fn": "SafeMath2.div",
      "offset": [
        4555,
        4556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8052": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4552
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8053": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "8056": {
      "fn": "SafeMath2.div",
      "jump": "i",
      "offset": [
        4551,
        4556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8057": {
      "fn": "SafeMath2.div",
      "offset": [
        4551,
        4556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8058": {
      "fn": "SafeMath2.div",
      "offset": [
        4544,
        4556
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8059": {
      "fn": "SafeMath2.div",
      "offset": [
        4427,
        4563
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8060": {
      "op": "POP"
    },
    "8061": {
      "op": "POP"
    },
    "8062": {
      "op": "POP"
    },
    "8063": {
      "fn": "SafeMath2.div",
      "jump": "o",
      "offset": [
        4427,
        4563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8064": {
      "fn": "SafeMath2.sub",
      "offset": [
        4056,
        4194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8065": {
      "fn": "SafeMath2.sub",
      "offset": [
        4114,
        4121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8067": {
      "fn": "SafeMath2.sub",
      "offset": [
        4146,
        4147
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 105
    },
    "8068": {
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4142
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8069": {
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4147
      ],
      "op": "LT",
      "path": "0"
    },
    "8070": {
      "branch": 167,
      "fn": "SafeMath2.sub",
      "offset": [
        4141,
        4147
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8071": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC2"
    },
    "8074": {
      "branch": 167,
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8075": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8077": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8086": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8089": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8091": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8092": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "ADD",
      "path": "0"
    },
    "8093": {
      "op": "MSTORE"
    },
    "8094": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8098": {
      "op": "DUP3"
    },
    "8099": {
      "op": "ADD"
    },
    "8100": {
      "op": "MSTORE"
    },
    "8101": {
      "op": "PUSH13",
      "value": "0x53756220756E646572666C6F77"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "8117": {
      "op": "SHL"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8120": {
      "op": "DUP3"
    },
    "8121": {
      "op": "ADD"
    },
    "8122": {
      "op": "MSTORE"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "8129": {
      "op": "JUMP"
    },
    "8130": {
      "fn": "SafeMath2.sub",
      "offset": [
        4133,
        4165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8131": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4187
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 106,
      "value": "0x1F79"
    },
    "8134": {
      "fn": "SafeMath2.sub",
      "offset": [
        4186,
        4187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8135": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4183
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8136": {
      "fn": "SafeMath2.sub",
      "offset": [
        4182,
        4187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "8139": {
      "fn": "SafeMath2.sub",
      "jump": "i",
      "offset": [
        4182,
        4187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8140": {
      "fn": "SafeMath2.add",
      "offset": [
        3890,
        4050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8141": {
      "fn": "SafeMath2.add",
      "offset": [
        3948,
        3955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8143": {
      "fn": "SafeMath2.add",
      "offset": [
        3948,
        3955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8144": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD9"
    },
    "8147": {
      "fn": "SafeMath2.add",
      "offset": [
        3983,
        3984
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8148": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3980
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8149": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "8152": {
      "fn": "SafeMath2.add",
      "jump": "i",
      "offset": [
        3979,
        3984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8153": {
      "fn": "SafeMath2.add",
      "offset": [
        3979,
        3984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8154": {
      "fn": "SafeMath2.add",
      "offset": [
        3967,
        3984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8155": {
      "fn": "SafeMath2.add",
      "offset": [
        3967,
        3984
      ],
      "op": "POP",
      "path": "0"
    },
    "8156": {
      "fn": "SafeMath2.add",
      "offset": [
        4007,
        4008
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 107
    },
    "8157": {
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8158": {
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4008
      ],
      "op": "LT",
      "path": "0"
    },
    "8159": {
      "branch": 168,
      "fn": "SafeMath2.add",
      "offset": [
        4002,
        4008
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8160": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F79"
    },
    "8163": {
      "branch": 168,
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8164": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8166": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8173": {
      "op": "SHL"
    },
    "8174": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8175": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8178": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8180": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8181": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "ADD",
      "path": "0"
    },
    "8182": {
      "op": "MSTORE"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8187": {
      "op": "DUP3"
    },
    "8188": {
      "op": "ADD"
    },
    "8189": {
      "op": "MSTORE"
    },
    "8190": {
      "op": "PUSH12",
      "value": "0x416464206F766572666C6F77"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8205": {
      "op": "SHL"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8208": {
      "op": "DUP3"
    },
    "8209": {
      "op": "ADD"
    },
    "8210": {
      "op": "MSTORE"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8213": {
      "op": "ADD"
    },
    "8214": {
      "fn": "SafeMath2.add",
      "offset": [
        3994,
        4025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "8217": {
      "op": "JUMP"
    },
    "8218": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16315,
        17680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8219": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16565,
        16580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "8221": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16565,
        16580
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8222": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16548,
        16561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "8224": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16548,
        16561
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8225": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "8227": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16543
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8228": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x202C"
    },
    "8231": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8232": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "8235": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16531,
        16562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8236": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8237": {
      "branch": 169,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16580
      ],
      "op": "GT",
      "path": "0"
    },
    "8238": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8239": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8240": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203B"
    },
    "8243": {
      "branch": 169,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8244": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "POP",
      "path": "0"
    },
    "8245": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16596,
        16598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3C"
    },
    "8247": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16584,
        16593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8249": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16584,
        16593
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8250": {
      "branch": 170,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16584,
        16598
      ],
      "op": "LT",
      "path": "0"
    },
    "8251": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16531,
        16598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8252": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16527,
        16712
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8253": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16527,
        16712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2087"
    },
    "8256": {
      "branch": 170,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16527,
        16712
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8257": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16628
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 108,
      "value": "0xE"
    },
    "8259": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16628
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8260": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x204E"
    },
    "8263": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8264": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16631,
        16632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8266": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "8269": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16619,
        16632
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8270": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16619,
        16632
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8271": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16607,
        16616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8273": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16607,
        16632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8274": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16607,
        16632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8275": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16607,
        16632
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8276": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16707
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 109,
      "value": "0x2076"
    },
    "8279": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8280": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16692,
        16705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2062"
    },
    "8283": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16692,
        16705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8284": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16704,
        16705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8286": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16692,
        16705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "8289": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16692,
        16705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8290": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16692,
        16705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8291": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16688,
        16706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206D"
    },
    "8294": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16688,
        16706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8295": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16688,
        16689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8297": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16688,
        16706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B26"
    },
    "8300": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16688,
        16706
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8301": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16688,
        16706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8302": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8304": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16682
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8305": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8306": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "8309": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16670,
        16707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8310": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16670,
        16707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8311": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8313": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16667
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8314": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2083"
    },
    "8317": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16707
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8318": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8319": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "8322": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16655,
        16707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8323": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16655,
        16707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8324": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16637,
        16652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "8326": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16637,
        16707
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8327": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16527,
        16712
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8328": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16894
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 110,
      "value": "0x8"
    },
    "8330": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8331": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2095"
    },
    "8334": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8335": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16899,
        16900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8337": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "8340": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16884,
        16901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8341": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16884,
        16901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8342": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16871,
        16881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "8344": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16871,
        16901
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8345": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "8347": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8348": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A7"
    },
    "8351": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8352": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17022,
        17023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8354": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17022,
        17023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8355": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "8358": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16995,
        17023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8359": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16995,
        17023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8360": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16980,
        16990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "8362": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16980,
        16990
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8363": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16979,
        17024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20B4"
    },
    "8366": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16979,
        17024
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8367": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16979,
        17024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8368": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16979,
        17024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "8371": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16979,
        17024
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8372": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16979,
        17024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8373": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16976,
        17627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225A"
    },
    "8376": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        16976,
        17627
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8377": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17038,
        17053
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 111,
      "value": "0x20C0"
    },
    "8380": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17038,
        17051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F9"
    },
    "8383": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17038,
        17053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8384": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17038,
        17053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8385": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17091,
        17128
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 112,
      "value": "0x20D2"
    },
    "8388": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "8390": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8391": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17125,
        17126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8393": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2062"
    },
    "8396": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17126
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8397": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8398": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17113,
        17126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "8401": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17113,
        17126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8402": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17091,
        17128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8403": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8405": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17088
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8406": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DF"
    },
    "8409": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8410": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8411": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "8414": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17076,
        17128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8415": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17076,
        17128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8416": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17058,
        17073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "8418": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17058,
        17128
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8419": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17151,
        17175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "8421": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17151,
        17175
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8422": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "8424": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17148
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8425": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F2"
    },
    "8428": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17175
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8429": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17151,
        17175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8430": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "8433": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17138,
        17175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8434": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17138,
        17175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8435": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17134,
        17623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225A"
    },
    "8438": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17134,
        17623
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8439": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 113,
      "value": "0x4"
    },
    "8441": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8442": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8443": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8445": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8446": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8453": {
      "op": "SHL"
    },
    "8454": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8455": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8456": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17246,
        17250
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8457": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8458": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8459": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ADD",
      "path": "0"
    },
    "8460": {
      "op": "SWAP3"
    },
    "8461": {
      "op": "SWAP1"
    },
    "8462": {
      "op": "SWAP3"
    },
    "8463": {
      "op": "MSTORE"
    },
    "8464": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17256,
        17270
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x2E90EDD000"
    },
    "8470": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17256,
        17270
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8477": {
      "op": "SHL"
    },
    "8478": {
      "op": "SUB"
    },
    "8479": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8480": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8481": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "AND",
      "path": "0"
    },
    "8482": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17211,
        17226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8483": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17237
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "8488": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8494": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8496": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8497": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8498": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8499": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "SUB",
      "path": "0"
    },
    "8500": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8501": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8502": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "GAS",
      "path": "0"
    },
    "8503": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8504": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8505": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8506": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8507": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2148"
    },
    "8510": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8511": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8512": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8514": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8515": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8516": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8517": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8519": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8520": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8521": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "POP",
      "path": "0"
    },
    "8522": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "POP",
      "path": "0"
    },
    "8523": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "POP",
      "path": "0"
    },
    "8524": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "POP",
      "path": "0"
    },
    "8525": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8527": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8528": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8529": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8531": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "NOT",
      "path": "0"
    },
    "8532": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8534": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8535": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ADD",
      "path": "0"
    },
    "8536": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "AND",
      "path": "0"
    },
    "8537": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8538": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ADD",
      "path": "0"
    },
    "8539": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8540": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8542": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8543": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "POP",
      "path": "0"
    },
    "8544": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8545": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "ADD",
      "path": "0"
    },
    "8546": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8547": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216C"
    },
    "8550": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8551": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8552": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BEF"
    },
    "8555": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17204,
        17252
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8556": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8557": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2176"
    },
    "8560": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8561": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8562": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "8565": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17204,
        17271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8566": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17204,
        17271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8567": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17191,
        17200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8569": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17191,
        17272
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8570": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17191,
        17272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8571": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17191,
        17272
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8572": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17357,
        17374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2187"
    },
    "8575": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17357,
        17374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8576": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17357,
        17362
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "8579": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17357,
        17374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "8582": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17357,
        17374
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8583": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17357,
        17374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8584": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17349,
        17374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2193"
    },
    "8587": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17349,
        17374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8588": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17349,
        17354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "8591": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17349,
        17374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "8594": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17349,
        17374
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8595": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17349,
        17374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8596": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17334,
        17343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "8598": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17334,
        17343
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8599": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17290,
        17305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8601": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17290,
        17305
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8602": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17290,
        17305
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8603": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8605": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8606": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8613": {
      "op": "SHL"
    },
    "8614": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8615": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8616": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17325,
        17329
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8617": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8618": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8619": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ADD",
      "path": "0"
    },
    "8620": {
      "op": "SWAP3"
    },
    "8621": {
      "op": "SWAP1"
    },
    "8622": {
      "op": "SWAP3"
    },
    "8623": {
      "op": "MSTORE"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8630": {
      "op": "SHL"
    },
    "8631": {
      "op": "SUB"
    },
    "8632": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17290,
        17305
      ],
      "op": "AND",
      "path": "0"
    },
    "8633": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17290,
        17305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8634": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17316
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "8639": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8642": {
      "op": "ADD"
    },
    "8643": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8645": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8647": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8648": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8649": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8650": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "SUB",
      "path": "0"
    },
    "8651": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8652": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8653": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "GAS",
      "path": "0"
    },
    "8654": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8655": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8656": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8657": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8658": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21DF"
    },
    "8661": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8662": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8663": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8665": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8666": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8667": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8668": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8670": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8671": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8672": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "POP",
      "path": "0"
    },
    "8673": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "POP",
      "path": "0"
    },
    "8674": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "POP",
      "path": "0"
    },
    "8675": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "POP",
      "path": "0"
    },
    "8676": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8678": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8679": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8680": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8682": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "NOT",
      "path": "0"
    },
    "8683": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8685": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8686": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ADD",
      "path": "0"
    },
    "8687": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "AND",
      "path": "0"
    },
    "8688": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8689": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ADD",
      "path": "0"
    },
    "8690": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8691": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8693": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8694": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "POP",
      "path": "0"
    },
    "8695": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8696": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "ADD",
      "path": "0"
    },
    "8697": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8698": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2203"
    },
    "8701": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8702": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8703": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BEF"
    },
    "8706": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17283,
        17331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8707": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8708": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220D"
    },
    "8711": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17343
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8712": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8713": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "8716": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17283,
        17343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8717": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17283,
        17343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8718": {
      "branch": 171,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17281,
        17375
      ],
      "op": "GT",
      "path": "0"
    },
    "8719": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2240"
    },
    "8722": {
      "branch": 171,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8723": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17478,
        17487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "8725": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17478,
        17487
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8726": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "8728": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8729": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2223"
    },
    "8732": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8733": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17473,
        17474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8735": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "8738": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17459,
        17475
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8739": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8740": {
      "branch": 172,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17459,
        17487
      ],
      "op": "GT",
      "path": "0"
    },
    "8741": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17456,
        17538
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8742": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17456,
        17538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223B"
    },
    "8745": {
      "branch": 172,
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17456,
        17538
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8746": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 114,
      "value": "0x15"
    },
    "8748": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8749": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2237"
    },
    "8752": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8753": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17528,
        17529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8755": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "8758": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17514,
        17530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8759": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17514,
        17530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8760": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17502,
        17511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "8762": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17502,
        17530
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8763": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17456,
        17538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8764": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2252"
    },
    "8767": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8768": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8769": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17576
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 115,
      "value": "0x15"
    },
    "8771": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17576
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8772": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224E"
    },
    "8775": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8776": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17582,
        17583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "8778": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2388"
    },
    "8781": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17567,
        17584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8782": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17567,
        17584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8783": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17555,
        17564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "8785": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17555,
        17584
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8786": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17278,
        17591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8787": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17596,
        17617
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 116,
      "value": "0x225A"
    },
    "8790": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17596,
        17615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23ED"
    },
    "8793": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17596,
        17617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8794": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17596,
        17617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8795": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17659,
        17675
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 117,
      "value": "0x2265"
    },
    "8798": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17674,
        17675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8800": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17659,
        17671
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "8801": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17659,
        17675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "8804": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        17659,
        17675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8805": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17659,
        17675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8806": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17649,
        17676
      ],
      "op": "BLOCKHASH",
      "path": "0"
    },
    "8807": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17631,
        17646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "8809": {
      "fn": "Forge._startNewMiningEpoch",
      "offset": [
        17631,
        17676
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8810": {
      "fn": "Forge._startNewMiningEpoch",
      "jump": "o",
      "offset": [
        16315,
        17680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8811": {
      "fn": "Ownable.setOwner",
      "offset": [
        3342,
        3473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8812": {
      "offset": [
        3298,
        3303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8814": {
      "fn": "Ownable.setOwner",
      "offset": [
        3298,
        3303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8821": {
      "op": "SHL"
    },
    "8822": {
      "op": "SUB"
    },
    "8823": {
      "offset": [
        3298,
        3303
      ],
      "op": "AND",
      "path": "0"
    },
    "8824": {
      "offset": [
        3284,
        3294
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8825": {
      "offset": [
        3284,
        3303
      ],
      "op": "EQ",
      "path": "0"
    },
    "8826": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B2"
    },
    "8829": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8830": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8832": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8839": {
      "op": "SHL"
    },
    "8840": {
      "offset": [
        3276,
        3318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8841": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8844": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8846": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8847": {
      "fn": "Ownable.setOwner",
      "offset": [
        3276,
        3318
      ],
      "op": "ADD",
      "path": "0"
    },
    "8848": {
      "op": "MSTORE"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8853": {
      "op": "DUP3"
    },
    "8854": {
      "op": "ADD"
    },
    "8855": {
      "op": "MSTORE"
    },
    "8856": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "8869": {
      "op": "SHL"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8872": {
      "op": "DUP3"
    },
    "8873": {
      "op": "ADD"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8877": {
      "op": "ADD"
    },
    "8878": {
      "offset": [
        3276,
        3318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "8881": {
      "op": "JUMP"
    },
    "8882": {
      "offset": [
        3276,
        3318
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8883": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 118,
      "value": "0x0"
    },
    "8885": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8886": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8888": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8889": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8896": {
      "op": "SHL"
    },
    "8897": {
      "op": "SUB"
    },
    "8898": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8899": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8900": {
      "fn": "Ownable.setOwner",
      "offset": [
        3428,
        3433
      ],
      "op": "AND",
      "path": "0"
    },
    "8901": {
      "op": "DUP2"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "SWAP2"
    },
    "8904": {
      "op": "DUP4"
    },
    "8905": {
      "op": "AND"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8908": {
      "op": "DUP4"
    },
    "8909": {
      "op": "ADD"
    },
    "8910": {
      "op": "MSTORE"
    },
    "8911": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C"
    },
    "8944": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8945": {
      "op": "ADD"
    },
    "8946": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8948": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8949": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8950": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8951": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SUB",
      "path": "0"
    },
    "8952": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8953": {
      "fn": "Ownable.setOwner",
      "offset": [
        3410,
        3442
      ],
      "op": "LOG1",
      "path": "0"
    },
    "8954": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3457
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 119,
      "value": "0x0"
    },
    "8956": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8957": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8964": {
      "op": "SHL"
    },
    "8965": {
      "op": "SUB"
    },
    "8966": {
      "op": "NOT"
    },
    "8967": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "0"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8974": {
      "op": "SHL"
    },
    "8975": {
      "op": "SUB"
    },
    "8976": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8977": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8978": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8979": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "0"
    },
    "8980": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8981": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8982": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8983": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "OR",
      "path": "0"
    },
    "8984": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8985": {
      "fn": "Ownable.setOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8986": {
      "fn": "Ownable.setOwner",
      "jump": "o",
      "offset": [
        3342,
        3473
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8987": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4569,
        4793
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8988": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4632,
        4639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8990": {
      "branch": 173,
      "fn": "SafeMath2.divRound",
      "offset": [
        4659,
        4665
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 120
    },
    "8991": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2358"
    },
    "8994": {
      "branch": 173,
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8995": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8997": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9004": {
      "op": "SHL"
    },
    "9005": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9006": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9009": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9011": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9012": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "ADD",
      "path": "0"
    },
    "9013": {
      "op": "MSTORE"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9018": {
      "op": "DUP3"
    },
    "9019": {
      "op": "ADD"
    },
    "9020": {
      "op": "MSTORE"
    },
    "9021": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9035": {
      "op": "SHL"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9038": {
      "op": "DUP3"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "op": "MSTORE"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9043": {
      "op": "ADD"
    },
    "9044": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "9047": {
      "op": "JUMP"
    },
    "9048": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4651,
        4681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9049": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4691,
        4700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9051": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2364"
    },
    "9054": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4707,
        4708
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9055": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4704
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9056": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "9059": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4703,
        4708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9060": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4703,
        4708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9061": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4691,
        4708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9062": {
      "op": "POP"
    },
    "9063": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2370"
    },
    "9066": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4726,
        4727
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9067": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4723
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9068": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BDB"
    },
    "9071": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4722,
        4727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9072": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9073": {
      "branch": 174,
      "fn": "SafeMath2.divRound",
      "offset": [
        4722,
        4732
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9074": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4718,
        4768
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F79"
    },
    "9077": {
      "branch": 174,
      "fn": "SafeMath2.divRound",
      "offset": [
        4718,
        4768
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9078": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 121,
      "value": "0x2380"
    },
    "9081": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9082": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4756,
        4757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9084": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F9"
    },
    "9087": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4752,
        4757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9088": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4752,
        4757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9089": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4748,
        4757
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9090": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4569,
        4793
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9091": {
      "op": "POP"
    },
    "9092": {
      "op": "POP"
    },
    "9093": {
      "op": "POP"
    },
    "9094": {
      "op": "POP"
    },
    "9095": {
      "fn": "SafeMath2.divRound",
      "jump": "o",
      "offset": [
        4569,
        4793
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9096": {
      "fn": "SafeMath2.mult",
      "offset": [
        4200,
        4421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9097": {
      "fn": "SafeMath2.mult",
      "offset": [
        4259,
        4266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9099": {
      "branch": 175,
      "fn": "SafeMath2.mult",
      "offset": [
        4282,
        4288
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9100": {
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2397"
    },
    "9103": {
      "branch": 175,
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9104": {
      "op": "POP"
    },
    "9105": {
      "fn": "SafeMath2.mult",
      "offset": [
        4311,
        4312
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 122,
      "value": "0x0"
    },
    "9107": {
      "fn": "SafeMath2.mult",
      "offset": [
        4304,
        4312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B8"
    },
    "9110": {
      "fn": "SafeMath2.mult",
      "offset": [
        4304,
        4312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9111": {
      "fn": "SafeMath2.mult",
      "offset": [
        4278,
        4323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9112": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9114": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A3"
    },
    "9117": {
      "fn": "SafeMath2.mult",
      "offset": [
        4349,
        4350
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9118": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4346
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9119": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "9122": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4345,
        4350
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9123": {
      "fn": "SafeMath2.mult",
      "offset": [
        4345,
        4350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9124": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9125": {
      "op": "POP"
    },
    "9126": {
      "fn": "SafeMath2.mult",
      "offset": [
        4377,
        4378
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 123
    },
    "9127": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B0"
    },
    "9130": {
      "fn": "SafeMath2.mult",
      "offset": [
        4372,
        4373
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9131": {
      "fn": "SafeMath2.mult",
      "offset": [
        4333,
        4350
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9132": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7D"
    },
    "9135": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4368,
        4373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9136": {
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9137": {
      "branch": 176,
      "fn": "SafeMath2.mult",
      "offset": [
        4368,
        4378
      ],
      "op": "EQ",
      "path": "0"
    },
    "9138": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F79"
    },
    "9141": {
      "branch": 176,
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9142": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9144": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9151": {
      "op": "SHL"
    },
    "9152": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9153": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9156": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9158": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9159": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "ADD",
      "path": "0"
    },
    "9160": {
      "op": "MSTORE"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9165": {
      "op": "DUP3"
    },
    "9166": {
      "op": "ADD"
    },
    "9167": {
      "op": "MSTORE"
    },
    "9168": {
      "op": "PUSH13",
      "value": "0x4D756C74206F766572666C6F77"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "9184": {
      "op": "SHL"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9187": {
      "op": "DUP3"
    },
    "9188": {
      "op": "ADD"
    },
    "9189": {
      "op": "MSTORE"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "fn": "SafeMath2.mult",
      "offset": [
        4360,
        4396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "9196": {
      "op": "JUMP"
    },
    "9197": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17684,
        19063
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9198": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17823,
        17853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "9200": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17823,
        17853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9201": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17751,
        17766
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "9202": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17751,
        17766
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9203": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17728,
        17748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9205": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17728,
        17748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9206": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17808,
        17853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23FF"
    },
    "9209": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17808,
        17853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9210": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17751,
        17766
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9211": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17808,
        17853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C08"
    },
    "9214": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17808,
        17853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9215": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17808,
        17853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9216": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17770,
        17853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9217": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17770,
        17853
      ],
      "op": "POP",
      "path": "0"
    },
    "9218": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17858,
        17882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9220": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17899,
        17923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "9222": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17899,
        17923
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9223": {
      "offset": [
        6106,
        6113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "9226": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17885,
        17923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2413"
    },
    "9229": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17885,
        17923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9230": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17885,
        17923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9231": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17885,
        17923
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B32"
    },
    "9234": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17885,
        17923
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9235": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17885,
        17923
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9236": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17858,
        17923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9237": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17858,
        17923
      ],
      "op": "POP",
      "path": "0"
    },
    "9238": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18059,
        18078
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9239": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18026,
        18056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9240": {
      "branch": 177,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18026,
        18078
      ],
      "op": "LT",
      "path": "0"
    },
    "9241": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9242": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2488"
    },
    "9245": {
      "branch": 177,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9246": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18088,
        18109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9248": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18112,
        18181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242E"
    },
    "9251": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18149,
        18179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9252": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18113,
        18142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "9255": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18113,
        18132
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9256": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18138,
        18141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "9258": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18113,
        18137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2388"
    },
    "9261": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18113,
        18142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9262": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18112,
        18181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9263": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18193,
        18194
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 124,
      "value": "0x1"
    },
    "9265": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18186,
        18190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "9267": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18186,
        18194
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9268": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18088,
        18181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9269": {
      "op": "POP"
    },
    "9270": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18199,
        18226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9272": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244E"
    },
    "9275": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18269,
        18273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "9278": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2448"
    },
    "9281": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18088,
        18181
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9282": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18250,
        18253
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "9284": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "9287": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18229,
        18254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9288": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9289": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9290": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2516"
    },
    "9293": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18229,
        18274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9294": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18229,
        18274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9295": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18199,
        18274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9296": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18199,
        18274
      ],
      "op": "POP",
      "path": "0"
    },
    "9297": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18384
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 125,
      "value": "0x247D"
    },
    "9300": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2474"
    },
    "9303": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18360,
        18382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9304": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246E"
    },
    "9307": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18349,
        18353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "9310": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9312": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18344
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9313": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "9316": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9317": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9318": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9319": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9324": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "AND",
      "path": "0"
    },
    "9325": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18332,
        18354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9326": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9327": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9328": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2388"
    },
    "9331": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18332,
        18383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9332": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18332,
        18383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9333": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9335": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9336": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9337": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "9340": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18315,
        18384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9341": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18315,
        18384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9342": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18300,
        18312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9344": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18300,
        18384
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9345": {
      "op": "POP"
    },
    "9346": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24E2"
    },
    "9349": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9350": {
      "op": "POP"
    },
    "9351": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9352": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9353": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18416,
        18439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9355": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18442,
        18511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2499"
    },
    "9358": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18490,
        18509
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9359": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18443,
        18483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADC"
    },
    "9362": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18443,
        18473
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9363": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18479,
        18482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "9365": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18443,
        18478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2388"
    },
    "9368": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18443,
        18483
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9369": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18442,
        18511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9370": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18523,
        18524
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 126,
      "value": "0x2"
    },
    "9372": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18516,
        18520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "9374": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18516,
        18524
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9375": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18416,
        18511
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9376": {
      "op": "POP"
    },
    "9377": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18529,
        18558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9379": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18561,
        18608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B3"
    },
    "9382": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18603,
        18607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "9385": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18561,
        18588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2448"
    },
    "9388": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18416,
        18511
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9389": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18584,
        18587
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "9391": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18561,
        18583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F80"
    },
    "9394": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18561,
        18588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9395": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18561,
        18608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9396": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18529,
        18608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9397": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18529,
        18608
      ],
      "op": "POP",
      "path": "0"
    },
    "9398": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18746
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 127,
      "value": "0x24DC"
    },
    "9401": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D3"
    },
    "9404": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18720,
        18744
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9405": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246E"
    },
    "9408": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18710,
        18713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4"
    },
    "9411": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9413": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18705
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9414": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F32"
    },
    "9417": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9418": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9419": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9420": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18714
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9425": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18714
      ],
      "op": "AND",
      "path": "0"
    },
    "9426": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18693,
        18714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9427": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18693,
        18745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9428": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9430": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9431": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9432": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "9435": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18676,
        18746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9436": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18676,
        18746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9437": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18661,
        18673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9439": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18661,
        18746
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9440": {
      "op": "POP"
    },
    "9441": {
      "op": "POP"
    },
    "9442": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18022,
        18770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9443": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18774,
        18804
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0x7"
    },
    "9445": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18774,
        18819
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9446": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18774,
        18819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9447": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18774,
        18819
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9448": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18855,
        18867
      ],
      "op": "NUMBER",
      "path": "0",
      "statement": 129
    },
    "9449": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18823,
        18852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9451": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18823,
        18867
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9452": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18889,
        18904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9454": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18889,
        18904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9455": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18874,
        18886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9457": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18874,
        18886
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9458": {
      "branch": 178,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18874,
        18904
      ],
      "op": "LT",
      "path": "0"
    },
    "9459": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18871,
        18965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9460": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18871,
        18965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24FE"
    },
    "9463": {
      "branch": 178,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18871,
        18965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9464": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18945,
        18960
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 130,
      "value": "0xA"
    },
    "9466": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18945,
        18960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9467": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18930,
        18942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9469": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18930,
        18960
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9470": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18871,
        18965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9471": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18986,
        19001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9473": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18986,
        19001
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9474": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18971,
        18983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9476": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18971,
        18983
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9477": {
      "branch": 179,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18971,
        19001
      ],
      "op": "GT",
      "path": "0"
    },
    "9478": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18968,
        19057
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9479": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18968,
        19057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2511"
    },
    "9482": {
      "branch": 179,
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18968,
        19057
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9483": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        19037,
        19052
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 131,
      "value": "0xB"
    },
    "9485": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        19037,
        19052
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9486": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        19022,
        19034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9488": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        19022,
        19052
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9489": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        18968,
        19057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9490": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17724,
        19063
      ],
      "op": "POP",
      "path": "0"
    },
    "9491": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17724,
        19063
      ],
      "op": "POP",
      "path": "0"
    },
    "9492": {
      "fn": "Forge._reAdjustDifficulty",
      "offset": [
        17724,
        19063
      ],
      "op": "POP",
      "path": "0"
    },
    "9493": {
      "fn": "Forge._reAdjustDifficulty",
      "jump": "o",
      "offset": [
        17684,
        19063
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9494": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4914,
        5040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9495": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4976,
        4982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9497": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5002,
        5003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9498": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4998,
        4999
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9499": {
      "branch": 180,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4998,
        5003
      ],
      "op": "GT",
      "path": "0"
    },
    "9500": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9501": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2527"
    },
    "9504": {
      "branch": 180,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9505": {
      "op": "POP"
    },
    "9506": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5012,
        5013
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 132
    },
    "9507": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5005,
        5013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B8"
    },
    "9510": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5005,
        5013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9511": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4995,
        5013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5031,
        5032
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 133
    },
    "9514": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        5031,
        5032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9515": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4914,
        5040
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9516": {
      "op": "POP"
    },
    "9517": {
      "fn": "ExtendedMath2.limitLessThan",
      "jump": "o",
      "offset": [
        4914,
        5040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9518": {
      "op": "JUMPDEST"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9523": {
      "op": "DUP1"
    },
    "9524": {
      "op": "DUP4"
    },
    "9525": {
      "op": "MSTORE"
    },
    "9526": {
      "op": "DUP4"
    },
    "9527": {
      "op": "MLOAD"
    },
    "9528": {
      "op": "DUP1"
    },
    "9529": {
      "op": "DUP3"
    },
    "9530": {
      "op": "DUP6"
    },
    "9531": {
      "op": "ADD"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9535": {
      "op": "JUMPDEST"
    },
    "9536": {
      "op": "DUP2"
    },
    "9537": {
      "op": "DUP2"
    },
    "9538": {
      "op": "LT"
    },
    "9539": {
      "op": "ISZERO"
    },
    "9540": {
      "op": "PUSH2",
      "value": "0x255B"
    },
    "9543": {
      "op": "JUMPI"
    },
    "9544": {
      "op": "DUP6"
    },
    "9545": {
      "op": "DUP2"
    },
    "9546": {
      "op": "ADD"
    },
    "9547": {
      "op": "DUP4"
    },
    "9548": {
      "op": "ADD"
    },
    "9549": {
      "op": "MLOAD"
    },
    "9550": {
      "op": "DUP6"
    },
    "9551": {
      "op": "DUP3"
    },
    "9552": {
      "op": "ADD"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9555": {
      "op": "ADD"
    },
    "9556": {
      "op": "MSTORE"
    },
    "9557": {
      "op": "DUP3"
    },
    "9558": {
      "op": "ADD"
    },
    "9559": {
      "op": "PUSH2",
      "value": "0x253F"
    },
    "9562": {
      "op": "JUMP"
    },
    "9563": {
      "op": "JUMPDEST"
    },
    "9564": {
      "op": "DUP2"
    },
    "9565": {
      "op": "DUP2"
    },
    "9566": {
      "op": "GT"
    },
    "9567": {
      "op": "ISZERO"
    },
    "9568": {
      "op": "PUSH2",
      "value": "0x256D"
    },
    "9571": {
      "op": "JUMPI"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9576": {
      "op": "DUP4"
    },
    "9577": {
      "op": "DUP8"
    },
    "9578": {
      "op": "ADD"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "JUMPDEST"
    },
    "9582": {
      "op": "POP"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9585": {
      "op": "ADD"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9588": {
      "op": "NOT"
    },
    "9589": {
      "op": "AND"
    },
    "9590": {
      "op": "SWAP3"
    },
    "9591": {
      "op": "SWAP1"
    },
    "9592": {
      "op": "SWAP3"
    },
    "9593": {
      "op": "ADD"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9596": {
      "op": "ADD"
    },
    "9597": {
      "op": "SWAP4"
    },
    "9598": {
      "op": "SWAP3"
    },
    "9599": {
      "op": "POP"
    },
    "9600": {
      "op": "POP"
    },
    "9601": {
      "op": "POP"
    },
    "9602": {
      "jump": "o",
      "op": "JUMP"
    },
    "9603": {
      "op": "JUMPDEST"
    },
    "9604": {
      "op": "DUP1"
    },
    "9605": {
      "op": "CALLDATALOAD"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9612": {
      "op": "SHL"
    },
    "9613": {
      "op": "SUB"
    },
    "9614": {
      "op": "DUP2"
    },
    "9615": {
      "op": "AND"
    },
    "9616": {
      "op": "DUP2"
    },
    "9617": {
      "op": "EQ"
    },
    "9618": {
      "op": "PUSH2",
      "value": "0x259A"
    },
    "9621": {
      "op": "JUMPI"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9624": {
      "op": "DUP1"
    },
    "9625": {
      "op": "REVERT"
    },
    "9626": {
      "op": "JUMPDEST"
    },
    "9627": {
      "op": "SWAP2"
    },
    "9628": {
      "op": "SWAP1"
    },
    "9629": {
      "op": "POP"
    },
    "9630": {
      "jump": "o",
      "op": "JUMP"
    },
    "9631": {
      "op": "JUMPDEST"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9634": {
      "op": "DUP1"
    },
    "9635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9637": {
      "op": "DUP4"
    },
    "9638": {
      "op": "DUP6"
    },
    "9639": {
      "op": "SUB"
    },
    "9640": {
      "op": "SLT"
    },
    "9641": {
      "op": "ISZERO"
    },
    "9642": {
      "op": "PUSH2",
      "value": "0x25B2"
    },
    "9645": {
      "op": "JUMPI"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9648": {
      "op": "DUP1"
    },
    "9649": {
      "op": "REVERT"
    },
    "9650": {
      "op": "JUMPDEST"
    },
    "9651": {
      "op": "PUSH2",
      "value": "0x25BB"
    },
    "9654": {
      "op": "DUP4"
    },
    "9655": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "9658": {
      "jump": "i",
      "op": "JUMP"
    },
    "9659": {
      "op": "JUMPDEST"
    },
    "9660": {
      "op": "SWAP5"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9663": {
      "op": "SWAP4"
    },
    "9664": {
      "op": "SWAP1"
    },
    "9665": {
      "op": "SWAP4"
    },
    "9666": {
      "op": "ADD"
    },
    "9667": {
      "op": "CALLDATALOAD"
    },
    "9668": {
      "op": "SWAP4"
    },
    "9669": {
      "op": "POP"
    },
    "9670": {
      "op": "POP"
    },
    "9671": {
      "op": "POP"
    },
    "9672": {
      "jump": "o",
      "op": "JUMP"
    },
    "9673": {
      "op": "JUMPDEST"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9676": {
      "op": "DUP1"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9679": {
      "op": "DUP4"
    },
    "9680": {
      "op": "DUP6"
    },
    "9681": {
      "op": "SUB"
    },
    "9682": {
      "op": "SLT"
    },
    "9683": {
      "op": "ISZERO"
    },
    "9684": {
      "op": "PUSH2",
      "value": "0x25DC"
    },
    "9687": {
      "op": "JUMPI"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9690": {
      "op": "DUP1"
    },
    "9691": {
      "op": "REVERT"
    },
    "9692": {
      "op": "JUMPDEST"
    },
    "9693": {
      "op": "POP"
    },
    "9694": {
      "op": "POP"
    },
    "9695": {
      "op": "DUP1"
    },
    "9696": {
      "op": "CALLDATALOAD"
    },
    "9697": {
      "op": "SWAP3"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9700": {
      "op": "SWAP1"
    },
    "9701": {
      "op": "SWAP2"
    },
    "9702": {
      "op": "ADD"
    },
    "9703": {
      "op": "CALLDATALOAD"
    },
    "9704": {
      "op": "SWAP2"
    },
    "9705": {
      "op": "POP"
    },
    "9706": {
      "jump": "o",
      "op": "JUMP"
    },
    "9707": {
      "op": "JUMPDEST"
    },
    "9708": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9713": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9715": {
      "op": "SHL"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9718": {
      "op": "MSTORE"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9723": {
      "op": "MSTORE"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9728": {
      "op": "REVERT"
    },
    "9729": {
      "op": "JUMPDEST"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9732": {
      "op": "MLOAD"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9735": {
      "op": "DUP3"
    },
    "9736": {
      "op": "ADD"
    },
    "9737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9739": {
      "op": "NOT"
    },
    "9740": {
      "op": "AND"
    },
    "9741": {
      "op": "DUP2"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9752": {
      "op": "DUP2"
    },
    "9753": {
      "op": "GT"
    },
    "9754": {
      "op": "DUP3"
    },
    "9755": {
      "op": "DUP3"
    },
    "9756": {
      "op": "LT"
    },
    "9757": {
      "op": "OR"
    },
    "9758": {
      "op": "ISZERO"
    },
    "9759": {
      "op": "PUSH2",
      "value": "0x262A"
    },
    "9762": {
      "op": "JUMPI"
    },
    "9763": {
      "op": "PUSH2",
      "value": "0x262A"
    },
    "9766": {
      "op": "PUSH2",
      "value": "0x25EB"
    },
    "9769": {
      "jump": "i",
      "op": "JUMP"
    },
    "9770": {
      "op": "JUMPDEST"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9773": {
      "op": "MSTORE"
    },
    "9774": {
      "op": "SWAP2"
    },
    "9775": {
      "op": "SWAP1"
    },
    "9776": {
      "op": "POP"
    },
    "9777": {
      "jump": "o",
      "op": "JUMP"
    },
    "9778": {
      "op": "JUMPDEST"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9781": {
      "op": "DUP3"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9784": {
      "op": "DUP4"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "SLT"
    },
    "9787": {
      "op": "PUSH2",
      "value": "0x2643"
    },
    "9790": {
      "op": "JUMPI"
    },
    "9791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9793": {
      "op": "DUP1"
    },
    "9794": {
      "op": "REVERT"
    },
    "9795": {
      "op": "JUMPDEST"
    },
    "9796": {
      "op": "DUP2"
    },
    "9797": {
      "op": "CALLDATALOAD"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9800": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9809": {
      "op": "DUP3"
    },
    "9810": {
      "op": "GT"
    },
    "9811": {
      "op": "ISZERO"
    },
    "9812": {
      "op": "PUSH2",
      "value": "0x265F"
    },
    "9815": {
      "op": "JUMPI"
    },
    "9816": {
      "op": "PUSH2",
      "value": "0x265F"
    },
    "9819": {
      "op": "PUSH2",
      "value": "0x25EB"
    },
    "9822": {
      "jump": "i",
      "op": "JUMP"
    },
    "9823": {
      "op": "JUMPDEST"
    },
    "9824": {
      "op": "DUP2"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9827": {
      "op": "SHL"
    },
    "9828": {
      "op": "PUSH2",
      "value": "0x266E"
    },
    "9831": {
      "op": "DUP3"
    },
    "9832": {
      "op": "DUP3"
    },
    "9833": {
      "op": "ADD"
    },
    "9834": {
      "op": "PUSH2",
      "value": "0x2601"
    },
    "9837": {
      "jump": "i",
      "op": "JUMP"
    },
    "9838": {
      "op": "JUMPDEST"
    },
    "9839": {
      "op": "SWAP3"
    },
    "9840": {
      "op": "DUP4"
    },
    "9841": {
      "op": "MSTORE"
    },
    "9842": {
      "op": "DUP5"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "DUP3"
    },
    "9846": {
      "op": "ADD"
    },
    "9847": {
      "op": "SWAP3"
    },
    "9848": {
      "op": "DUP3"
    },
    "9849": {
      "op": "DUP2"
    },
    "9850": {
      "op": "ADD"
    },
    "9851": {
      "op": "SWAP1"
    },
    "9852": {
      "op": "DUP8"
    },
    "9853": {
      "op": "DUP6"
    },
    "9854": {
      "op": "GT"
    },
    "9855": {
      "op": "ISZERO"
    },
    "9856": {
      "op": "PUSH2",
      "value": "0x2688"
    },
    "9859": {
      "op": "JUMPI"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9862": {
      "op": "DUP1"
    },
    "9863": {
      "op": "REVERT"
    },
    "9864": {
      "op": "JUMPDEST"
    },
    "9865": {
      "op": "DUP4"
    },
    "9866": {
      "op": "DUP8"
    },
    "9867": {
      "op": "ADD"
    },
    "9868": {
      "op": "SWAP3"
    },
    "9869": {
      "op": "POP"
    },
    "9870": {
      "op": "JUMPDEST"
    },
    "9871": {
      "op": "DUP5"
    },
    "9872": {
      "op": "DUP4"
    },
    "9873": {
      "op": "LT"
    },
    "9874": {
      "op": "ISZERO"
    },
    "9875": {
      "op": "PUSH2",
      "value": "0x26AE"
    },
    "9878": {
      "op": "JUMPI"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x269F"
    },
    "9882": {
      "op": "DUP4"
    },
    "9883": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "9886": {
      "jump": "i",
      "op": "JUMP"
    },
    "9887": {
      "op": "JUMPDEST"
    },
    "9888": {
      "op": "DUP3"
    },
    "9889": {
      "op": "MSTORE"
    },
    "9890": {
      "op": "SWAP2"
    },
    "9891": {
      "op": "DUP4"
    },
    "9892": {
      "op": "ADD"
    },
    "9893": {
      "op": "SWAP2"
    },
    "9894": {
      "op": "SWAP1"
    },
    "9895": {
      "op": "DUP4"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "SWAP1"
    },
    "9898": {
      "op": "PUSH2",
      "value": "0x268E"
    },
    "9901": {
      "op": "JUMP"
    },
    "9902": {
      "op": "JUMPDEST"
    },
    "9903": {
      "op": "SWAP8"
    },
    "9904": {
      "op": "SWAP7"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "op": "POP"
    },
    "9907": {
      "op": "POP"
    },
    "9908": {
      "op": "POP"
    },
    "9909": {
      "op": "POP"
    },
    "9910": {
      "op": "POP"
    },
    "9911": {
      "op": "POP"
    },
    "9912": {
      "jump": "o",
      "op": "JUMP"
    },
    "9913": {
      "op": "JUMPDEST"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9916": {
      "op": "DUP1"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9919": {
      "op": "DUP1"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9922": {
      "op": "DUP6"
    },
    "9923": {
      "op": "DUP8"
    },
    "9924": {
      "op": "SUB"
    },
    "9925": {
      "op": "SLT"
    },
    "9926": {
      "op": "ISZERO"
    },
    "9927": {
      "op": "PUSH2",
      "value": "0x26CF"
    },
    "9930": {
      "op": "JUMPI"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9933": {
      "op": "DUP1"
    },
    "9934": {
      "op": "REVERT"
    },
    "9935": {
      "op": "JUMPDEST"
    },
    "9936": {
      "op": "DUP5"
    },
    "9937": {
      "op": "CALLDATALOAD"
    },
    "9938": {
      "op": "SWAP4"
    },
    "9939": {
      "op": "POP"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9942": {
      "op": "DUP6"
    },
    "9943": {
      "op": "ADD"
    },
    "9944": {
      "op": "CALLDATALOAD"
    },
    "9945": {
      "op": "SWAP3"
    },
    "9946": {
      "op": "POP"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9949": {
      "op": "DUP6"
    },
    "9950": {
      "op": "ADD"
    },
    "9951": {
      "op": "CALLDATALOAD"
    },
    "9952": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9961": {
      "op": "DUP2"
    },
    "9962": {
      "op": "GT"
    },
    "9963": {
      "op": "ISZERO"
    },
    "9964": {
      "op": "PUSH2",
      "value": "0x26F4"
    },
    "9967": {
      "op": "JUMPI"
    },
    "9968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9970": {
      "op": "DUP1"
    },
    "9971": {
      "op": "REVERT"
    },
    "9972": {
      "op": "JUMPDEST"
    },
    "9973": {
      "op": "PUSH2",
      "value": "0x2700"
    },
    "9976": {
      "op": "DUP8"
    },
    "9977": {
      "op": "DUP3"
    },
    "9978": {
      "op": "DUP9"
    },
    "9979": {
      "op": "ADD"
    },
    "9980": {
      "op": "PUSH2",
      "value": "0x2632"
    },
    "9983": {
      "jump": "i",
      "op": "JUMP"
    },
    "9984": {
      "op": "JUMPDEST"
    },
    "9985": {
      "op": "SWAP3"
    },
    "9986": {
      "op": "POP"
    },
    "9987": {
      "op": "POP"
    },
    "9988": {
      "op": "PUSH2",
      "value": "0x270F"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9993": {
      "op": "DUP7"
    },
    "9994": {
      "op": "ADD"
    },
    "9995": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "9998": {
      "jump": "i",
      "op": "JUMP"
    },
    "9999": {
      "op": "JUMPDEST"
    },
    "10000": {
      "op": "SWAP1"
    },
    "10001": {
      "op": "POP"
    },
    "10002": {
      "op": "SWAP3"
    },
    "10003": {
      "op": "SWAP6"
    },
    "10004": {
      "op": "SWAP2"
    },
    "10005": {
      "op": "SWAP5"
    },
    "10006": {
      "op": "POP"
    },
    "10007": {
      "op": "SWAP3"
    },
    "10008": {
      "op": "POP"
    },
    "10009": {
      "jump": "o",
      "op": "JUMP"
    },
    "10010": {
      "op": "JUMPDEST"
    },
    "10011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10013": {
      "op": "DUP1"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10018": {
      "op": "DUP5"
    },
    "10019": {
      "op": "DUP7"
    },
    "10020": {
      "op": "SUB"
    },
    "10021": {
      "op": "SLT"
    },
    "10022": {
      "op": "ISZERO"
    },
    "10023": {
      "op": "PUSH2",
      "value": "0x272F"
    },
    "10026": {
      "op": "JUMPI"
    },
    "10027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10029": {
      "op": "DUP1"
    },
    "10030": {
      "op": "REVERT"
    },
    "10031": {
      "op": "JUMPDEST"
    },
    "10032": {
      "op": "PUSH2",
      "value": "0x2738"
    },
    "10035": {
      "op": "DUP5"
    },
    "10036": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10039": {
      "jump": "i",
      "op": "JUMP"
    },
    "10040": {
      "op": "JUMPDEST"
    },
    "10041": {
      "op": "SWAP3"
    },
    "10042": {
      "op": "POP"
    },
    "10043": {
      "op": "PUSH2",
      "value": "0x2746"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10048": {
      "op": "DUP6"
    },
    "10049": {
      "op": "ADD"
    },
    "10050": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10053": {
      "jump": "i",
      "op": "JUMP"
    },
    "10054": {
      "op": "JUMPDEST"
    },
    "10055": {
      "op": "SWAP2"
    },
    "10056": {
      "op": "POP"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10059": {
      "op": "DUP5"
    },
    "10060": {
      "op": "ADD"
    },
    "10061": {
      "op": "CALLDATALOAD"
    },
    "10062": {
      "op": "SWAP1"
    },
    "10063": {
      "op": "POP"
    },
    "10064": {
      "op": "SWAP3"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "SWAP3"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "SWAP3"
    },
    "10069": {
      "jump": "o",
      "op": "JUMP"
    },
    "10070": {
      "op": "JUMPDEST"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10073": {
      "op": "DUP1"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10078": {
      "op": "DUP5"
    },
    "10079": {
      "op": "DUP7"
    },
    "10080": {
      "op": "SUB"
    },
    "10081": {
      "op": "SLT"
    },
    "10082": {
      "op": "ISZERO"
    },
    "10083": {
      "op": "PUSH2",
      "value": "0x276B"
    },
    "10086": {
      "op": "JUMPI"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10089": {
      "op": "DUP1"
    },
    "10090": {
      "op": "REVERT"
    },
    "10091": {
      "op": "JUMPDEST"
    },
    "10092": {
      "op": "PUSH2",
      "value": "0x2774"
    },
    "10095": {
      "op": "DUP5"
    },
    "10096": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10099": {
      "jump": "i",
      "op": "JUMP"
    },
    "10100": {
      "op": "JUMPDEST"
    },
    "10101": {
      "op": "SWAP3"
    },
    "10102": {
      "op": "POP"
    },
    "10103": {
      "op": "PUSH2",
      "value": "0x2782"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10108": {
      "op": "DUP6"
    },
    "10109": {
      "op": "ADD"
    },
    "10110": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10113": {
      "jump": "i",
      "op": "JUMP"
    },
    "10114": {
      "op": "JUMPDEST"
    },
    "10115": {
      "op": "SWAP2"
    },
    "10116": {
      "op": "POP"
    },
    "10117": {
      "op": "PUSH2",
      "value": "0x2790"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10122": {
      "op": "DUP6"
    },
    "10123": {
      "op": "ADD"
    },
    "10124": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10127": {
      "jump": "i",
      "op": "JUMP"
    },
    "10128": {
      "op": "JUMPDEST"
    },
    "10129": {
      "op": "SWAP1"
    },
    "10130": {
      "op": "POP"
    },
    "10131": {
      "op": "SWAP3"
    },
    "10132": {
      "op": "POP"
    },
    "10133": {
      "op": "SWAP3"
    },
    "10134": {
      "op": "POP"
    },
    "10135": {
      "op": "SWAP3"
    },
    "10136": {
      "jump": "o",
      "op": "JUMP"
    },
    "10137": {
      "op": "JUMPDEST"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10142": {
      "op": "DUP3"
    },
    "10143": {
      "op": "DUP5"
    },
    "10144": {
      "op": "SUB"
    },
    "10145": {
      "op": "SLT"
    },
    "10146": {
      "op": "ISZERO"
    },
    "10147": {
      "op": "PUSH2",
      "value": "0x27AB"
    },
    "10150": {
      "op": "JUMPI"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10153": {
      "op": "DUP1"
    },
    "10154": {
      "op": "REVERT"
    },
    "10155": {
      "op": "JUMPDEST"
    },
    "10156": {
      "op": "PUSH2",
      "value": "0x1F79"
    },
    "10159": {
      "op": "DUP3"
    },
    "10160": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10163": {
      "jump": "i",
      "op": "JUMP"
    },
    "10164": {
      "op": "JUMPDEST"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10167": {
      "op": "DUP1"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10170": {
      "op": "DUP1"
    },
    "10171": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10173": {
      "op": "DUP6"
    },
    "10174": {
      "op": "DUP8"
    },
    "10175": {
      "op": "SUB"
    },
    "10176": {
      "op": "SLT"
    },
    "10177": {
      "op": "ISZERO"
    },
    "10178": {
      "op": "PUSH2",
      "value": "0x27CA"
    },
    "10181": {
      "op": "JUMPI"
    },
    "10182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10184": {
      "op": "DUP1"
    },
    "10185": {
      "op": "REVERT"
    },
    "10186": {
      "op": "JUMPDEST"
    },
    "10187": {
      "op": "POP"
    },
    "10188": {
      "op": "POP"
    },
    "10189": {
      "op": "DUP3"
    },
    "10190": {
      "op": "CALLDATALOAD"
    },
    "10191": {
      "op": "SWAP5"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10194": {
      "op": "DUP5"
    },
    "10195": {
      "op": "ADD"
    },
    "10196": {
      "op": "CALLDATALOAD"
    },
    "10197": {
      "op": "SWAP5"
    },
    "10198": {
      "op": "POP"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10201": {
      "op": "DUP5"
    },
    "10202": {
      "op": "ADD"
    },
    "10203": {
      "op": "CALLDATALOAD"
    },
    "10204": {
      "op": "SWAP4"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10207": {
      "op": "ADD"
    },
    "10208": {
      "op": "CALLDATALOAD"
    },
    "10209": {
      "op": "SWAP3"
    },
    "10210": {
      "op": "POP"
    },
    "10211": {
      "op": "SWAP1"
    },
    "10212": {
      "op": "POP"
    },
    "10213": {
      "jump": "o",
      "op": "JUMP"
    },
    "10214": {
      "op": "JUMPDEST"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10217": {
      "op": "DUP1"
    },
    "10218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10220": {
      "op": "DUP1"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10223": {
      "op": "DUP6"
    },
    "10224": {
      "op": "DUP8"
    },
    "10225": {
      "op": "SUB"
    },
    "10226": {
      "op": "SLT"
    },
    "10227": {
      "op": "ISZERO"
    },
    "10228": {
      "op": "PUSH2",
      "value": "0x27FC"
    },
    "10231": {
      "op": "JUMPI"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10234": {
      "op": "DUP1"
    },
    "10235": {
      "op": "REVERT"
    },
    "10236": {
      "op": "JUMPDEST"
    },
    "10237": {
      "op": "PUSH2",
      "value": "0x2805"
    },
    "10240": {
      "op": "DUP6"
    },
    "10241": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10244": {
      "jump": "i",
      "op": "JUMP"
    },
    "10245": {
      "op": "JUMPDEST"
    },
    "10246": {
      "op": "SWAP4"
    },
    "10247": {
      "op": "POP"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10250": {
      "op": "DUP1"
    },
    "10251": {
      "op": "DUP7"
    },
    "10252": {
      "op": "ADD"
    },
    "10253": {
      "op": "CALLDATALOAD"
    },
    "10254": {
      "op": "SWAP4"
    },
    "10255": {
      "op": "POP"
    },
    "10256": {
      "op": "PUSH2",
      "value": "0x281B"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10261": {
      "op": "DUP8"
    },
    "10262": {
      "op": "ADD"
    },
    "10263": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10266": {
      "jump": "i",
      "op": "JUMP"
    },
    "10267": {
      "op": "JUMPDEST"
    },
    "10268": {
      "op": "SWAP3"
    },
    "10269": {
      "op": "POP"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10272": {
      "op": "DUP7"
    },
    "10273": {
      "op": "ADD"
    },
    "10274": {
      "op": "CALLDATALOAD"
    },
    "10275": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10284": {
      "op": "DUP1"
    },
    "10285": {
      "op": "DUP3"
    },
    "10286": {
      "op": "GT"
    },
    "10287": {
      "op": "ISZERO"
    },
    "10288": {
      "op": "PUSH2",
      "value": "0x2838"
    },
    "10291": {
      "op": "JUMPI"
    },
    "10292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10294": {
      "op": "DUP1"
    },
    "10295": {
      "op": "REVERT"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "DUP2"
    },
    "10298": {
      "op": "DUP9"
    },
    "10299": {
      "op": "ADD"
    },
    "10300": {
      "op": "SWAP2"
    },
    "10301": {
      "op": "POP"
    },
    "10302": {
      "op": "DUP9"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10305": {
      "op": "DUP4"
    },
    "10306": {
      "op": "ADD"
    },
    "10307": {
      "op": "SLT"
    },
    "10308": {
      "op": "PUSH2",
      "value": "0x284C"
    },
    "10311": {
      "op": "JUMPI"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10314": {
      "op": "DUP1"
    },
    "10315": {
      "op": "REVERT"
    },
    "10316": {
      "op": "JUMPDEST"
    },
    "10317": {
      "op": "DUP2"
    },
    "10318": {
      "op": "CALLDATALOAD"
    },
    "10319": {
      "op": "DUP2"
    },
    "10320": {
      "op": "DUP2"
    },
    "10321": {
      "op": "GT"
    },
    "10322": {
      "op": "ISZERO"
    },
    "10323": {
      "op": "PUSH2",
      "value": "0x285E"
    },
    "10326": {
      "op": "JUMPI"
    },
    "10327": {
      "op": "PUSH2",
      "value": "0x285E"
    },
    "10330": {
      "op": "PUSH2",
      "value": "0x25EB"
    },
    "10333": {
      "jump": "i",
      "op": "JUMP"
    },
    "10334": {
      "op": "JUMPDEST"
    },
    "10335": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10340": {
      "op": "DUP3"
    },
    "10341": {
      "op": "ADD"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10344": {
      "op": "NOT"
    },
    "10345": {
      "op": "AND"
    },
    "10346": {
      "op": "DUP6"
    },
    "10347": {
      "op": "ADD"
    },
    "10348": {
      "op": "PUSH2",
      "value": "0x2601"
    },
    "10351": {
      "jump": "i",
      "op": "JUMP"
    },
    "10352": {
      "op": "JUMPDEST"
    },
    "10353": {
      "op": "SWAP2"
    },
    "10354": {
      "op": "POP"
    },
    "10355": {
      "op": "DUP1"
    },
    "10356": {
      "op": "DUP3"
    },
    "10357": {
      "op": "MSTORE"
    },
    "10358": {
      "op": "DUP10"
    },
    "10359": {
      "op": "DUP5"
    },
    "10360": {
      "op": "DUP3"
    },
    "10361": {
      "op": "DUP6"
    },
    "10362": {
      "op": "ADD"
    },
    "10363": {
      "op": "ADD"
    },
    "10364": {
      "op": "GT"
    },
    "10365": {
      "op": "ISZERO"
    },
    "10366": {
      "op": "PUSH2",
      "value": "0x2886"
    },
    "10369": {
      "op": "JUMPI"
    },
    "10370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10372": {
      "op": "DUP1"
    },
    "10373": {
      "op": "REVERT"
    },
    "10374": {
      "op": "JUMPDEST"
    },
    "10375": {
      "op": "DUP1"
    },
    "10376": {
      "op": "DUP5"
    },
    "10377": {
      "op": "DUP5"
    },
    "10378": {
      "op": "ADD"
    },
    "10379": {
      "op": "DUP6"
    },
    "10380": {
      "op": "DUP5"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "CALLDATACOPY"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10385": {
      "op": "DUP5"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "DUP5"
    },
    "10388": {
      "op": "ADD"
    },
    "10389": {
      "op": "ADD"
    },
    "10390": {
      "op": "MSTORE"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "op": "DUP1"
    },
    "10393": {
      "op": "SWAP4"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "op": "POP"
    },
    "10396": {
      "op": "POP"
    },
    "10397": {
      "op": "POP"
    },
    "10398": {
      "op": "SWAP3"
    },
    "10399": {
      "op": "SWAP6"
    },
    "10400": {
      "op": "SWAP2"
    },
    "10401": {
      "op": "SWAP5"
    },
    "10402": {
      "op": "POP"
    },
    "10403": {
      "op": "SWAP3"
    },
    "10404": {
      "op": "POP"
    },
    "10405": {
      "jump": "o",
      "op": "JUMP"
    },
    "10406": {
      "op": "JUMPDEST"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10409": {
      "op": "DUP1"
    },
    "10410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10414": {
      "op": "DUP5"
    },
    "10415": {
      "op": "DUP7"
    },
    "10416": {
      "op": "SUB"
    },
    "10417": {
      "op": "SLT"
    },
    "10418": {
      "op": "ISZERO"
    },
    "10419": {
      "op": "PUSH2",
      "value": "0x28BB"
    },
    "10422": {
      "op": "JUMPI"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10425": {
      "op": "DUP1"
    },
    "10426": {
      "op": "REVERT"
    },
    "10427": {
      "op": "JUMPDEST"
    },
    "10428": {
      "op": "POP"
    },
    "10429": {
      "op": "POP"
    },
    "10430": {
      "op": "DUP2"
    },
    "10431": {
      "op": "CALLDATALOAD"
    },
    "10432": {
      "op": "SWAP4"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10435": {
      "op": "DUP4"
    },
    "10436": {
      "op": "ADD"
    },
    "10437": {
      "op": "CALLDATALOAD"
    },
    "10438": {
      "op": "SWAP4"
    },
    "10439": {
      "op": "POP"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10442": {
      "op": "SWAP1"
    },
    "10443": {
      "op": "SWAP3"
    },
    "10444": {
      "op": "ADD"
    },
    "10445": {
      "op": "CALLDATALOAD"
    },
    "10446": {
      "op": "SWAP2"
    },
    "10447": {
      "op": "SWAP1"
    },
    "10448": {
      "op": "POP"
    },
    "10449": {
      "jump": "o",
      "op": "JUMP"
    },
    "10450": {
      "op": "JUMPDEST"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10453": {
      "op": "DUP1"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10456": {
      "op": "DUP1"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10459": {
      "op": "DUP6"
    },
    "10460": {
      "op": "DUP8"
    },
    "10461": {
      "op": "SUB"
    },
    "10462": {
      "op": "SLT"
    },
    "10463": {
      "op": "ISZERO"
    },
    "10464": {
      "op": "PUSH2",
      "value": "0x28E8"
    },
    "10467": {
      "op": "JUMPI"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10470": {
      "op": "DUP1"
    },
    "10471": {
      "op": "REVERT"
    },
    "10472": {
      "op": "JUMPDEST"
    },
    "10473": {
      "op": "DUP5"
    },
    "10474": {
      "op": "CALLDATALOAD"
    },
    "10475": {
      "op": "SWAP4"
    },
    "10476": {
      "op": "POP"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10479": {
      "op": "DUP6"
    },
    "10480": {
      "op": "ADD"
    },
    "10481": {
      "op": "CALLDATALOAD"
    },
    "10482": {
      "op": "SWAP3"
    },
    "10483": {
      "op": "POP"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10486": {
      "op": "DUP6"
    },
    "10487": {
      "op": "ADD"
    },
    "10488": {
      "op": "CALLDATALOAD"
    },
    "10489": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10498": {
      "op": "DUP1"
    },
    "10499": {
      "op": "DUP3"
    },
    "10500": {
      "op": "GT"
    },
    "10501": {
      "op": "ISZERO"
    },
    "10502": {
      "op": "PUSH2",
      "value": "0x290E"
    },
    "10505": {
      "op": "JUMPI"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10508": {
      "op": "DUP1"
    },
    "10509": {
      "op": "REVERT"
    },
    "10510": {
      "op": "JUMPDEST"
    },
    "10511": {
      "op": "PUSH2",
      "value": "0x291A"
    },
    "10514": {
      "op": "DUP9"
    },
    "10515": {
      "op": "DUP4"
    },
    "10516": {
      "op": "DUP10"
    },
    "10517": {
      "op": "ADD"
    },
    "10518": {
      "op": "PUSH2",
      "value": "0x2632"
    },
    "10521": {
      "jump": "i",
      "op": "JUMP"
    },
    "10522": {
      "op": "JUMPDEST"
    },
    "10523": {
      "op": "SWAP4"
    },
    "10524": {
      "op": "POP"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10527": {
      "op": "DUP8"
    },
    "10528": {
      "op": "ADD"
    },
    "10529": {
      "op": "CALLDATALOAD"
    },
    "10530": {
      "op": "SWAP2"
    },
    "10531": {
      "op": "POP"
    },
    "10532": {
      "op": "DUP1"
    },
    "10533": {
      "op": "DUP3"
    },
    "10534": {
      "op": "GT"
    },
    "10535": {
      "op": "ISZERO"
    },
    "10536": {
      "op": "PUSH2",
      "value": "0x2930"
    },
    "10539": {
      "op": "JUMPI"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10542": {
      "op": "DUP1"
    },
    "10543": {
      "op": "REVERT"
    },
    "10544": {
      "op": "JUMPDEST"
    },
    "10545": {
      "op": "POP"
    },
    "10546": {
      "op": "PUSH2",
      "value": "0x293D"
    },
    "10549": {
      "op": "DUP8"
    },
    "10550": {
      "op": "DUP3"
    },
    "10551": {
      "op": "DUP9"
    },
    "10552": {
      "op": "ADD"
    },
    "10553": {
      "op": "PUSH2",
      "value": "0x2632"
    },
    "10556": {
      "jump": "i",
      "op": "JUMP"
    },
    "10557": {
      "op": "JUMPDEST"
    },
    "10558": {
      "op": "SWAP2"
    },
    "10559": {
      "op": "POP"
    },
    "10560": {
      "op": "POP"
    },
    "10561": {
      "op": "SWAP3"
    },
    "10562": {
      "op": "SWAP6"
    },
    "10563": {
      "op": "SWAP2"
    },
    "10564": {
      "op": "SWAP5"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "op": "SWAP3"
    },
    "10567": {
      "op": "POP"
    },
    "10568": {
      "jump": "o",
      "op": "JUMP"
    },
    "10569": {
      "op": "JUMPDEST"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10572": {
      "op": "DUP1"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10575": {
      "op": "DUP4"
    },
    "10576": {
      "op": "DUP6"
    },
    "10577": {
      "op": "SUB"
    },
    "10578": {
      "op": "SLT"
    },
    "10579": {
      "op": "ISZERO"
    },
    "10580": {
      "op": "PUSH2",
      "value": "0x295C"
    },
    "10583": {
      "op": "JUMPI"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10586": {
      "op": "DUP1"
    },
    "10587": {
      "op": "REVERT"
    },
    "10588": {
      "op": "JUMPDEST"
    },
    "10589": {
      "op": "PUSH2",
      "value": "0x2965"
    },
    "10592": {
      "op": "DUP4"
    },
    "10593": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10596": {
      "jump": "i",
      "op": "JUMP"
    },
    "10597": {
      "op": "JUMPDEST"
    },
    "10598": {
      "op": "SWAP2"
    },
    "10599": {
      "op": "POP"
    },
    "10600": {
      "op": "PUSH2",
      "value": "0x2973"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10605": {
      "op": "DUP5"
    },
    "10606": {
      "op": "ADD"
    },
    "10607": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10610": {
      "jump": "i",
      "op": "JUMP"
    },
    "10611": {
      "op": "JUMPDEST"
    },
    "10612": {
      "op": "SWAP1"
    },
    "10613": {
      "op": "POP"
    },
    "10614": {
      "op": "SWAP3"
    },
    "10615": {
      "op": "POP"
    },
    "10616": {
      "op": "SWAP3"
    },
    "10617": {
      "op": "SWAP1"
    },
    "10618": {
      "op": "POP"
    },
    "10619": {
      "jump": "o",
      "op": "JUMP"
    },
    "10620": {
      "op": "JUMPDEST"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10623": {
      "op": "DUP1"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10628": {
      "op": "DUP5"
    },
    "10629": {
      "op": "DUP7"
    },
    "10630": {
      "op": "SUB"
    },
    "10631": {
      "op": "SLT"
    },
    "10632": {
      "op": "ISZERO"
    },
    "10633": {
      "op": "PUSH2",
      "value": "0x2991"
    },
    "10636": {
      "op": "JUMPI"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10639": {
      "op": "DUP1"
    },
    "10640": {
      "op": "REVERT"
    },
    "10641": {
      "op": "JUMPDEST"
    },
    "10642": {
      "op": "DUP4"
    },
    "10643": {
      "op": "CALLDATALOAD"
    },
    "10644": {
      "op": "SWAP3"
    },
    "10645": {
      "op": "POP"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10648": {
      "op": "DUP5"
    },
    "10649": {
      "op": "ADD"
    },
    "10650": {
      "op": "CALLDATALOAD"
    },
    "10651": {
      "op": "SWAP2"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "op": "PUSH2",
      "value": "0x2790"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10658": {
      "op": "DUP6"
    },
    "10659": {
      "op": "ADD"
    },
    "10660": {
      "op": "PUSH2",
      "value": "0x2583"
    },
    "10663": {
      "jump": "i",
      "op": "JUMP"
    },
    "10664": {
      "op": "JUMPDEST"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10667": {
      "op": "DUP2"
    },
    "10668": {
      "op": "DUP2"
    },
    "10669": {
      "op": "SHR"
    },
    "10670": {
      "op": "SWAP1"
    },
    "10671": {
      "op": "DUP3"
    },
    "10672": {
      "op": "AND"
    },
    "10673": {
      "op": "DUP1"
    },
    "10674": {
      "op": "PUSH2",
      "value": "0x29BC"
    },
    "10677": {
      "op": "JUMPI"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10680": {
      "op": "DUP3"
    },
    "10681": {
      "op": "AND"
    },
    "10682": {
      "op": "SWAP2"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "JUMPDEST"
    },
    "10685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10687": {
      "op": "DUP3"
    },
    "10688": {
      "op": "LT"
    },
    "10689": {
      "op": "DUP2"
    },
    "10690": {
      "op": "EQ"
    },
    "10691": {
      "op": "ISZERO"
    },
    "10692": {
      "op": "PUSH2",
      "value": "0x29DD"
    },
    "10695": {
      "op": "JUMPI"
    },
    "10696": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10703": {
      "op": "SHL"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10706": {
      "op": "MSTORE"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10711": {
      "op": "MSTORE"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10716": {
      "op": "REVERT"
    },
    "10717": {
      "op": "JUMPDEST"
    },
    "10718": {
      "op": "POP"
    },
    "10719": {
      "op": "SWAP2"
    },
    "10720": {
      "op": "SWAP1"
    },
    "10721": {
      "op": "POP"
    },
    "10722": {
      "jump": "o",
      "op": "JUMP"
    },
    "10723": {
      "op": "JUMPDEST"
    },
    "10724": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10731": {
      "op": "SHL"
    },
    "10732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10734": {
      "op": "MSTORE"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10739": {
      "op": "MSTORE"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10744": {
      "op": "REVERT"
    },
    "10745": {
      "op": "JUMPDEST"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10748": {
      "op": "DUP3"
    },
    "10749": {
      "op": "NOT"
    },
    "10750": {
      "op": "DUP3"
    },
    "10751": {
      "op": "GT"
    },
    "10752": {
      "op": "ISZERO"
    },
    "10753": {
      "op": "PUSH2",
      "value": "0x2A0C"
    },
    "10756": {
      "op": "JUMPI"
    },
    "10757": {
      "op": "PUSH2",
      "value": "0x2A0C"
    },
    "10760": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10763": {
      "jump": "i",
      "op": "JUMP"
    },
    "10764": {
      "op": "JUMPDEST"
    },
    "10765": {
      "op": "POP"
    },
    "10766": {
      "op": "ADD"
    },
    "10767": {
      "op": "SWAP1"
    },
    "10768": {
      "jump": "o",
      "op": "JUMP"
    },
    "10769": {
      "op": "JUMPDEST"
    },
    "10770": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10777": {
      "op": "SHL"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10780": {
      "op": "MSTORE"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10783": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10785": {
      "op": "MSTORE"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10790": {
      "op": "REVERT"
    },
    "10791": {
      "op": "JUMPDEST"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10796": {
      "op": "NOT"
    },
    "10797": {
      "op": "DUP3"
    },
    "10798": {
      "op": "EQ"
    },
    "10799": {
      "op": "ISZERO"
    },
    "10800": {
      "op": "PUSH2",
      "value": "0x2A3B"
    },
    "10803": {
      "op": "JUMPI"
    },
    "10804": {
      "op": "PUSH2",
      "value": "0x2A3B"
    },
    "10807": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10810": {
      "jump": "i",
      "op": "JUMP"
    },
    "10811": {
      "op": "JUMPDEST"
    },
    "10812": {
      "op": "POP"
    },
    "10813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10815": {
      "op": "ADD"
    },
    "10816": {
      "op": "SWAP1"
    },
    "10817": {
      "jump": "o",
      "op": "JUMP"
    },
    "10818": {
      "op": "JUMPDEST"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10821": {
      "op": "DUP2"
    },
    "10822": {
      "op": "DUP2"
    },
    "10823": {
      "op": "JUMPDEST"
    },
    "10824": {
      "op": "DUP1"
    },
    "10825": {
      "op": "DUP6"
    },
    "10826": {
      "op": "GT"
    },
    "10827": {
      "op": "ISZERO"
    },
    "10828": {
      "op": "PUSH2",
      "value": "0x2A7D"
    },
    "10831": {
      "op": "JUMPI"
    },
    "10832": {
      "op": "DUP2"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10835": {
      "op": "NOT"
    },
    "10836": {
      "op": "DIV"
    },
    "10837": {
      "op": "DUP3"
    },
    "10838": {
      "op": "GT"
    },
    "10839": {
      "op": "ISZERO"
    },
    "10840": {
      "op": "PUSH2",
      "value": "0x2A63"
    },
    "10843": {
      "op": "JUMPI"
    },
    "10844": {
      "op": "PUSH2",
      "value": "0x2A63"
    },
    "10847": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10850": {
      "jump": "i",
      "op": "JUMP"
    },
    "10851": {
      "op": "JUMPDEST"
    },
    "10852": {
      "op": "DUP1"
    },
    "10853": {
      "op": "DUP6"
    },
    "10854": {
      "op": "AND"
    },
    "10855": {
      "op": "ISZERO"
    },
    "10856": {
      "op": "PUSH2",
      "value": "0x2A70"
    },
    "10859": {
      "op": "JUMPI"
    },
    "10860": {
      "op": "SWAP2"
    },
    "10861": {
      "op": "DUP2"
    },
    "10862": {
      "op": "MUL"
    },
    "10863": {
      "op": "SWAP2"
    },
    "10864": {
      "op": "JUMPDEST"
    },
    "10865": {
      "op": "SWAP4"
    },
    "10866": {
      "op": "DUP5"
    },
    "10867": {
      "op": "SHR"
    },
    "10868": {
      "op": "SWAP4"
    },
    "10869": {
      "op": "SWAP1"
    },
    "10870": {
      "op": "DUP1"
    },
    "10871": {
      "op": "MUL"
    },
    "10872": {
      "op": "SWAP1"
    },
    "10873": {
      "op": "PUSH2",
      "value": "0x2A47"
    },
    "10876": {
      "op": "JUMP"
    },
    "10877": {
      "op": "JUMPDEST"
    },
    "10878": {
      "op": "POP"
    },
    "10879": {
      "op": "SWAP3"
    },
    "10880": {
      "op": "POP"
    },
    "10881": {
      "op": "SWAP3"
    },
    "10882": {
      "op": "SWAP1"
    },
    "10883": {
      "op": "POP"
    },
    "10884": {
      "jump": "o",
      "op": "JUMP"
    },
    "10885": {
      "op": "JUMPDEST"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10888": {
      "op": "DUP3"
    },
    "10889": {
      "op": "PUSH2",
      "value": "0x2A94"
    },
    "10892": {
      "op": "JUMPI"
    },
    "10893": {
      "op": "POP"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10896": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "10899": {
      "op": "JUMP"
    },
    "10900": {
      "op": "JUMPDEST"
    },
    "10901": {
      "op": "DUP2"
    },
    "10902": {
      "op": "PUSH2",
      "value": "0x2AA1"
    },
    "10905": {
      "op": "JUMPI"
    },
    "10906": {
      "op": "POP"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10909": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "10912": {
      "op": "JUMP"
    },
    "10913": {
      "op": "JUMPDEST"
    },
    "10914": {
      "op": "DUP2"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10917": {
      "op": "DUP2"
    },
    "10918": {
      "op": "EQ"
    },
    "10919": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10922": {
      "op": "JUMPI"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10925": {
      "op": "DUP2"
    },
    "10926": {
      "op": "EQ"
    },
    "10927": {
      "op": "PUSH2",
      "value": "0x2AC1"
    },
    "10930": {
      "op": "JUMPI"
    },
    "10931": {
      "op": "PUSH2",
      "value": "0x2ADD"
    },
    "10934": {
      "op": "JUMP"
    },
    "10935": {
      "op": "JUMPDEST"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10938": {
      "op": "SWAP2"
    },
    "10939": {
      "op": "POP"
    },
    "10940": {
      "op": "POP"
    },
    "10941": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "10944": {
      "op": "JUMP"
    },
    "10945": {
      "op": "JUMPDEST"
    },
    "10946": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10948": {
      "op": "DUP5"
    },
    "10949": {
      "op": "GT"
    },
    "10950": {
      "op": "ISZERO"
    },
    "10951": {
      "op": "PUSH2",
      "value": "0x2AD2"
    },
    "10954": {
      "op": "JUMPI"
    },
    "10955": {
      "op": "PUSH2",
      "value": "0x2AD2"
    },
    "10958": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10961": {
      "jump": "i",
      "op": "JUMP"
    },
    "10962": {
      "op": "JUMPDEST"
    },
    "10963": {
      "op": "POP"
    },
    "10964": {
      "op": "POP"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10967": {
      "op": "DUP3"
    },
    "10968": {
      "op": "SHL"
    },
    "10969": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "10972": {
      "op": "JUMP"
    },
    "10973": {
      "op": "JUMPDEST"
    },
    "10974": {
      "op": "POP"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10977": {
      "op": "DUP4"
    },
    "10978": {
      "op": "LT"
    },
    "10979": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "10982": {
      "op": "DUP4"
    },
    "10983": {
      "op": "LT"
    },
    "10984": {
      "op": "AND"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "10987": {
      "op": "DUP5"
    },
    "10988": {
      "op": "LT"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "10991": {
      "op": "DUP5"
    },
    "10992": {
      "op": "LT"
    },
    "10993": {
      "op": "AND"
    },
    "10994": {
      "op": "OR"
    },
    "10995": {
      "op": "ISZERO"
    },
    "10996": {
      "op": "PUSH2",
      "value": "0x2B00"
    },
    "10999": {
      "op": "JUMPI"
    },
    "11000": {
      "op": "POP"
    },
    "11001": {
      "op": "DUP2"
    },
    "11002": {
      "op": "DUP2"
    },
    "11003": {
      "op": "EXP"
    },
    "11004": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "11007": {
      "op": "JUMP"
    },
    "11008": {
      "op": "JUMPDEST"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x2B0A"
    },
    "11012": {
      "op": "DUP4"
    },
    "11013": {
      "op": "DUP4"
    },
    "11014": {
      "op": "PUSH2",
      "value": "0x2A42"
    },
    "11017": {
      "jump": "i",
      "op": "JUMP"
    },
    "11018": {
      "op": "JUMPDEST"
    },
    "11019": {
      "op": "DUP1"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11022": {
      "op": "NOT"
    },
    "11023": {
      "op": "DIV"
    },
    "11024": {
      "op": "DUP3"
    },
    "11025": {
      "op": "GT"
    },
    "11026": {
      "op": "ISZERO"
    },
    "11027": {
      "op": "PUSH2",
      "value": "0x2B1E"
    },
    "11030": {
      "op": "JUMPI"
    },
    "11031": {
      "op": "PUSH2",
      "value": "0x2B1E"
    },
    "11034": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "11037": {
      "jump": "i",
      "op": "JUMP"
    },
    "11038": {
      "op": "JUMPDEST"
    },
    "11039": {
      "op": "MUL"
    },
    "11040": {
      "op": "SWAP4"
    },
    "11041": {
      "op": "SWAP3"
    },
    "11042": {
      "op": "POP"
    },
    "11043": {
      "op": "POP"
    },
    "11044": {
      "op": "POP"
    },
    "11045": {
      "jump": "o",
      "op": "JUMP"
    },
    "11046": {
      "op": "JUMPDEST"
    },
    "11047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x1F79"
    },
    "11052": {
      "op": "DUP4"
    },
    "11053": {
      "op": "DUP4"
    },
    "11054": {
      "op": "PUSH2",
      "value": "0x2A85"
    },
    "11057": {
      "jump": "i",
      "op": "JUMP"
    },
    "11058": {
      "op": "JUMPDEST"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11061": {
      "op": "DUP2"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11064": {
      "op": "NOT"
    },
    "11065": {
      "op": "DIV"
    },
    "11066": {
      "op": "DUP4"
    },
    "11067": {
      "op": "GT"
    },
    "11068": {
      "op": "DUP3"
    },
    "11069": {
      "op": "ISZERO"
    },
    "11070": {
      "op": "ISZERO"
    },
    "11071": {
      "op": "AND"
    },
    "11072": {
      "op": "ISZERO"
    },
    "11073": {
      "op": "PUSH2",
      "value": "0x2B4C"
    },
    "11076": {
      "op": "JUMPI"
    },
    "11077": {
      "op": "PUSH2",
      "value": "0x2B4C"
    },
    "11080": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "11083": {
      "jump": "i",
      "op": "JUMP"
    },
    "11084": {
      "op": "JUMPDEST"
    },
    "11085": {
      "op": "POP"
    },
    "11086": {
      "op": "MUL"
    },
    "11087": {
      "op": "SWAP1"
    },
    "11088": {
      "jump": "o",
      "op": "JUMP"
    },
    "11089": {
      "op": "JUMPDEST"
    },
    "11090": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11097": {
      "op": "SHL"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11100": {
      "op": "MSTORE"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11105": {
      "op": "MSTORE"
    },
    "11106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11110": {
      "op": "REVERT"
    },
    "11111": {
      "op": "JUMPDEST"
    },
    "11112": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11119": {
      "op": "SHL"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11122": {
      "op": "MSTORE"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11127": {
      "op": "MSTORE"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11132": {
      "op": "REVERT"
    },
    "11133": {
      "op": "JUMPDEST"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11136": {
      "op": "DUP3"
    },
    "11137": {
      "op": "PUSH2",
      "value": "0x2B8C"
    },
    "11140": {
      "op": "JUMPI"
    },
    "11141": {
      "op": "PUSH2",
      "value": "0x2B8C"
    },
    "11144": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11147": {
      "jump": "i",
      "op": "JUMP"
    },
    "11148": {
      "op": "JUMPDEST"
    },
    "11149": {
      "op": "POP"
    },
    "11150": {
      "op": "DIV"
    },
    "11151": {
      "op": "SWAP1"
    },
    "11152": {
      "jump": "o",
      "op": "JUMP"
    },
    "11153": {
      "op": "JUMPDEST"
    },
    "11154": {
      "op": "SWAP3"
    },
    "11155": {
      "op": "DUP4"
    },
    "11156": {
      "op": "MSTORE"
    },
    "11157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11159": {
      "op": "SWAP2"
    },
    "11160": {
      "op": "SWAP1"
    },
    "11161": {
      "op": "SWAP2"
    },
    "11162": {
      "op": "SHL"
    },
    "11163": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11176": {
      "op": "NOT"
    },
    "11177": {
      "op": "AND"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11180": {
      "op": "DUP4"
    },
    "11181": {
      "op": "ADD"
    },
    "11182": {
      "op": "MSTORE"
    },
    "11183": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "11185": {
      "op": "DUP3"
    },
    "11186": {
      "op": "ADD"
    },
    "11187": {
      "op": "MSTORE"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "11190": {
      "op": "ADD"
    },
    "11191": {
      "op": "SWAP1"
    },
    "11192": {
      "jump": "o",
      "op": "JUMP"
    },
    "11193": {
      "op": "JUMPDEST"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11198": {
      "op": "DUP3"
    },
    "11199": {
      "op": "DUP5"
    },
    "11200": {
      "op": "SUB"
    },
    "11201": {
      "op": "SLT"
    },
    "11202": {
      "op": "ISZERO"
    },
    "11203": {
      "op": "PUSH2",
      "value": "0x2BCB"
    },
    "11206": {
      "op": "JUMPI"
    },
    "11207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11209": {
      "op": "DUP1"
    },
    "11210": {
      "op": "REVERT"
    },
    "11211": {
      "op": "JUMPDEST"
    },
    "11212": {
      "op": "DUP2"
    },
    "11213": {
      "op": "MLOAD"
    },
    "11214": {
      "op": "DUP1"
    },
    "11215": {
      "op": "ISZERO"
    },
    "11216": {
      "op": "ISZERO"
    },
    "11217": {
      "op": "DUP2"
    },
    "11218": {
      "op": "EQ"
    },
    "11219": {
      "op": "PUSH2",
      "value": "0x1F79"
    },
    "11222": {
      "op": "JUMPI"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11225": {
      "op": "DUP1"
    },
    "11226": {
      "op": "REVERT"
    },
    "11227": {
      "op": "JUMPDEST"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11230": {
      "op": "DUP3"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11234": {
      "op": "JUMPI"
    },
    "11235": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11238": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11241": {
      "jump": "i",
      "op": "JUMP"
    },
    "11242": {
      "op": "JUMPDEST"
    },
    "11243": {
      "op": "POP"
    },
    "11244": {
      "op": "MOD"
    },
    "11245": {
      "op": "SWAP1"
    },
    "11246": {
      "jump": "o",
      "op": "JUMP"
    },
    "11247": {
      "op": "JUMPDEST"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11252": {
      "op": "DUP3"
    },
    "11253": {
      "op": "DUP5"
    },
    "11254": {
      "op": "SUB"
    },
    "11255": {
      "op": "SLT"
    },
    "11256": {
      "op": "ISZERO"
    },
    "11257": {
      "op": "PUSH2",
      "value": "0x2C01"
    },
    "11260": {
      "op": "JUMPI"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11263": {
      "op": "DUP1"
    },
    "11264": {
      "op": "REVERT"
    },
    "11265": {
      "op": "JUMPDEST"
    },
    "11266": {
      "op": "POP"
    },
    "11267": {
      "op": "MLOAD"
    },
    "11268": {
      "op": "SWAP2"
    },
    "11269": {
      "op": "SWAP1"
    },
    "11270": {
      "op": "POP"
    },
    "11271": {
      "jump": "o",
      "op": "JUMP"
    },
    "11272": {
      "op": "JUMPDEST"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11275": {
      "op": "DUP3"
    },
    "11276": {
      "op": "DUP3"
    },
    "11277": {
      "op": "LT"
    },
    "11278": {
      "op": "ISZERO"
    },
    "11279": {
      "op": "PUSH2",
      "value": "0x2C1A"
    },
    "11282": {
      "op": "JUMPI"
    },
    "11283": {
      "op": "PUSH2",
      "value": "0x2C1A"
    },
    "11286": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "11289": {
      "jump": "i",
      "op": "JUMP"
    },
    "11290": {
      "op": "JUMPDEST"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "op": "SUB"
    },
    "11293": {
      "op": "SWAP1"
    },
    "11294": {
      "jump": "o",
      "op": "JUMP"
    },
    "11295": {
      "op": "JUMPDEST"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11298": {
      "op": "PUSH2",
      "value": "0x1F79"
    },
    "11301": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11303": {
      "op": "DUP5"
    },
    "11304": {
      "op": "AND"
    },
    "11305": {
      "op": "DUP4"
    },
    "11306": {
      "op": "PUSH2",
      "value": "0x2A85"
    },
    "11309": {
      "jump": "i",
      "op": "JUMP"
    },
    "11310": {
      "op": "JUMPDEST"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11313": {
      "op": "DUP1"
    },
    "11314": {
      "op": "DUP3"
    },
    "11315": {
      "op": "MSTORE"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "11318": {
      "op": "SWAP1"
    },
    "11319": {
      "op": "DUP3"
    },
    "11320": {
      "op": "ADD"
    },
    "11321": {
      "op": "MSTORE"
    },
    "11322": {
      "op": "PUSH32",
      "value": "0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11357": {
      "op": "DUP3"
    },
    "11358": {
      "op": "ADD"
    },
    "11359": {
      "op": "MSTORE"
    },
    "11360": {
      "op": "PUSH14",
      "value": "0x185B1B195B99D957D91A59D95CDD"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "11377": {
      "op": "SHL"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11380": {
      "op": "DUP3"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "MSTORE"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11385": {
      "op": "ADD"
    },
    "11386": {
      "op": "SWAP1"
    },
    "11387": {
      "jump": "o",
      "op": "JUMP"
    },
    "11388": {
      "op": "JUMPDEST"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11391": {
      "op": "DUP1"
    },
    "11392": {
      "op": "DUP3"
    },
    "11393": {
      "op": "MSTORE"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11396": {
      "op": "SWAP1"
    },
    "11397": {
      "op": "DUP3"
    },
    "11398": {
      "op": "ADD"
    },
    "11399": {
      "op": "MSTORE"
    },
    "11400": {
      "op": "PUSH32",
      "value": "0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11435": {
      "op": "DUP3"
    },
    "11436": {
      "op": "ADD"
    },
    "11437": {
      "op": "MSTORE"
    },
    "11438": {
      "op": "PUSH8",
      "value": "0x1B99D5185C99D95D"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "11449": {
      "op": "SHL"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11452": {
      "op": "DUP3"
    },
    "11453": {
      "op": "ADD"
    },
    "11454": {
      "op": "MSTORE"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11457": {
      "op": "ADD"
    },
    "11458": {
      "op": "SWAP1"
    },
    "11459": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a13b0ff62aa67f0722e80786b7927a22b8f953e7",
  "source": "/**\n *Submitted for verification at polygonscan.com on 2022-02-12\n*/\n\n// Forge - Contract\n//\n// Distrubtion of Forge Token is as follows:\n// 25% of Forge Token is Auctioned in the ForgeAuctions Contract which distributes tokens to users who use 0xBitcoin to buy tokens in fair price. Each auction lasts ~3 days. Using the Auctions contract\n// +\n// 25% of Forge Token is distributed as Liquidiy Pool rewards in the ForgeRewards Contract which distributes tokens to users who deposit the SpiritSwap Liquidity Pool tokens into the LPRewards contract.\n// +\n// 50% of Forge Token is distributed using Forge Contract(this Contract) which distributes tokens to users by using Proof of work. Computers solve a complicated problem to gain tokens!\n//\n// = 100% Of the Token is distributed to the users! No dev fee or premine!\n//\n// All distributions happen fairly using Bitcoins model of distribution using reward halvings and difficulty adjustments.  Distribution happens over 100 years!  \n// 100%  on-chain, decentralized, trustless, ownerless contracts*!\n//   The harder it is mined the less tokens that are awarded.\n// Network: Polygon Chain \n// ChainID = 89\n//\n//\n// Name: Forge\n// Symbol: Fge\n// Decimals: 18 \n//\n// Total supply: 42,000,001.000000000000000000\n//   =\n// 21,000,000 Mined over 100+ years using Bitcoins Distrubtion halvings every 4 years. Uses Proof-oF-Work to distribute the tokens. Public Miner is available.  Uses this contract.\n//   +\n// 10,500,000 Auctioned over 100+ years into 4 day auctions split fairly among all buyers. ALL 0xBitcoin proceeds go into THIS contract which it fairly distributes to miners.  Uses the ForgeAuctions contract\n//   +\n// 10,500,000 tokens goes to Liquidity Providers of the token over 100+ year using Bitcoins distribution!  Helps prevent LP losses!  Uses the ForgeRewards Contract\n//\n//  =\n//\n// 42,000,001 Tokens is the max Supply\n//      \n// 66% of the 0xBitcoin Token from this contract goes to the Miner to pay for the transaction cost and if the token grows enough earn 0xBitcoin per mint!!\n// 33% of the 0xBitcoin TOken from this contract goes to the Liquidity Providers via ForgeRewards Contract.  Helps prevent Impermant Loss! Larger Liquidity!\n//\n// No premine, dev cut, or advantage taken at launch. Public miner available at launch.  100% of the token is given away fairly over 100+ years using Bitcoins model!\n//\n// Send this contract any ERC20 token and it will become instantly mineable and able to distribute using proof-of-work for 1 year!!!!\n//\n//Viva la Mineables!!! Send this contract any ERC20 complient token (Wrapped NFTs incoming!) and we will fairly to miners and Holders(\n//  Each Mint prints (1/10000) of any ERC20.\n//pThirdDifficulty allows for the difficulty to be cut in a third.  So difficulty 10,000 becomes 3,333.  Costs 333 Fantom  Makes mining 3x easier\n//* 1 tokens in LP are burned to create the LP pool.\n//\n// Credits: 0xBitcoin, Vether, Synethix\n//* Except for Staking Rewards additional cryptocurrencies\n\n\npragma solidity ^0.8.11;\n\ncontract Ownable {\n    address public owner;\n\n    event TransferOwnership(address _from, address _to);\n\n    constructor() public {\n        owner = msg.sender;\n        emit TransferOwnership(address(0), msg.sender);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner\");\n        _;\n    }\n\n    function setOwner(address _owner) internal onlyOwner {\n        emit TransferOwnership(owner, _owner);\n        owner = _owner;\n    }\n}\n\n\n\n\nlibrary IsContract {\n    function isContract(address _addr) internal view returns (bool) {\n        bytes32 codehash;\n        /* solium-disable-next-line */\n        assembly { codehash := extcodehash(_addr) }\n        return codehash != bytes32(0) && codehash != bytes32(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470);\n    }\n}\n\n// File: contracts/utils/SafeMath.sol\n\nlibrary SafeMath2 {\n    function add(uint256 x, uint256 y) internal pure returns (uint256) {\n        uint256 z = x + y;\n        require(z >= x, \"Add overflow\");\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(x >= y, \"Sub underflow\");\n        return x - y;\n    }\n\n    function mult(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (x == 0) {\n            return 0;\n        }\n\n        uint256 z = x * y;\n        require(z / x == y, \"Mult overflow\");\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        return x / y;\n    }\n\n    function divRound(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        uint256 r = x / y;\n        if (x % y != 0) {\n            r = r + 1;\n        }\n\n        return r;\n    }\n}\n\n// File: contracts/utils/Math.sol\n\nlibrary ExtendedMath2 {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// File: contracts/interfaces/IERC20.sol\n\ninterface IERC20 {\n\tfunction totalSupply() external view returns (uint256);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function transfer(address _to, uint _value) external returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n    function approve(address _spender, uint256 _value) external returns (bool success);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n    \n}\n\n\n// File: contracts/commons/AddressMinHeap.sol\n\n\n\nabstract contract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\n}\n\n\n//Main contract\n\ncontract Forge is Ownable, IERC20, ApproveAndCallFallBack {\n\tuint constant public targetTime = 60 * 48;\n    uint public multipler = 0;\n// SUPPORTING CONTRACTS\n    address public AddressAuction;\n    address public AddressLPReward;\n    address public AddressZeroXBTC;\n//Events\n    using SafeMath2 for uint256;\n    using ExtendedMath2 for uint;\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n    event MegaMint(address indexed from, uint epochCount, bytes32 newChallengeNumber, uint NumberOfTokensMinted, uint256 TokenMultipler);\n\n// Managment events\n    uint256 override public totalSupply = 42000001000000000000000000;\n    bytes32 private constant BALANCE_KEY = keccak256(\"balance\");\n\n    //BITCOIN INITALIZE Start\n\t\n    uint _totalSupply = 21000000000000000000000000;\n    uint public latestDifficultyPeriodStarted2 = block.timestamp;\n    uint public epochCount = 0;//number of 'blocks' mined\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n    \n    uint public  _MAXIMUM_TARGET = 2**234;\n    uint public miningTarget = _MAXIMUM_TARGET.div(200000000000*25);  //1000 million difficulty to start until i enable mining\n    \n    bytes32 public challengeNumber = blockhash(block.number - 1);   //generate a new one when a new reward is minted\n    uint public rewardEra = 0;\n    uint public maxSupplyForEra = (_totalSupply - _totalSupply.div( 2**(rewardEra + 1)));\n    uint public reward_amount = 0;\n    \n    //Stuff for Functions\n    uint oldecount = 0;\n    uint public previousBlockTime  =  block.timestamp;\n    uint oneEthUnit =    1000000000000000000;\n    uint one8unit   =              100000000;\n    uint public Token2Per=           1000000;\n    uint Token2Min=                       88;\n    uint public tokensMinted;\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    uint give0xBTC = 0;\n    uint give = 1;\n    // metadata\n    string public name = \"Forge\";\n    string public constant symbol = \"Fge\";\n    uint8 public constant decimals = 18;\n\n    uint256 lastrun = block.timestamp;\n    uint public latestDifficultyPeriodStarted = block.number;\n    bool initeds = false;\n    \n    // mint 1 token to setup LPs\n\t    constructor() public {\n    balances[msg.sender] = 1000000000000000000;\n    emit Transfer(address(0), msg.sender, 1000000000000000000);\n\t}\n\n    function zinit(address AuctionAddress2, address LPGuild2, address _ZeroXBTCAddress) public onlyOwner{\n        uint x = 21000000000000000000000000; \n        // Only init once\n        assert(!initeds);\n        initeds = true;\n\t    previousBlockTime = block.timestamp;\n\t    reward_amount = (100 * 10**uint(decimals) ).div( 2**rewardEra );\n    \trewardEra = 0;\n\t    tokensMinted = 0;\n\t    epochCount = 0;\n    \tminingTarget = _MAXIMUM_TARGET.div(1); //5000000 = 31gh/s @ 7 min for FPGA mining\n        latestDifficultyPeriodStarted2 = block.timestamp;\n    \t_startNewMiningEpoch();\n        // Init contract variables and mint\n        balances[AuctionAddress2] = x/2;\n\t\n        emit Transfer(address(0), AuctionAddress2, x/2);\n\t\n    \tAddressAuction = AuctionAddress2;\n        AddressLPReward = payable(LPGuild2);\n        AddressZeroXBTC = _ZeroXBTCAddress;\n\t\n        oldecount = epochCount;\n\t\n\t\tsetOwner(address(0));\n     \n    }\n\n\n\n\t///\n\t// Managment\n\t///\n\n\tfunction ARewardSender() public {\n\t\t//runs every _BLOCKS_PER_READJUSTMENT / 4\n\n\t\tuint256 runs = block.timestamp - lastrun;\n\n\t\tuint256 epochsPast = epochCount - oldecount; //actually epoch\n\t\tuint256 runsperepoch = runs / epochsPast;\n\n\t\treward_amount = (100 * 10**uint(decimals)).div( 2**rewardEra );\n\t\tuint256 x = (runsperepoch * 888).divRound(targetTime);\n\t\tuint256 ratio = x * 100 / 888;\n\t\tuint256 totalOwed;\n\t\t\n\t\t if(ratio < 200){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888**2) + (40861500 * x).div(888) ;\n\t\t }else {\n\t\t\ttotalOwed = (340000000);\n\t\t} \n\n\t\tif(IERC20(AddressZeroXBTC).balanceOf(address(this)) > (30 * 2 * (Token2Per * _BLOCKS_PER_READJUSTMENT)/4)){  // at least enough blocks to rerun this function for both LPRewards and Users\n\t\t\tIERC20(AddressZeroXBTC).transfer(AddressLPReward, ((epochsPast) * totalOwed * Token2Per * give0xBTC).div(2 * 100000000));\n\t\t\tgive0xBTC = 1 * give;\n\t\t}else{\n\t\t\tgive0xBTC = 0;\n\t\t}\n\t\toldecount = epochCount; //actually epoch\n\n\t\tlastrun = block.timestamp;\n\t}\n\n\n\t//comability function\n\tfunction mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\t\tmintTo(nonce, challenge_digest, msg.sender);\n\t}\n\n\n\tfunction mintTo(uint256 nonce, bytes32 challenge_digest,  address mintTo) public returns (uint256 owed) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\n\t\t//uint diff = block.timestamp - previousBlockTime;\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (350000000);\n\t\t} \n\n\n\t\tbalances[mintTo] = balances[mintTo].add((reward_amount * totalOwed).div(100000000));\n\t\tbalances[AddressLPReward] = balances[AddressLPReward].add((reward_amount * totalOwed).div(100000000 * 2));\n\t\t\t\t\n\t\ttokensMinted = tokensMinted.add((reward_amount * totalOwed).div(100000000));\n\t\tpreviousBlockTime = block.timestamp;\n\n\t\tif(give0xBTC > 0){\n\t\t\tif(ratio < 200){\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (totalOwed * Token2Per * give0xBTC).div(100000000));\n\t\t\t}else{\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (34 * Token2Per * give0xBTC).div(10));\n\t\t\t}\n\t\t}\n\n\t\temit Mint(msg.sender, (reward_amount * totalOwed).div(100000000), epochCount, challengeNumber );\n\n\t\treturn totalOwed;\n\n\t}\n\n\n\tfunction mintTokensArrayTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\t\tuint256 totalOd = mintTo(nonce,challenge_digest, MintTo[0]);\n\t\trequire(totalOd > 0, \"mint issue\");\n\n\t\trequire(MintTo.length == ExtraFunds.length + 1,\"MintTo has to have an extra address compared to ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tuint256 totalOwed = 0;\n\t\tuint256 TotalOwned = 0;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).div(100000000 * 2500 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x+1], totalOwed);\n\t\t\t}\n        }\n        \t\n\t\temit MegaMint(msg.sender, epochCount, challengeNumber, xy, totalOd );\n\n\t\treturn totalOd;\n\n    }\n\n\n\tfunction mintTokensSameAddress(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address MintTo) public returns (bool success) {\n\t\taddress[] memory dd = new address[](ExtraFunds.length + 1); \n\n\t\tfor(uint x=0; x< (ExtraFunds.length + 1); x++)\n\t\t{\n\t\t\tdd[x] = MintTo;\n\t\t}\n\t\t\n\t\tmintTokensArrayTo(nonce, challenge_digest, ExtraFunds, dd);\n\n\t\treturn true;\n\t}\n\n\n\tfunction empty_mintTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\t\trequire(MintTo.length == ExtraFunds.length,\"MintTo has to have same number of addressses as ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalIN = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalIN = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalIN = (x * 100000000).div(888) + (350000000);\n\t\t} \n\t\trequire(totalIN > 0, \"mint issue\");\n\t\tuint256 totalOwed;\n\t\tuint256 TotalOwned;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).div(100000000 * 2500 );\n\t\t\t\t    }\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x], totalOwed);\n\t\t\t    }\n            }\n        }\n\n\t\tpreviousBlockTime = block.timestamp;\n\t\treturn totalIN;   \n\t}\n\n\n\n\tfunction _startNewMiningEpoch() internal {\n\n\n\t\t//if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\t\t//59 is the final reward era, almost all tokens minted\n\t\tif( tokensMinted.add(reward_amount) > maxSupplyForEra && rewardEra < 60)\n\t\t{\n\t\t\trewardEra = rewardEra + 1;\n\t\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\t\t}\n\n\t\t//set the next minted supply at which the era will change\n\t\t// total supply of MINED tokens is 21000000000000000000000000  because of 16 decimal places\n\n\t\tepochCount = epochCount.add(1);\n\n\t\t//every so often, readjust difficulty. Dont readjust when deploying\n\t\tif((epochCount) % (_BLOCKS_PER_READJUSTMENT / 4) == 0)\n\t\t{\n\t\t\tARewardSender();\n\t\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n\t\t\tif((epochCount % _BLOCKS_PER_READJUSTMENT== 0))\n\t\t\t{\n\t\t\t\tmultipler = (IERC20(AddressZeroXBTC).balanceOf(address(this)) / (2000 * 10 ** 8));\n\t\t\t\tif(( IERC20(AddressZeroXBTC).balanceOf(address(this)) / Token2Per) <= (10000 + 10000*(multipler))) //chosen to give keep 250 days payouts in reserve at current payout\n\t\t\t\t{\n\t\t\t\t\tif(Token2Per.div(2) > Token2Min)\n\t\t\t\t\t{\n\t\t\t\t\t\tToken2Per = Token2Per.div(2);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tToken2Per = Token2Per.mult(3);\n\t\t\t\t}\n\t\t\t\t_reAdjustDifficulty();\n\t\t\t}\n\t\t}\n\n\t\tchallengeNumber = blockhash(block.number - 1);\n\t}\n\n\n\tfunction _reAdjustDifficulty() internal {\n\t\tuint256 blktimestamp = block.timestamp;\n\t\tuint TimeSinceLastDifficultyPeriod2 = blktimestamp - latestDifficultyPeriodStarted2;\n\n\t\tuint adjusDiffTargetTime = targetTime *  _BLOCKS_PER_READJUSTMENT; //36 min per block 60 sec * 12\n\n\t\t//if there were less eth blocks passed in time than expected\n\t\tif( TimeSinceLastDifficultyPeriod2 < adjusDiffTargetTime )\n\t\t{\n\t\t\tuint excess_block_pct = (adjusDiffTargetTime.mult(100)).div( TimeSinceLastDifficultyPeriod2 );\n\t\t\tgive = 1;\n\t\t\tuint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n\t\t\t//make it harder \n\t\t\tminingTarget = miningTarget.sub(miningTarget.div(2000).mult(excess_block_pct_extra));   //by up to 50 %\n\t\t}else{\n\t\t\tuint shortage_block_pct = (TimeSinceLastDifficultyPeriod2.mult(100)).div( adjusDiffTargetTime );\n\t\t\tgive = 2;\n\t\t\tuint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n\t\t\t//make it easier\n\t\t\tminingTarget = miningTarget.add(miningTarget.div(500).mult(shortage_block_pct_extra));   //by up to 200 %\n\t\t}\n\n\t\tlatestDifficultyPeriodStarted2 = blktimestamp;\n\t\tlatestDifficultyPeriodStarted = block.number;\n\t\tif(miningTarget < _MINIMUM_TARGET) //very difficult\n\t\t{\n\t\t\tminingTarget = _MINIMUM_TARGET;\n\t\t}\n\t\tif(miningTarget > _MAXIMUM_TARGET) //very easy\n\t\t{\n\t\t\tminingTarget = _MAXIMUM_TARGET;\n\t\t}\n\t\t\n\t}\n\n\n\t\t//42 m coins total\n\t\t// = \n\t\t//21 million proof of work\n\t\t// + \n\t\t//10.5 million proof of burn\n\t\t// +\n\t\t//10.5 million rewards for Liquidity Providers\n\n\n\t//help debug mining software\n\tfunction checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\t\tbytes32 digest = bytes32(keccak256(abi.encodePacked(challenge_number,msg.sender,nonce)));\n\t\tif(uint256(digest) > testTarget) revert();\n\n\t\treturn (digest == challenge_digest);\n\t}\n\n\n\t//this is a recent ethereum block hash, used to prevent pre-mining future blocks\n\tfunction getChallengeNumber() public view returns (bytes32) {\n\n\t\treturn challengeNumber;\n\n\t}\n\n\n\t//the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n\tfunction getMiningDifficulty() public view returns (uint) {\n\n\t\treturn _MAXIMUM_TARGET.div(miningTarget);\n\t}\n\n\n\tfunction getMiningTarget() public view returns (uint) {\n\n\t\treturn miningTarget;\n\n\t}\n\n\n\tfunction getMiningMinted() public view returns (uint) {\n\n\t\treturn tokensMinted;\n\n\t}\n\n\n\t//21m coins total\n\t//reward begins at 150 and is cut in half every reward era (as tokens are mined)\n\tfunction getMiningReward() public view returns (uint) {\n\t\t//once we get half way thru the coins, only get 25 per block\n\t\t//every reward era, the reward amount halves.\n\n\t\treturn (100 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n\t\t}\n\n\n\tfunction getEpoch() public view returns (uint) {\n\n\t\treturn epochCount ;\n\n\t}\n\n\n\t//help debug mining software\n\tfunction getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\treturn digest;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Get the token balance for account `tokenOwner`\n\n\t\t// ------------------------------------------------------------------------\n\n\tfunction balanceOf(address tokenOwner) public override view returns (uint balance) {\n\n\t\treturn balances[tokenOwner];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer the balance from token owner's account to `to` account\n\n\t\t// - Owner's account must have sufficient balance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transfer(address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(msg.sender, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account\n\n\t\t//\n\n\t\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n\t\t// recommends that there are no checks for the approval double-spend attack\n\n\t\t// as this should be implemented in user interfaces\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction approve(address spender, uint tokens) public override returns (bool success) {\n\n\t\tallowed[msg.sender][spender] = tokens;\n\n\t\temit Approval(msg.sender, spender, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer `tokens` from the `from` account to the `to` account\n\n\t\t//\n\n\t\t// The calling account must already have sufficient tokens approve(...)-d\n\n\t\t// for spending from the `from` account and\n\n\t\t// - From account must have sufficient balance to transfer\n\n\t\t// - Spender must have sufficient allowance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transferFrom(address from, address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[from] = balances[from].sub(tokens);\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(from, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Returns the amount of tokens approved by the owner that can be\n\n\t\t// transferred to the spender's account\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\n\n\t\treturn allowed[tokenOwner][spender];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account. The `spender` contract function\n\n\t\t// `receiveApproval(...)` is then executed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes memory data) public override{\n\n\t\trequire(token == address(this));\n\t\tIERC20(address(this)).transfer(from, tokens);  \n\t}\n\n\n\t  //Do not allow ETH to enter\n\treceive() external payable {\n\n\t\trevert();\n\t}\n\n\n\tfallback() external payable {\n\n\t\trevert();\n\t}\n}\n\n/*\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2022 Forge\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.   \n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n",
  "sourceMap": "6011:18345:0:-:0;;;6143:1;6119:25;;6657:26;6619:64;;6807:26;6787:46;;6884:15;6839:60;;6930:1;6905:26;;7003:3;6964:42;;7066:5;7035:36;;-1:-1:-1;;;7082:37:0;;7152:36;7172:15;7152;;:19;;;;;;:36;;;;:::i;:::-;7125:63;;7300:16;7315:1;7300:12;:16;:::i;:::-;7290:27;7257:60;;7398:1;7374:25;;7451:37;7473:9;;7485:1;7473:13;;;;:::i;:::-;7469:18;;:1;:18;:::i;:::-;7451:12;;:16;;;;;;:37;;;;:::i;:::-;7436:12;;:52;;;;:::i;:::-;7405:84;;7523:1;7495:29;;;;7561:18;;;;7619:15;7585:49;;7661:19;7640:40;;7717:9;7686:40;;7765:7;7732:40;;7816:2;7778:40;;7951:18;;7987:1;7975:13;;8010:28;;;;;;;;;;;;;-1:-1:-1;;;8010:28:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8147:15:0;8129:33;;8212:12;8168:56;;8230:20;;;-1:-1:-1;;8230:20:0;;;8295:137;;;;;;;;;-1:-1:-1;3158:5:0;:18;;-1:-1:-1;;;;;;3158:18:0;3166:10;3158:18;;;;;3191:41;;;1995:34:1;;;2060:2;2045:18;;2038:43;;;;3191:41:0;;1930:18:1;3191:41:0;;;;;;;8331:10;8322:20;;;;:8;:20;;;;;;;;8345:19;8322:42;;;;8375:53;;2264:25:1;;;8375:53:0;;2237:18:1;8375:53:0;;;;;;;6011:18345;;4427:136;4485:7;4512:6;4504:30;;;;-1:-1:-1;;;4504:30:0;;2502:2:1;4504:30:0;;;2484:21:1;2541:2;2521:18;;;2514:30;-1:-1:-1;;;2560:18:1;;;2553:41;2611:18;;4504:30:0;;;;;;;;4551:5;4555:1;4551;:5;:::i;:::-;4544:12;;4427:136;;;;;:::o;6011:18345::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6011:18345:0;;;-1:-1:-1;6011:18345:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;186:4;214:1;211;208:8;205:34;;;219:18;;:::i;:::-;-1:-1:-1;256:9:1;;146:125::o;276:128::-;316:3;347:1;343:6;340:1;337:13;334:39;;;353:18;;:::i;:::-;-1:-1:-1;389:9:1;;276:128::o;409:422::-;498:1;541:5;498:1;555:270;576:7;566:8;563:21;555:270;;;635:4;631:1;627:6;623:17;617:4;614:27;611:53;;;644:18;;:::i;:::-;694:7;684:8;680:22;677:55;;;714:16;;;;677:55;793:22;;;;753:15;;;;555:270;;;559:3;409:422;;;;;:::o;836:806::-;885:5;915:8;905:80;;-1:-1:-1;956:1:1;970:5;;905:80;1004:4;994:76;;-1:-1:-1;1041:1:1;1055:5;;994:76;1086:4;1104:1;1099:59;;;;1172:1;1167:130;;;;1079:218;;1099:59;1129:1;1120:10;;1143:5;;;1167:130;1204:3;1194:8;1191:17;1188:43;;;1211:18;;:::i;:::-;-1:-1:-1;;1267:1:1;1253:16;;1282:5;;1079:218;;1381:2;1371:8;1368:16;1362:3;1356:4;1353:13;1349:36;1343:2;1333:8;1330:16;1325:2;1319:4;1316:12;1312:35;1309:77;1306:159;;;-1:-1:-1;1418:19:1;;;1450:5;;1306:159;1497:34;1522:8;1516:4;1497:34;:::i;:::-;1567:6;1563:1;1559:6;1555:19;1546:7;1543:32;1540:58;;;1578:18;;:::i;:::-;1616:20;;836:806;-1:-1:-1;;;836:806:1:o;1647:131::-;1707:5;1736:36;1763:8;1757:4;1736:36;:::i;2640:217::-;2680:1;2706;2696:132;;2750:10;2745:3;2741:20;2738:1;2731:31;2785:4;2782:1;2775:15;2813:4;2810:1;2803:15;2696:132;-1:-1:-1;2842:9:1;;2640:217::o;2862:380::-;2941:1;2937:12;;;;2984;;;3005:61;;3059:4;3051:6;3047:17;3037:27;;3005:61;3112:2;3104:6;3101:14;3081:18;3078:38;3075:161;;;3158:10;3153:3;3149:20;3146:1;3139:31;3193:4;3190:1;3183:15;3221:4;3218:1;3211:15;3075:161;;2862:380;;;:::o;:::-;6011:18345:0;;;;;;",
  "sourcePath": "contracts/ForgeToken.sol",
  "type": "contract"
}